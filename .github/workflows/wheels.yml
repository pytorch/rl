name: Wheels
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - release/0.1.0

jobs:

  build-wheel-linux:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python_version: [["3.7", "cp37-cp37m"], ["3.8", "cp38-cp38"], ["3.9", "cp39-cp39"], ["3.10", "cp310-cp310"]]
        cuda_support: [["", "--extra-index-url https://download.pytorch.org/whl/cpu", "\"['cpu', '11.3', '11.6']\"", "cpu"]]
    container: pytorch/manylinux-${{ matrix.cuda_support[3] }}
    steps:
      - name: Checkout torchrl
        uses: actions/checkout@v2
      - name: Install PyTorch RC
        run: |
          export PATH="/opt/python/${{ matrix.python_version[1] }}/bin:$PATH"
          python3 -mpip install torch ${{ matrix.cuda_support[1] }}
      - name: Build wheel
        run: |
          export PATH="/opt/python/${{ matrix.python_version[1] }}/bin:$PATH"
          python3 -mpip install wheel
          BUILD_VERSION=0.1.0 python3 setup.py bdist_wheel
          # NB: wheels have the linux_x86_64 tag so we rename to manylinux1
          # find . -name 'dist/*whl' -exec bash -c ' mv $0 ${0/linux/manylinux1}' {} \;
      # pytorch/pytorch binaries are also manylinux_2_17 compliant but they
      # pretend that they're manylinux1 compliant so we do the same.
      - name: Show auditwheel output; confirm 2-17
        run: |
          python3 -mpip install auditwheel
          auditwheel show dist/*
      - name: Upload wheel for the test-wheel job
        uses: actions/upload-artifact@v2
        with:
          name: torchrl-linux-${{ matrix.python_version[0] }}.whl
          path: dist/torchrl-*.whl
      - name: Upload wheel for download
        uses: actions/upload-artifact@v2
        with:
          name: torchrl-batch.whl
          path: dist/*.whl

  build-wheel-mac:
    runs-on: macos-latest
    strategy:
      matrix:
        python_version: [["3.7", "3.7"], ["3.8", "3.8"], ["3.9", "3.9"], ["3.10", "3.10.3"]]
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version[1] }}
          architecture: x64
      - name: Checkout torchrl
        uses: actions/checkout@v2
      - name: Install PyTorch RC
        run: |
          python3 -mpip install torch --extra-index-url https://download.pytorch.org/whl/cpu
      - name: Build wheel
        run: |
          export CC=clang CXX=clang++
          python3 -mpip install wheel
          BUILD_VERSION=0.1.0 python3 setup.py bdist_wheel
      - name: Upload wheel for the test-wheel job
        uses: actions/upload-artifact@v2
        with:
          name: torchrl-mac-${{ matrix.python_version[0] }}.whl
          path: dist/torchrl-*.whl
      - name: Upload wheel for download
        uses: actions/upload-artifact@v2
        with:
          name: torchrl-batch.whl
          path: dist/*.whl

  build-wheel-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python_version: [["3.7", "3.7"], ["3.8", "3.8"], ["3.9", "3.9"], ["3.10", "3.10.3"]]
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version[1] }}
      - name: Checkout torchrl
        uses: actions/checkout@v2
      - name: Install PyTorch RC
        shell: bash
        run: |
          python3 -mpip install torch --extra-index-url https://download.pytorch.org/whl/cpu
      - name: Build wheel
        shell: bash
        run: |
            python3 -mpip install wheel
            BUILD_VERSION=0.1.0 python3 setup.py bdist_wheel
      - name: Upload wheel for the test-wheel job
        uses: actions/upload-artifact@v2
        with:
          name: torchrl-win-${{ matrix.python_version[0] }}.whl
          path: dist/torchrl-*.whl
      - name: Upload wheel for download
        uses: actions/upload-artifact@v2
        with:
          name: torchrl-batch.whl
          path: dist/*.whl


  test-wheel:
    needs: [build-wheel-linux, build-wheel-mac]
    strategy:
      matrix:
        os: [["linux", "ubuntu-18.04"], ["mac", "macos-latest"]]
        python_version: [ "3.7", "3.8", "3.9", "3.10" ]
    runs-on: ${{ matrix.os[1] }}
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
          architecture: x64
      - name: Checkout torchrl
        uses: actions/checkout@v2
      - name: Install PyTorch RC
        run: |
          python3 -mpip install torch torchvision --extra-index-url https://download.pytorch.org/whl/cpu
      - name: Upgrade pip
        run: |
          python3 -mpip install --upgrade pip
      - name: Install tensordict
        run: |
          python3 -mpip install git+https://github.com/pytorch-labs/tensordict.git
      - name: Install test dependencies
        run: |
          python3 -mpip install numpy pytest pytest-cov codecov unittest-xml-reporting pillow>=4.1.1 scipy av networkx expecttest pyyaml
      - name: Download built wheels
        uses: actions/download-artifact@v2
        with:
          name: torchrl-${{ matrix.os[0] }}-${{ matrix.python_version }}.whl
          path: /tmp/wheels
      - name: Install built wheels
        run: |
          python3 -mpip install /tmp/wheels/*
      - name: Log version string
        run: |
          # Avoid ambiguity of "import torchrl" by deleting the source files.
          rm -rf torchrl/
          python -c "import torchrl; print(torchrl.__version__)"
      - name: Run tests
        run: |
          set -e
          export IN_CI=1
          mkdir test-reports
          python -m torch.utils.collect_env
          python -c "import torchrl; print(torchrl.__version__)"
          EXIT_STATUS=0
          pytest test/smoke_test.py -v --durations 20
          exit $EXIT_STATUS

  test-wheel-windows:
    needs: build-wheel-windows
    strategy:
      matrix:
        python_version: [ "3.7", "3.8", "3.9", "3.10" ]
    runs-on: windows-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
      - name: Checkout torchrl
        uses: actions/checkout@v2
      - name: Install PyTorch RC
        shell: bash
        run: |
          python3 -mpip install torch torchvision --extra-index-url https://download.pytorch.org/whl/cpu
      - name: Upgrade pip
        shell: bash
        run: |
          python3 -mpip install --upgrade pip
      - name: Install tensordict
        shell: bash
        run: |
          python3 -mpip install git+https://github.com/pytorch-labs/tensordict.git
      - name: Install test dependencies
        shell: bash
        run: |
          python3 -mpip install numpy pytest pytest-cov codecov unittest-xml-reporting pillow>=4.1.1 scipy av networkx expecttest pyyaml
      - name: Download built wheels
        uses: actions/download-artifact@v2
        with:
          name: torchrl-win-${{ matrix.python_version }}.whl
          path: wheels
      - name: Install built wheels
        shell: bash
        run: |
          python3 -mpip install wheels/*
      - name: Log version string
        shell: bash
        run: |
          # Avoid ambiguity of "import torchrl" by deleting the source files.
          rm -rf torchrl/
          python -c "import torchrl; print(torchrl.__version__)"
      - name: Run tests
        shell: bash
        run: |
          set -e
          export IN_CI=1
          mkdir test-reports
          python -m torch.utils.collect_env
          python -c "import torchrl; print(torchrl.__version__)"
          EXIT_STATUS=0
          pytest test/smoke_test.py -v --durations 20
          exit $EXIT_STATUS
