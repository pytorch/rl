name: Lint

on:
  pull_request:
  push:
    branches:
      - nightly
      - main
      - release/*
  workflow_dispatch:

concurrency:
  # Documentation suggests ${{ github.head_ref }}, but that's only available on pull_request/pull_request_target triggers, so using ${{ github.ref }}.
  # On master, we want all builds to complete even if merging happens faster to make it easier to discover at which point something broke.
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && format('ci-master-{0}', github.sha) || format('ci-{0}', github.ref) }}
  cancel-in-progress: true

jobs:
  python-source-and-configs:
    uses: pytorch/test-infra/.github/workflows/linux_job_v2.yml@main
    with:
      repository: pytorch/rl
      script: |
        set -euo pipefail

        echo '::group::Setup environment'
        CONDA_PATH=$(which conda)
        eval "$(${CONDA_PATH} shell.bash hook)"
        conda create --name ci --quiet --yes python=3.8 pip
        conda activate ci
        echo '::endgroup::'
        
        echo '::group::Install lint tools'
        pip install --progress-bar=off pre-commit
        echo '::endgroup::'
        
        echo '::group::Lint Python source and configs'
        set +e
        pre-commit run --all-files
        
        if [ $? -ne 0 ]; then
          git --no-pager diff
          exit 1
        fi
        echo '::endgroup::'

  c-source:
    uses: pytorch/test-infra/.github/workflows/linux_job_v2.yml@main
    with:
      repository: pytorch/rl
      script: |
        set -euo pipefail
        
        echo '::group::Setup environment'
        CONDA_PATH=$(which conda)
        eval "$(${CONDA_PATH} shell.bash hook)"
        conda create --name ci --quiet --yes -c conda-forge python=3.8 ncurses=5 libgcc
        conda activate ci
        export LD_LIBRARY_PATH="${CONDA_PREFIX}/lib:${LD_LIBRARY_PATH}"
        echo '::endgroup::'
        
        echo '::group::Install lint tools'
        curl https://oss-clang-format.s3.us-east-2.amazonaws.com/linux64/clang-format-linux64 -o ./clang-format
        chmod +x ./clang-format
        echo '::endgroup::'

        echo '::group::Lint C source'
        set +e
        ./.github/unittest/linux/scripts/run-clang-format.py -r torchrl/csrc --clang-format-executable ./clang-format
        
        if [ $? -ne 0 ]; then
          git --no-pager diff
          exit 1
        fi
        echo '::endgroup::'
