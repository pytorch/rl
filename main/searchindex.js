Search.setIndex({"docnames": ["index", "reference/collectors", "reference/config", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl.auto_unwrap_transformed_env", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiProcessedWeightUpdater", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.RayWeightUpdater", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.VanillaWeightUpdater", "reference/generated/torchrl.collectors.WeightUpdaterBase", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedWeightUpdater", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RPCWeightUpdater", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.llm.LLMCollector", "reference/generated/torchrl.collectors.llm.RayLLMCollector", "reference/generated/torchrl.collectors.llm.vLLMUpdater", "reference/generated/torchrl.collectors.llm.vLLMUpdaterV2", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DensifyReward", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.RayReplayBuffer", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.llm.ContentBase", "reference/generated/torchrl.data.llm.History", "reference/generated/torchrl.data.llm.TopKRewardSelector", "reference/generated/torchrl.data.replay_buffers.CompressedListStorage", "reference/generated/torchrl.data.replay_buffers.CompressedListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.AsyncEnvPool", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.ChessEnv", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.IsaacLabWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.LLMHashingEnv", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool", "reference/generated/torchrl.envs.RandomPolicy", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_env_specs", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.exploration_type", "reference/generated/torchrl.envs.get_available_libraries", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.llm.ChatEnv", "reference/generated/torchrl.envs.llm.DatasetChatEnv", "reference/generated/torchrl.envs.llm.GSM8KEnv", "reference/generated/torchrl.envs.llm.GSM8KPrepareQuestion", "reference/generated/torchrl.envs.llm.GSM8KRewardParser", "reference/generated/torchrl.envs.llm.IFEvalEnv", "reference/generated/torchrl.envs.llm.IFEvalScoreData", "reference/generated/torchrl.envs.llm.IfEvalScorer", "reference/generated/torchrl.envs.llm.LLMEnv", "reference/generated/torchrl.envs.llm.LLMHashingEnv", "reference/generated/torchrl.envs.llm.MLGymWrapper", "reference/generated/torchrl.envs.llm.make_gsm8k_env", "reference/generated/torchrl.envs.llm.make_mlgym", "reference/generated/torchrl.envs.llm.transforms.AddThinkingPrompt", "reference/generated/torchrl.envs.llm.transforms.BrowserTransform", "reference/generated/torchrl.envs.llm.transforms.DataLoadingPrimer", "reference/generated/torchrl.envs.llm.transforms.KLComputation", "reference/generated/torchrl.envs.llm.transforms.KLRewardTransform", "reference/generated/torchrl.envs.llm.transforms.MCPToolTransform", "reference/generated/torchrl.envs.llm.transforms.PolicyVersion", "reference/generated/torchrl.envs.llm.transforms.PythonInterpreter", "reference/generated/torchrl.envs.llm.transforms.RayDataLoadingPrimer", "reference/generated/torchrl.envs.llm.transforms.RetrieveKL", "reference/generated/torchrl.envs.llm.transforms.RetrieveLogProb", "reference/generated/torchrl.envs.llm.transforms.TemplateTransform", "reference/generated/torchrl.envs.llm.transforms.Tokenizer", "reference/generated/torchrl.envs.llm.transforms.as_nested_tensor", "reference/generated/torchrl.envs.llm.transforms.as_padded_tensor", "reference/generated/torchrl.envs.make_composite_from_td", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.register_gym_spec_conversion", "reference/generated/torchrl.envs.set_exploration_type", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.step_mdp", "reference/generated/torchrl.envs.terminated_or_truncated", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.ConditionalPolicySwitch", "reference/generated/torchrl.envs.transforms.ConditionalSkip", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.Hash", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.LineariseRewards", "reference/generated/torchrl.envs.transforms.ModuleTransform", "reference/generated/torchrl.envs.transforms.MultiAction", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.Stack", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.Timer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Tokenizer", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnaryTransform", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.VecNormV2", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.implement_for", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LLMMaskedCategorical", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.llm.AsyncVLLM", "reference/generated/torchrl.modules.llm.ChatHistory", "reference/generated/torchrl.modules.llm.LLMWrapperBase", "reference/generated/torchrl.modules.llm.LogProbs", "reference/generated/torchrl.modules.llm.Masks", "reference/generated/torchrl.modules.llm.RemoteTransformersWrapper", "reference/generated/torchrl.modules.llm.Text", "reference/generated/torchrl.modules.llm.Tokens", "reference/generated/torchrl.modules.llm.TransformersWrapper", "reference/generated/torchrl.modules.llm.make_async_vllm_engine", "reference/generated/torchrl.modules.llm.make_vllm_worker", "reference/generated/torchrl.modules.llm.stateless_init_process_group", "reference/generated/torchrl.modules.llm.stateless_init_process_group_async", "reference/generated/torchrl.modules.llm.vLLMWrapper", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.add_random_module", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.llm.GRPOLoss", "reference/generated/torchrl.objectives.llm.GRPOLossOutput", "reference/generated/torchrl.objectives.llm.MCAdvantage", "reference/generated/torchrl.objectives.llm.SFTLoss", "reference/generated/torchrl.objectives.llm.SFTLossOutput", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.set_auto_unwrap_transformed_env", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogScalar", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.TargetNetUpdaterHook", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UTDRHook", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.algorithms.PPOTrainer", "reference/generated/torchrl.trainers.algorithms.SACTrainer", "reference/generated/torchrl.trainers.algorithms.configs.collectors.AsyncDataCollectorConfig", "reference/generated/torchrl.trainers.algorithms.configs.collectors.DataCollectorConfig", "reference/generated/torchrl.trainers.algorithms.configs.collectors.MultiSyncDataCollectorConfig", "reference/generated/torchrl.trainers.algorithms.configs.collectors.MultiaSyncDataCollectorConfig", "reference/generated/torchrl.trainers.algorithms.configs.collectors.SyncDataCollectorConfig", "reference/generated/torchrl.trainers.algorithms.configs.common.ConfigBase", "reference/generated/torchrl.trainers.algorithms.configs.data.LazyMemmapStorageConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.LazyStackStorageConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.LazyTensorStorageConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.ListStorageConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.PrioritizedSamplerConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.RandomSamplerConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.ReplayBufferConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.RoundRobinWriterConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.SamplerWithoutReplacementConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.SliceSamplerConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.SliceSamplerWithoutReplacementConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.StorageEnsembleConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.StorageEnsembleWriterConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.TensorDictReplayBufferConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.TensorStorageConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs.BatchedEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs.EnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs.TransformedEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.BraxEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.DMControlEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.EnvLibsConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.GymEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.HabitatEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.IsaacGymEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.JumanjiEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.MOGymEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.MeltingpotEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.MultiThreadedEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.OpenMLEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.OpenSpielEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.PettingZooEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.RoboHiveEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.SMACv2EnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.UnityMLAgentsEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.VmasEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.logging.CSVLoggerConfig", "reference/generated/torchrl.trainers.algorithms.configs.logging.LoggerConfig", "reference/generated/torchrl.trainers.algorithms.configs.logging.TensorboardLoggerConfig", "reference/generated/torchrl.trainers.algorithms.configs.logging.WandbLoggerConfig", "reference/generated/torchrl.trainers.algorithms.configs.modules.ConvNetConfig", "reference/generated/torchrl.trainers.algorithms.configs.modules.MLPConfig", "reference/generated/torchrl.trainers.algorithms.configs.modules.ModelConfig", "reference/generated/torchrl.trainers.algorithms.configs.modules.NetworkConfig", "reference/generated/torchrl.trainers.algorithms.configs.modules.TanhNormalModelConfig", "reference/generated/torchrl.trainers.algorithms.configs.modules.TensorDictModuleConfig", "reference/generated/torchrl.trainers.algorithms.configs.modules.ValueModelConfig", "reference/generated/torchrl.trainers.algorithms.configs.objectives.LossConfig", "reference/generated/torchrl.trainers.algorithms.configs.objectives.PPOLossConfig", "reference/generated/torchrl.trainers.algorithms.configs.trainers.PPOTrainerConfig", "reference/generated/torchrl.trainers.algorithms.configs.trainers.TrainerConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ActionDiscretizerConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ActionMaskConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.AutoResetTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.BatchSizeTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.BinarizeRewardConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.BurnInTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.CatFramesConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.CatTensorsConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.CenterCropConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ClipTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ComposeConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ConditionalPolicySwitchConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ConditionalSkipConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.CropConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.DTypeCastTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.DeviceCastTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.DiscreteActionProjectionConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.DoubleToFloatConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.EndOfLifeTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ExcludeTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.FiniteTensorDictCheckConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.FlattenObservationConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.FrameSkipTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.GrayScaleConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.HashConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.InitTrackerConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.KLRewardTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.LineariseRewardsConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.MultiActionConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.MultiStepTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.NoopResetEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ObservationNormConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.PermuteTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.PinMemoryTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.R3MTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RandomCropTensorDictConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RemoveEmptySpecsConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RenameTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ResizeConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.Reward2GoTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RewardClippingConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RewardScalingConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RewardSumConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.SelectTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.SignTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.SqueezeTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.StackConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.StepCounterConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TargetReturnConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TensorDictPrimerConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TimeMaxPoolConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TimerConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ToTensorImageConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TokenizerConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TrajCounterConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.UnaryTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.UnsqueezeTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VC1TransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VIPRewardTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VIPTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VecGymEnvTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VecNormConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VecNormV2Config", "reference/generated/torchrl.trainers.algorithms.configs.utils.ASGDConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.AdadeltaConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.AdagradConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.AdamConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.AdamWConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.AdamaxConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.LBFGSConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.LionConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.NAdamConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.RAdamConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.RMSpropConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.RpropConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.SGDConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.SparseAdamConfig", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/llms", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/llm_browser", "tutorials/llm_wrappers", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/config.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl.auto_unwrap_transformed_env.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiProcessedWeightUpdater.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.RayWeightUpdater.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.VanillaWeightUpdater.rst", "reference/generated/torchrl.collectors.WeightUpdaterBase.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedWeightUpdater.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCWeightUpdater.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.llm.LLMCollector.rst", "reference/generated/torchrl.collectors.llm.RayLLMCollector.rst", "reference/generated/torchrl.collectors.llm.vLLMUpdater.rst", "reference/generated/torchrl.collectors.llm.vLLMUpdaterV2.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DensifyReward.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.RayReplayBuffer.rst", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.llm.ContentBase.rst", "reference/generated/torchrl.data.llm.History.rst", "reference/generated/torchrl.data.llm.TopKRewardSelector.rst", "reference/generated/torchrl.data.replay_buffers.CompressedListStorage.rst", "reference/generated/torchrl.data.replay_buffers.CompressedListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.AsyncEnvPool.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.ChessEnv.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.IsaacLabWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.LLMHashingEnv.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool.rst", "reference/generated/torchrl.envs.RandomPolicy.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_env_specs.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.exploration_type.rst", "reference/generated/torchrl.envs.get_available_libraries.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.llm.ChatEnv.rst", "reference/generated/torchrl.envs.llm.DatasetChatEnv.rst", "reference/generated/torchrl.envs.llm.GSM8KEnv.rst", "reference/generated/torchrl.envs.llm.GSM8KPrepareQuestion.rst", "reference/generated/torchrl.envs.llm.GSM8KRewardParser.rst", "reference/generated/torchrl.envs.llm.IFEvalEnv.rst", "reference/generated/torchrl.envs.llm.IFEvalScoreData.rst", "reference/generated/torchrl.envs.llm.IfEvalScorer.rst", "reference/generated/torchrl.envs.llm.LLMEnv.rst", "reference/generated/torchrl.envs.llm.LLMHashingEnv.rst", "reference/generated/torchrl.envs.llm.MLGymWrapper.rst", "reference/generated/torchrl.envs.llm.make_gsm8k_env.rst", "reference/generated/torchrl.envs.llm.make_mlgym.rst", "reference/generated/torchrl.envs.llm.transforms.AddThinkingPrompt.rst", "reference/generated/torchrl.envs.llm.transforms.BrowserTransform.rst", "reference/generated/torchrl.envs.llm.transforms.DataLoadingPrimer.rst", "reference/generated/torchrl.envs.llm.transforms.KLComputation.rst", "reference/generated/torchrl.envs.llm.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.llm.transforms.MCPToolTransform.rst", "reference/generated/torchrl.envs.llm.transforms.PolicyVersion.rst", "reference/generated/torchrl.envs.llm.transforms.PythonInterpreter.rst", "reference/generated/torchrl.envs.llm.transforms.RayDataLoadingPrimer.rst", "reference/generated/torchrl.envs.llm.transforms.RetrieveKL.rst", "reference/generated/torchrl.envs.llm.transforms.RetrieveLogProb.rst", "reference/generated/torchrl.envs.llm.transforms.TemplateTransform.rst", "reference/generated/torchrl.envs.llm.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.llm.transforms.as_nested_tensor.rst", "reference/generated/torchrl.envs.llm.transforms.as_padded_tensor.rst", "reference/generated/torchrl.envs.make_composite_from_td.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.register_gym_spec_conversion.rst", "reference/generated/torchrl.envs.set_exploration_type.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.step_mdp.rst", "reference/generated/torchrl.envs.terminated_or_truncated.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.ConditionalPolicySwitch.rst", "reference/generated/torchrl.envs.transforms.ConditionalSkip.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.Hash.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.LineariseRewards.rst", "reference/generated/torchrl.envs.transforms.ModuleTransform.rst", "reference/generated/torchrl.envs.transforms.MultiAction.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.Stack.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.Timer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnaryTransform.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.VecNormV2.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.implement_for.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LLMMaskedCategorical.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.llm.AsyncVLLM.rst", "reference/generated/torchrl.modules.llm.ChatHistory.rst", "reference/generated/torchrl.modules.llm.LLMWrapperBase.rst", "reference/generated/torchrl.modules.llm.LogProbs.rst", "reference/generated/torchrl.modules.llm.Masks.rst", "reference/generated/torchrl.modules.llm.RemoteTransformersWrapper.rst", "reference/generated/torchrl.modules.llm.Text.rst", "reference/generated/torchrl.modules.llm.Tokens.rst", "reference/generated/torchrl.modules.llm.TransformersWrapper.rst", "reference/generated/torchrl.modules.llm.make_async_vllm_engine.rst", "reference/generated/torchrl.modules.llm.make_vllm_worker.rst", "reference/generated/torchrl.modules.llm.stateless_init_process_group.rst", "reference/generated/torchrl.modules.llm.stateless_init_process_group_async.rst", "reference/generated/torchrl.modules.llm.vLLMWrapper.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.add_random_module.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.llm.GRPOLoss.rst", "reference/generated/torchrl.objectives.llm.GRPOLossOutput.rst", "reference/generated/torchrl.objectives.llm.MCAdvantage.rst", "reference/generated/torchrl.objectives.llm.SFTLoss.rst", "reference/generated/torchrl.objectives.llm.SFTLossOutput.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.set_auto_unwrap_transformed_env.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogScalar.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.TargetNetUpdaterHook.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UTDRHook.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.algorithms.PPOTrainer.rst", "reference/generated/torchrl.trainers.algorithms.SACTrainer.rst", "reference/generated/torchrl.trainers.algorithms.configs.collectors.AsyncDataCollectorConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.collectors.DataCollectorConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.collectors.MultiSyncDataCollectorConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.collectors.MultiaSyncDataCollectorConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.collectors.SyncDataCollectorConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.common.ConfigBase.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.LazyMemmapStorageConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.LazyStackStorageConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.LazyTensorStorageConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.ListStorageConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.PrioritizedSamplerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.RandomSamplerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.ReplayBufferConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.RoundRobinWriterConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.SamplerWithoutReplacementConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.SliceSamplerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.SliceSamplerWithoutReplacementConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.StorageEnsembleConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.StorageEnsembleWriterConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.TensorDictReplayBufferConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.TensorStorageConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs.BatchedEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs.EnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs.TransformedEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.BraxEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.DMControlEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.EnvLibsConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.GymEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.HabitatEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.IsaacGymEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.JumanjiEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.MOGymEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.MeltingpotEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.MultiThreadedEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.OpenMLEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.OpenSpielEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.PettingZooEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.RoboHiveEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.SMACv2EnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.UnityMLAgentsEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.VmasEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.logging.CSVLoggerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.logging.LoggerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.logging.TensorboardLoggerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.logging.WandbLoggerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.modules.ConvNetConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.modules.MLPConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.modules.ModelConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.modules.NetworkConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.modules.TanhNormalModelConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.modules.TensorDictModuleConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.modules.ValueModelConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.objectives.LossConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.objectives.PPOLossConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.trainers.PPOTrainerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.trainers.TrainerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ActionDiscretizerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ActionMaskConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.AutoResetTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.BatchSizeTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.BinarizeRewardConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.BurnInTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.CatFramesConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.CatTensorsConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.CenterCropConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ClipTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ComposeConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ConditionalPolicySwitchConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ConditionalSkipConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.CropConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.DTypeCastTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.DeviceCastTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.DiscreteActionProjectionConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.DoubleToFloatConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.EndOfLifeTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ExcludeTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.FiniteTensorDictCheckConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.FlattenObservationConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.FrameSkipTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.GrayScaleConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.HashConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.InitTrackerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.KLRewardTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.LineariseRewardsConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.MultiActionConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.MultiStepTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.NoopResetEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ObservationNormConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.PermuteTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.PinMemoryTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.R3MTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RandomCropTensorDictConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RemoveEmptySpecsConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RenameTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ResizeConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.Reward2GoTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RewardClippingConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RewardScalingConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RewardSumConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.SelectTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.SignTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.SqueezeTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.StackConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.StepCounterConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TargetReturnConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TensorDictPrimerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TimeMaxPoolConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TimerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ToTensorImageConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TokenizerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TrajCounterConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.UnaryTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.UnsqueezeTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VC1TransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VIPRewardTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VIPTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VecGymEnvTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VecNormConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VecNormV2Config.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.ASGDConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.AdadeltaConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.AdagradConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.AdamConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.AdamWConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.AdamaxConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.LBFGSConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.LionConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.NAdamConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.RAdamConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.RMSpropConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.RpropConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.SGDConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.SparseAdamConfig.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/llms.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/llm_browser.rst", "tutorials/llm_wrappers.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "TorchRL Configuration System", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "auto_unwrap_transformed_env", "DataCollectorBase", "MultiProcessedWeightUpdater", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RayWeightUpdater", "SyncDataCollector", "VanillaWeightUpdater", "WeightUpdaterBase", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "DistributedWeightUpdater", "RPCDataCollector", "RPCWeightUpdater", "RayCollector", "submitit_delayed_launcher", "LLMCollector", "RayLLMCollector", "vLLMUpdater", "vLLMUpdaterV2", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DensifyReward", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "RayReplayBuffer", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "ContentBase", "History", "TopKRewardSelector", "CompressedListStorage", "CompressedListStorageCheckpointer", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyStackStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "AsyncEnvPool", "BraxEnv", "BraxWrapper", "ChessEnv", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "IsaacLabWrapper", "JumanjiEnv", "JumanjiWrapper", "LLMHashingEnv", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "ProcessorAsyncEnvPool", "RandomPolicy", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "ThreadingAsyncEnvPool", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_env_specs", "check_marl_grouping", "exploration_type", "get_available_libraries", "gym_backend", "ChatEnv", "DatasetChatEnv", "GSM8KEnv", "GSM8KPrepareQuestion", "GSM8KRewardParser", "IFEvalEnv", "IFEvalScoreData", "IfEvalScorer", "LLMEnv", "LLMHashingEnv", "MLGymWrapper", "make_gsm8k_env", "make_mlgym", "AddThinkingPrompt", "BrowserTransform", "DataLoadingPrimer", "KLComputation", "KLRewardTransform", "MCPToolTransform", "PolicyVersion", "PythonInterpreter", "RayDataLoadingPrimer", "RetrieveKL", "RetrieveLogProb", "TemplateTransform", "Tokenizer", "as_nested_tensor", "as_padded_tensor", "make_composite_from_td", "DreamerDecoder", "DreamerEnv", "register_gym_spec_conversion", "set_exploration_type", "set_gym_backend", "step_mdp", "terminated_or_truncated", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "ConditionalPolicySwitch", "ConditionalSkip", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "Hash", "InitTracker", "KLRewardTransform", "LineariseRewards", "ModuleTransform", "MultiAction", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "Stack", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "Timer", "ToTensorImage", "Tokenizer", "TrajCounter", "Transform", "TransformedEnv", "UnaryTransform", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "VecNormV2", "gSDENoise", "MultiStepTransform", "implement_for", "AdditiveGaussianModule", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LLMMaskedCategorical", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "AsyncVLLM", "ChatHistory", "LLMWrapperBase", "LogProbs", "Masks", "RemoteTransformersWrapper", "Text", "Tokens", "TransformersWrapper", "make_async_vllm_engine", "make_vllm_worker", "stateless_init_process_group", "stateless_init_process_group_async", "vLLMWrapper", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "add_random_module", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "GRPOLoss", "GRPOLossOutput", "MCAdvantage", "SFTLoss", "SFTLossOutput", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "set_auto_unwrap_transformed_env", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogScalar", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "TargetNetUpdaterHook", "Trainer", "TrainerHookBase", "UTDRHook", "UpdateWeights", "PPOTrainer", "SACTrainer", "torchrl.trainers.algorithms.configs.collectors.AsyncDataCollectorConfig", "torchrl.trainers.algorithms.configs.collectors.DataCollectorConfig", "torchrl.trainers.algorithms.configs.collectors.MultiSyncDataCollectorConfig", "torchrl.trainers.algorithms.configs.collectors.MultiaSyncDataCollectorConfig", "torchrl.trainers.algorithms.configs.collectors.SyncDataCollectorConfig", "torchrl.trainers.algorithms.configs.common.ConfigBase", "torchrl.trainers.algorithms.configs.data.LazyMemmapStorageConfig", "torchrl.trainers.algorithms.configs.data.LazyStackStorageConfig", "torchrl.trainers.algorithms.configs.data.LazyTensorStorageConfig", "torchrl.trainers.algorithms.configs.data.ListStorageConfig", "torchrl.trainers.algorithms.configs.data.PrioritizedSamplerConfig", "torchrl.trainers.algorithms.configs.data.RandomSamplerConfig", "torchrl.trainers.algorithms.configs.data.ReplayBufferConfig", "torchrl.trainers.algorithms.configs.data.RoundRobinWriterConfig", "torchrl.trainers.algorithms.configs.data.SamplerWithoutReplacementConfig", "torchrl.trainers.algorithms.configs.data.SliceSamplerConfig", "torchrl.trainers.algorithms.configs.data.SliceSamplerWithoutReplacementConfig", "torchrl.trainers.algorithms.configs.data.StorageEnsembleConfig", "torchrl.trainers.algorithms.configs.data.StorageEnsembleWriterConfig", "torchrl.trainers.algorithms.configs.data.TensorDictReplayBufferConfig", "torchrl.trainers.algorithms.configs.data.TensorStorageConfig", "torchrl.trainers.algorithms.configs.envs.BatchedEnvConfig", "torchrl.trainers.algorithms.configs.envs.EnvConfig", "torchrl.trainers.algorithms.configs.envs.TransformedEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.BraxEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.DMControlEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.EnvLibsConfig", "torchrl.trainers.algorithms.configs.envs_libs.GymEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.HabitatEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.IsaacGymEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.JumanjiEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.MOGymEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.MeltingpotEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.MultiThreadedEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.OpenMLEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.OpenSpielEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.PettingZooEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.RoboHiveEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.SMACv2EnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.UnityMLAgentsEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.VmasEnvConfig", "torchrl.trainers.algorithms.configs.logging.CSVLoggerConfig", "torchrl.trainers.algorithms.configs.logging.LoggerConfig", "torchrl.trainers.algorithms.configs.logging.TensorboardLoggerConfig", "torchrl.trainers.algorithms.configs.logging.WandbLoggerConfig", "torchrl.trainers.algorithms.configs.modules.ConvNetConfig", "torchrl.trainers.algorithms.configs.modules.MLPConfig", "torchrl.trainers.algorithms.configs.modules.ModelConfig", "torchrl.trainers.algorithms.configs.modules.NetworkConfig", "torchrl.trainers.algorithms.configs.modules.TanhNormalModelConfig", "torchrl.trainers.algorithms.configs.modules.TensorDictModuleConfig", "torchrl.trainers.algorithms.configs.modules.ValueModelConfig", "torchrl.trainers.algorithms.configs.objectives.LossConfig", "torchrl.trainers.algorithms.configs.objectives.PPOLossConfig", "torchrl.trainers.algorithms.configs.trainers.PPOTrainerConfig", "torchrl.trainers.algorithms.configs.trainers.TrainerConfig", "torchrl.trainers.algorithms.configs.transforms.ActionDiscretizerConfig", "torchrl.trainers.algorithms.configs.transforms.ActionMaskConfig", "torchrl.trainers.algorithms.configs.transforms.AutoResetTransformConfig", "torchrl.trainers.algorithms.configs.transforms.BatchSizeTransformConfig", "torchrl.trainers.algorithms.configs.transforms.BinarizeRewardConfig", "torchrl.trainers.algorithms.configs.transforms.BurnInTransformConfig", "torchrl.trainers.algorithms.configs.transforms.CatFramesConfig", "torchrl.trainers.algorithms.configs.transforms.CatTensorsConfig", "torchrl.trainers.algorithms.configs.transforms.CenterCropConfig", "torchrl.trainers.algorithms.configs.transforms.ClipTransformConfig", "torchrl.trainers.algorithms.configs.transforms.ComposeConfig", "torchrl.trainers.algorithms.configs.transforms.ConditionalPolicySwitchConfig", "torchrl.trainers.algorithms.configs.transforms.ConditionalSkipConfig", "torchrl.trainers.algorithms.configs.transforms.CropConfig", "torchrl.trainers.algorithms.configs.transforms.DTypeCastTransformConfig", "torchrl.trainers.algorithms.configs.transforms.DeviceCastTransformConfig", "torchrl.trainers.algorithms.configs.transforms.DiscreteActionProjectionConfig", "torchrl.trainers.algorithms.configs.transforms.DoubleToFloatConfig", "torchrl.trainers.algorithms.configs.transforms.EndOfLifeTransformConfig", "torchrl.trainers.algorithms.configs.transforms.ExcludeTransformConfig", "torchrl.trainers.algorithms.configs.transforms.FiniteTensorDictCheckConfig", "torchrl.trainers.algorithms.configs.transforms.FlattenObservationConfig", "torchrl.trainers.algorithms.configs.transforms.FrameSkipTransformConfig", "torchrl.trainers.algorithms.configs.transforms.GrayScaleConfig", "torchrl.trainers.algorithms.configs.transforms.HashConfig", "torchrl.trainers.algorithms.configs.transforms.InitTrackerConfig", "torchrl.trainers.algorithms.configs.transforms.KLRewardTransformConfig", "torchrl.trainers.algorithms.configs.transforms.LineariseRewardsConfig", "torchrl.trainers.algorithms.configs.transforms.MultiActionConfig", "torchrl.trainers.algorithms.configs.transforms.MultiStepTransformConfig", "torchrl.trainers.algorithms.configs.transforms.NoopResetEnvConfig", "torchrl.trainers.algorithms.configs.transforms.ObservationNormConfig", "torchrl.trainers.algorithms.configs.transforms.PermuteTransformConfig", "torchrl.trainers.algorithms.configs.transforms.PinMemoryTransformConfig", "torchrl.trainers.algorithms.configs.transforms.R3MTransformConfig", "torchrl.trainers.algorithms.configs.transforms.RandomCropTensorDictConfig", "torchrl.trainers.algorithms.configs.transforms.RemoveEmptySpecsConfig", "torchrl.trainers.algorithms.configs.transforms.RenameTransformConfig", "torchrl.trainers.algorithms.configs.transforms.ResizeConfig", "torchrl.trainers.algorithms.configs.transforms.Reward2GoTransformConfig", "torchrl.trainers.algorithms.configs.transforms.RewardClippingConfig", "torchrl.trainers.algorithms.configs.transforms.RewardScalingConfig", "torchrl.trainers.algorithms.configs.transforms.RewardSumConfig", "torchrl.trainers.algorithms.configs.transforms.SelectTransformConfig", "torchrl.trainers.algorithms.configs.transforms.SignTransformConfig", "torchrl.trainers.algorithms.configs.transforms.SqueezeTransformConfig", "torchrl.trainers.algorithms.configs.transforms.StackConfig", "torchrl.trainers.algorithms.configs.transforms.StepCounterConfig", "torchrl.trainers.algorithms.configs.transforms.TargetReturnConfig", "torchrl.trainers.algorithms.configs.transforms.TensorDictPrimerConfig", "torchrl.trainers.algorithms.configs.transforms.TimeMaxPoolConfig", "torchrl.trainers.algorithms.configs.transforms.TimerConfig", "torchrl.trainers.algorithms.configs.transforms.ToTensorImageConfig", "torchrl.trainers.algorithms.configs.transforms.TokenizerConfig", "torchrl.trainers.algorithms.configs.transforms.TrajCounterConfig", "torchrl.trainers.algorithms.configs.transforms.TransformConfig", "torchrl.trainers.algorithms.configs.transforms.UnaryTransformConfig", "torchrl.trainers.algorithms.configs.transforms.UnsqueezeTransformConfig", "torchrl.trainers.algorithms.configs.transforms.VC1TransformConfig", "torchrl.trainers.algorithms.configs.transforms.VIPRewardTransformConfig", "torchrl.trainers.algorithms.configs.transforms.VIPTransformConfig", "torchrl.trainers.algorithms.configs.transforms.VecGymEnvTransformConfig", "torchrl.trainers.algorithms.configs.transforms.VecNormConfig", "torchrl.trainers.algorithms.configs.transforms.VecNormV2Config", "torchrl.trainers.algorithms.configs.utils.ASGDConfig", "torchrl.trainers.algorithms.configs.utils.AdadeltaConfig", "torchrl.trainers.algorithms.configs.utils.AdagradConfig", "torchrl.trainers.algorithms.configs.utils.AdamConfig", "torchrl.trainers.algorithms.configs.utils.AdamWConfig", "torchrl.trainers.algorithms.configs.utils.AdamaxConfig", "torchrl.trainers.algorithms.configs.utils.LBFGSConfig", "torchrl.trainers.algorithms.configs.utils.LionConfig", "torchrl.trainers.algorithms.configs.utils.NAdamConfig", "torchrl.trainers.algorithms.configs.utils.RAdamConfig", "torchrl.trainers.algorithms.configs.utils.RMSpropConfig", "torchrl.trainers.algorithms.configs.utils.RpropConfig", "torchrl.trainers.algorithms.configs.utils.SGDConfig", "torchrl.trainers.algorithms.configs.utils.SparseAdamConfig", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "LLM Interface", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "TorchRL LLM: Building Tool-Enabled Environments", "LLM Wrappers in TorchRL", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 3, 4, 6, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 114, 115, 116, 117, 118, 122, 124, 125, 127, 129, 130, 131, 133, 135, 136, 137, 139, 140, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 158, 159, 165, 166, 168, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 229, 231, 232, 234, 235, 237, 243, 245, 246, 249, 253, 257, 259, 260, 264, 265, 266, 267, 269, 278, 279, 280, 281, 282, 284, 285, 286, 289, 292, 293, 294, 296, 299, 303, 304, 306, 307, 308, 309, 311, 316, 317, 319, 322, 324, 325, 326, 330, 331, 333, 341, 346, 347, 349, 353, 354, 355, 356, 357, 359, 360, 361, 362, 364, 365, 366, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 388, 392, 393, 394, 395, 396, 398, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 419, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 452, 454, 457, 461, 467, 468, 473, 474, 477, 478, 614, 621, 622, 623, 624, 627, 628, 629, 630, 634, 635, 638, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 652, 653, 655, 656], "open": [0, 6, 8, 64, 66, 73, 87, 103, 107, 108, 115, 198, 297, 354, 356, 357, 359, 360, 364, 365, 428, 431, 635, 646, 649, 650, 655], "sourc": [0, 1, 5, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "reinforc": [0, 2, 4, 10, 100, 163, 164, 192, 193, 235, 294, 301, 306, 307, 308, 309, 313, 341, 376, 393, 394, 396, 399, 400, 401, 403, 408, 409, 415, 416, 417, 418, 477, 626, 628, 633, 635, 639, 640, 645, 647, 651, 654, 655], "learn": [0, 2, 4, 8, 9, 10, 23, 58, 87, 100, 101, 102, 104, 105, 107, 108, 121, 122, 147, 163, 164, 168, 171, 180, 192, 193, 198, 199, 235, 294, 301, 306, 307, 308, 309, 313, 327, 334, 340, 341, 354, 356, 357, 359, 360, 376, 393, 394, 395, 396, 399, 400, 401, 403, 407, 408, 409, 413, 414, 415, 416, 417, 418, 427, 428, 431, 477, 478, 626, 628, 630, 631, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656], "rl": [0, 1, 3, 4, 6, 9, 11, 16, 17, 19, 22, 30, 97, 156, 165, 192, 235, 278, 334, 361, 366, 370, 379, 387, 393, 395, 410, 411, 413, 415, 427, 463, 625, 627, 628, 629, 630, 631, 634, 635, 636, 642, 645, 649, 650, 652, 653, 656], "librari": [0, 1, 3, 6, 7, 8, 9, 10, 11, 12, 16, 17, 23, 24, 26, 67, 83, 144, 145, 146, 155, 166, 190, 199, 353, 626, 627, 629, 630, 632, 634, 635, 636, 638, 639, 640, 642, 649, 650, 651, 656], "pytorch": [0, 1, 3, 4, 30, 34, 101, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 185, 186, 187, 192, 193, 194, 197, 200, 201, 202, 235, 281, 282, 301, 317, 322, 333, 334, 473, 625, 627, 629, 631, 634, 636, 637, 641, 645, 649, 650, 651, 655, 656], "you": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 19, 23, 24, 26, 30, 32, 38, 45, 50, 58, 68, 69, 75, 80, 83, 100, 108, 109, 141, 144, 147, 151, 155, 159, 162, 163, 164, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 225, 235, 256, 285, 293, 294, 296, 301, 321, 322, 340, 355, 361, 366, 383, 413, 427, 429, 430, 461, 462, 627, 628, 629, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "can": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 115, 116, 121, 122, 124, 128, 129, 130, 135, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 155, 157, 158, 159, 162, 163, 164, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 225, 227, 228, 229, 231, 232, 234, 235, 238, 239, 241, 243, 245, 246, 247, 250, 253, 258, 259, 260, 264, 265, 269, 272, 276, 277, 278, 279, 283, 284, 285, 286, 287, 289, 291, 293, 294, 296, 297, 300, 302, 303, 304, 306, 316, 317, 319, 320, 321, 322, 324, 326, 327, 328, 330, 331, 332, 334, 341, 350, 352, 353, 354, 355, 356, 357, 359, 360, 361, 366, 370, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 452, 454, 461, 462, 466, 467, 477, 526, 622, 623, 624, 627, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "directli": [0, 3, 5, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 97, 101, 109, 124, 141, 142, 143, 144, 147, 150, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 253, 254, 255, 257, 260, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 289, 290, 292, 293, 294, 296, 353, 358, 383, 411, 418, 427, 429, 430, 624, 628, 635, 636, 637, 638, 639, 649, 650, 651, 653], "from": [0, 1, 2, 4, 5, 6, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 130, 131, 133, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 253, 254, 255, 256, 260, 262, 264, 265, 266, 267, 268, 269, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 296, 297, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 339, 340, 341, 342, 343, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 409, 410, 411, 413, 414, 415, 416, 418, 419, 422, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 452, 453, 454, 463, 466, 469, 473, 475, 477, 478, 489, 490, 494, 613, 614, 618, 620, 621, 624, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656], "pypi": [0, 3, 655], "see": [0, 1, 3, 4, 7, 8, 9, 10, 16, 17, 19, 22, 23, 24, 26, 28, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 122, 124, 129, 130, 141, 144, 147, 151, 154, 156, 158, 159, 163, 164, 166, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 239, 241, 258, 264, 279, 282, 284, 285, 286, 289, 291, 293, 294, 295, 296, 301, 302, 303, 304, 317, 319, 320, 322, 324, 325, 331, 332, 333, 340, 342, 350, 351, 353, 354, 355, 356, 357, 359, 360, 361, 366, 369, 371, 373, 379, 382, 383, 395, 396, 407, 410, 411, 413, 418, 427, 428, 429, 430, 431, 454, 461, 469, 477, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 649, 650, 651, 653, 655, 656], "more": [0, 1, 3, 4, 5, 7, 9, 10, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 121, 122, 124, 135, 141, 144, 147, 150, 151, 152, 154, 155, 158, 159, 163, 164, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 282, 285, 289, 294, 295, 296, 297, 298, 299, 302, 313, 321, 322, 325, 333, 353, 354, 355, 356, 357, 359, 360, 361, 366, 370, 375, 376, 382, 383, 387, 393, 403, 411, 413, 427, 428, 429, 430, 431, 434, 439, 447, 461, 468, 626, 627, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 646, 647, 648, 649, 650, 651, 652, 655, 656], "about": [0, 4, 6, 8, 10, 23, 24, 26, 27, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 83, 85, 88, 89, 90, 91, 92, 101, 104, 105, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 205, 214, 355, 361, 366, 629, 630, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 653, 655, 656], "instruct": [0, 7, 8, 11, 29, 99, 108, 156, 194, 199, 245, 247, 628, 630, 634, 635, 636, 637, 646, 649, 650, 653], "dedic": [0, 1, 3, 4, 23, 24, 26, 28, 53, 72, 81, 82, 124, 171, 180, 353, 371, 372, 373, 628, 629, 634, 639, 641, 642, 644, 648, 650], "section": [0, 2, 3, 4, 5, 35, 147, 317, 322, 628, 635, 638, 639, 644, 649, 650], "below": [0, 3, 4, 8, 16, 17, 19, 22, 23, 24, 26, 28, 38, 45, 50, 58, 68, 69, 72, 75, 80, 81, 82, 87, 88, 106, 107, 108, 109, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 241, 258, 264, 279, 284, 285, 286, 289, 291, 296, 303, 304, 317, 320, 322, 325, 331, 350, 354, 355, 356, 357, 359, 360, 361, 366, 379, 382, 395, 413, 427, 428, 429, 430, 431, 469, 634, 635, 636, 637, 638, 639, 649, 651], "pip": [0, 11, 102, 638, 639, 640, 641, 642, 643, 644, 646, 650, 655, 656], "provid": [0, 1, 2, 3, 4, 6, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 42, 43, 44, 45, 50, 51, 53, 54, 56, 58, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 77, 80, 81, 82, 86, 87, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 115, 116, 118, 121, 122, 123, 124, 127, 129, 130, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 228, 232, 234, 235, 236, 237, 238, 242, 243, 246, 250, 253, 257, 259, 260, 262, 264, 265, 268, 269, 272, 273, 278, 279, 280, 283, 284, 286, 288, 289, 291, 292, 293, 294, 296, 297, 303, 304, 310, 311, 313, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 366, 370, 374, 376, 378, 379, 380, 381, 383, 386, 393, 394, 395, 396, 397, 398, 400, 402, 403, 404, 409, 410, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 458, 463, 469, 475, 484, 614, 620, 627, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 642, 643, 647, 648, 649, 650, 651, 652, 653, 655, 656], "python": [0, 1, 2, 3, 4, 6, 7, 8, 11, 16, 17, 28, 30, 31, 65, 70, 71, 72, 75, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 124, 167, 183, 184, 192, 212, 225, 317, 318, 319, 322, 323, 324, 328, 329, 628, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "first": [0, 1, 3, 4, 5, 6, 8, 9, 16, 17, 19, 22, 23, 24, 26, 28, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 65, 68, 72, 76, 77, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 117, 122, 124, 129, 130, 135, 137, 141, 144, 147, 150, 151, 152, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 207, 231, 232, 235, 236, 240, 241, 250, 258, 260, 264, 265, 281, 282, 286, 289, 294, 297, 304, 311, 317, 319, 321, 322, 324, 325, 328, 329, 331, 333, 336, 353, 370, 374, 375, 376, 379, 380, 382, 383, 395, 405, 410, 411, 413, 427, 430, 453, 454, 471, 628, 629, 633, 634, 635, 636, 637, 638, 639, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656], "low": [0, 4, 39, 42, 69, 80, 85, 88, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 205, 220, 228, 238, 245, 253, 256, 279, 287, 348, 349, 350, 374, 376, 379, 383, 386, 413, 544, 634, 635, 636, 638, 649, 650, 651, 655], "high": [0, 4, 10, 39, 42, 64, 66, 73, 81, 87, 88, 107, 108, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 199, 200, 201, 202, 205, 220, 228, 238, 245, 253, 256, 259, 279, 287, 348, 349, 350, 354, 356, 357, 359, 360, 374, 376, 379, 383, 386, 402, 413, 416, 428, 431, 434, 439, 447, 544, 628, 631, 634, 635, 636, 647, 649, 650, 651, 653, 655], "level": [0, 3, 4, 5, 29, 42, 43, 51, 65, 70, 72, 77, 87, 107, 108, 110, 124, 150, 152, 198, 208, 215, 235, 277, 285, 319, 321, 324, 354, 356, 357, 359, 360, 402, 410, 416, 428, 431, 631, 634, 635, 638, 642, 655], "abstract": [0, 1, 4, 9, 21, 84, 85, 97, 98, 102, 139, 147, 261, 326, 438, 464, 474, 484, 631, 636, 638, 651, 655], "ar": [0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 127, 128, 129, 130, 131, 133, 135, 137, 141, 144, 147, 148, 150, 151, 152, 158, 159, 162, 163, 164, 165, 168, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 227, 228, 230, 231, 232, 234, 235, 238, 239, 241, 243, 244, 245, 246, 247, 249, 250, 253, 255, 256, 258, 259, 262, 264, 269, 272, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 296, 298, 300, 301, 309, 311, 316, 317, 318, 319, 321, 322, 323, 324, 326, 328, 329, 330, 331, 332, 334, 337, 342, 345, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 366, 369, 374, 375, 378, 379, 380, 382, 383, 384, 385, 386, 390, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 418, 419, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 452, 461, 462, 469, 473, 475, 477, 478, 620, 624, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "intend": [0, 8, 16, 17, 19, 22, 23, 24, 26, 28, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 86, 88, 89, 90, 91, 92, 234, 245, 352, 411, 628, 629, 655], "effici": [0, 1, 5, 9, 18, 111, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 317, 321, 334, 361, 396, 475, 626, 628, 629, 634, 635, 636, 637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 655], "modular": [0, 2, 97, 209, 385, 628, 631, 638, 653, 655], "document": [0, 3, 6, 8, 12, 23, 24, 28, 38, 45, 50, 58, 68, 69, 75, 80, 103, 109, 141, 144, 147, 151, 156, 159, 169, 170, 171, 172, 175, 180, 181, 182, 183, 184, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 286, 296, 321, 355, 361, 366, 427, 429, 430, 625, 628, 631, 635, 637, 638, 639, 642, 645, 655], "properli": [0, 1, 4, 30, 88, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 214, 215, 226, 241, 319, 324, 434, 628, 636, 637, 643, 649, 650, 651, 655], "test": [0, 2, 4, 6, 30, 141, 142, 143, 144, 147, 151, 157, 158, 159, 163, 164, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 205, 207, 284, 289, 321, 467, 620, 636, 637, 638, 652, 655], "The": [0, 1, 2, 4, 5, 6, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 121, 122, 124, 127, 129, 130, 131, 135, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 155, 157, 158, 159, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 223, 226, 227, 228, 231, 232, 234, 235, 239, 240, 241, 243, 246, 247, 248, 253, 256, 257, 258, 260, 262, 264, 269, 271, 272, 273, 276, 277, 278, 279, 281, 284, 285, 286, 289, 291, 292, 293, 294, 296, 298, 299, 300, 301, 306, 307, 308, 309, 310, 313, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 334, 338, 340, 341, 343, 344, 345, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 387, 388, 389, 390, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 452, 454, 456, 459, 460, 461, 462, 463, 468, 475, 477, 478, 521, 531, 620, 622, 623, 626, 628, 629, 630, 631, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 649, 650, 651, 652, 653, 655, 656], "code": [0, 3, 4, 6, 8, 9, 16, 17, 42, 43, 51, 69, 75, 77, 103, 141, 144, 147, 151, 156, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 209, 212, 264, 286, 289, 299, 317, 318, 322, 323, 355, 379, 383, 385, 628, 631, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656], "aim": [0, 3, 4, 8, 53, 76, 77, 264, 289, 291, 325, 613, 627, 629, 630, 634, 635, 655], "support": [0, 1, 2, 4, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 32, 45, 64, 66, 68, 73, 80, 87, 102, 105, 106, 107, 108, 115, 117, 131, 133, 137, 138, 140, 141, 142, 143, 144, 150, 152, 157, 166, 168, 171, 173, 177, 190, 198, 200, 206, 209, 217, 232, 235, 247, 253, 260, 279, 280, 283, 286, 287, 294, 313, 338, 340, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 366, 375, 376, 379, 382, 385, 403, 411, 427, 428, 430, 431, 434, 435, 436, 437, 459, 626, 629, 631, 636, 637, 639, 640, 646, 647, 650, 651, 653, 655], "research": [0, 8, 10, 163, 164, 299, 647, 655], "most": [0, 1, 3, 4, 8, 9, 16, 17, 58, 60, 121, 122, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 245, 292, 634, 636, 638, 639, 640, 641, 642, 643, 644, 651, 655, 656], "written": [0, 1, 3, 4, 30, 31, 47, 64, 65, 66, 68, 70, 71, 72, 73, 78, 81, 82, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 113, 115, 122, 124, 129, 130, 141, 144, 145, 146, 147, 150, 151, 152, 153, 159, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 197, 198, 199, 200, 201, 202, 205, 226, 227, 228, 235, 247, 250, 255, 256, 272, 277, 280, 281, 286, 292, 296, 297, 302, 341, 354, 356, 357, 359, 360, 370, 379, 382, 383, 387, 393, 395, 410, 413, 415, 427, 428, 431, 433, 452, 453, 454, 475, 628, 629, 630, 631, 634, 637, 638, 640, 648, 651, 655], "highli": [0, 3, 361, 395, 413, 639, 655, 656], "wai": [0, 1, 3, 4, 5, 42, 43, 51, 77, 97, 101, 124, 135, 155, 193, 194, 197, 214, 235, 239, 264, 267, 284, 285, 291, 292, 319, 322, 324, 413, 434, 435, 436, 437, 478, 628, 629, 634, 635, 636, 638, 639, 641, 642, 648, 649, 650, 651, 652, 653, 655, 656], "easili": [0, 1, 2, 3, 4, 8, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 628, 630, 634, 635, 636, 639, 640, 641, 644, 649, 650, 655, 656], "swap": [0, 1, 4, 150, 292, 636, 638, 652, 655], "compon": [0, 1, 2, 3, 4, 65, 69, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 115, 116, 117, 118, 124, 131, 133, 137, 193, 313, 343, 353, 375, 376, 381, 393, 394, 395, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 419, 427, 430, 432, 468, 473, 628, 631, 634, 635, 636, 637, 638, 640, 641, 644, 646, 648, 649, 650, 651, 652, 655], "transform": [0, 1, 5, 9, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 33, 45, 53, 58, 65, 67, 70, 71, 72, 74, 81, 82, 83, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 120, 124, 133, 138, 141, 144, 147, 148, 151, 159, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 302, 305, 306, 310, 313, 314, 319, 324, 339, 342, 343, 349, 351, 354, 356, 357, 358, 359, 360, 361, 366, 374, 377, 378, 386, 389, 390, 392, 399, 412, 428, 429, 430, 431, 452, 454, 469, 491, 496, 497, 498, 502, 624, 626, 633, 635, 637, 638, 640, 642, 643, 644, 645, 646, 652, 654], "them": [0, 3, 4, 8, 10, 12, 16, 17, 18, 19, 20, 22, 23, 24, 26, 28, 38, 42, 43, 45, 50, 51, 65, 67, 68, 69, 70, 71, 72, 75, 77, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 135, 140, 141, 144, 147, 148, 151, 155, 159, 162, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 200, 201, 202, 217, 243, 246, 253, 256, 279, 283, 286, 287, 293, 294, 298, 299, 301, 302, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 332, 335, 336, 339, 341, 344, 345, 347, 351, 352, 374, 376, 378, 381, 386, 389, 394, 396, 402, 409, 410, 414, 416, 418, 419, 435, 436, 437, 454, 628, 634, 635, 637, 638, 639, 640, 642, 643, 647, 648, 649, 650, 651, 652, 653, 655, 656], "write": [0, 3, 4, 9, 16, 17, 19, 22, 30, 34, 42, 43, 51, 53, 58, 64, 65, 66, 67, 70, 71, 72, 73, 77, 81, 82, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 122, 124, 129, 133, 140, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 227, 229, 231, 232, 234, 235, 236, 238, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 257, 262, 263, 265, 266, 267, 269, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 292, 293, 296, 354, 356, 357, 359, 360, 370, 382, 383, 385, 387, 396, 397, 398, 400, 401, 402, 409, 414, 416, 418, 419, 428, 429, 431, 433, 438, 454, 628, 629, 631, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 648, 649, 650, 652, 653, 654, 655, 656], "new": [0, 1, 2, 3, 4, 5, 9, 16, 17, 19, 22, 28, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 121, 122, 124, 128, 141, 144, 147, 151, 159, 166, 171, 172, 175, 178, 179, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 232, 257, 272, 276, 285, 286, 293, 294, 296, 311, 317, 319, 324, 341, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 382, 383, 388, 393, 394, 395, 398, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 419, 427, 428, 429, 430, 431, 432, 461, 628, 630, 634, 636, 639, 641, 647, 649, 650, 651, 655, 656], "ones": [0, 3, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 72, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 107, 108, 109, 129, 130, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 176, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 236, 239, 240, 243, 244, 246, 260, 264, 269, 276, 279, 285, 286, 289, 291, 294, 296, 301, 321, 328, 329, 340, 352, 354, 355, 356, 357, 359, 360, 361, 366, 382, 393, 394, 395, 396, 397, 409, 410, 413, 414, 416, 418, 419, 427, 428, 429, 430, 431, 440, 628, 634, 636, 638, 647, 649, 650, 651, 653, 655, 656], "littl": [0, 1, 4, 83, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 286, 301, 393, 395, 410, 413, 415, 636, 637, 638, 642, 653, 655, 656], "effort": [0, 4, 353, 651, 653, 655], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 127, 128, 129, 130, 131, 133, 135, 137, 138, 140, 141, 142, 143, 144, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 162, 163, 164, 165, 168, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 257, 258, 260, 263, 264, 265, 266, 267, 269, 272, 273, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 347, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 388, 389, 390, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 452, 453, 461, 462, 463, 465, 466, 467, 469, 473, 475, 476, 477, 478, 484, 533, 613, 614, 620, 624, 627, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "repo": [0, 7, 99, 235, 280, 289, 627, 650, 655], "attempt": [0, 16, 17, 19, 22, 23, 24, 26, 28, 38, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 129, 130, 141, 144, 145, 146, 147, 150, 151, 152, 153, 159, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 296, 301, 354, 355, 356, 357, 359, 360, 361, 366, 383, 398, 401, 409, 427, 428, 429, 430, 431, 432, 630, 641, 655], "align": [0, 317, 322, 655], "exist": [0, 1, 3, 4, 5, 16, 17, 19, 22, 23, 28, 30, 31, 38, 45, 50, 53, 58, 64, 66, 68, 69, 73, 75, 80, 86, 87, 107, 108, 109, 115, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 236, 244, 257, 284, 285, 286, 296, 297, 311, 354, 355, 356, 357, 359, 360, 361, 366, 383, 396, 416, 427, 428, 429, 430, 431, 614, 624, 631, 649, 650, 655, 656], "ecosystem": [0, 631, 638, 642, 655], "ha": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 115, 117, 121, 122, 124, 127, 129, 135, 137, 141, 144, 147, 148, 151, 155, 159, 163, 164, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 235, 257, 258, 277, 278, 279, 280, 281, 283, 284, 285, 286, 296, 298, 317, 319, 322, 324, 330, 332, 349, 354, 355, 356, 357, 359, 360, 361, 366, 376, 378, 383, 393, 396, 410, 411, 413, 415, 427, 428, 429, 430, 431, 434, 454, 628, 630, 634, 635, 636, 637, 638, 639, 642, 643, 646, 648, 649, 650, 651, 652, 653, 655, 656], "dataset": [0, 49, 53, 64, 65, 66, 67, 72, 73, 74, 79, 81, 82, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 114, 122, 124, 127, 129, 130, 168, 192, 193, 194, 197, 198, 199, 200, 203, 207, 213, 293, 354, 356, 357, 359, 360, 428, 431, 454, 626, 628, 634, 635, 639, 652, 653, 655, 656], "pillar": [0, 655], "environ": [0, 3, 6, 9, 11, 14, 15, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 69, 70, 75, 76, 77, 85, 87, 88, 89, 90, 91, 92, 109, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 222, 228, 229, 231, 232, 234, 235, 236, 240, 241, 243, 244, 245, 246, 251, 258, 259, 260, 264, 265, 266, 269, 272, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 289, 292, 293, 294, 296, 300, 302, 319, 324, 326, 327, 361, 366, 378, 400, 404, 429, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 462, 463, 465, 467, 477, 478, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 613, 614, 615, 616, 620, 621, 622, 623, 624, 626, 627, 629, 630, 631, 633, 638, 640, 641, 642, 643, 645, 652, 653, 654], "model": [0, 4, 9, 10, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 32, 33, 35, 38, 44, 45, 50, 58, 64, 66, 68, 69, 73, 74, 75, 80, 86, 87, 107, 108, 109, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 243, 264, 279, 289, 291, 295, 296, 303, 304, 305, 310, 312, 325, 326, 327, 331, 332, 339, 342, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 371, 372, 373, 377, 382, 388, 390, 393, 394, 395, 396, 398, 399, 400, 401, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 427, 428, 429, 430, 431, 432, 473, 526, 528, 530, 615, 616, 617, 626, 627, 630, 631, 633, 636, 639, 642, 645, 647, 649, 650, 651, 653, 654, 656], "data": [0, 4, 9, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 157, 158, 159, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 187, 192, 193, 194, 197, 198, 199, 200, 201, 202, 204, 207, 208, 209, 211, 213, 214, 215, 217, 220, 227, 229, 232, 234, 235, 240, 243, 244, 246, 248, 250, 253, 255, 260, 266, 269, 276, 277, 283, 285, 286, 287, 292, 294, 296, 300, 301, 313, 316, 319, 324, 327, 330, 331, 341, 343, 352, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 369, 370, 375, 378, 379, 380, 382, 383, 385, 386, 387, 393, 394, 395, 396, 397, 398, 400, 401, 402, 409, 410, 413, 414, 415, 416, 418, 419, 427, 428, 430, 431, 432, 434, 435, 436, 437, 438, 452, 454, 461, 463, 466, 469, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 615, 620, 622, 623, 624, 626, 629, 630, 631, 633, 637, 638, 639, 640, 641, 645, 646, 647, 651, 652, 653, 654, 656], "util": [0, 4, 16, 17, 19, 22, 23, 24, 26, 28, 29, 34, 38, 45, 50, 58, 68, 69, 72, 74, 75, 80, 87, 107, 108, 109, 129, 130, 141, 142, 143, 144, 147, 151, 157, 158, 159, 164, 171, 172, 173, 174, 175, 180, 181, 182, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 264, 269, 279, 291, 296, 299, 302, 303, 304, 310, 317, 319, 322, 324, 354, 355, 356, 357, 359, 360, 361, 366, 389, 390, 391, 392, 411, 427, 428, 429, 430, 431, 620, 626, 632, 634, 636, 638, 640, 641, 642, 650, 651, 653, 655, 656], "e": [0, 1, 2, 3, 4, 8, 9, 11, 16, 17, 19, 22, 23, 24, 26, 28, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 107, 108, 109, 110, 115, 117, 121, 122, 135, 137, 141, 144, 147, 148, 151, 152, 159, 171, 172, 175, 180, 181, 182, 185, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 234, 236, 239, 240, 241, 242, 250, 253, 256, 258, 260, 264, 272, 279, 281, 284, 285, 286, 289, 291, 296, 297, 317, 319, 320, 322, 324, 327, 331, 343, 349, 350, 354, 355, 356, 357, 359, 360, 361, 364, 365, 366, 369, 374, 376, 378, 379, 381, 382, 383, 393, 395, 396, 397, 401, 402, 409, 410, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 452, 463, 613, 623, 628, 629, 630, 635, 636, 638, 640, 641, 643, 647, 649, 650, 652, 653, 655, 656], "g": [0, 1, 2, 3, 4, 8, 9, 11, 16, 17, 19, 22, 23, 24, 26, 28, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 107, 108, 109, 135, 141, 144, 147, 148, 151, 152, 159, 171, 172, 175, 180, 181, 182, 185, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 234, 236, 239, 240, 250, 253, 256, 260, 264, 272, 279, 281, 284, 285, 286, 289, 291, 296, 297, 317, 319, 320, 322, 323, 324, 327, 331, 349, 350, 354, 355, 356, 357, 359, 360, 361, 364, 365, 366, 374, 379, 382, 383, 396, 413, 416, 427, 428, 429, 430, 431, 433, 443, 444, 445, 446, 448, 449, 450, 451, 452, 623, 628, 629, 630, 635, 636, 638, 640, 643, 649, 650, 651, 652, 653, 655, 656], "collector": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 58, 65, 70, 71, 72, 74, 78, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 176, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 235, 269, 277, 285, 296, 301, 319, 324, 341, 355, 358, 361, 366, 395, 410, 413, 427, 429, 469, 473, 476, 478, 533, 615, 616, 620, 622, 623, 626, 630, 631, 638, 653, 656], "contain": [0, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 122, 124, 125, 127, 129, 130, 131, 136, 139, 140, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 228, 235, 239, 243, 246, 253, 264, 276, 279, 284, 285, 286, 289, 291, 292, 293, 294, 296, 300, 303, 304, 317, 318, 321, 322, 323, 325, 327, 330, 331, 354, 355, 356, 357, 359, 360, 361, 366, 370, 375, 376, 379, 381, 382, 383, 387, 390, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 458, 463, 613, 620, 621, 622, 623, 624, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 649, 650, 651, 652, 653, 655, 656], "etc": [0, 2, 3, 4, 8, 9, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 75, 76, 77, 80, 85, 88, 89, 90, 91, 92, 103, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 255, 276, 286, 296, 297, 325, 331, 349, 355, 361, 366, 427, 429, 430, 628, 630, 635, 636, 642, 653, 655, 656], "have": [0, 1, 3, 4, 6, 7, 8, 9, 10, 16, 17, 22, 23, 25, 26, 28, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 128, 131, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 223, 227, 228, 231, 235, 240, 243, 246, 247, 255, 259, 260, 276, 277, 279, 283, 284, 285, 286, 293, 294, 296, 298, 301, 303, 304, 325, 328, 330, 331, 332, 341, 352, 354, 355, 356, 357, 359, 360, 361, 366, 378, 384, 385, 393, 395, 410, 413, 415, 418, 423, 424, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454, 463, 473, 475, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 648, 649, 650, 651, 652, 653, 655, 656], "few": [0, 3, 9, 87, 107, 108, 130, 151, 198, 202, 354, 356, 357, 359, 360, 428, 431, 454, 463, 628, 636, 637, 640, 649, 650, 653, 655, 656], "depend": [0, 1, 3, 4, 5, 8, 9, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 39, 64, 66, 88, 141, 144, 147, 150, 151, 152, 153, 159, 171, 172, 175, 177, 180, 181, 182, 185, 186, 192, 193, 194, 197, 199, 200, 201, 202, 243, 246, 361, 366, 383, 387, 413, 456, 628, 629, 634, 636, 637, 646, 649, 650, 651, 655, 656], "possibl": [0, 3, 4, 5, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 100, 103, 105, 107, 108, 109, 116, 122, 129, 135, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 239, 264, 279, 284, 285, 286, 289, 291, 296, 303, 304, 317, 318, 322, 323, 353, 354, 355, 356, 357, 359, 360, 361, 366, 382, 413, 427, 428, 429, 430, 431, 452, 467, 473, 628, 629, 634, 636, 637, 638, 640, 642, 643, 649, 650, 651, 653, 655, 656], "standard": [0, 3, 4, 60, 144, 260, 271, 293, 294, 298, 299, 300, 314, 327, 333, 334, 339, 353, 355, 361, 366, 374, 395, 410, 413, 418, 419, 434, 435, 436, 437, 466, 634, 635, 639, 640, 650, 653, 655], "numpi": [0, 4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 141, 144, 147, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 253, 282, 287, 297, 354, 356, 357, 359, 360, 428, 431, 473, 638, 651, 653, 655, 656], "common": [0, 3, 4, 5, 85, 141, 151, 157, 229, 247, 355, 371, 372, 373, 377, 393, 394, 395, 396, 401, 402, 409, 410, 413, 414, 415, 416, 418, 419, 427, 477, 620, 627, 628, 629, 630, 631, 634, 636, 640, 643, 648, 649, 650, 651, 652, 655, 656], "openai": [0, 8, 35, 150, 152, 159, 177, 201, 636, 651, 655, 656], "gym": [0, 1, 2, 4, 5, 9, 16, 17, 19, 22, 28, 29, 30, 31, 70, 109, 141, 144, 147, 148, 150, 151, 152, 153, 155, 156, 159, 163, 164, 166, 167, 171, 172, 175, 177, 180, 181, 182, 185, 186, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 223, 225, 231, 235, 238, 247, 254, 255, 260, 262, 267, 269, 272, 279, 285, 292, 293, 296, 297, 429, 510, 620, 627, 634, 635, 636, 637, 639, 643, 644, 651, 652, 653], "onli": [0, 1, 2, 3, 4, 5, 8, 16, 17, 19, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 72, 75, 76, 77, 80, 81, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 115, 117, 121, 122, 124, 129, 130, 137, 141, 144, 145, 146, 147, 150, 151, 152, 153, 155, 158, 159, 166, 167, 171, 172, 173, 174, 175, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 231, 235, 236, 238, 239, 240, 241, 243, 245, 246, 250, 253, 258, 260, 264, 265, 269, 276, 277, 278, 279, 280, 284, 285, 286, 289, 291, 293, 294, 296, 297, 301, 321, 322, 324, 328, 330, 331, 355, 358, 361, 366, 370, 374, 375, 379, 380, 382, 383, 384, 385, 393, 395, 396, 397, 401, 402, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 427, 429, 430, 434, 435, 436, 437, 438, 454, 461, 473, 475, 614, 628, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 648, 649, 650, 651, 653, 655, 656], "option": [0, 1, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 137, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 245, 246, 247, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 267, 268, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 341, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 370, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 386, 387, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 443, 444, 445, 446, 448, 449, 450, 451, 452, 454, 456, 459, 461, 463, 465, 466, 467, 468, 469, 470, 473, 477, 478, 526, 528, 529, 530, 533, 546, 547, 614, 620, 622, 623, 624, 626, 628, 629, 631, 637, 639, 642, 649, 650, 653, 655], "On": [0, 4, 8, 23, 24, 26, 28, 42, 100, 318, 323, 628, 629, 631, 635, 649, 650], "end": [0, 3, 4, 16, 17, 22, 30, 38, 45, 50, 53, 58, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 113, 122, 124, 128, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 247, 253, 262, 277, 278, 284, 286, 296, 303, 304, 317, 318, 322, 323, 326, 355, 361, 366, 378, 396, 416, 427, 429, 430, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 494, 495, 553, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "come": [0, 1, 3, 4, 9, 16, 17, 19, 22, 23, 24, 26, 28, 30, 53, 58, 135, 141, 144, 147, 151, 158, 159, 162, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 207, 243, 246, 369, 370, 371, 372, 373, 379, 387, 393, 395, 410, 413, 415, 454, 634, 635, 636, 637, 641, 642, 643, 644, 649, 650, 653, 655, 656], "set": [0, 1, 2, 3, 4, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 115, 116, 117, 118, 124, 128, 131, 137, 141, 144, 147, 149, 151, 152, 158, 159, 163, 164, 165, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 224, 225, 227, 229, 231, 232, 235, 236, 239, 243, 246, 253, 254, 255, 256, 264, 269, 277, 278, 279, 280, 284, 285, 286, 289, 291, 293, 294, 296, 297, 317, 319, 321, 322, 324, 326, 328, 330, 331, 338, 340, 341, 349, 353, 354, 355, 356, 357, 359, 360, 361, 366, 369, 374, 382, 383, 395, 396, 402, 407, 410, 411, 413, 416, 427, 428, 429, 430, 431, 434, 438, 454, 462, 463, 467, 469, 478, 616, 624, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 640, 641, 642, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "re": [0, 3, 4, 9, 14, 23, 24, 26, 38, 45, 50, 53, 58, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 128, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 250, 296, 324, 328, 329, 332, 355, 361, 366, 379, 383, 427, 429, 430, 461, 628, 631, 634, 636, 637, 639, 641, 646, 648, 649, 651, 655, 656], "usabl": [0, 631, 637, 655], "function": [0, 2, 3, 4, 9, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 115, 116, 117, 118, 124, 131, 133, 137, 141, 144, 147, 148, 151, 152, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 225, 226, 227, 231, 232, 243, 246, 253, 255, 257, 283, 284, 286, 287, 293, 294, 296, 297, 298, 299, 302, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 328, 329, 330, 331, 332, 335, 336, 337, 339, 341, 344, 345, 347, 350, 352, 354, 355, 356, 357, 359, 360, 361, 366, 371, 372, 373, 374, 376, 378, 379, 381, 382, 383, 385, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 422, 423, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 473, 477, 478, 532, 620, 626, 629, 631, 634, 637, 638, 639, 640, 643, 646, 648, 651, 653, 656], "cost": [0, 3, 41, 103, 116, 118, 393, 395, 410, 413, 415, 630, 634, 635, 638, 649, 650, 651, 653], "return": [0, 3, 4, 8, 9, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 116, 122, 124, 125, 127, 129, 130, 133, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 157, 158, 159, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 177, 180, 181, 182, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 300, 301, 304, 305, 306, 307, 308, 309, 311, 313, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 337, 339, 342, 344, 345, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 378, 379, 381, 382, 383, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 418, 419, 423, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 454, 458, 462, 473, 475, 613, 615, 620, 621, 622, 623, 624, 626, 628, 629, 631, 634, 635, 636, 638, 640, 641, 643, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "process": [0, 1, 2, 4, 5, 6, 9, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 38, 45, 50, 58, 64, 65, 66, 68, 69, 72, 73, 75, 80, 81, 82, 83, 86, 87, 97, 100, 104, 105, 107, 108, 109, 110, 115, 117, 121, 122, 125, 129, 137, 141, 144, 147, 148, 151, 155, 159, 162, 166, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 234, 235, 243, 246, 253, 279, 282, 284, 285, 293, 294, 296, 319, 324, 330, 331, 341, 353, 354, 355, 356, 357, 359, 360, 361, 364, 365, 366, 376, 381, 395, 413, 427, 428, 429, 430, 431, 626, 628, 631, 634, 635, 637, 638, 639, 646, 647, 649, 650, 651, 652, 653, 655, 656], "good": [0, 1, 3, 5, 10, 121, 122, 171, 211, 628, 634, 636, 637, 638, 640, 650, 655, 656], "runtim": [0, 3, 4, 34, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430, 651], "perform": [0, 1, 2, 3, 4, 5, 9, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 32, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 74, 75, 76, 77, 80, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 141, 144, 145, 146, 147, 150, 151, 152, 153, 158, 159, 171, 172, 175, 177, 180, 181, 182, 185, 186, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 243, 246, 253, 259, 281, 284, 286, 296, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 332, 335, 336, 339, 340, 341, 344, 345, 347, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 366, 374, 376, 378, 381, 386, 389, 395, 396, 405, 413, 416, 427, 428, 429, 430, 431, 467, 473, 475, 628, 630, 634, 635, 636, 637, 638, 639, 642, 644, 647, 648, 649, 650, 651, 656], "To": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 21, 23, 24, 26, 38, 45, 50, 58, 65, 68, 69, 70, 72, 74, 75, 80, 81, 82, 97, 99, 100, 101, 102, 103, 104, 105, 109, 113, 122, 124, 129, 130, 133, 140, 141, 142, 143, 144, 147, 150, 151, 152, 157, 158, 159, 162, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 185, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 241, 277, 279, 293, 296, 302, 319, 324, 341, 355, 361, 366, 371, 372, 373, 383, 396, 402, 407, 411, 418, 427, 429, 430, 454, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 628, 629, 630, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 649, 650, 651, 652, 653, 655, 656], "read": [0, 3, 4, 8, 34, 42, 43, 47, 51, 65, 67, 70, 71, 72, 74, 77, 78, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 115, 116, 117, 118, 121, 124, 131, 133, 137, 141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 227, 228, 229, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 254, 255, 257, 262, 263, 265, 266, 267, 269, 272, 273, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 288, 289, 290, 292, 293, 296, 302, 337, 354, 356, 357, 359, 360, 370, 371, 372, 373, 375, 378, 379, 382, 383, 385, 387, 388, 393, 394, 395, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 419, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 454, 467, 473, 628, 629, 634, 635, 636, 638, 639, 640, 648, 649, 650, 651, 652, 655, 656], "philosophi": [0, 10], "capabl": [0, 1, 4, 8, 10, 12, 18, 28, 34, 192, 206, 477, 628, 631, 634, 639, 642, 646, 648, 652, 656], "beyond": [0, 2, 53, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 638], "api": [0, 1, 3, 4, 6, 34, 42, 43, 45, 51, 53, 68, 77, 80, 85, 87, 107, 108, 144, 147, 173, 174, 177, 198, 202, 204, 264, 291, 293, 294, 301, 353, 354, 355, 356, 357, 359, 360, 361, 366, 427, 428, 430, 431, 477, 478, 629, 630, 631, 638, 639, 640, 641, 642, 643, 647, 649, 650, 651, 653, 655, 656], "check": [0, 3, 4, 5, 6, 7, 8, 10, 16, 17, 19, 22, 23, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 72, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 93, 95, 107, 108, 109, 112, 113, 120, 129, 141, 144, 147, 148, 150, 151, 152, 159, 165, 171, 172, 175, 180, 181, 182, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 236, 241, 249, 255, 265, 279, 282, 286, 296, 297, 311, 354, 355, 356, 357, 359, 360, 361, 366, 370, 375, 376, 379, 380, 381, 382, 383, 396, 407, 413, 418, 427, 428, 429, 430, 431, 454, 625, 628, 629, 630, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 655, 656], "paper": [0, 100, 103, 142, 143, 145, 146, 153, 157, 158, 163, 164, 166, 167, 177, 185, 186, 264, 289, 291, 304, 317, 342, 351, 400, 408, 418, 634, 636, 649, 650], "releas": [0, 5, 8, 11, 32, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 284, 286, 296, 355, 361, 366, 396, 416, 427, 429, 430], "sync": [0, 1, 2, 16, 17, 22, 23, 24, 25, 26, 27, 28, 31, 141, 211, 353, 476, 620, 628, 631, 634], "so": [0, 1, 3, 4, 5, 7, 8, 11, 12, 38, 42, 45, 50, 53, 58, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 279, 284, 293, 296, 301, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 384, 385, 427, 428, 429, 430, 431, 434, 454, 628, 634, 636, 637, 641, 644, 649, 650, 651, 656], "make": [0, 1, 2, 3, 4, 5, 8, 12, 38, 42, 45, 50, 53, 58, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 80, 85, 87, 97, 99, 102, 104, 105, 107, 108, 109, 124, 127, 131, 133, 140, 141, 144, 147, 151, 152, 155, 156, 158, 159, 161, 167, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 228, 241, 248, 256, 260, 264, 265, 269, 273, 277, 281, 285, 289, 296, 299, 302, 317, 318, 319, 322, 323, 324, 330, 331, 333, 353, 354, 355, 356, 357, 359, 360, 361, 366, 375, 383, 393, 395, 410, 413, 415, 427, 428, 429, 430, 431, 434, 435, 436, 437, 452, 469, 616, 624, 628, 629, 630, 634, 635, 636, 637, 638, 639, 640, 641, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "sure": [0, 1, 4, 5, 8, 45, 102, 109, 131, 144, 151, 155, 195, 196, 197, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 241, 269, 285, 296, 375, 429, 624, 629, 634, 636, 637, 638, 641, 649, 650, 651, 653, 655, 656], "alwai": [0, 3, 4, 16, 17, 26, 30, 38, 39, 45, 50, 58, 68, 69, 75, 80, 85, 88, 97, 106, 109, 112, 113, 120, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 255, 259, 281, 293, 294, 296, 321, 355, 361, 366, 403, 411, 427, 429, 430, 526, 628, 629, 630, 635, 636, 637, 638, 649, 650, 651, 653], "enjoi": [0, 3, 4, 103, 642], "latest": [0, 1, 3, 4, 11, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 30, 166, 169, 170, 173, 174, 469, 636, 649, 650, 651, 655], "featur": [0, 3, 4, 5, 16, 17, 19, 22, 23, 24, 26, 28, 32, 34, 38, 45, 60, 62, 68, 80, 85, 86, 87, 101, 107, 108, 122, 129, 130, 141, 144, 147, 151, 159, 162, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 187, 192, 193, 194, 197, 198, 200, 201, 202, 232, 235, 250, 253, 255, 262, 279, 280, 288, 293, 299, 303, 304, 314, 315, 317, 318, 319, 322, 323, 324, 325, 330, 333, 334, 354, 355, 356, 357, 359, 360, 361, 366, 383, 390, 393, 395, 410, 413, 415, 427, 428, 430, 431, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 477, 478, 624, 628, 629, 630, 634, 635, 636, 637, 638, 640, 641, 642, 644, 647, 651, 653, 655, 656], "recent": [0, 8, 209, 292, 294, 297, 656], "version": [0, 1, 2, 3, 4, 7, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 30, 31, 32, 33, 37, 38, 40, 43, 45, 46, 50, 51, 52, 55, 57, 58, 61, 63, 64, 66, 68, 69, 74, 75, 80, 87, 89, 90, 91, 92, 100, 105, 107, 108, 109, 129, 141, 144, 147, 150, 151, 152, 153, 159, 166, 167, 171, 172, 173, 175, 177, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 235, 283, 292, 293, 294, 296, 297, 299, 319, 324, 332, 338, 354, 355, 356, 357, 358, 359, 360, 361, 365, 366, 373, 393, 395, 410, 411, 413, 415, 416, 427, 428, 429, 430, 431, 434, 437, 477, 478, 626, 627, 629, 630, 631, 634, 636, 637, 638, 639, 641, 644, 649, 650, 651, 652, 656], "although": [0, 1, 4, 9, 28, 38, 45, 50, 68, 69, 75, 80, 88, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 298, 299, 302, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 332, 335, 336, 339, 341, 344, 345, 347, 352, 374, 376, 378, 381, 386, 389, 630, 631, 634, 635, 642, 653], "core": [0, 2, 3, 4, 9, 30, 31, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 121, 122, 124, 192, 631, 637, 640, 655], "guarante": [0, 3, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 107, 108, 109, 110, 115, 116, 117, 118, 131, 133, 137, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 284, 293, 294, 296, 354, 355, 356, 357, 359, 360, 361, 366, 383, 427, 428, 429, 430, 431, 642], "backward": [0, 2, 9, 32, 38, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 286, 293, 294, 296, 317, 318, 322, 323, 340, 354, 355, 356, 357, 359, 360, 361, 366, 383, 393, 394, 396, 397, 401, 402, 409, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 634, 636, 637, 638, 641, 642, 644, 649, 650, 651], "compatnightli": [0, 7], "via": [0, 1, 3, 4, 5, 8, 9, 21, 26, 27, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 65, 68, 72, 76, 77, 80, 81, 82, 85, 88, 89, 90, 91, 92, 99, 101, 102, 103, 104, 105, 108, 116, 151, 171, 180, 200, 202, 256, 264, 267, 291, 355, 361, 366, 396, 399, 411, 427, 430, 477, 630, 631, 634, 635, 636, 637, 640, 642, 653, 655, 656], "tensordict": [0, 1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 127, 129, 130, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 159, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 226, 227, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 300, 301, 302, 312, 313, 316, 319, 324, 326, 327, 330, 331, 341, 342, 343, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 366, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 423, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 452, 453, 463, 467, 468, 469, 471, 473, 498, 529, 626, 628, 630, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 656], "git": [0, 7, 8, 11], "clone": [0, 3, 5, 9, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 68, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 115, 194, 206, 212, 213, 255, 266, 284, 285, 294, 355, 361, 366, 371, 372, 373, 382, 401, 409, 418, 626, 634, 649, 651, 655], "willing": 0, "contribut": [0, 3, 328, 477, 631], "cd": [0, 8], "path": [0, 4, 7, 8, 38, 45, 50, 53, 58, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 80, 81, 82, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 124, 132, 138, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 183, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 225, 264, 291, 296, 327, 354, 355, 356, 357, 358, 359, 360, 361, 366, 413, 427, 428, 429, 430, 431, 456, 461, 473, 477, 478, 628, 631, 635, 638, 644, 649], "root": [0, 3, 4, 42, 43, 51, 53, 65, 70, 72, 77, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113, 120, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 226, 235, 258, 280, 281, 319, 320, 324, 349, 350, 434, 630, 637, 639, 649, 650, 651, 653, 656], "http": [0, 3, 6, 7, 8, 11, 16, 17, 23, 24, 26, 35, 65, 83, 97, 100, 101, 102, 103, 104, 105, 121, 122, 142, 143, 145, 146, 153, 155, 157, 158, 163, 164, 166, 167, 168, 169, 170, 173, 174, 177, 183, 184, 185, 186, 199, 235, 264, 289, 299, 305, 306, 307, 308, 309, 310, 313, 314, 315, 322, 327, 328, 329, 334, 335, 336, 340, 341, 342, 344, 345, 351, 376, 393, 394, 396, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 434, 439, 447, 625, 645, 646, 652, 655], "github": [0, 3, 6, 7, 8, 11, 23, 24, 26, 35, 97, 100, 101, 103, 142, 143, 145, 146, 150, 153, 157, 158, 163, 164, 166, 167, 169, 170, 173, 174, 177, 183, 184, 185, 186, 232, 235, 289, 299, 640, 644, 646, 649, 650, 655], "com": [0, 3, 6, 7, 8, 11, 23, 24, 26, 35, 100, 103, 104, 142, 143, 145, 146, 153, 155, 157, 158, 163, 164, 166, 167, 169, 170, 173, 174, 177, 183, 184, 185, 186, 235, 299, 646, 655], "setup": [0, 1, 8, 142, 143, 155, 157, 158, 183, 214, 215, 430, 477, 631], "py": [0, 2, 3, 4, 35, 150, 152, 225, 235, 311, 321, 342, 351, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656], "develop": [0, 4, 5, 8, 53, 155, 361, 366, 628, 631, 634, 647, 655], "A": [0, 1, 4, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 131, 135, 136, 137, 138, 139, 141, 144, 147, 149, 151, 153, 154, 156, 159, 171, 172, 175, 176, 177, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 226, 228, 230, 231, 232, 234, 235, 238, 239, 240, 241, 245, 251, 255, 257, 258, 264, 265, 267, 274, 279, 281, 284, 285, 286, 289, 290, 292, 293, 294, 295, 296, 297, 298, 300, 302, 303, 304, 313, 316, 317, 318, 319, 322, 323, 324, 325, 327, 328, 329, 331, 332, 334, 340, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 374, 375, 376, 378, 379, 380, 383, 385, 386, 389, 390, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 423, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 440, 452, 455, 456, 459, 461, 462, 465, 472, 473, 476, 478, 483, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 620, 626, 628, 630, 633, 634, 636, 638, 640, 641, 642, 645, 646, 651, 654, 656], "seri": [0, 3, 4, 8, 9, 62, 114, 125, 135, 136, 139, 140, 180, 259, 285, 454, 629, 630, 634, 635, 636, 643, 644, 649, 650, 653, 656], "quick": [0, 97, 626, 638], "ramp": 0, "up": [0, 1, 2, 3, 4, 9, 10, 14, 15, 16, 17, 18, 19, 22, 23, 24, 26, 28, 33, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 74, 76, 77, 85, 88, 89, 90, 91, 92, 99, 105, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 231, 234, 253, 256, 280, 285, 296, 299, 353, 358, 413, 429, 478, 627, 629, 630, 634, 635, 636, 637, 640, 644, 646, 647, 649, 650, 651, 653, 655, 656], "If": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 122, 124, 125, 127, 128, 129, 130, 135, 137, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 158, 159, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 226, 227, 228, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 253, 255, 256, 257, 258, 259, 260, 264, 265, 268, 269, 272, 273, 278, 279, 280, 281, 282, 283, 284, 286, 287, 289, 291, 293, 294, 296, 297, 302, 303, 304, 316, 317, 318, 319, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 341, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 366, 370, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 392, 393, 394, 395, 396, 397, 398, 400, 402, 403, 404, 405, 407, 409, 410, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 448, 449, 450, 451, 452, 458, 461, 462, 466, 468, 469, 473, 476, 478, 614, 620, 624, 627, 628, 630, 634, 635, 636, 637, 638, 639, 641, 643, 644, 646, 648, 649, 650, 651, 653, 655, 656], "hurri": [0, 639], "last": [0, 1, 3, 4, 5, 16, 17, 19, 22, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 67, 68, 76, 77, 85, 87, 88, 89, 90, 91, 92, 99, 128, 129, 130, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 166, 167, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 205, 214, 220, 228, 231, 234, 239, 240, 250, 258, 260, 265, 278, 280, 282, 292, 297, 298, 303, 304, 316, 317, 319, 322, 324, 325, 328, 329, 335, 346, 349, 352, 355, 361, 366, 374, 378, 383, 396, 434, 436, 437, 628, 635, 636, 637, 638, 639, 640, 646, 649, 650, 651, 652, 653, 655, 656], "item": [0, 3, 4, 9, 16, 19, 31, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 65, 70, 71, 72, 76, 77, 80, 81, 82, 85, 86, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 116, 122, 124, 128, 135, 228, 249, 285, 294, 328, 329, 397, 398, 400, 430, 463, 628, 630, 631, 634, 636, 637, 641, 642, 646, 649, 650, 651, 653], "navig": [0, 206, 646, 650], "previou": [0, 4, 5, 11, 58, 65, 70, 71, 72, 74, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 227, 250, 279, 296, 317, 322, 345, 374, 628, 636, 637, 638, 639, 640, 644, 651, 656], "whenev": [0, 1, 3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 72, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 103, 109, 121, 122, 129, 130, 145, 146, 150, 152, 153, 163, 164, 177, 185, 186, 193, 194, 195, 196, 197, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 225, 250, 254, 285, 286, 292, 296, 355, 361, 366, 411, 427, 429, 430, 434, 435, 436, 437, 452, 476, 629, 643, 646, 653], "want": [0, 1, 3, 4, 7, 8, 9, 19, 30, 45, 68, 80, 130, 193, 194, 197, 207, 235, 260, 340, 355, 361, 366, 393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 427, 430, 432, 629, 634, 635, 636, 637, 638, 639, 641, 642, 643, 649, 650, 651, 652, 653, 655, 656], "ted": [0, 47, 59, 78, 79, 97, 99, 100, 101, 102, 103, 104, 105, 112, 113, 120, 626, 633, 645, 654], "s": [0, 1, 2, 3, 4, 7, 8, 9, 12, 14, 16, 17, 18, 19, 20, 22, 23, 24, 26, 28, 30, 31, 33, 38, 42, 45, 50, 53, 58, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 80, 81, 82, 85, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 124, 129, 130, 135, 141, 142, 143, 144, 147, 151, 155, 157, 158, 159, 163, 164, 166, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 239, 240, 253, 258, 264, 277, 279, 282, 283, 284, 285, 286, 289, 291, 293, 294, 296, 298, 301, 303, 304, 311, 316, 319, 324, 329, 330, 331, 334, 340, 342, 349, 351, 353, 354, 355, 356, 357, 359, 360, 361, 366, 371, 373, 376, 378, 379, 382, 383, 386, 394, 395, 396, 401, 407, 409, 410, 411, 413, 416, 418, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 452, 475, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656], "modul": [0, 1, 2, 3, 4, 5, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 35, 38, 44, 45, 50, 58, 65, 68, 69, 72, 74, 75, 80, 81, 82, 87, 107, 108, 109, 124, 135, 141, 142, 143, 144, 147, 151, 159, 162, 165, 168, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 225, 234, 239, 245, 247, 253, 255, 257, 264, 265, 278, 279, 284, 285, 286, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 452, 472, 473, 475, 477, 478, 617, 620, 626, 630, 631, 633, 635, 636, 639, 641, 642, 643, 645, 647, 648, 649, 650, 651, 652, 653, 654], "optim": [0, 1, 3, 9, 33, 38, 45, 50, 58, 68, 69, 74, 75, 80, 87, 107, 108, 109, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 284, 286, 296, 300, 321, 327, 333, 334, 340, 349, 353, 354, 355, 356, 357, 359, 360, 361, 366, 394, 396, 411, 412, 413, 416, 424, 427, 428, 429, 430, 431, 467, 468, 473, 475, 477, 478, 533, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 620, 626, 628, 630, 631, 633, 636, 637, 638, 639, 640, 642, 645, 647, 649, 650, 651, 654], "collect": [0, 1, 3, 4, 5, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 53, 58, 65, 70, 71, 72, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 124, 128, 141, 144, 147, 151, 159, 171, 172, 175, 177, 180, 181, 182, 187, 192, 193, 194, 197, 198, 200, 201, 202, 207, 211, 232, 235, 250, 260, 264, 291, 341, 354, 356, 357, 359, 360, 378, 394, 397, 400, 402, 414, 416, 418, 419, 428, 431, 454, 463, 466, 469, 473, 475, 476, 478, 613, 614, 620, 626, 628, 631, 633, 634, 637, 638, 639, 640, 641, 644, 645, 649, 650, 651, 652, 653, 654, 655, 656], "storag": [0, 1, 9, 16, 17, 19, 22, 30, 38, 45, 47, 50, 53, 58, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 78, 80, 81, 82, 84, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 128, 129, 130, 132, 133, 134, 135, 137, 138, 141, 144, 147, 149, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 234, 235, 243, 246, 269, 296, 354, 355, 356, 357, 359, 360, 361, 366, 395, 410, 413, 427, 428, 429, 430, 431, 478, 485, 486, 487, 488, 491, 492, 496, 497, 498, 499, 626, 628, 631, 633, 635, 636, 637, 638, 639, 641, 644, 645, 649, 650, 652, 654], "log": [0, 4, 5, 9, 12, 74, 208, 209, 214, 215, 311, 312, 313, 321, 328, 329, 337, 349, 350, 353, 355, 358, 361, 362, 366, 375, 376, 379, 383, 393, 394, 395, 396, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 419, 427, 430, 432, 461, 465, 466, 467, 473, 475, 477, 478, 620, 626, 628, 629, 630, 631, 633, 634, 635, 636, 639, 640, 644, 645, 649, 650, 651, 654, 655], "your": [0, 1, 2, 3, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 30, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 155, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 293, 294, 296, 355, 361, 366, 383, 395, 413, 427, 429, 430, 462, 624, 626, 627, 629, 630, 633, 635, 636, 637, 639, 640, 641, 642, 643, 645, 647, 649, 650, 653, 654, 655], "own": [0, 1, 2, 16, 17, 22, 28, 29, 33, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430, 454, 626, 628, 630, 633, 635, 636, 639, 645, 649, 650, 651, 654], "train": [0, 1, 3, 4, 14, 16, 17, 19, 22, 23, 24, 26, 28, 29, 30, 32, 35, 38, 41, 45, 50, 58, 64, 66, 68, 69, 73, 74, 75, 80, 86, 87, 97, 100, 106, 107, 108, 109, 121, 122, 141, 144, 147, 151, 156, 159, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 243, 251, 264, 278, 283, 286, 289, 291, 296, 298, 299, 301, 306, 308, 316, 321, 341, 353, 354, 355, 356, 357, 359, 360, 361, 364, 365, 366, 393, 394, 395, 396, 397, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 434, 466, 473, 475, 476, 477, 478, 620, 626, 628, 629, 631, 633, 635, 639, 642, 643, 645, 652, 653, 654, 655, 656], "loop": [0, 1, 2, 9, 19, 30, 64, 66, 73, 87, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 298, 316, 340, 341, 354, 356, 357, 359, 360, 394, 396, 402, 409, 413, 414, 416, 418, 419, 428, 431, 434, 435, 436, 437, 469, 473, 628, 630, 631, 633, 634, 635, 639, 641, 642, 643, 645, 648, 653, 654, 655], "ppo": [0, 1, 2, 5, 9, 379, 383, 395, 410, 413, 427, 477, 532, 533, 626, 629, 631, 633, 634, 635, 638, 640, 641, 645, 649, 654], "pendulum": [0, 2, 4, 16, 17, 19, 22, 28, 29, 30, 31, 70, 109, 135, 141, 144, 145, 146, 147, 148, 150, 151, 152, 159, 166, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 235, 238, 239, 241, 248, 254, 255, 260, 267, 269, 273, 274, 277, 279, 280, 281, 284, 285, 286, 287, 293, 294, 296, 302, 319, 324, 429, 620, 629, 631, 633, 635, 636, 639, 640, 641, 645, 654, 655, 656], "introduct": [0, 630, 633, 639, 645, 649, 650, 654, 656], "multi": [0, 1, 8, 10, 16, 17, 22, 38, 45, 50, 58, 65, 68, 69, 72, 75, 76, 77, 80, 81, 82, 109, 112, 113, 120, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 178, 179, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 256, 286, 296, 317, 319, 322, 324, 325, 330, 331, 332, 353, 355, 361, 366, 378, 383, 427, 429, 430, 432, 434, 435, 436, 437, 481, 482, 525, 626, 628, 633, 634, 635, 636, 637, 639, 640, 645, 651, 654, 655], "agent": [0, 10, 71, 76, 77, 156, 162, 163, 164, 169, 170, 173, 174, 178, 179, 183, 184, 185, 186, 188, 206, 256, 276, 277, 278, 328, 329, 330, 331, 332, 334, 342, 351, 395, 410, 413, 432, 477, 626, 633, 639, 645, 651, 654], "env": [0, 1, 2, 3, 6, 7, 8, 9, 12, 16, 17, 19, 22, 23, 24, 26, 28, 29, 30, 31, 38, 42, 45, 47, 50, 53, 58, 68, 69, 70, 74, 75, 78, 80, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 124, 135, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 300, 302, 319, 324, 326, 327, 354, 355, 356, 357, 359, 360, 361, 366, 378, 382, 411, 427, 429, 430, 452, 453, 454, 462, 478, 503, 504, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 614, 615, 616, 620, 622, 623, 624, 626, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 652, 653, 654], "us": [0, 1, 2, 3, 6, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 129, 130, 135, 137, 141, 142, 143, 144, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 263, 264, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 310, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 339, 340, 341, 342, 343, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 418, 419, 423, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 447, 452, 454, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 521, 531, 614, 615, 616, 618, 620, 624, 626, 627, 628, 629, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 656], "pretrain": [0, 353, 633, 645, 654], "recurr": [0, 3, 234, 317, 318, 319, 322, 324, 345, 369, 434, 633, 635, 640, 645, 653, 654], "dqn": [0, 2, 3, 97, 228, 247, 304, 313, 375, 376, 393, 394, 396, 397, 398, 400, 402, 403, 404, 408, 409, 411, 413, 414, 415, 416, 417, 418, 419, 427, 430, 432, 617, 626, 629, 631, 633, 638, 640, 641, 644, 645, 654], "polici": [0, 2, 4, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 47, 58, 70, 78, 109, 141, 142, 143, 144, 147, 151, 159, 165, 171, 172, 175, 176, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 224, 240, 245, 255, 258, 278, 281, 285, 296, 298, 301, 302, 313, 316, 319, 324, 330, 331, 334, 341, 343, 355, 358, 361, 366, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 386, 393, 394, 395, 396, 397, 401, 402, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 427, 429, 430, 467, 475, 476, 477, 478, 479, 481, 482, 483, 533, 546, 615, 616, 620, 622, 623, 626, 629, 631, 633, 635, 639, 641, 642, 645, 647, 652, 653, 654, 655, 656], "replai": [0, 9, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 58, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 121, 122, 123, 124, 125, 126, 128, 130, 131, 133, 135, 136, 140, 234, 235, 245, 265, 269, 279, 285, 296, 396, 397, 398, 400, 401, 402, 409, 414, 416, 418, 419, 429, 469, 473, 475, 478, 488, 489, 490, 491, 494, 498, 499, 618, 620, 626, 628, 630, 631, 633, 638, 645, 651, 652, 654], "buffer": [0, 5, 9, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 140, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 234, 235, 239, 244, 245, 253, 264, 265, 269, 279, 284, 285, 286, 289, 291, 296, 298, 341, 354, 355, 356, 357, 359, 360, 361, 366, 374, 382, 385, 395, 396, 397, 398, 400, 401, 402, 409, 410, 413, 414, 416, 418, 419, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 469, 473, 475, 478, 488, 489, 490, 491, 494, 498, 499, 618, 620, 626, 628, 630, 631, 633, 638, 643, 645, 651, 652, 654, 656], "export": [0, 7, 8, 633, 645, 654], "llm": [0, 3, 30, 31, 32, 33, 74, 86, 106, 107, 108, 109, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 321, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 427, 428, 429, 430, 431, 561, 626, 633, 645, 654], "build": [0, 1, 2, 3, 4, 8, 34, 38, 42, 45, 50, 58, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 85, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 141, 142, 143, 144, 147, 151, 152, 153, 157, 158, 159, 163, 164, 166, 169, 170, 171, 172, 175, 177, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 269, 293, 294, 296, 300, 327, 354, 355, 356, 357, 359, 360, 361, 366, 377, 379, 383, 427, 428, 429, 430, 431, 473, 617, 618, 619, 628, 629, 630, 631, 633, 636, 637, 638, 640, 641, 642, 643, 645, 649, 650, 651, 652, 654, 655, 656], "tool": [0, 1, 3, 4, 6, 108, 192, 206, 210, 212, 628, 629, 630, 633, 637, 639, 645, 649, 651, 653, 654, 656], "enabl": [0, 2, 3, 8, 9, 99, 115, 117, 128, 137, 192, 206, 232, 319, 324, 341, 353, 355, 358, 361, 362, 366, 378, 452, 454, 467, 475, 477, 478, 628, 631, 633, 636, 639, 645, 649, 650, 651, 653, 654], "competit": [0, 4, 163, 164, 633, 645, 650, 654], "ddpg": [0, 306, 307, 308, 309, 397, 408, 417, 478, 626, 629, 631, 633, 635, 641, 645, 650, 654], "task": [0, 2, 3, 4, 10, 74, 76, 77, 86, 100, 103, 141, 144, 145, 146, 147, 151, 154, 159, 163, 164, 171, 172, 173, 174, 175, 177, 180, 181, 182, 185, 186, 192, 193, 194, 197, 199, 200, 201, 202, 204, 264, 277, 286, 289, 291, 401, 409, 478, 626, 631, 633, 634, 635, 636, 637, 639, 640, 645, 646, 649, 650, 651, 654, 656], "specif": [0, 1, 2, 3, 6, 9, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 81, 82, 85, 88, 89, 90, 91, 92, 141, 144, 147, 151, 159, 169, 170, 171, 172, 175, 180, 181, 182, 185, 192, 193, 194, 197, 200, 201, 202, 207, 223, 258, 279, 294, 310, 319, 324, 353, 355, 361, 366, 374, 393, 395, 411, 413, 415, 427, 430, 454, 473, 477, 626, 630, 633, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 649, 650, 653, 654, 655], "object": [0, 3, 4, 5, 7, 8, 16, 17, 18, 19, 22, 23, 24, 26, 28, 30, 31, 35, 38, 42, 45, 50, 58, 60, 64, 66, 68, 69, 73, 75, 80, 85, 86, 87, 107, 108, 109, 110, 115, 116, 117, 118, 124, 127, 131, 133, 137, 140, 141, 144, 147, 151, 157, 159, 171, 172, 175, 176, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 243, 246, 247, 253, 256, 260, 264, 284, 285, 286, 289, 293, 294, 296, 319, 324, 327, 330, 331, 342, 349, 351, 353, 354, 355, 356, 357, 359, 360, 361, 366, 370, 371, 379, 382, 383, 384, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454, 478, 614, 615, 616, 619, 620, 624, 626, 629, 631, 633, 635, 636, 637, 638, 642, 644, 645, 647, 649, 650, 651, 653, 654, 656], "loss": [0, 2, 4, 9, 66, 247, 321, 328, 340, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 427, 430, 432, 433, 434, 468, 472, 473, 478, 531, 532, 617, 620, 628, 630, 631, 633, 638, 639, 641, 642, 643, 645, 651, 653, 654], "trainer": [0, 2, 393, 394, 395, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 419, 427, 430, 432, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 628, 633, 634, 645, 654], "exampl": [0, 1, 3, 5, 10, 11, 16, 17, 19, 22, 23, 28, 29, 30, 31, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 50, 51, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 86, 87, 88, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 121, 122, 124, 129, 130, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 315, 316, 317, 318, 319, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 337, 339, 340, 341, 342, 343, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 390, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 422, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 440, 452, 454, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 476, 477, 478, 524, 525, 528, 529, 530, 620, 626, 629, 630, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 654, 655, 656], "packag": [0, 7, 8, 11, 225, 626, 627, 646, 656], "batch": [0, 2, 3, 16, 17, 18, 19, 22, 23, 24, 26, 28, 30, 31, 33, 34, 42, 58, 60, 62, 65, 67, 70, 71, 72, 74, 81, 82, 83, 85, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 115, 116, 117, 118, 122, 123, 124, 128, 129, 130, 135, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 165, 166, 168, 169, 170, 171, 172, 175, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 232, 235, 239, 241, 250, 258, 260, 262, 265, 269, 276, 279, 281, 285, 286, 288, 292, 293, 294, 296, 299, 311, 317, 318, 319, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 337, 341, 342, 348, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 369, 378, 382, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 463, 466, 469, 470, 471, 473, 475, 476, 477, 478, 500, 622, 623, 624, 626, 628, 629, 630, 631, 635, 636, 637, 638, 639, 642, 644, 646, 648, 649, 650, 652, 655, 656], "size": [0, 3, 16, 17, 19, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 121, 122, 123, 124, 128, 129, 130, 131, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 157, 158, 159, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 228, 232, 234, 235, 236, 239, 242, 243, 246, 247, 248, 250, 253, 256, 258, 262, 264, 266, 267, 269, 273, 275, 276, 277, 279, 281, 282, 285, 286, 287, 288, 291, 293, 296, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 366, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 385, 387, 390, 393, 394, 395, 396, 397, 398, 400, 401, 402, 409, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 454, 463, 469, 475, 478, 626, 628, 629, 630, 635, 636, 637, 638, 639, 640, 642, 646, 649, 650, 651, 656], "copi": [0, 3, 4, 15, 18, 23, 24, 26, 28, 36, 37, 38, 39, 40, 41, 42, 45, 46, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 74, 75, 76, 80, 85, 86, 87, 88, 89, 90, 91, 92, 103, 107, 108, 109, 115, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 231, 235, 253, 267, 278, 284, 285, 286, 293, 294, 296, 297, 319, 324, 332, 354, 355, 356, 357, 359, 360, 361, 366, 374, 396, 411, 416, 427, 428, 429, 430, 431, 434, 452, 626, 628, 630, 634, 635, 637, 639, 649, 653, 655], "weight": [0, 5, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 38, 45, 50, 58, 65, 68, 69, 74, 75, 80, 87, 107, 108, 109, 121, 122, 124, 127, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 178, 179, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 253, 256, 264, 279, 284, 285, 286, 289, 291, 296, 317, 318, 319, 322, 323, 324, 330, 332, 334, 353, 354, 355, 356, 357, 359, 360, 361, 366, 382, 393, 394, 395, 396, 402, 405, 413, 416, 418, 427, 428, 429, 430, 431, 476, 478, 562, 619, 626, 628, 629, 631, 634, 635, 636, 648, 651, 653, 655], "synchron": [0, 4, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 64, 66, 73, 87, 107, 108, 166, 198, 353, 354, 356, 357, 359, 360, 366, 428, 431, 481, 483, 622, 623, 626, 628, 635, 636, 649], "distribut": [0, 3, 4, 5, 10, 11, 15, 18, 21, 23, 24, 25, 26, 27, 28, 29, 32, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 144, 173, 174, 211, 255, 260, 294, 298, 300, 311, 312, 313, 314, 320, 321, 327, 328, 329, 337, 338, 339, 340, 344, 345, 348, 349, 350, 353, 355, 358, 361, 364, 365, 366, 374, 375, 376, 379, 383, 384, 393, 394, 395, 396, 401, 402, 403, 409, 410, 413, 414, 415, 416, 418, 419, 427, 492, 626, 628, 630, 631, 635, 636, 638, 640, 642, 649, 650, 651, 655, 656], "interoper": [0, 16, 17, 626], "run": [0, 3, 4, 5, 6, 7, 8, 9, 11, 14, 15, 16, 17, 19, 22, 23, 24, 25, 26, 28, 30, 31, 38, 45, 50, 58, 68, 69, 70, 75, 80, 97, 100, 109, 122, 129, 130, 141, 142, 143, 144, 145, 146, 147, 150, 151, 157, 158, 159, 165, 166, 167, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 253, 259, 260, 276, 284, 285, 286, 293, 296, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 332, 335, 336, 339, 341, 344, 345, 347, 352, 353, 355, 361, 366, 374, 376, 378, 381, 383, 384, 385, 386, 389, 396, 402, 416, 427, 429, 430, 454, 461, 467, 478, 622, 623, 624, 626, 627, 628, 629, 630, 631, 634, 635, 636, 637, 640, 641, 642, 643, 644, 646, 649, 650, 651, 655], "asynchron": [0, 4, 10, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 353, 354, 355, 356, 357, 359, 360, 361, 366, 382, 393, 427, 428, 429, 430, 431, 473, 475, 479, 482, 622, 626, 634, 635, 636], "singl": [0, 2, 3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 38, 42, 43, 45, 48, 50, 51, 53, 56, 58, 60, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 77, 80, 81, 82, 83, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 116, 124, 130, 135, 141, 144, 147, 150, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 228, 235, 236, 256, 264, 269, 279, 284, 286, 291, 296, 303, 304, 317, 318, 319, 322, 323, 324, 325, 331, 353, 354, 355, 356, 357, 359, 360, 361, 362, 366, 381, 385, 394, 395, 396, 398, 400, 402, 403, 409, 410, 413, 414, 416, 418, 419, 424, 427, 428, 429, 430, 431, 434, 435, 436, 437, 443, 444, 445, 446, 448, 449, 450, 451, 452, 624, 626, 628, 629, 630, 634, 635, 636, 637, 638, 639, 640, 641, 642, 646, 648, 649, 650, 651, 652, 653, 655], "node": [0, 2, 3, 21, 23, 24, 26, 28, 29, 42, 43, 51, 53, 64, 66, 73, 77, 87, 105, 107, 108, 159, 198, 201, 284, 353, 354, 356, 357, 359, 360, 364, 365, 428, 431, 626, 642, 655], "helper": [0, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 634, 635, 637, 649, 651], "compos": [0, 2, 4, 38, 45, 50, 58, 65, 68, 69, 72, 75, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 123, 124, 125, 126, 135, 136, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 240, 241, 253, 268, 284, 285, 286, 293, 296, 355, 361, 366, 377, 378, 396, 405, 416, 427, 429, 430, 454, 545, 626, 634, 635, 636, 637, 638, 642, 646, 648, 650, 652, 653, 655, 656], "episod": [0, 2, 4, 53, 97, 98, 99, 100, 101, 102, 103, 104, 105, 122, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 226, 231, 269, 272, 278, 300, 434, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 477, 626, 635, 639, 644, 649, 650, 653], "format": [0, 1, 4, 38, 45, 47, 50, 56, 57, 58, 59, 62, 63, 68, 69, 75, 78, 79, 80, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 112, 113, 120, 127, 135, 141, 144, 147, 151, 159, 171, 172, 173, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 235, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430, 454, 626, 628, 634, 635, 638, 639, 641, 643, 646, 655, 656], "tensorspec": [0, 4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 88, 89, 90, 91, 92, 93, 94, 95, 109, 141, 144, 147, 151, 159, 165, 171, 172, 175, 176, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 227, 228, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 245, 247, 248, 250, 252, 254, 255, 256, 257, 258, 260, 262, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 296, 298, 316, 341, 345, 370, 374, 375, 376, 379, 380, 381, 382, 383, 384, 386, 394, 396, 398, 401, 402, 414, 416, 418, 419, 429, 432, 626, 651], "tree": [0, 1, 53, 64, 66, 73, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 235, 354, 356, 357, 359, 360, 428, 431, 626, 649, 653], "forest": [0, 53, 87, 626], "larg": [0, 4, 5, 41, 64, 66, 73, 87, 107, 108, 121, 122, 129, 130, 198, 243, 246, 289, 321, 353, 354, 356, 357, 359, 360, 361, 393, 395, 410, 413, 415, 427, 428, 431, 626, 635, 636, 647, 649, 650, 653], "languag": [0, 35, 74, 200, 626, 628, 647], "human": [0, 35, 101, 193, 626, 651], "feedback": [0, 193, 477, 626, 628, 631, 644, 655], "rlhf": [0, 193, 255, 427, 626, 628, 629], "spec": [0, 1, 3, 16, 17, 19, 28, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 108, 109, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 156, 157, 158, 159, 165, 166, 167, 169, 170, 171, 172, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 223, 226, 227, 228, 229, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 250, 252, 254, 255, 256, 257, 258, 260, 262, 264, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 296, 298, 313, 316, 319, 324, 341, 343, 345, 354, 356, 357, 359, 360, 370, 374, 375, 376, 379, 380, 381, 382, 383, 385, 386, 393, 394, 396, 397, 398, 400, 401, 402, 409, 413, 414, 415, 416, 418, 419, 429, 432, 626, 628, 629, 630, 634, 635, 636, 637, 638, 639, 640, 644, 646, 648, 649, 650, 655], "lock": [0, 42, 43, 51, 64, 66, 73, 77, 87, 107, 108, 141, 144, 147, 151, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 232, 241, 279, 293, 294, 354, 356, 357, 359, 360, 428, 431, 626, 628, 630, 651], "method": [0, 1, 3, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 121, 122, 124, 129, 130, 131, 132, 133, 135, 137, 141, 144, 147, 150, 151, 152, 153, 158, 159, 171, 172, 175, 176, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 247, 248, 249, 250, 251, 254, 255, 257, 258, 260, 263, 264, 265, 266, 267, 268, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 311, 316, 319, 324, 330, 331, 332, 353, 354, 355, 356, 357, 359, 360, 361, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 390, 393, 394, 396, 397, 398, 400, 401, 402, 403, 404, 407, 409, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 438, 452, 453, 466, 478, 621, 626, 628, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 649, 651, 653, 656], "partial": [0, 3, 16, 17, 19, 22, 30, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 234, 235, 278, 279, 280, 379, 473, 626, 637], "step": [0, 1, 2, 5, 9, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 45, 53, 58, 74, 87, 97, 107, 108, 109, 112, 113, 120, 122, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 157, 158, 159, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 226, 227, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 250, 251, 254, 255, 257, 258, 260, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 289, 290, 292, 293, 296, 298, 299, 300, 314, 316, 317, 319, 322, 324, 326, 327, 340, 341, 354, 356, 357, 359, 360, 378, 379, 383, 393, 404, 413, 428, 429, 431, 433, 434, 435, 436, 437, 440, 441, 442, 453, 456, 463, 467, 473, 475, 478, 626, 628, 631, 635, 637, 638, 640, 641, 643, 644, 647, 648, 651, 652, 655], "reset": [0, 1, 2, 3, 9, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 38, 45, 50, 53, 58, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 130, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 230, 231, 232, 235, 247, 250, 254, 259, 264, 272, 277, 278, 279, 280, 281, 284, 285, 286, 289, 292, 293, 296, 297, 302, 317, 319, 324, 332, 333, 334, 341, 355, 361, 366, 368, 378, 411, 427, 429, 430, 453, 626, 628, 630, 634, 635, 636, 637, 639, 642, 646, 648, 649, 650, 655], "vector": [0, 1, 9, 36, 62, 142, 143, 152, 157, 158, 162, 173, 174, 177, 185, 186, 245, 292, 294, 306, 308, 317, 318, 322, 323, 325, 434, 437, 447, 448, 449, 450, 451, 626, 629, 630, 634, 635, 637, 648, 649, 650, 651, 652, 656], "async": [0, 2, 16, 17, 19, 22, 23, 24, 26, 28, 30, 70, 141, 175, 181, 292, 353, 362, 365, 366, 475, 626], "custom": [0, 1, 3, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 38, 45, 50, 58, 68, 69, 75, 80, 87, 101, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 289, 296, 330, 331, 353, 354, 355, 356, 357, 359, 360, 361, 366, 386, 392, 403, 413, 420, 427, 428, 429, 430, 431, 624, 626, 629, 631, 634, 635, 636, 637, 640, 641, 643, 646, 649, 650], "nativ": [0, 1, 8, 10, 101, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 235, 353, 366, 454, 626, 628, 637, 653], "auto": [0, 32, 117, 137, 147, 152, 230, 231, 286, 292, 341, 394, 396, 402, 412, 414, 416, 418, 419, 626, 628, 630, 649, 650], "dynam": [0, 3, 8, 16, 17, 19, 100, 103, 105, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 220, 296, 401, 409, 626, 628, 636, 639, 651], "mask": [0, 1, 5, 34, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 108, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 214, 215, 229, 265, 296, 301, 302, 313, 316, 321, 328, 329, 343, 355, 358, 361, 366, 374, 375, 376, 380, 381, 402, 416, 427, 430, 466, 469, 626, 635, 637, 638, 647, 656], "action": [0, 2, 3, 9, 10, 16, 17, 19, 22, 28, 30, 31, 47, 53, 62, 70, 74, 78, 80, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 121, 122, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 228, 229, 232, 238, 239, 240, 243, 244, 245, 246, 247, 248, 250, 251, 253, 255, 257, 258, 259, 260, 262, 266, 267, 269, 273, 277, 279, 283, 285, 286, 287, 288, 292, 296, 298, 300, 302, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 319, 324, 325, 326, 327, 328, 329, 330, 339, 341, 342, 343, 345, 348, 349, 351, 355, 361, 366, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 383, 386, 387, 393, 394, 395, 396, 397, 398, 400, 401, 402, 409, 410, 411, 413, 414, 415, 416, 418, 419, 427, 429, 430, 432, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 466, 477, 478, 529, 535, 620, 624, 626, 628, 629, 631, 634, 635, 636, 638, 639, 640, 641, 646, 647, 648, 649, 650, 652, 655, 656], "record": [0, 3, 12, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 228, 255, 296, 355, 361, 366, 413, 427, 429, 430, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 467, 478, 520, 522, 523, 620, 626, 635, 636, 640, 644, 649], "domain": [0, 3, 9, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 206, 220, 245, 253, 279, 287, 370, 375, 376, 379, 380, 381, 382, 383, 384, 385, 390, 626, 636, 641, 646, 649, 650, 651, 655, 656], "interfac": [0, 1, 4, 33, 141, 154, 168, 325, 333, 353, 355, 358, 361, 366, 484, 626, 629, 630, 634, 636, 638, 643, 646, 647, 651, 653], "structur": [0, 1, 2, 4, 8, 53, 60, 64, 65, 66, 72, 73, 74, 81, 82, 85, 86, 87, 107, 108, 116, 135, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 199, 200, 201, 202, 207, 214, 215, 227, 243, 246, 279, 330, 341, 354, 355, 356, 357, 359, 360, 361, 366, 393, 402, 413, 416, 428, 431, 434, 435, 436, 437, 438, 484, 626, 630, 634, 636, 637, 639, 642, 649, 650, 651, 652], "actor": [0, 4, 5, 16, 17, 19, 22, 28, 30, 31, 32, 70, 176, 193, 194, 197, 207, 209, 213, 214, 255, 257, 300, 305, 306, 308, 313, 314, 316, 327, 339, 341, 343, 353, 358, 363, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 427, 430, 432, 478, 532, 626, 628, 630, 631, 635, 637, 639, 641, 644, 649, 652, 655], "explor": [0, 1, 2, 295, 298, 301, 316, 334, 341, 370, 375, 376, 379, 380, 381, 382, 383, 393, 411, 413, 467, 478, 615, 616, 620, 626, 628, 636, 637, 638, 639, 641, 642, 644, 649, 650, 651], "valu": [0, 1, 2, 3, 4, 9, 16, 17, 19, 22, 23, 24, 26, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 121, 122, 124, 129, 130, 135, 141, 144, 147, 151, 152, 159, 162, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 225, 226, 227, 228, 231, 233, 235, 236, 238, 241, 243, 244, 245, 246, 247, 253, 259, 260, 264, 265, 268, 269, 270, 272, 274, 276, 279, 280, 284, 285, 286, 291, 292, 293, 294, 296, 297, 298, 299, 302, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 319, 320, 321, 324, 325, 327, 328, 329, 330, 331, 333, 334, 337, 341, 342, 343, 348, 349, 350, 351, 354, 355, 356, 357, 359, 360, 361, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454, 462, 463, 465, 466, 467, 468, 469, 473, 477, 530, 620, 626, 631, 635, 638, 641, 642, 643, 648, 649, 650, 651, 653, 655, 656], "gener": [0, 1, 3, 4, 8, 9, 10, 16, 17, 19, 22, 23, 24, 26, 28, 32, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 65, 68, 72, 74, 76, 77, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 126, 128, 141, 144, 147, 148, 151, 159, 163, 164, 165, 168, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 227, 229, 232, 239, 241, 243, 244, 248, 253, 255, 258, 260, 266, 267, 272, 273, 277, 279, 283, 285, 287, 292, 294, 296, 301, 302, 311, 319, 324, 328, 329, 337, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 366, 370, 379, 383, 387, 388, 407, 414, 422, 427, 428, 429, 430, 431, 434, 439, 447, 457, 466, 473, 491, 626, 628, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "hook": [0, 3, 15, 18, 20, 21, 25, 27, 32, 33, 38, 45, 47, 50, 58, 65, 68, 69, 70, 71, 72, 75, 78, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 138, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 298, 299, 302, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 332, 335, 336, 339, 341, 343, 344, 345, 347, 352, 354, 355, 356, 357, 359, 360, 361, 366, 374, 376, 378, 381, 386, 389, 427, 428, 429, 430, 431, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 626], "planner": [0, 300, 327, 626], "torchvmap": [0, 87, 107, 108, 198, 317, 318, 322, 323, 332, 352, 354, 356, 357, 359, 360, 382, 385, 394, 396, 402, 409, 411, 414, 416, 418, 419, 427, 428, 430, 431, 434, 435, 436, 437, 626, 629], "random": [0, 1, 2, 3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 69, 74, 76, 77, 85, 88, 89, 90, 91, 92, 103, 105, 123, 135, 141, 144, 147, 151, 159, 165, 171, 172, 175, 176, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 207, 228, 245, 259, 260, 279, 286, 302, 316, 317, 319, 322, 353, 355, 361, 366, 379, 382, 383, 390, 394, 411, 414, 421, 427, 430, 467, 478, 479, 481, 482, 483, 490, 528, 565, 614, 626, 629, 634, 635, 636, 638, 639, 640, 642, 651, 652, 653, 655, 656], "sac": [0, 2, 402, 414, 416, 478, 626, 631], "redq": [0, 414, 626], "crossq": [0, 396, 626], "iql": [0, 401, 409, 626, 634, 649, 650], "cql": [0, 394, 400, 626], "gail": [0, 407, 626], "dt": [0, 172, 341, 626, 651], "td3": [0, 2, 418, 419, 626, 631], "bc": [0, 6, 418, 626], "a2c": [0, 393, 626, 631], "dreamer": [0, 221, 222, 314, 404, 405, 406, 626, 629], "checkpoint": [0, 72, 111, 113, 115, 119, 131, 132, 134, 138, 475, 626, 653], "algorithm": [0, 1, 2, 3, 4, 9, 10, 14, 23, 24, 26, 165, 228, 276, 393, 413, 414, 416, 475, 477, 478, 626, 630, 634, 635, 636, 637, 638, 640, 641, 642, 643, 649, 650, 652, 653, 655], "experiment": [0, 26, 32, 34, 62, 97, 379, 383, 477, 478, 626], "builder": [0, 199, 203, 626, 635, 656], "logger": [0, 2, 4, 12, 452, 454, 456, 457, 458, 459, 460, 461, 466, 473, 478, 520, 521, 522, 523, 533, 620, 624, 626, 635, 649], "_util": [0, 4, 171, 626, 638, 644], "implement_for": [0, 4, 626], "set_auto_unwrap_transformed_env": [0, 13, 286, 626], "auto_unwrap_transformed_env": [0, 462, 626], "configur": [0, 1, 9, 14, 16, 17, 19, 20, 22, 23, 24, 26, 28, 29, 30, 33, 74, 144, 193, 255, 305, 310, 339, 353, 355, 362, 395, 411, 413, 427, 430, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 626, 629, 634, 635, 636, 641, 647, 649, 650, 651], "system": [0, 5, 6, 108, 113, 192, 193, 194, 197, 199, 210, 211, 212, 214, 215, 427, 430, 484, 626, 628, 636, 647, 649, 650, 651], "simpl": [0, 3, 4, 10, 20, 21, 38, 45, 50, 58, 62, 68, 69, 75, 80, 85, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 306, 353, 355, 361, 366, 378, 383, 398, 400, 411, 413, 415, 427, 429, 430, 434, 466, 626, 628, 630, 631, 634, 635, 636, 639, 640, 641, 647, 649, 650, 653, 656], "categori": [0, 3, 42, 100, 626, 629, 631], "group": [0, 4, 32, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 68, 76, 77, 85, 87, 88, 89, 90, 91, 92, 97, 107, 108, 109, 141, 144, 147, 151, 159, 162, 163, 164, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 188, 192, 193, 194, 197, 198, 200, 201, 202, 207, 256, 276, 353, 354, 356, 357, 359, 360, 361, 364, 365, 424, 428, 431, 626, 628, 629, 631, 635, 640, 642, 650, 653], "complex": [0, 1, 3, 4, 15, 18, 20, 21, 25, 27, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430, 626, 628, 634, 635, 639, 640], "parallel": [0, 1, 4, 9, 32, 33, 141, 144, 147, 150, 151, 152, 159, 171, 172, 173, 174, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 286, 292, 319, 324, 353, 362, 363, 393, 500, 621, 622, 623, 624, 626, 628, 635, 636, 649, 650, 655], "avail": [0, 1, 3, 4, 5, 7, 28, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 122, 124, 128, 129, 130, 142, 143, 145, 146, 155, 157, 158, 163, 164, 169, 170, 171, 173, 174, 177, 183, 184, 185, 186, 204, 213, 214, 228, 231, 234, 253, 255, 313, 343, 362, 379, 383, 411, 427, 430, 454, 622, 623, 626, 628, 631, 634, 635, 636, 637, 638, 639, 640, 647, 649, 650, 651, 653, 656], "complet": [0, 3, 8, 10, 25, 30, 31, 122, 128, 141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 199, 200, 201, 202, 206, 235, 277, 353, 429, 477, 626, 627, 628, 630, 631, 634, 636, 639, 646, 647, 648], "experi": [0, 4, 65, 72, 81, 82, 97, 99, 100, 101, 102, 103, 104, 105, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 456, 457, 458, 459, 460, 461, 478, 626, 627, 635, 636, 638, 642, 643, 649, 650, 653], "store": [0, 1, 4, 9, 14, 16, 17, 18, 19, 22, 23, 24, 25, 26, 28, 30, 31, 38, 42, 45, 48, 49, 50, 53, 58, 60, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 80, 81, 82, 83, 86, 87, 100, 101, 103, 104, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 121, 122, 124, 129, 135, 137, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 253, 281, 292, 293, 294, 296, 298, 300, 301, 327, 341, 353, 354, 355, 356, 357, 359, 360, 361, 366, 393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 461, 478, 626, 628, 631, 634, 636, 637, 640, 642, 644, 649, 650, 652, 656], "implement": [0, 1, 3, 4, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 70, 75, 76, 77, 80, 84, 85, 88, 89, 90, 91, 92, 109, 119, 121, 131, 132, 141, 144, 147, 151, 159, 165, 166, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 239, 243, 244, 248, 251, 255, 258, 266, 267, 273, 277, 283, 285, 286, 287, 293, 294, 296, 297, 301, 303, 317, 318, 319, 320, 322, 323, 324, 348, 349, 350, 353, 355, 361, 363, 366, 393, 394, 396, 399, 400, 401, 407, 409, 411, 412, 413, 415, 416, 418, 427, 429, 430, 452, 463, 477, 478, 615, 626, 628, 629, 631, 634, 635, 636, 637, 638, 649, 650, 651, 655], "detail": [0, 3, 4, 6, 7, 8, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 72, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 107, 108, 109, 124, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 282, 286, 296, 301, 313, 317, 322, 332, 340, 353, 354, 355, 356, 357, 359, 360, 361, 366, 376, 393, 395, 403, 410, 411, 413, 427, 428, 429, 430, 431, 626, 627, 628, 631, 635, 638, 642, 648, 653], "class": [0, 3, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 147, 148, 149, 150, 151, 152, 153, 158, 159, 162, 165, 168, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 622, 623, 624, 626, 629, 630, 634, 635, 636, 637, 639, 640, 641, 642, 643, 646, 649, 650, 653, 656], "creat": [0, 1, 3, 4, 5, 6, 7, 8, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 118, 124, 135, 141, 144, 147, 148, 151, 155, 159, 171, 172, 173, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 232, 235, 240, 253, 257, 264, 284, 285, 286, 289, 292, 293, 294, 296, 303, 304, 306, 307, 308, 309, 310, 311, 315, 319, 324, 325, 326, 330, 331, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 374, 382, 383, 390, 396, 398, 403, 413, 414, 416, 427, 428, 429, 430, 431, 432, 454, 469, 478, 533, 614, 615, 616, 620, 622, 623, 626, 628, 629, 634, 635, 636, 637, 638, 640, 643, 646, 647, 649, 650, 651, 652, 653, 655, 656], "best": [0, 3, 6, 10, 155, 319, 324, 353, 413, 626, 649, 650, 653, 655], "practic": [0, 1, 3, 4, 5, 6, 9, 30, 60, 97, 285, 320, 349, 350, 392, 626, 627, 634, 635, 636, 637, 638, 641, 646, 649, 650, 652, 656], "futur": [0, 3, 5, 32, 34, 38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 112, 113, 120, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 264, 284, 286, 291, 296, 325, 353, 354, 355, 356, 357, 359, 360, 361, 366, 393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 477, 478, 626, 627, 628, 631], "extens": [0, 1, 3, 65, 72, 81, 82, 130, 301, 626, 628, 631, 653], "thing": [0, 1, 4, 8, 9, 87, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 285, 330, 331, 354, 356, 357, 359, 360, 402, 416, 428, 431, 627, 636, 637, 638, 639, 640, 641, 642, 643, 649, 650, 653, 656], "consid": [0, 1, 3, 4, 9, 15, 16, 17, 18, 19, 23, 25, 26, 27, 28, 30, 32, 38, 42, 43, 45, 50, 51, 58, 65, 68, 69, 72, 75, 77, 80, 81, 82, 109, 115, 117, 129, 130, 137, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 245, 293, 296, 311, 328, 330, 331, 348, 355, 361, 366, 394, 396, 409, 414, 416, 418, 419, 427, 429, 430, 434, 436, 437, 627, 628, 630, 634, 639, 640, 641, 651, 653], "when": [0, 1, 2, 3, 4, 6, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 128, 129, 130, 131, 133, 137, 141, 142, 143, 144, 147, 148, 150, 151, 152, 158, 159, 162, 163, 164, 166, 168, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 224, 226, 229, 231, 234, 235, 239, 240, 243, 245, 246, 255, 256, 259, 260, 264, 265, 272, 279, 281, 284, 285, 286, 289, 291, 292, 293, 294, 296, 297, 299, 300, 311, 313, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 340, 343, 349, 353, 354, 355, 356, 357, 359, 360, 361, 366, 378, 379, 382, 383, 385, 389, 394, 395, 396, 398, 402, 403, 409, 410, 411, 413, 414, 416, 418, 419, 420, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 452, 453, 454, 456, 459, 461, 469, 475, 624, 627, 628, 629, 630, 631, 634, 635, 636, 637, 638, 640, 642, 643, 649, 650, 651, 652, 653, 655, 656], "debug": [0, 7, 9, 53, 74, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 211, 281, 355, 361, 366, 627, 656], "work": [0, 1, 3, 4, 5, 9, 25, 27, 32, 33, 38, 42, 43, 45, 50, 51, 58, 68, 69, 72, 75, 77, 80, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 115, 121, 122, 127, 129, 130, 133, 140, 141, 144, 147, 150, 151, 152, 155, 159, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 226, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 257, 263, 264, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 290, 292, 293, 294, 296, 297, 303, 304, 325, 353, 355, 361, 366, 376, 381, 386, 395, 410, 413, 427, 429, 430, 473, 627, 628, 629, 631, 634, 635, 636, 637, 639, 642, 647, 648, 649, 650, 651, 652, 653, 655, 656], "habitat": [0, 4, 153, 507, 627, 652], "lab": [0, 4, 145, 146, 153, 156, 627], "mujoco": [0, 7, 9, 177, 627, 634, 636, 637], "error": [0, 1, 4, 8, 11, 36, 37, 38, 41, 45, 46, 50, 54, 55, 56, 57, 58, 62, 63, 64, 66, 68, 69, 73, 75, 76, 80, 87, 107, 108, 109, 115, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 183, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 265, 284, 296, 297, 353, 354, 355, 356, 357, 359, 360, 361, 366, 402, 411, 416, 427, 428, 429, 430, 431, 627, 628, 630, 631, 634, 636, 649, 650, 656], "solut": [0, 3, 4, 7, 8, 10, 28, 129, 627, 629, 631, 638, 655], "resourc": [0, 1, 14, 23, 24, 26, 28, 153, 193, 194, 197, 206, 207, 213, 214, 353, 358, 366, 627, 628, 634, 636, 638, 649, 650], "issu": [0, 3, 4, 5, 6, 9, 70, 97, 101, 113, 115, 117, 121, 122, 129, 137, 141, 144, 147, 150, 151, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 207, 213, 214, 226, 235, 265, 280, 353, 370, 375, 376, 379, 380, 381, 382, 383, 395, 413, 477, 627, 628, 631, 647, 655], "customis": [0, 627, 635, 643], "video": [0, 5, 10, 107, 454, 456, 459, 461, 467, 624, 626, 627, 644, 649, 650], "render": [0, 4, 9, 158, 185, 452, 454, 467, 627, 634, 635, 636, 638, 639, 643], "index": [0, 4, 8, 9, 11, 19, 30, 31, 36, 37, 39, 40, 41, 42, 43, 46, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 114, 115, 116, 117, 121, 122, 124, 125, 127, 129, 133, 135, 136, 137, 139, 140, 141, 144, 147, 151, 159, 163, 164, 169, 170, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 198, 200, 201, 202, 214, 226, 230, 235, 239, 245, 286, 321, 328, 329, 353, 354, 356, 357, 359, 360, 378, 428, 431, 626, 639, 646, 648, 649, 650, 653, 655], "search": [0, 3, 42, 43, 51, 77, 87, 168, 227, 355, 361, 366, 635], "page": [0, 8, 35, 206, 461, 641, 646], "somewhat": [1, 3, 207, 630, 640, 656], "equival": [1, 2, 4, 28, 31, 32, 36, 37, 38, 41, 42, 45, 46, 50, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 68, 69, 72, 73, 75, 80, 81, 82, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 141, 142, 143, 144, 147, 150, 151, 152, 153, 156, 157, 158, 159, 166, 167, 169, 170, 171, 172, 175, 177, 180, 181, 182, 183, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 244, 247, 279, 281, 286, 296, 313, 322, 325, 343, 354, 355, 356, 357, 359, 360, 361, 366, 375, 376, 380, 381, 413, 427, 428, 429, 430, 431, 469, 642, 655, 656], "dataload": [1, 30, 106, 128, 130, 192, 193, 194, 197, 200, 207, 213, 635, 642, 653], "except": [1, 3, 4, 16, 17, 19, 22, 23, 24, 26, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 103, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 249, 269, 278, 279, 280, 284, 286, 296, 298, 316, 317, 319, 322, 324, 337, 341, 354, 355, 356, 357, 359, 360, 361, 366, 393, 396, 411, 413, 416, 427, 428, 429, 430, 431, 454, 628, 629, 634, 635, 639, 647, 649, 653, 655, 656], "1": [1, 2, 3, 4, 5, 9, 11, 16, 17, 19, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 115, 116, 117, 121, 122, 124, 129, 130, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 157, 158, 159, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 251, 253, 255, 256, 258, 260, 262, 264, 265, 266, 267, 269, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 289, 291, 293, 294, 296, 297, 298, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 334, 337, 339, 340, 341, 342, 344, 345, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 393, 394, 395, 396, 397, 398, 400, 401, 402, 405, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 442, 443, 444, 448, 449, 451, 452, 454, 463, 467, 469, 470, 478, 479, 481, 482, 483, 485, 487, 500, 506, 524, 525, 528, 530, 532, 533, 537, 542, 563, 566, 576, 585, 600, 605, 610, 620, 624, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 640, 641, 642, 644, 648, 649, 650, 651, 652, 653, 654, 655, 656], "thei": [1, 2, 3, 4, 5, 9, 10, 16, 17, 19, 21, 22, 23, 24, 26, 28, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 122, 124, 141, 144, 147, 150, 151, 152, 159, 162, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 231, 234, 249, 255, 264, 273, 281, 285, 286, 291, 296, 324, 354, 355, 356, 357, 359, 360, 361, 366, 393, 394, 395, 396, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 434, 469, 473, 628, 629, 630, 631, 634, 635, 636, 637, 638, 641, 648, 649, 650, 651, 652, 653, 655, 656], "over": [1, 2, 3, 4, 5, 9, 16, 17, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 121, 122, 124, 128, 129, 130, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 228, 245, 260, 272, 280, 294, 296, 328, 337, 340, 349, 352, 355, 361, 366, 385, 403, 405, 411, 427, 429, 430, 434, 440, 452, 469, 613, 628, 629, 631, 634, 635, 636, 638, 639, 640, 641, 642, 649, 650, 651, 656], "non": [1, 3, 4, 9, 16, 17, 19, 22, 23, 24, 26, 28, 31, 33, 36, 38, 39, 40, 42, 43, 45, 50, 51, 52, 58, 60, 61, 64, 65, 66, 68, 69, 73, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 103, 107, 108, 109, 116, 118, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 232, 233, 235, 239, 250, 264, 276, 279, 285, 286, 287, 288, 289, 291, 294, 296, 302, 317, 319, 322, 324, 330, 354, 355, 356, 357, 359, 360, 361, 366, 382, 383, 393, 394, 396, 397, 398, 400, 401, 402, 403, 404, 405, 409, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 628, 629, 634, 637, 638, 649, 650, 651, 653, 656], "static": [1, 42, 43, 45, 51, 68, 74, 77, 80, 86, 122, 129, 130, 153, 172, 196, 202, 293, 297, 355, 361, 366, 409, 427, 430, 639, 651, 653], "like": [1, 2, 3, 4, 5, 8, 12, 25, 28, 38, 42, 43, 45, 50, 51, 53, 58, 60, 65, 68, 69, 72, 75, 77, 80, 81, 82, 86, 87, 107, 108, 109, 110, 118, 124, 130, 141, 144, 147, 148, 151, 153, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 247, 279, 282, 296, 317, 322, 331, 354, 355, 356, 357, 358, 359, 360, 361, 366, 377, 383, 393, 395, 410, 413, 414, 415, 427, 428, 429, 430, 431, 629, 630, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653, 655, 656], "being": [1, 3, 4, 8, 9, 16, 17, 19, 21, 22, 23, 24, 26, 27, 28, 38, 45, 50, 58, 68, 69, 75, 76, 80, 87, 106, 107, 108, 109, 116, 118, 121, 122, 135, 138, 141, 144, 147, 150, 151, 152, 153, 158, 159, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 224, 234, 243, 245, 246, 253, 259, 267, 279, 284, 285, 286, 296, 316, 319, 324, 341, 354, 355, 356, 357, 359, 360, 361, 366, 395, 396, 410, 411, 413, 416, 427, 428, 429, 430, 431, 454, 469, 476, 622, 623, 624, 628, 629, 630, 634, 635, 636, 637, 642, 649, 650, 651, 653], "accept": [1, 3, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 38, 45, 50, 58, 64, 66, 68, 69, 72, 73, 75, 80, 87, 88, 100, 101, 104, 105, 106, 107, 108, 109, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 230, 235, 239, 250, 253, 264, 272, 276, 279, 284, 285, 286, 287, 288, 289, 291, 296, 325, 352, 354, 355, 356, 357, 359, 360, 361, 366, 382, 383, 384, 396, 416, 427, 428, 429, 430, 431, 454, 628, 631, 636, 639, 643, 653, 655, 656], "two": [1, 2, 3, 4, 5, 9, 11, 38, 45, 50, 53, 54, 55, 56, 57, 58, 65, 68, 69, 72, 74, 75, 80, 81, 82, 87, 103, 107, 108, 109, 124, 128, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 240, 260, 264, 284, 291, 296, 309, 317, 319, 322, 324, 330, 331, 346, 349, 354, 355, 356, 357, 359, 360, 361, 366, 383, 410, 413, 418, 423, 427, 428, 429, 430, 431, 467, 473, 628, 630, 634, 635, 636, 637, 638, 639, 640, 642, 643, 647, 648, 649, 650, 651, 653, 655, 656], "main": [1, 2, 3, 4, 6, 16, 17, 21, 26, 29, 34, 70, 105, 148, 192, 235, 240, 353, 383, 473, 628, 629, 630, 631, 634, 635, 646, 647, 648, 655, 656], "argument": [1, 3, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 130, 133, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 163, 164, 166, 167, 169, 170, 171, 172, 173, 175, 177, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 228, 229, 231, 232, 234, 235, 236, 238, 239, 240, 241, 244, 247, 248, 249, 251, 253, 254, 255, 257, 258, 263, 264, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 302, 303, 304, 316, 317, 319, 322, 324, 325, 328, 329, 330, 331, 333, 341, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 370, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 386, 387, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 422, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 442, 452, 453, 454, 459, 461, 465, 473, 477, 478, 613, 620, 621, 624, 634, 635, 636, 637, 638, 639, 640, 642, 649, 650, 651, 653, 655, 656], "list": [1, 3, 4, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 116, 118, 124, 127, 128, 129, 130, 131, 133, 141, 144, 145, 146, 147, 150, 151, 152, 153, 159, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 226, 233, 234, 238, 239, 243, 244, 246, 255, 256, 260, 262, 264, 272, 274, 282, 283, 284, 285, 286, 288, 289, 291, 293, 296, 302, 303, 304, 306, 312, 315, 319, 324, 325, 328, 329, 335, 343, 353, 354, 355, 356, 357, 359, 360, 361, 363, 366, 376, 378, 380, 381, 383, 385, 386, 387, 394, 396, 409, 411, 414, 416, 418, 419, 421, 426, 427, 428, 429, 430, 431, 434, 437, 452, 453, 467, 469, 488, 496, 497, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 536, 538, 539, 540, 541, 542, 543, 544, 545, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 566, 567, 568, 569, 570, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 622, 623, 628, 630, 634, 636, 639, 640, 641, 642, 646, 647, 648, 649, 651, 652, 653, 655, 656], "constructor": [1, 3, 4, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 70, 72, 81, 82, 86, 87, 103, 107, 108, 121, 135, 141, 144, 147, 151, 159, 166, 171, 172, 175, 180, 181, 182, 185, 192, 193, 194, 197, 198, 199, 200, 201, 202, 214, 215, 231, 235, 284, 303, 304, 325, 353, 354, 355, 356, 357, 359, 360, 361, 366, 369, 379, 383, 393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 427, 428, 430, 431, 432, 434, 435, 436, 437, 438, 477, 621, 624, 628, 629, 634, 635, 636, 639, 642, 649, 650, 653, 655], "iter": [1, 3, 4, 17, 19, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 118, 124, 128, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 248, 260, 273, 296, 297, 299, 301, 302, 303, 304, 325, 330, 331, 347, 353, 354, 355, 356, 357, 359, 360, 361, 366, 370, 375, 379, 380, 382, 384, 385, 387, 411, 426, 427, 428, 429, 430, 431, 467, 469, 471, 473, 628, 630, 631, 634, 636, 637, 642, 644, 649, 650, 651], "execut": [1, 3, 4, 7, 8, 9, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 65, 67, 69, 70, 71, 72, 75, 76, 77, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 115, 116, 118, 124, 129, 130, 141, 142, 143, 144, 147, 148, 151, 152, 153, 155, 157, 158, 159, 165, 166, 171, 172, 175, 177, 180, 181, 182, 183, 192, 193, 194, 197, 198, 200, 201, 202, 210, 212, 229, 240, 241, 258, 281, 286, 316, 317, 319, 322, 324, 332, 353, 354, 356, 357, 358, 359, 360, 363, 369, 378, 384, 385, 411, 418, 427, 428, 429, 430, 431, 614, 624, 628, 629, 630, 631, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 649, 650, 653, 654, 655, 656], "queri": [1, 3, 4, 16, 38, 45, 50, 53, 58, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 116, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 264, 289, 293, 296, 354, 355, 356, 357, 359, 360, 361, 366, 385, 427, 428, 429, 430, 431, 628, 630, 634, 641, 646, 651, 655], "defin": [1, 2, 3, 4, 16, 17, 19, 21, 22, 30, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 265, 278, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 330, 332, 335, 336, 339, 340, 341, 344, 345, 347, 352, 354, 355, 356, 357, 359, 360, 361, 366, 374, 376, 378, 381, 386, 389, 390, 398, 400, 411, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 453, 472, 533, 621, 628, 629, 634, 635, 637, 641, 644, 651, 653, 656], "number": [1, 3, 4, 9, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 121, 122, 124, 127, 129, 130, 137, 141, 142, 143, 144, 147, 150, 151, 152, 157, 158, 159, 165, 166, 167, 168, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 245, 247, 248, 249, 251, 254, 255, 257, 259, 260, 263, 265, 266, 267, 269, 271, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 289, 290, 292, 293, 296, 298, 299, 300, 303, 304, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 330, 331, 335, 336, 341, 342, 344, 345, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 370, 374, 378, 379, 382, 383, 387, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 459, 461, 463, 465, 467, 473, 475, 476, 478, 613, 614, 622, 623, 624, 628, 629, 630, 631, 634, 635, 636, 637, 639, 640, 642, 644, 649, 650, 651, 652, 653, 656], "befor": [1, 3, 4, 5, 7, 8, 11, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 41, 45, 46, 50, 53, 54, 55, 58, 68, 69, 75, 80, 86, 87, 102, 109, 128, 130, 135, 141, 144, 147, 151, 152, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 296, 301, 317, 319, 324, 325, 333, 334, 355, 361, 366, 393, 394, 395, 396, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 418, 419, 427, 429, 430, 432, 435, 436, 437, 469, 628, 634, 636, 637, 638, 642, 643, 649, 650, 651, 653, 656], "deliv": [1, 3, 4, 19, 103, 207, 634, 635, 639, 642, 655], "stack": [1, 3, 4, 8, 9, 16, 17, 19, 23, 26, 28, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 70, 72, 73, 77, 80, 85, 87, 88, 89, 90, 91, 92, 95, 107, 108, 116, 121, 124, 141, 144, 147, 150, 151, 152, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 207, 214, 215, 218, 219, 235, 240, 258, 293, 317, 319, 322, 323, 324, 354, 356, 357, 359, 360, 378, 384, 385, 394, 396, 409, 414, 416, 418, 419, 428, 431, 434, 453, 463, 486, 581, 626, 628, 635, 638, 639, 646, 647, 648, 649, 651, 655], "user": [1, 3, 4, 6, 9, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 34, 38, 45, 50, 53, 58, 68, 69, 75, 80, 87, 97, 99, 103, 105, 108, 109, 122, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 183, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 236, 253, 278, 284, 286, 296, 310, 355, 361, 366, 396, 413, 416, 418, 427, 429, 430, 454, 621, 628, 630, 631, 634, 635, 639, 641, 642, 647, 651, 655, 656], "reach": [1, 4, 16, 17, 19, 22, 23, 24, 26, 28, 29, 30, 74, 128, 141, 144, 147, 151, 158, 159, 163, 164, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 200, 201, 202, 258, 277, 298, 316, 341, 634, 636, 644, 646, 649, 650, 655, 656], "done": [1, 3, 4, 5, 8, 9, 14, 16, 17, 19, 22, 23, 24, 26, 29, 30, 31, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 74, 76, 77, 78, 80, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 112, 113, 120, 122, 124, 129, 130, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 228, 229, 231, 232, 235, 243, 244, 246, 247, 248, 253, 257, 258, 259, 260, 262, 266, 267, 269, 271, 273, 276, 277, 279, 280, 283, 284, 285, 286, 287, 293, 296, 300, 317, 319, 324, 327, 349, 358, 378, 393, 394, 395, 396, 397, 398, 400, 401, 402, 409, 410, 413, 414, 415, 416, 418, 419, 427, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 466, 553, 628, 629, 630, 634, 636, 637, 638, 639, 641, 642, 644, 647, 648, 649, 650, 651, 653, 655, 656], "state": [1, 3, 4, 5, 16, 17, 19, 20, 21, 22, 30, 31, 38, 45, 47, 50, 53, 58, 65, 68, 69, 70, 71, 72, 74, 75, 78, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 120, 124, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 157, 158, 159, 165, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 231, 234, 235, 236, 238, 239, 241, 244, 247, 250, 253, 257, 258, 260, 267, 277, 278, 283, 284, 285, 286, 287, 288, 293, 294, 296, 300, 305, 310, 314, 317, 318, 319, 322, 323, 324, 325, 327, 332, 335, 339, 342, 344, 345, 351, 354, 355, 356, 357, 358, 359, 360, 361, 366, 371, 378, 382, 388, 393, 395, 396, 400, 402, 410, 411, 413, 414, 415, 416, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 466, 473, 475, 477, 478, 624, 628, 629, 630, 634, 635, 636, 637, 638, 639, 640, 641, 642, 646, 647, 649, 650, 651, 656], "after": [1, 3, 4, 9, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 33, 38, 45, 47, 50, 58, 64, 66, 68, 69, 73, 74, 75, 80, 87, 97, 107, 108, 109, 117, 124, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 155, 156, 157, 158, 159, 166, 167, 169, 170, 171, 172, 175, 177, 180, 181, 182, 183, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 245, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 296, 298, 299, 316, 317, 319, 324, 333, 354, 355, 356, 357, 359, 360, 361, 366, 375, 380, 396, 405, 416, 418, 427, 428, 429, 430, 431, 434, 628, 635, 636, 637, 638, 639, 640, 642, 644, 646, 649, 650, 651, 652, 653, 656], "predefin": [1, 2, 205, 454, 635, 637, 642, 653, 655], "becaus": [1, 3, 4, 5, 8, 31, 38, 42, 43, 45, 50, 51, 58, 64, 66, 68, 69, 73, 74, 75, 77, 80, 87, 97, 107, 108, 109, 116, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 247, 255, 277, 292, 296, 309, 331, 354, 355, 356, 357, 359, 360, 361, 366, 370, 375, 376, 378, 379, 380, 381, 382, 383, 393, 413, 427, 428, 429, 430, 431, 434, 629, 634, 635, 637, 638, 640, 641, 642, 646, 648, 649, 650, 651, 653, 656], "potenti": [1, 3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 199, 200, 201, 202, 651, 653], "comput": [1, 4, 5, 9, 16, 18, 19, 28, 30, 38, 41, 45, 50, 58, 68, 69, 74, 75, 80, 87, 107, 108, 109, 121, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 257, 260, 274, 286, 290, 294, 296, 298, 299, 302, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 335, 336, 337, 339, 341, 344, 345, 347, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 366, 371, 374, 376, 378, 379, 381, 383, 386, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 466, 478, 614, 628, 630, 634, 636, 637, 638, 639, 640, 646, 647, 648, 649, 650, 652, 653], "heavi": [1, 9, 97, 653], "crucial": [1, 3, 4, 87, 107, 108, 198, 298, 316, 341, 354, 356, 357, 359, 360, 401, 409, 411, 427, 428, 431, 478, 628, 634, 635, 636, 637, 639, 641, 643, 649, 650, 651, 655, 656], "hyperparamet": [1, 127, 296, 393, 394, 396, 397, 398, 400, 401, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 427, 430, 432, 626, 634, 643, 651, 653], "appropri": [1, 2, 4, 5, 8, 108, 114, 125, 135, 136, 139, 140, 159, 171, 180, 201, 202, 247, 621, 624, 628, 634, 643, 653], "paramet": [1, 2, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 131, 133, 135, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 521, 531, 533, 613, 614, 615, 616, 620, 621, 622, 623, 624, 628, 629, 630, 631, 634, 637, 638, 640, 644, 649, 650, 651, 652, 655], "take": [1, 3, 4, 9, 21, 34, 38, 45, 50, 53, 68, 69, 74, 75, 80, 87, 100, 107, 108, 110, 132, 138, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 199, 200, 201, 202, 205, 238, 240, 277, 280, 281, 285, 298, 299, 302, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 330, 332, 335, 336, 339, 341, 344, 345, 347, 352, 354, 356, 357, 359, 360, 374, 376, 377, 378, 379, 381, 383, 386, 389, 392, 413, 428, 431, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454, 463, 476, 628, 629, 631, 634, 635, 636, 638, 639, 640, 641, 649, 650, 651, 653, 656], "consider": [1, 3, 4, 9, 150, 152, 285, 321, 353, 628, 635, 649, 650, 653], "whether": [1, 3, 4, 16, 17, 18, 19, 22, 23, 24, 26, 28, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 115, 117, 124, 125, 137, 141, 144, 147, 151, 158, 159, 163, 164, 165, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 231, 240, 241, 243, 246, 257, 278, 284, 286, 293, 294, 296, 303, 304, 319, 321, 324, 325, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 378, 383, 387, 393, 394, 395, 396, 397, 398, 400, 402, 403, 407, 409, 410, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 462, 473, 478, 624, 628, 634, 635, 636, 638, 639, 649, 650, 651, 655, 656], "should": [1, 2, 3, 4, 5, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 115, 118, 122, 124, 129, 130, 131, 135, 138, 141, 144, 145, 146, 147, 150, 151, 152, 153, 158, 159, 162, 165, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 228, 231, 232, 235, 238, 239, 240, 243, 244, 247, 248, 250, 255, 256, 258, 260, 265, 266, 267, 269, 272, 273, 277, 278, 280, 283, 285, 286, 287, 292, 293, 294, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 330, 331, 332, 335, 336, 339, 341, 344, 345, 347, 352, 354, 355, 356, 357, 359, 360, 361, 366, 374, 376, 378, 379, 381, 382, 383, 386, 389, 393, 395, 396, 402, 408, 410, 411, 413, 414, 415, 416, 417, 418, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 454, 456, 462, 467, 468, 469, 473, 620, 622, 623, 624, 628, 629, 630, 631, 634, 635, 636, 637, 638, 640, 642, 643, 646, 648, 649, 650, 651, 652, 653, 655, 656], "occur": [1, 9, 17, 45, 68, 76, 77, 80, 87, 97, 141, 144, 147, 151, 153, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 227, 236, 248, 260, 265, 292, 299, 355, 361, 366, 370, 375, 376, 379, 380, 381, 382, 383, 405, 427, 430, 628, 638, 653, 656], "serial": [1, 3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 38, 45, 50, 58, 65, 68, 69, 70, 71, 72, 75, 78, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 284, 293, 294, 296, 355, 361, 366, 427, 429, 430, 628], "syncdatacollector": [1, 3, 4, 16, 17, 20, 22, 23, 24, 26, 28, 30, 31, 47, 58, 78, 232, 235, 269, 301, 319, 324, 478, 483, 620, 623, 626, 634, 635, 636, 637, 638, 642, 644, 649, 650, 653], "worker": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 64, 65, 66, 72, 73, 81, 82, 85, 86, 87, 100, 105, 106, 107, 108, 109, 124, 148, 166, 171, 180, 195, 196, 198, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 284, 285, 293, 294, 296, 353, 354, 356, 357, 359, 360, 363, 364, 365, 428, 429, 431, 473, 622, 623, 624, 628, 634, 635, 636, 655, 656], "multisyncdatacollector": [1, 17, 23, 24, 26, 28, 31, 301, 481, 623, 626, 636, 642, 655], "split": [1, 16, 17, 19, 22, 23, 24, 26, 28, 42, 43, 49, 51, 64, 66, 77, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 122, 129, 130, 162, 173, 174, 193, 317, 322, 393, 394, 395, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 419, 427, 430, 432, 629, 631, 636, 640, 653, 655], "workload": [1, 353], "across": [1, 4, 9, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 65, 69, 72, 75, 76, 77, 81, 82, 85, 88, 89, 90, 91, 92, 108, 122, 129, 130, 142, 143, 145, 146, 150, 152, 153, 155, 157, 158, 166, 167, 171, 177, 182, 193, 194, 197, 207, 213, 214, 284, 293, 294, 296, 319, 324, 330, 340, 341, 353, 355, 411, 413, 427, 429, 430, 476, 492, 626, 628, 629, 630, 634, 639, 643, 649, 650, 651], "aggreg": [1, 4, 38, 68, 97, 122, 135, 173, 174, 199, 227, 256, 294, 303, 304, 306, 307, 385, 628, 630, 650], "result": [1, 2, 3, 4, 8, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 34, 38, 39, 45, 50, 58, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 80, 81, 82, 87, 88, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 122, 124, 128, 129, 130, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 228, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 296, 298, 301, 316, 317, 319, 322, 324, 325, 330, 343, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 366, 374, 376, 381, 393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 434, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 475, 476, 628, 630, 635, 637, 639, 640, 643, 644, 647, 651, 652, 655, 656], "final": [1, 2, 3, 4, 5, 28, 53, 64, 66, 73, 74, 87, 107, 108, 194, 197, 198, 199, 205, 279, 292, 298, 316, 317, 319, 322, 324, 330, 341, 354, 356, 357, 359, 360, 377, 384, 428, 431, 434, 467, 629, 634, 635, 636, 638, 643, 644, 646, 649, 650, 651, 656], "multiasyncdatacollector": [1, 16, 22, 23, 24, 26, 28, 31, 301, 482, 622, 626, 634, 635, 636, 642, 655], "sever": [1, 2, 3, 4, 9, 33, 38, 45, 50, 54, 58, 68, 69, 75, 80, 86, 87, 100, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 236, 238, 239, 256, 286, 296, 354, 355, 356, 357, 359, 360, 361, 366, 413, 427, 428, 429, 430, 431, 526, 628, 634, 636, 638, 643, 644, 653, 656], "gather": [1, 4, 23, 26, 28, 53, 86, 106, 115, 117, 122, 129, 137, 214, 258, 265, 329, 332, 337, 355, 361, 366, 411, 427, 430, 433, 478, 614, 627, 635, 636, 637, 642, 649, 650, 651, 653, 655, 656], "continu": [1, 3, 4, 10, 39, 42, 53, 88, 89, 90, 108, 130, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 200, 201, 202, 220, 228, 253, 279, 287, 306, 307, 308, 309, 340, 341, 355, 385, 390, 394, 417, 434, 439, 447, 478, 629, 631, 634, 636, 637, 640, 649, 650, 653], "concomitantli": [1, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 200, 201, 202], "network": [1, 5, 9, 38, 45, 50, 58, 68, 69, 75, 80, 101, 109, 141, 144, 147, 151, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 303, 304, 306, 307, 308, 309, 312, 314, 315, 322, 325, 330, 331, 332, 334, 335, 336, 338, 340, 342, 344, 345, 346, 351, 355, 361, 366, 371, 372, 373, 374, 382, 386, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 425, 427, 429, 430, 432, 434, 435, 436, 437, 438, 472, 478, 524, 526, 527, 528, 530, 619, 620, 626, 628, 629, 630, 631, 638, 641, 644, 648, 651, 656], "impli": [1, 87, 656], "mai": [1, 3, 4, 5, 6, 8, 9, 16, 17, 19, 22, 23, 24, 26, 28, 30, 32, 34, 38, 42, 43, 45, 50, 51, 58, 64, 66, 68, 69, 73, 75, 76, 77, 80, 85, 87, 99, 105, 107, 108, 109, 113, 116, 121, 122, 129, 141, 144, 147, 150, 151, 152, 153, 159, 171, 172, 175, 177, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 255, 260, 273, 284, 286, 288, 293, 294, 296, 299, 319, 324, 325, 330, 354, 355, 356, 357, 359, 360, 361, 366, 383, 395, 402, 410, 413, 416, 427, 428, 429, 430, 431, 477, 478, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 649, 650, 651, 652, 653, 656], "slightli": [1, 34, 87, 97, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431, 630, 637, 638, 649, 651, 652, 653, 656], "lag": [1, 634, 635, 636], "therefor": [1, 3, 4, 8, 65, 72, 81, 82, 87, 104, 105, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 205, 269, 354, 356, 357, 359, 360, 413, 428, 429, 431, 432, 638, 641, 649, 656], "fastest": 1, "price": [1, 3], "suitabl": [1, 3, 235, 427, 628], "where": [1, 2, 3, 4, 5, 8, 9, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 36, 38, 45, 47, 49, 50, 53, 58, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 117, 122, 124, 129, 130, 135, 137, 138, 141, 144, 147, 151, 159, 162, 165, 168, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 226, 227, 228, 229, 232, 235, 240, 247, 255, 264, 269, 272, 277, 278, 279, 280, 281, 285, 286, 288, 291, 292, 296, 298, 316, 317, 318, 319, 321, 322, 323, 324, 328, 329, 330, 338, 340, 341, 354, 355, 356, 357, 359, 360, 361, 366, 374, 379, 382, 383, 392, 393, 394, 395, 396, 401, 402, 403, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 628, 630, 631, 634, 635, 636, 638, 639, 646, 648, 649, 650, 651, 653, 656], "off": [1, 3, 5, 320, 350, 375, 416, 452, 467, 475, 478, 615, 629, 631, 634, 635, 636, 640, 641, 649, 650, 652, 655, 656], "curriculum": [1, 5], "For": [1, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 19, 22, 23, 24, 26, 28, 31, 36, 37, 38, 39, 40, 41, 45, 46, 50, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 72, 75, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 99, 103, 105, 107, 108, 109, 115, 117, 122, 124, 129, 137, 141, 144, 147, 150, 151, 152, 156, 158, 159, 171, 172, 173, 174, 175, 180, 181, 182, 183, 185, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 243, 246, 250, 260, 278, 285, 286, 292, 296, 313, 317, 319, 321, 322, 324, 328, 331, 333, 353, 354, 355, 356, 357, 359, 360, 361, 366, 371, 373, 374, 376, 380, 393, 401, 403, 409, 413, 427, 428, 429, 430, 431, 467, 628, 629, 630, 631, 634, 635, 636, 637, 639, 640, 642, 643, 646, 649, 650, 651, 652, 653, 656], "remot": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 65, 70, 71, 72, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 124, 171, 180, 198, 209, 213, 214, 294, 354, 356, 357, 358, 359, 360, 366, 428, 431, 656], "rollout": [1, 3, 4, 12, 16, 17, 19, 22, 28, 30, 31, 34, 53, 74, 80, 87, 135, 141, 142, 143, 144, 147, 151, 153, 154, 157, 158, 159, 163, 164, 165, 166, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 185, 186, 187, 192, 193, 194, 197, 200, 201, 202, 207, 228, 229, 231, 232, 235, 238, 240, 241, 243, 246, 247, 248, 253, 255, 256, 262, 266, 267, 272, 273, 274, 277, 278, 280, 281, 284, 287, 293, 294, 296, 300, 301, 302, 319, 324, 327, 341, 378, 393, 452, 454, 614, 629, 634, 636, 637, 640, 641, 642, 643, 644, 652, 653, 655], "necessari": [1, 5, 7, 9, 16, 17, 19, 22, 23, 24, 26, 28, 97, 100, 101, 103, 104, 105, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 200, 201, 202, 273, 414, 434, 435, 436, 437, 438, 630, 634, 636, 640, 641, 642, 646, 647], "synchronis": [1, 148, 649, 650], "either": [1, 3, 6, 29, 33, 36, 38, 45, 50, 58, 65, 68, 69, 70, 72, 74, 75, 80, 87, 106, 109, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 257, 258, 277, 278, 294, 296, 355, 361, 363, 366, 388, 411, 418, 419, 427, 429, 430, 458, 628, 631, 634, 635, 637, 649, 652, 653, 655, 656], "update_policy_weights_": [1, 14, 16, 17, 19, 21, 22, 23, 24, 26, 28, 30, 31, 211, 628, 634, 650, 655], "update_at_each_batch": [1, 16, 17, 22], "true": [1, 2, 3, 4, 5, 9, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 115, 116, 117, 118, 121, 122, 124, 125, 127, 128, 129, 130, 137, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 227, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 245, 248, 250, 253, 254, 255, 256, 258, 259, 260, 264, 265, 267, 268, 271, 272, 273, 276, 277, 279, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 296, 297, 298, 299, 300, 303, 304, 306, 307, 308, 309, 315, 317, 318, 319, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 340, 341, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 369, 370, 371, 372, 373, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 393, 394, 395, 396, 397, 398, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 423, 427, 428, 429, 430, 431, 434, 435, 436, 437, 440, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 461, 462, 465, 466, 467, 469, 473, 475, 478, 479, 481, 482, 483, 493, 494, 495, 502, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 524, 525, 528, 532, 533, 535, 563, 565, 582, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 624, 628, 629, 630, 631, 634, 635, 636, 637, 638, 640, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "second": [1, 3, 4, 9, 16, 17, 19, 22, 30, 34, 53, 54, 55, 56, 57, 97, 100, 135, 171, 206, 210, 232, 281, 317, 319, 322, 324, 353, 376, 395, 410, 413, 416, 454, 456, 459, 461, 471, 634, 636, 642, 649, 650, 651, 653, 655, 656], "devic": [1, 3, 4, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 121, 129, 130, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 223, 226, 228, 232, 239, 243, 244, 246, 247, 248, 253, 255, 256, 257, 262, 263, 264, 266, 267, 269, 273, 276, 277, 279, 282, 285, 286, 287, 289, 291, 293, 296, 298, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 315, 316, 317, 318, 319, 322, 323, 324, 325, 327, 330, 331, 333, 334, 339, 341, 342, 343, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 387, 390, 393, 394, 395, 396, 397, 398, 400, 401, 402, 409, 410, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 452, 469, 476, 479, 481, 482, 483, 485, 487, 499, 500, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 524, 525, 532, 550, 569, 593, 594, 595, 618, 628, 629, 634, 635, 636, 637, 638, 649, 650, 651, 652, 655], "oper": [1, 3, 4, 5, 8, 9, 16, 17, 19, 22, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 73, 75, 76, 77, 80, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 116, 117, 122, 129, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 250, 255, 281, 283, 287, 294, 296, 312, 313, 318, 321, 323, 354, 355, 356, 357, 358, 359, 360, 361, 366, 371, 372, 373, 375, 376, 377, 382, 388, 393, 395, 397, 398, 403, 410, 413, 415, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 473, 626, 628, 630, 631, 634, 635, 636, 637, 638, 639, 640, 648, 649, 650, 651, 656], "instanc": [1, 2, 3, 4, 5, 8, 9, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 38, 39, 42, 45, 50, 58, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 80, 81, 82, 83, 85, 86, 87, 88, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 115, 116, 117, 120, 122, 124, 129, 130, 137, 141, 144, 146, 147, 148, 150, 151, 152, 156, 159, 165, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 227, 260, 279, 286, 293, 296, 298, 299, 302, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 330, 331, 332, 335, 336, 339, 341, 344, 345, 347, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 394, 396, 398, 401, 402, 409, 411, 414, 416, 418, 419, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 452, 454, 458, 462, 467, 475, 526, 614, 615, 616, 620, 622, 623, 628, 629, 630, 631, 634, 636, 637, 638, 639, 640, 646, 651, 653, 656], "cpu": [1, 3, 4, 9, 11, 16, 17, 19, 22, 28, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 121, 124, 129, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 228, 232, 239, 243, 244, 246, 247, 248, 253, 256, 257, 262, 264, 266, 267, 269, 273, 276, 277, 279, 285, 286, 287, 289, 291, 296, 300, 302, 312, 317, 318, 319, 322, 323, 324, 327, 333, 334, 341, 342, 343, 351, 354, 355, 356, 357, 358, 359, 360, 361, 366, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 385, 387, 390, 393, 394, 396, 397, 398, 400, 401, 402, 409, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 452, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 550, 569, 593, 594, 595, 629, 634, 635, 636, 637, 649, 650, 651, 652, 655], "slower": [1, 649], "than": [1, 3, 4, 5, 9, 14, 16, 17, 19, 22, 23, 24, 25, 26, 28, 30, 31, 35, 36, 38, 65, 68, 72, 81, 82, 87, 97, 99, 103, 107, 108, 109, 122, 124, 129, 130, 133, 135, 141, 144, 147, 151, 155, 159, 169, 170, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 207, 209, 214, 240, 256, 258, 267, 294, 298, 309, 319, 321, 322, 324, 325, 352, 354, 356, 357, 359, 360, 361, 370, 375, 382, 383, 387, 411, 427, 428, 429, 430, 431, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 627, 628, 629, 630, 634, 635, 636, 637, 638, 639, 641, 649, 650, 651, 653, 655, 656], "one": [1, 2, 3, 4, 5, 6, 8, 9, 14, 16, 17, 19, 22, 23, 24, 26, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 81, 85, 87, 88, 89, 90, 91, 92, 97, 103, 107, 108, 109, 112, 113, 114, 115, 120, 121, 122, 124, 125, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 144, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 159, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 232, 235, 238, 240, 241, 243, 244, 245, 246, 253, 256, 257, 259, 260, 264, 269, 272, 275, 276, 278, 279, 280, 285, 286, 288, 291, 293, 296, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 331, 332, 335, 336, 337, 338, 339, 341, 343, 344, 345, 347, 352, 353, 354, 355, 356, 357, 359, 360, 361, 366, 370, 374, 375, 376, 378, 379, 380, 381, 382, 383, 386, 387, 389, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 424, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 441, 442, 454, 456, 465, 467, 468, 473, 614, 624, 627, 628, 630, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 648, 649, 650, 651, 652, 653, 656], "cuda": [1, 3, 4, 8, 16, 17, 19, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 75, 76, 77, 80, 85, 88, 89, 90, 91, 92, 109, 141, 142, 143, 144, 147, 151, 153, 154, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 255, 263, 264, 279, 285, 286, 289, 291, 296, 317, 318, 322, 323, 355, 361, 362, 366, 382, 427, 429, 430, 464, 634, 635, 636, 637, 649, 650, 652, 656], "multipl": [1, 2, 3, 4, 6, 9, 15, 16, 17, 19, 22, 23, 24, 25, 26, 28, 56, 68, 72, 81, 82, 83, 87, 108, 110, 117, 124, 125, 137, 141, 142, 143, 157, 158, 171, 180, 182, 193, 194, 197, 199, 200, 207, 213, 214, 236, 238, 245, 254, 258, 259, 269, 272, 276, 277, 284, 293, 317, 322, 324, 330, 333, 334, 353, 366, 370, 375, 379, 380, 382, 383, 386, 395, 402, 410, 413, 424, 440, 477, 492, 624, 628, 629, 630, 631, 634, 635, 636, 639, 641, 642, 647, 649, 650, 651, 653, 655], "infer": [1, 4, 15, 16, 17, 18, 19, 21, 23, 25, 26, 27, 28, 30, 31, 32, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 207, 213, 214, 215, 235, 293, 328, 333, 353, 363, 366, 374, 379, 383, 400, 427, 430, 452, 628, 634, 636, 638, 642, 644, 647, 653, 655], "dispatch": [1, 4, 23, 24, 26, 28, 45, 68, 80, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 257, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 290, 292, 293, 296, 352, 355, 361, 366, 378, 427, 429, 430, 454, 634, 656], "speed": [1, 3, 4, 5, 9, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 630, 634, 635, 636, 637, 649, 650, 651, 653, 655], "avoid": [1, 2, 3, 4, 38, 45, 50, 58, 68, 69, 75, 80, 101, 109, 115, 117, 129, 137, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 225, 235, 253, 284, 286, 293, 294, 296, 299, 349, 355, 361, 366, 370, 382, 387, 395, 396, 410, 413, 416, 427, 429, 430, 613, 628, 636, 638, 647, 650], "oom": [1, 4, 64, 66, 73, 87, 107, 108, 115, 117, 137, 198, 354, 356, 357, 359, 360, 428, 431], "choic": [1, 3, 60, 87, 99, 105, 107, 108, 171, 198, 207, 354, 356, 357, 359, 360, 428, 431, 477, 629, 630, 634, 635, 641, 649, 650], "pass": [1, 3, 4, 5, 14, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 36, 38, 42, 43, 45, 50, 51, 58, 60, 65, 68, 69, 70, 72, 74, 75, 77, 80, 81, 82, 85, 86, 87, 97, 100, 101, 103, 104, 105, 107, 108, 109, 113, 115, 117, 122, 124, 129, 130, 135, 137, 141, 144, 147, 148, 149, 151, 152, 159, 162, 166, 171, 172, 173, 174, 175, 180, 181, 182, 185, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 229, 231, 232, 235, 239, 241, 243, 246, 256, 258, 266, 267, 284, 285, 288, 293, 296, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 330, 331, 332, 333, 335, 336, 339, 341, 342, 344, 345, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 370, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 394, 395, 396, 409, 410, 411, 413, 414, 416, 418, 419, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 452, 469, 473, 477, 478, 622, 623, 624, 628, 629, 634, 635, 636, 637, 638, 639, 640, 641, 642, 648, 649, 650, 651, 653, 655, 656], "ie": [1, 3, 4, 23, 26, 29, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 76, 77, 80, 81, 85, 86, 88, 89, 90, 91, 92, 103, 121, 130, 141, 144, 147, 151, 155, 159, 168, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 227, 228, 235, 250, 276, 279, 288, 293, 319, 324, 355, 361, 366, 374, 382, 427, 430, 629, 630, 635, 650], "while": [1, 2, 3, 4, 8, 9, 16, 17, 19, 22, 30, 34, 38, 45, 50, 58, 68, 69, 70, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 269, 296, 298, 299, 302, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 332, 335, 336, 339, 341, 344, 345, 347, 352, 354, 355, 356, 357, 358, 359, 360, 361, 366, 374, 376, 378, 381, 386, 389, 395, 401, 402, 409, 410, 413, 416, 427, 428, 429, 430, 431, 628, 629, 630, 634, 636, 637, 640, 642, 643, 649, 650, 651, 652, 653, 655], "wait": [1, 14, 16, 17, 22, 23, 24, 25, 26, 28, 29, 70, 115, 117, 183, 205, 353, 637, 651], "also": [1, 2, 3, 4, 9, 10, 12, 16, 17, 21, 34, 36, 37, 38, 41, 45, 46, 50, 54, 55, 56, 57, 58, 62, 63, 64, 66, 68, 69, 72, 73, 75, 80, 81, 82, 85, 87, 97, 100, 101, 103, 104, 105, 106, 107, 108, 109, 115, 116, 117, 122, 124, 129, 130, 135, 137, 141, 144, 147, 151, 158, 159, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 225, 226, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 245, 247, 248, 249, 251, 253, 254, 255, 257, 260, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 289, 290, 292, 293, 296, 297, 303, 304, 317, 322, 325, 345, 354, 355, 356, 357, 359, 360, 361, 366, 378, 379, 384, 385, 386, 393, 394, 396, 397, 398, 400, 401, 402, 407, 409, 413, 416, 418, 427, 428, 429, 430, 431, 434, 441, 442, 452, 454, 466, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 646, 648, 649, 650, 651, 653, 655, 656], "impact": [1, 3, 4, 14, 23, 24, 26, 103, 158, 243, 246, 299, 361, 393, 395, 410, 413, 415, 427, 635, 637, 649, 650], "memori": [1, 4, 9, 28, 33, 38, 41, 45, 50, 58, 64, 66, 68, 69, 70, 73, 75, 80, 86, 87, 97, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 113, 115, 116, 120, 141, 142, 143, 144, 147, 148, 151, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 235, 239, 264, 279, 285, 286, 289, 291, 293, 294, 296, 311, 321, 322, 323, 354, 355, 356, 357, 359, 360, 361, 366, 382, 427, 428, 429, 430, 431, 485, 624, 626, 628, 631, 634, 635, 637, 649, 653, 655], "manag": [1, 4, 9, 14, 16, 17, 18, 19, 22, 23, 24, 26, 27, 28, 30, 31, 33, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 301, 319, 324, 353, 366, 369, 413, 425, 426, 434, 435, 436, 437, 462, 467, 478, 628, 629, 637, 638, 641, 646, 655], "kei": [1, 2, 3, 8, 16, 17, 19, 22, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 107, 108, 109, 112, 121, 122, 124, 127, 129, 130, 135, 141, 144, 147, 151, 157, 158, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 260, 263, 264, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 296, 298, 300, 302, 312, 313, 316, 319, 324, 326, 327, 341, 343, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 370, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 452, 454, 466, 467, 468, 470, 471, 473, 614, 628, 630, 631, 634, 636, 637, 638, 639, 641, 646, 647, 648, 649, 650, 651, 653, 655, 656], "control": [1, 2, 4, 6, 9, 19, 34, 35, 42, 43, 44, 51, 72, 77, 81, 82, 121, 122, 124, 129, 141, 144, 145, 146, 147, 151, 158, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 207, 210, 213, 214, 215, 226, 245, 306, 307, 308, 309, 319, 324, 326, 327, 341, 345, 352, 353, 382, 383, 384, 393, 395, 396, 410, 411, 413, 417, 427, 430, 434, 439, 447, 452, 462, 478, 628, 629, 631, 634, 635, 636, 637, 638, 639, 640, 641, 649, 650, 651, 653, 655], "which": [1, 2, 3, 4, 5, 8, 9, 15, 16, 17, 19, 21, 22, 23, 24, 26, 28, 30, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 112, 116, 124, 127, 128, 135, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 155, 157, 158, 159, 163, 164, 166, 167, 169, 170, 171, 172, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 235, 236, 240, 243, 246, 251, 253, 255, 256, 259, 260, 264, 265, 267, 277, 279, 280, 283, 284, 285, 286, 287, 289, 293, 296, 297, 312, 317, 318, 319, 320, 322, 323, 324, 328, 329, 330, 331, 332, 338, 340, 350, 353, 354, 355, 356, 357, 359, 360, 361, 366, 371, 372, 373, 374, 378, 379, 382, 383, 384, 385, 393, 394, 395, 396, 398, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 418, 419, 423, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 452, 454, 463, 468, 477, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 646, 648, 649, 650, 651, 652, 653, 656], "storing_devic": [1, 16, 17, 19, 22, 23, 24, 26, 28, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 479, 481, 482, 483, 635, 637, 650], "dure": [1, 3, 4, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 36, 37, 41, 42, 46, 54, 55, 56, 57, 62, 63, 65, 66, 69, 70, 71, 72, 74, 75, 81, 82, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 113, 115, 117, 118, 121, 122, 124, 127, 129, 141, 144, 147, 148, 151, 158, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 204, 207, 211, 216, 217, 231, 232, 235, 238, 243, 246, 248, 250, 251, 253, 258, 262, 274, 276, 279, 281, 283, 284, 286, 287, 288, 293, 294, 296, 299, 301, 302, 319, 324, 331, 353, 361, 378, 395, 413, 427, 430, 434, 436, 437, 467, 473, 475, 478, 628, 630, 634, 635, 636, 637, 640, 641, 642, 644, 649, 650, 651, 653, 656], "heurist": [1, 5, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 198, 298, 354, 356, 357, 359, 360, 378, 383, 428, 431, 634, 638, 642, 656], "usual": [1, 3, 4, 5, 7, 8, 9, 16, 17, 19, 22, 23, 24, 26, 28, 99, 127, 135, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 284, 334, 413, 418, 427, 430, 433, 434, 435, 436, 437, 438, 453, 627, 628, 629, 630, 631, 634, 635, 636, 637, 640, 642, 643, 650, 653, 656], "same": [1, 2, 3, 4, 5, 19, 21, 23, 24, 26, 28, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 80, 83, 85, 86, 87, 88, 89, 90, 91, 92, 99, 103, 107, 108, 109, 128, 129, 130, 133, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 157, 158, 159, 162, 166, 167, 171, 172, 173, 174, 175, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 235, 243, 245, 246, 251, 253, 256, 258, 259, 260, 276, 284, 285, 286, 293, 296, 297, 303, 304, 318, 323, 325, 328, 329, 330, 331, 341, 349, 353, 354, 355, 356, 357, 359, 360, 361, 366, 374, 386, 394, 396, 409, 411, 414, 416, 418, 419, 424, 427, 428, 429, 430, 431, 477, 628, 630, 631, 634, 635, 636, 639, 640, 642, 646, 647, 648, 649, 650, 652, 653, 656], "default": [1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 121, 122, 124, 125, 127, 128, 129, 130, 135, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 339, 341, 343, 344, 345, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 374, 375, 376, 378, 379, 380, 381, 382, 383, 386, 387, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 422, 423, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 524, 533, 620, 624, 628, 630, 631, 634, 635, 636, 637, 640, 649, 652, 653, 655, 656], "behavior": [1, 3, 4, 5, 16, 17, 28, 38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 85, 87, 103, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 236, 243, 246, 260, 265, 278, 286, 294, 296, 299, 319, 320, 324, 350, 353, 354, 355, 356, 357, 359, 360, 361, 366, 395, 401, 409, 413, 418, 427, 428, 429, 430, 431, 452, 462, 467, 629, 635, 637, 649, 650, 651, 653], "besid": 1, "those": [1, 3, 4, 6, 8, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 217, 235, 240, 243, 246, 253, 260, 279, 280, 283, 287, 324, 340, 379, 383, 384, 385, 476, 622, 623, 629, 634, 635, 639, 640, 650, 651, 656], "choos": [1, 4, 12, 60, 141, 144, 162, 319, 324, 413, 626, 630, 634, 635, 636, 638, 649, 650, 653, 655], "follow": [1, 3, 4, 7, 8, 9, 12, 21, 38, 45, 50, 53, 58, 64, 66, 67, 68, 69, 73, 74, 75, 80, 85, 87, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 122, 129, 130, 141, 142, 143, 144, 147, 150, 151, 152, 157, 158, 159, 165, 168, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 231, 235, 255, 264, 289, 293, 294, 296, 303, 304, 317, 319, 322, 324, 325, 353, 354, 355, 356, 357, 359, 360, 361, 366, 376, 379, 380, 381, 392, 393, 394, 395, 396, 397, 401, 402, 409, 410, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 454, 473, 628, 629, 630, 631, 634, 635, 636, 637, 638, 641, 642, 648, 649, 650, 651, 653, 655, 656], "max_frames_per_traj": [1, 16, 17, 19, 22, 23, 24, 26, 28, 479, 481, 482, 483, 613, 634, 636, 655], "frame": [1, 3, 12, 16, 17, 19, 22, 23, 24, 26, 28, 30, 58, 97, 110, 235, 251, 296, 298, 316, 341, 378, 453, 454, 456, 459, 461, 465, 467, 473, 478, 613, 614, 634, 635, 636, 637, 640, 649, 650, 653, 655, 656], "call": [1, 2, 3, 4, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 122, 123, 124, 128, 129, 131, 133, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 166, 167, 168, 169, 170, 171, 172, 175, 177, 180, 181, 182, 183, 184, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 224, 227, 228, 229, 231, 232, 234, 235, 236, 238, 239, 240, 241, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 272, 273, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 327, 331, 332, 333, 335, 336, 339, 341, 344, 345, 347, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 374, 376, 378, 381, 382, 383, 385, 386, 389, 394, 395, 396, 402, 409, 410, 411, 413, 414, 416, 418, 419, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 452, 453, 456, 467, 469, 628, 630, 631, 635, 636, 637, 638, 639, 640, 642, 643, 649, 650, 651, 653, 655, 656], "frames_per_batch": [1, 2, 3, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 47, 58, 70, 78, 232, 235, 269, 319, 324, 478, 479, 481, 482, 483, 613, 631, 634, 635, 636, 637, 638, 642, 644, 649, 650, 653, 655], "each": [1, 2, 3, 4, 5, 8, 9, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 38, 42, 43, 45, 49, 50, 51, 53, 54, 56, 58, 59, 68, 69, 72, 74, 75, 77, 79, 80, 81, 87, 97, 99, 100, 103, 107, 108, 109, 121, 122, 124, 127, 129, 130, 132, 135, 141, 144, 147, 148, 151, 159, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 254, 256, 258, 264, 269, 272, 277, 278, 279, 280, 284, 285, 291, 293, 294, 296, 297, 298, 313, 316, 317, 318, 319, 322, 324, 330, 331, 335, 342, 343, 351, 353, 354, 355, 356, 357, 359, 360, 361, 366, 369, 375, 376, 381, 383, 385, 395, 410, 413, 427, 428, 429, 430, 431, 434, 440, 443, 444, 445, 446, 448, 449, 450, 451, 454, 467, 469, 622, 623, 628, 630, 634, 635, 636, 637, 640, 641, 642, 644, 649, 650, 651, 652, 653, 655, 656], "init_random_fram": [1, 16, 17, 19, 22, 23, 24, 26, 28, 479, 481, 482, 483, 613, 634, 635, 638, 644], "rand_step": [1, 3, 4, 47, 78, 141, 144, 145, 146, 147, 148, 150, 151, 152, 159, 160, 161, 165, 166, 167, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 254, 279, 293, 651, 655, 656], "reset_at_each_it": [1, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 479, 481, 482, 483, 634], "split_traj": [1, 16, 17, 19, 22, 23, 24, 26, 28, 99, 101, 103, 104, 105, 479, 481, 482, 483, 634, 635, 636], "trajectori": [1, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 34, 45, 48, 49, 58, 59, 79, 81, 87, 97, 99, 100, 101, 103, 104, 105, 121, 122, 129, 130, 135, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 235, 265, 277, 284, 296, 300, 324, 327, 341, 413, 429, 434, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 463, 494, 495, 626, 630, 634, 635, 636, 637, 639, 642, 644, 651, 655, 656], "pad": [1, 3, 4, 34, 67, 83, 99, 101, 103, 104, 105, 108, 207, 208, 209, 214, 215, 217, 219, 235, 283, 303, 304, 306, 307, 324, 328, 329, 330, 355, 356, 357, 358, 360, 361, 366, 427, 469, 524, 647], "along": [1, 3, 4, 16, 17, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 74, 75, 76, 77, 80, 85, 86, 87, 88, 89, 90, 91, 92, 99, 101, 103, 104, 105, 107, 108, 109, 117, 122, 124, 129, 130, 135, 137, 141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 234, 235, 236, 258, 260, 262, 265, 272, 276, 282, 296, 324, 325, 328, 329, 334, 354, 355, 356, 357, 359, 360, 361, 366, 375, 379, 382, 383, 396, 411, 418, 427, 428, 429, 430, 431, 634, 635, 637, 639, 641, 649, 650, 651, 653, 655], "point": [1, 3, 4, 29, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 70, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 102, 109, 114, 121, 122, 125, 135, 136, 139, 140, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 257, 263, 264, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 296, 326, 353, 355, 361, 366, 382, 392, 403, 427, 429, 430, 473, 627, 635, 636, 648, 649, 650, 651, 653, 655, 656], "boolean": [1, 4, 16, 17, 19, 22, 23, 24, 26, 28, 34, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 74, 76, 77, 85, 88, 89, 90, 91, 92, 122, 129, 130, 151, 202, 227, 231, 240, 265, 277, 321, 328, 329, 341, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 628, 631, 637], "repres": [1, 3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 42, 43, 47, 51, 53, 60, 77, 78, 80, 81, 87, 101, 107, 108, 116, 141, 144, 145, 146, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 198, 200, 201, 202, 251, 265, 281, 293, 296, 313, 328, 329, 343, 349, 354, 356, 357, 359, 360, 375, 376, 380, 381, 423, 428, 431, 434, 469, 628, 629, 634, 636, 637, 638, 639, 640, 641, 649, 650], "valid": [1, 2, 3, 4, 34, 64, 66, 67, 86, 87, 106, 135, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 188, 192, 193, 194, 197, 200, 201, 202, 231, 265, 284, 286, 296, 298, 303, 304, 321, 325, 328, 329, 341, 355, 358, 395, 402, 410, 413, 416, 427, 434, 435, 436, 437, 469, 628, 631, 638, 656], "exploration_typ": [1, 16, 17, 19, 22, 23, 24, 26, 28, 467, 479, 481, 482, 483, 528, 626, 629, 634, 635], "strategi": [1, 2, 3, 4, 19, 87, 103, 107, 108, 127, 162, 198, 208, 228, 316, 329, 337, 353, 354, 356, 357, 359, 360, 366, 427, 428, 431, 628, 629, 631, 634, 635, 638, 640, 649, 650, 653, 655], "reset_when_don": [1, 16, 17, 19, 22], "its": [1, 3, 4, 5, 6, 8, 10, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, 28, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 72, 73, 75, 76, 77, 80, 81, 85, 87, 88, 89, 90, 91, 92, 94, 107, 108, 109, 117, 121, 122, 124, 129, 130, 141, 144, 147, 151, 158, 159, 165, 171, 172, 173, 174, 175, 180, 181, 182, 185, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 234, 235, 241, 247, 255, 277, 278, 279, 284, 286, 292, 293, 294, 296, 297, 298, 303, 304, 319, 324, 328, 329, 330, 331, 340, 354, 355, 356, 357, 359, 360, 361, 366, 375, 379, 380, 383, 386, 393, 394, 395, 396, 401, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 419, 427, 428, 429, 430, 431, 432, 454, 473, 477, 478, 620, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653, 655, 656], "organ": [1, 2, 3, 631, 646, 651, 653], "within": [1, 3, 4, 16, 17, 21, 22, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 116, 121, 122, 130, 141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 246, 247, 248, 249, 251, 254, 255, 257, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 290, 292, 293, 294, 296, 298, 299, 302, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 332, 335, 336, 339, 341, 344, 345, 347, 352, 353, 354, 355, 356, 357, 359, 360, 361, 366, 369, 374, 376, 378, 381, 383, 386, 389, 390, 398, 403, 418, 427, 428, 429, 430, 431, 432, 434, 452, 454, 473, 629, 630, 635, 638, 639, 640, 641, 642, 643, 644, 649, 651, 655], "differ": [1, 2, 3, 4, 5, 16, 17, 19, 22, 23, 24, 26, 28, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 72, 74, 75, 76, 77, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 99, 100, 103, 107, 108, 109, 121, 124, 127, 141, 142, 143, 144, 147, 148, 151, 157, 158, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 231, 235, 240, 244, 245, 256, 260, 267, 276, 284, 286, 288, 296, 297, 313, 317, 318, 322, 323, 325, 327, 330, 331, 332, 343, 353, 354, 355, 356, 357, 359, 360, 361, 366, 383, 409, 411, 413, 423, 427, 428, 429, 430, 431, 434, 435, 436, 440, 441, 442, 467, 473, 476, 622, 623, 628, 629, 630, 631, 634, 635, 636, 638, 639, 641, 643, 647, 648, 649, 650, 651, 652, 653, 655, 656], "how": [1, 3, 4, 12, 21, 23, 24, 26, 35, 38, 45, 50, 58, 65, 68, 69, 75, 80, 81, 87, 103, 107, 108, 109, 121, 122, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 256, 296, 332, 353, 354, 355, 356, 357, 359, 360, 361, 366, 379, 393, 395, 408, 410, 411, 413, 427, 428, 429, 430, 431, 454, 456, 473, 475, 627, 628, 629, 634, 635, 636, 637, 638, 639, 640, 642, 643, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "tabl": [1, 38, 629, 635, 640], "summar": [1, 4, 651], "what": [1, 2, 4, 9, 12, 44, 45, 65, 85, 97, 122, 129, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 214, 215, 226, 247, 279, 284, 380, 396, 407, 411, 418, 427, 430, 627, 629, 630, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 646, 647, 649, 650, 651, 652, 653, 655, 656], "expect": [1, 3, 4, 5, 8, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 72, 73, 75, 76, 77, 80, 85, 86, 87, 88, 89, 90, 91, 92, 101, 107, 108, 109, 122, 128, 129, 141, 144, 147, 151, 159, 165, 168, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 247, 248, 250, 252, 254, 255, 256, 257, 258, 260, 262, 264, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 296, 317, 318, 319, 322, 323, 324, 330, 331, 341, 353, 354, 355, 356, 357, 359, 360, 361, 366, 376, 382, 385, 393, 394, 395, 396, 397, 398, 400, 401, 402, 407, 409, 410, 411, 413, 414, 415, 416, 418, 419, 424, 427, 428, 429, 430, 431, 432, 434, 614, 627, 629, 630, 631, 634, 636, 637, 639, 640, 641, 642, 646, 647, 649, 650, 651, 653, 656], "n": [1, 3, 4, 7, 8, 30, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 74, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 107, 108, 109, 121, 122, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 245, 250, 288, 296, 317, 318, 322, 327, 338, 340, 341, 354, 355, 356, 357, 359, 360, 361, 366, 378, 383, 393, 394, 402, 411, 427, 428, 429, 430, 431, 433, 469, 541, 628, 631, 635, 637, 638, 647, 653, 655, 656], "b": [1, 3, 4, 8, 9, 30, 34, 42, 43, 45, 51, 64, 66, 68, 72, 73, 74, 75, 77, 80, 81, 82, 87, 107, 108, 115, 116, 135, 144, 198, 210, 253, 287, 317, 318, 321, 322, 323, 330, 331, 333, 334, 342, 351, 354, 355, 356, 357, 359, 360, 361, 366, 386, 427, 428, 430, 431, 434, 435, 436, 437, 438, 440, 454, 635, 646, 653], "cat_result": [1, 16, 17], "na": [1, 194, 197, 212], "t": [1, 3, 4, 5, 7, 8, 9, 16, 17, 19, 22, 23, 24, 26, 28, 30, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 121, 122, 124, 128, 129, 130, 135, 141, 144, 147, 148, 150, 151, 159, 166, 167, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 246, 247, 248, 249, 251, 253, 254, 255, 257, 263, 264, 265, 266, 267, 268, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 290, 291, 292, 293, 296, 297, 317, 319, 321, 322, 324, 328, 341, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 375, 382, 393, 413, 416, 417, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 440, 454, 461, 473, 476, 624, 627, 628, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 648, 649, 650, 651, 652, 653, 655, 656], "p": [1, 3, 5, 121, 122, 124, 127, 148, 178, 179, 301, 302], "In": [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 16, 17, 19, 21, 22, 23, 24, 26, 28, 29, 30, 38, 45, 50, 58, 68, 69, 75, 80, 87, 97, 99, 101, 103, 104, 105, 107, 108, 109, 130, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 243, 244, 246, 254, 264, 269, 273, 278, 279, 282, 284, 285, 286, 289, 291, 292, 294, 296, 297, 317, 320, 322, 325, 330, 345, 349, 350, 354, 355, 356, 357, 359, 360, 361, 366, 382, 383, 385, 392, 393, 394, 396, 397, 398, 400, 401, 402, 409, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 476, 622, 623, 624, 628, 629, 630, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 649, 650, 651, 652, 653, 656], "case": [1, 2, 4, 5, 6, 8, 9, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 70, 72, 73, 76, 77, 81, 85, 87, 88, 89, 90, 91, 92, 97, 100, 101, 103, 104, 105, 107, 108, 112, 113, 120, 124, 135, 141, 144, 147, 150, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 198, 200, 201, 202, 214, 243, 244, 246, 254, 260, 279, 282, 286, 287, 297, 321, 324, 325, 331, 332, 354, 356, 357, 359, 360, 379, 382, 383, 385, 386, 392, 393, 394, 396, 397, 398, 400, 401, 402, 409, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 434, 435, 436, 437, 454, 463, 476, 622, 623, 624, 626, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 642, 643, 647, 649, 650, 651, 653, 655, 656], "dimens": [1, 4, 16, 17, 19, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 72, 73, 74, 76, 77, 85, 86, 87, 88, 89, 90, 91, 92, 99, 101, 103, 104, 105, 107, 108, 115, 116, 117, 122, 129, 130, 135, 137, 141, 144, 145, 146, 147, 150, 151, 152, 153, 159, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 198, 199, 200, 201, 202, 207, 219, 220, 228, 234, 235, 236, 250, 258, 260, 262, 265, 272, 275, 276, 279, 282, 288, 293, 294, 303, 304, 305, 310, 311, 319, 322, 324, 325, 328, 329, 330, 333, 334, 339, 342, 346, 347, 348, 349, 352, 354, 356, 357, 359, 360, 361, 366, 375, 378, 393, 394, 395, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 419, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 624, 626, 628, 630, 634, 635, 636, 637, 639, 646, 649, 650, 651, 653], "time": [1, 2, 3, 4, 5, 8, 9, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 34, 38, 45, 50, 58, 65, 68, 69, 70, 71, 72, 74, 75, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 115, 124, 135, 141, 142, 143, 144, 147, 148, 151, 157, 158, 159, 162, 168, 171, 172, 173, 174, 175, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 225, 226, 234, 235, 236, 258, 265, 272, 279, 280, 281, 284, 286, 293, 296, 302, 314, 317, 322, 324, 341, 354, 355, 356, 357, 359, 360, 361, 366, 369, 378, 383, 394, 395, 396, 402, 405, 409, 410, 411, 413, 414, 416, 418, 419, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 473, 586, 630, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 653, 655, 656], "adapt": [1, 35, 229, 258, 277, 293, 299, 353, 402, 410, 416, 628, 634, 638, 651], "equal": [1, 16, 17, 22, 38, 87, 97, 109, 122, 129, 130, 144, 166, 169, 170, 171, 180, 200, 259, 260, 303, 304, 317, 319, 322, 324, 325, 328, 329, 331, 395, 413, 417, 423, 427, 463, 622, 623, 634, 636, 652], "introduc": [1, 3, 121, 122, 171, 180, 317, 319, 322, 324, 341, 634, 649], "some": [1, 3, 4, 5, 8, 9, 10, 29, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 70, 72, 75, 76, 77, 80, 85, 86, 87, 88, 89, 90, 91, 92, 99, 105, 107, 108, 109, 110, 115, 117, 124, 135, 137, 141, 142, 143, 144, 147, 150, 151, 152, 157, 158, 159, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 231, 264, 279, 286, 289, 296, 306, 319, 347, 354, 355, 356, 357, 359, 360, 361, 366, 383, 384, 385, 427, 428, 429, 430, 431, 454, 463, 613, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 649, 650, 651, 653, 655, 656], "confus": [1, 36, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 286, 296, 355, 361, 366, 427, 429, 430], "other": [1, 2, 3, 4, 5, 8, 9, 12, 16, 17, 19, 22, 23, 24, 26, 28, 29, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 73, 75, 76, 77, 80, 85, 86, 87, 88, 89, 90, 91, 92, 97, 99, 101, 103, 104, 105, 107, 108, 109, 110, 115, 116, 117, 118, 124, 127, 128, 129, 130, 131, 133, 137, 141, 144, 147, 150, 151, 152, 156, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 238, 240, 244, 245, 266, 273, 279, 282, 289, 293, 294, 296, 301, 316, 317, 319, 324, 334, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 369, 374, 376, 381, 383, 393, 394, 395, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 419, 427, 428, 429, 430, 431, 432, 434, 452, 466, 469, 622, 623, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 649, 650, 651, 652, 655, 656], "better": [1, 4, 9, 10, 16, 17, 32, 33, 34, 158, 192, 193, 194, 197, 199, 209, 319, 324, 353, 362, 366, 628, 630, 636, 639, 651, 655], "consist": [1, 3, 4, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 72, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 100, 103, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 255, 292, 296, 301, 304, 325, 355, 361, 366, 427, 429, 430, 628, 634, 635, 636, 647, 651, 652, 656], "interact": [1, 3, 4, 5, 6, 8, 9, 16, 17, 19, 22, 23, 24, 26, 28, 103, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 203, 206, 286, 379, 383, 478, 628, 634, 636, 638, 639, 640, 642, 649, 650, 651, 656], "keep": [1, 2, 3, 4, 5, 8, 9, 17, 65, 72, 81, 82, 87, 107, 108, 109, 124, 128, 135, 144, 171, 180, 198, 209, 211, 214, 226, 260, 264, 291, 293, 294, 296, 341, 354, 356, 357, 359, 360, 378, 395, 413, 427, 428, 429, 431, 454, 465, 473, 634, 635, 636, 637, 642, 643, 644, 650, 651, 653, 656], "separ": [1, 2, 3, 5, 9, 16, 17, 19, 22, 23, 26, 28, 30, 34, 42, 43, 51, 64, 66, 72, 73, 77, 81, 82, 87, 97, 100, 107, 108, 198, 205, 235, 264, 291, 353, 354, 356, 357, 359, 360, 394, 397, 400, 402, 414, 416, 418, 419, 428, 431, 434, 628, 630, 634, 635, 640, 641, 649, 650, 653, 656], "interchang": [1, 330, 331, 636, 639, 643, 647, 652, 653], "between": [1, 3, 4, 5, 6, 16, 17, 18, 19, 22, 25, 28, 30, 31, 32, 35, 38, 45, 50, 58, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 80, 81, 82, 87, 103, 107, 108, 109, 110, 117, 121, 122, 124, 125, 128, 129, 130, 137, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 240, 245, 259, 270, 281, 284, 286, 293, 294, 296, 303, 304, 312, 317, 319, 324, 325, 330, 331, 353, 354, 355, 356, 357, 359, 360, 361, 364, 365, 366, 376, 379, 383, 393, 395, 396, 397, 400, 401, 402, 405, 406, 409, 410, 411, 413, 414, 415, 416, 418, 419, 423, 427, 428, 429, 430, 431, 434, 467, 473, 478, 628, 630, 634, 635, 637, 638, 642, 646, 647, 649, 650, 651, 653, 656], "wherea": [1, 3, 29, 30, 38, 45, 50, 58, 60, 68, 69, 75, 80, 103, 109, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 166, 167, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 240, 245, 284, 286, 296, 355, 361, 366, 396, 411, 416, 427, 429, 430, 631, 643], "correspond": [1, 3, 4, 5, 16, 17, 19, 22, 23, 24, 26, 28, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 73, 75, 76, 77, 80, 81, 85, 87, 88, 89, 90, 91, 92, 100, 103, 105, 107, 108, 109, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 253, 264, 279, 284, 286, 291, 293, 294, 296, 301, 316, 319, 322, 324, 328, 329, 341, 354, 355, 356, 357, 359, 360, 361, 366, 379, 383, 396, 398, 401, 402, 416, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 628, 629, 634, 635, 636, 638, 639, 641, 642, 643, 649, 650, 651, 652], "sub": [1, 3, 4, 16, 17, 22, 23, 24, 26, 28, 38, 42, 43, 45, 50, 51, 58, 68, 69, 75, 77, 80, 97, 103, 109, 129, 135, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 265, 284, 285, 294, 296, 355, 361, 366, 384, 385, 427, 429, 430, 463, 473, 628, 629, 630, 634, 635, 636, 642, 648, 655, 656], "doesn": [1, 5, 16, 17, 22, 38, 45, 50, 58, 68, 69, 75, 80, 109, 135, 141, 144, 147, 151, 159, 166, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 243, 246, 296, 297, 321, 355, 358, 361, 366, 416, 427, 429, 430, 628, 638, 639], "understood": [1, 634], "serv": [1, 4, 23, 26, 28, 87, 107, 108, 153, 198, 354, 356, 357, 359, 360, 428, 431, 484, 628, 653, 655, 656], "basi": [1, 135, 330, 653, 655], "we": [1, 3, 4, 6, 8, 10, 12, 31, 32, 34, 35, 38, 42, 45, 50, 53, 58, 65, 68, 69, 72, 74, 75, 80, 81, 82, 97, 99, 103, 105, 109, 115, 128, 130, 135, 141, 142, 143, 144, 147, 148, 151, 155, 157, 158, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 240, 255, 264, 267, 273, 284, 289, 292, 293, 294, 296, 297, 300, 324, 328, 330, 331, 332, 353, 355, 361, 366, 393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 427, 429, 430, 432, 454, 477, 627, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 648, 649, 650, 651, 652, 653, 655, 656], "anoth": [1, 3, 4, 9, 15, 18, 20, 21, 25, 27, 32, 53, 80, 85, 103, 108, 116, 122, 129, 141, 144, 147, 150, 151, 152, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 215, 232, 241, 243, 244, 246, 279, 285, 325, 379, 393, 394, 395, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 419, 427, 430, 432, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 628, 630, 634, 636, 637, 638, 640, 641, 648, 649, 650, 651, 656], "wise": [1, 258], "requir": [1, 4, 5, 8, 9, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 72, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 99, 101, 103, 107, 108, 109, 116, 121, 122, 124, 129, 130, 141, 144, 147, 151, 155, 159, 166, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 235, 239, 240, 253, 264, 276, 279, 284, 285, 286, 289, 291, 294, 296, 301, 319, 321, 324, 325, 332, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 382, 383, 384, 385, 393, 394, 395, 396, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 434, 452, 454, 456, 477, 533, 628, 629, 631, 634, 635, 636, 637, 639, 640, 641, 643, 646, 647, 649, 650, 651, 653, 655, 656], "op": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 36, 37, 39, 40, 41, 46, 54, 55, 56, 57, 60, 61, 62, 63, 85, 88, 89, 90, 91, 92, 259, 292, 298, 301, 316, 454, 476], "sinc": [1, 3, 4, 5, 6, 8, 12, 16, 17, 19, 22, 30, 31, 32, 34, 38, 45, 50, 53, 58, 65, 68, 69, 72, 75, 80, 81, 82, 87, 97, 105, 107, 108, 109, 121, 122, 130, 135, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 177, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 241, 296, 298, 299, 302, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 330, 332, 335, 336, 339, 341, 344, 345, 347, 352, 354, 355, 356, 357, 359, 360, 361, 366, 374, 375, 376, 378, 380, 381, 386, 389, 427, 428, 429, 430, 431, 452, 454, 628, 630, 634, 635, 636, 637, 639, 640, 641, 646, 649, 651, 652, 653, 655, 656], "goal": [1, 4, 5, 97, 98, 99, 100, 101, 102, 103, 104, 105, 159, 201, 278, 628, 634, 635, 636, 637, 646, 650, 651], "policy_devic": [1, 16, 17, 19, 22, 23, 24, 26, 28, 479, 481, 482, 483, 635], "explicitli": [1, 3, 4, 5, 41, 86, 112, 113, 120, 124, 231, 340, 379, 462, 628, 630, 635, 637, 642, 649, 650, 653], "do": [1, 3, 4, 5, 8, 60, 105, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 199, 200, 201, 202, 210, 212, 214, 215, 226, 228, 240, 265, 279, 284, 292, 293, 319, 324, 331, 333, 372, 383, 411, 427, 430, 434, 454, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 653, 655, 656], "deepcopi": [1, 332, 411, 427, 430, 649], "place": [1, 2, 3, 4, 20, 35, 38, 42, 43, 44, 45, 50, 51, 58, 64, 66, 68, 69, 73, 75, 77, 80, 87, 107, 108, 109, 115, 117, 124, 127, 129, 137, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 231, 239, 247, 264, 279, 285, 286, 289, 291, 292, 293, 296, 332, 354, 355, 356, 357, 358, 359, 360, 361, 366, 374, 378, 382, 427, 428, 429, 430, 431, 434, 469, 476, 613, 628, 630, 635, 636, 640, 643, 649, 650, 651, 653], "instanti": [1, 2, 3, 4, 16, 17, 28, 30, 31, 64, 65, 66, 70, 71, 72, 73, 81, 82, 85, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 121, 122, 124, 155, 158, 198, 202, 231, 239, 253, 279, 331, 354, 356, 357, 359, 360, 428, 431, 434, 435, 436, 437, 438, 452, 477, 524, 525, 528, 529, 530, 631, 634, 635, 640, 641, 643, 649, 650, 651, 653, 656], "all": [1, 2, 3, 4, 5, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 158, 159, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 224, 226, 228, 234, 235, 238, 239, 243, 244, 246, 249, 255, 259, 260, 264, 272, 274, 276, 279, 280, 285, 286, 289, 291, 293, 296, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 330, 331, 332, 335, 336, 339, 341, 344, 345, 347, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 369, 374, 376, 378, 381, 382, 383, 385, 386, 389, 390, 393, 394, 395, 396, 405, 409, 411, 413, 414, 415, 416, 418, 419, 424, 427, 428, 429, 430, 431, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454, 468, 473, 484, 613, 622, 623, 624, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 648, 649, 650, 651, 653, 655, 656], "graph": [1, 4, 5, 9, 45, 68, 80, 87, 107, 108, 142, 143, 157, 158, 198, 209, 354, 355, 356, 357, 359, 360, 361, 366, 425, 426, 427, 428, 430, 431, 634, 638, 651], "reli": [1, 3, 4, 12, 34, 69, 75, 279, 317, 318, 319, 322, 323, 324, 364, 365, 393, 413, 434, 475, 630, 634, 636, 638, 640, 642, 651, 656], "third": [1, 260, 281, 376, 649, 650], "parti": 1, "try": [1, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 42, 43, 51, 64, 66, 73, 77, 87, 107, 108, 198, 354, 355, 356, 357, 359, 360, 361, 366, 428, 431, 628, 634, 635, 636, 638, 641, 642, 647, 649, 650, 651, 655, 656], "limit": [1, 2, 3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 74, 76, 77, 85, 88, 89, 90, 91, 92, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 209, 214, 215, 235, 255, 393, 395, 410, 411, 413, 415, 427, 430, 628, 630, 634, 635, 637, 649, 650, 651], "chart": 1, "show": [1, 2, 3, 12, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 240, 296, 331, 353, 355, 361, 366, 427, 429, 430, 454, 478, 634, 636, 637, 638, 646, 649, 650, 651, 653, 655], "decis": [1, 3, 4, 305, 310, 339, 374, 399, 412, 629, 637, 639, 640, 649, 650, 653, 656], "multiprocess": [1, 3, 4, 15, 16, 17, 23, 24, 26, 72, 81, 82, 97, 105, 115, 116, 117, 118, 124, 141, 148, 149, 171, 175, 180, 293, 294, 634, 635, 636, 637, 642, 649, 650, 651, 652, 656], "ensur": [1, 2, 3, 4, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 30, 38, 45, 50, 58, 65, 68, 69, 75, 80, 81, 87, 109, 121, 122, 128, 141, 144, 147, 151, 156, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 229, 235, 264, 277, 286, 289, 293, 294, 296, 319, 324, 353, 355, 361, 366, 375, 395, 410, 413, 427, 429, 430, 628, 629, 635, 636, 637, 651, 653], "flexibl": [1, 3, 4, 10, 166, 192, 420, 628, 630, 631, 634, 638, 647, 653, 656], "mechan": [1, 5, 15, 16, 17, 18, 19, 20, 22, 25, 27, 30, 31, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 286, 296, 353, 355, 361, 366, 427, 429, 430, 628, 635, 641, 651], "accommod": [1, 3, 4, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 639, 640], "variou": [1, 3, 4, 15, 144, 285, 393, 394, 395, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 419, 420, 427, 430, 432, 454, 622, 623, 628, 634, 635, 636, 638, 639, 640, 641, 643, 649, 650, 653, 656], "deploy": [1, 638], "scenario": [1, 3, 20, 25, 27, 163, 164, 171, 185, 186, 240, 284, 427, 452, 628, 634, 640, 649, 650, 651], "facilit": [1, 3, 4, 8, 263, 264, 279, 289, 291, 371, 372, 373, 629, 634, 637, 640, 651], "weightupdaterbas": [1, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33], "These": [1, 3, 8, 53, 74, 100, 105, 138, 185, 264, 291, 294, 430, 628, 629, 630, 631, 634, 636, 649, 650, 651, 653, 656], "base": [1, 4, 5, 9, 10, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 32, 33, 38, 53, 65, 72, 75, 81, 82, 86, 103, 121, 122, 126, 132, 135, 136, 138, 139, 141, 142, 143, 144, 147, 151, 155, 157, 158, 159, 165, 166, 167, 171, 172, 175, 180, 181, 182, 185, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 207, 208, 209, 211, 213, 214, 217, 218, 219, 226, 240, 244, 269, 283, 285, 289, 290, 319, 324, 330, 332, 333, 334, 353, 355, 361, 366, 371, 377, 393, 394, 396, 397, 398, 400, 401, 402, 404, 409, 413, 414, 415, 416, 418, 419, 461, 473, 477, 484, 488, 498, 499, 501, 505, 534, 590, 626, 629, 630, 631, 634, 635, 637, 639, 640, 641, 643, 646, 647, 649, 650, 651, 653, 656], "logic": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 631, 649], "allow": [1, 2, 3, 4, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 35, 38, 42, 43, 45, 50, 51, 58, 60, 62, 64, 66, 68, 69, 72, 73, 75, 76, 77, 80, 81, 82, 87, 97, 103, 107, 108, 109, 116, 122, 124, 127, 129, 130, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 231, 232, 267, 294, 296, 321, 325, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 420, 423, 427, 428, 429, 430, 431, 432, 628, 629, 631, 634, 636, 637, 638, 639, 640, 641, 647, 649, 650, 651, 653, 655, 656], "tailor": [1, 200, 628, 655], "need": [1, 2, 3, 4, 5, 8, 9, 11, 14, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 30, 32, 35, 38, 44, 45, 50, 58, 64, 65, 66, 68, 69, 72, 75, 80, 81, 82, 85, 87, 107, 108, 109, 124, 131, 135, 141, 144, 147, 151, 155, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 238, 240, 241, 250, 256, 264, 267, 280, 284, 285, 286, 291, 293, 294, 296, 298, 299, 302, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 332, 333, 335, 336, 339, 341, 344, 345, 347, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 374, 376, 378, 379, 380, 381, 382, 386, 389, 392, 402, 415, 416, 427, 428, 429, 430, 431, 433, 438, 454, 473, 624, 628, 629, 630, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 649, 650, 651, 653, 655, 656], "handl": [1, 2, 3, 4, 15, 16, 17, 18, 20, 21, 23, 25, 26, 27, 28, 32, 33, 38, 45, 50, 58, 60, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 292, 293, 294, 296, 324, 325, 353, 354, 355, 356, 357, 359, 360, 361, 366, 393, 411, 413, 427, 428, 429, 430, 431, 466, 473, 478, 622, 623, 628, 634, 635, 636, 637, 639, 641, 646, 650, 653], "well": [1, 2, 3, 4, 9, 28, 34, 38, 45, 50, 58, 65, 67, 68, 69, 72, 75, 80, 81, 82, 85, 109, 122, 127, 131, 138, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 285, 286, 296, 301, 306, 322, 344, 345, 355, 361, 366, 383, 411, 413, 418, 427, 429, 430, 434, 438, 628, 629, 634, 635, 637, 638, 639, 640, 641, 643, 652, 653, 655, 656], "server": [1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 628], "everi": [1, 4, 9, 16, 17, 18, 19, 22, 30, 31, 38, 42, 43, 45, 50, 51, 58, 60, 62, 65, 68, 69, 70, 71, 72, 75, 77, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 131, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 277, 278, 293, 296, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 330, 331, 332, 335, 336, 339, 341, 344, 345, 347, 352, 355, 361, 366, 374, 376, 378, 381, 386, 389, 395, 410, 411, 413, 427, 429, 430, 473, 628, 631, 634, 635, 636, 637, 639, 640, 649, 650, 651], "even": [1, 3, 4, 5, 9, 12, 17, 23, 24, 26, 28, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 80, 85, 88, 89, 90, 91, 92, 110, 115, 116, 117, 118, 122, 129, 131, 133, 137, 141, 144, 147, 148, 151, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 227, 231, 634, 636, 639, 646, 649, 650, 651, 656], "simplest": [1, 45, 68, 80, 135, 355, 361, 366, 386, 427, 430, 634, 636, 640, 649, 650, 653, 656], "vanillaweightupdat": 1, "dict": [1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 58, 60, 61, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 122, 124, 129, 130, 141, 144, 147, 148, 149, 150, 151, 152, 159, 163, 164, 166, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 255, 279, 284, 286, 292, 293, 294, 296, 297, 303, 304, 305, 306, 307, 308, 309, 310, 315, 325, 339, 353, 354, 355, 356, 357, 359, 360, 361, 366, 379, 383, 396, 402, 416, 418, 427, 428, 429, 430, 431, 454, 458, 459, 467, 473, 475, 477, 478, 479, 481, 482, 483, 500, 524, 525, 572, 615, 616, 622, 623, 624, 629, 634, 635, 636, 653, 655, 656], "assum": [1, 3, 4, 7, 15, 16, 17, 18, 19, 25, 27, 32, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 74, 75, 76, 77, 81, 82, 85, 88, 89, 90, 91, 92, 99, 101, 103, 104, 105, 112, 113, 120, 129, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 207, 220, 234, 237, 242, 250, 264, 265, 272, 279, 286, 289, 291, 302, 319, 324, 352, 369, 386, 398, 402, 403, 416, 429, 432, 443, 444, 445, 446, 448, 449, 450, 451, 454, 634, 636, 648, 651], "divers": [1, 5, 171, 180, 361], "abl": [1, 4, 53, 141, 162, 173, 174, 175, 181, 319, 324, 628, 634, 636, 637, 640, 648, 649, 650, 651, 653], "leav": [1, 3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 72, 73, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 198, 200, 201, 202, 227, 273, 354, 356, 357, 359, 360, 428, 431, 630, 634, 642, 653], "untouch": [1, 87, 97, 103, 107, 108, 109, 195, 196, 198, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 232, 239, 243, 244, 248, 255, 258, 266, 267, 273, 277, 283, 285, 287, 294, 296, 354, 356, 357, 359, 360, 428, 429, 431], "particularli": [1, 3, 4, 65, 72, 81, 82, 87, 107, 108, 110, 124, 198, 211, 321, 354, 356, 357, 359, 360, 428, 431, 475, 478, 638, 655, 656], "benefici": [1, 3, 321], "involv": [1, 87, 107, 108, 150, 152, 153, 163, 164, 177, 198, 232, 235, 284, 319, 324, 354, 356, 357, 359, 360, 428, 431, 628, 639, 641], "architectur": [1, 5, 209, 310, 353, 361, 631, 641, 649, 650, 655], "special": [1, 2, 4, 42, 43, 51, 64, 66, 73, 77, 87, 89, 91, 107, 108, 198, 202, 354, 355, 356, 357, 359, 360, 361, 366, 428, 431, 626, 628, 634, 637, 638, 656], "hardwar": [1, 4, 638], "By": [1, 3, 4, 15, 18, 19, 20, 21, 25, 27, 42, 43, 51, 62, 77, 109, 141, 144, 145, 146, 147, 150, 151, 152, 153, 159, 163, 164, 171, 172, 173, 174, 175, 177, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 257, 258, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 290, 292, 293, 296, 352, 383, 411, 427, 429, 430, 462, 467, 624, 628, 630, 634, 637, 649, 652, 653, 656], "retriev": [1, 3, 4, 15, 16, 17, 18, 21, 22, 25, 27, 53, 64, 65, 66, 68, 70, 71, 72, 73, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 124, 127, 129, 130, 141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 207, 208, 209, 214, 215, 226, 236, 244, 247, 260, 300, 303, 327, 354, 356, 357, 359, 360, 366, 378, 379, 383, 386, 390, 393, 394, 395, 396, 398, 410, 413, 414, 416, 418, 419, 427, 428, 431, 432, 434, 435, 436, 437, 624, 631, 635, 636, 640, 651, 656], "appli": [1, 2, 3, 4, 5, 15, 18, 19, 25, 27, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 254, 255, 256, 257, 259, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 289, 290, 292, 293, 296, 301, 317, 322, 332, 349, 354, 355, 356, 357, 359, 360, 361, 366, 375, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 407, 409, 410, 412, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 434, 452, 466, 468, 628, 631, 634, 635, 636, 642, 646, 649, 651, 655, 656], "seamless": [1, 3, 325, 353, 628, 647], "integr": [1, 2, 3, 32, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 309, 319, 324, 327, 353, 355, 361, 366, 382, 427, 429, 430, 629, 631, 639, 640, 642, 646, 649, 650, 651, 652], "infrastructur": [1, 4, 649, 650], "transit": [1, 38, 45, 50, 58, 68, 69, 75, 80, 99, 103, 109, 122, 130, 135, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 299, 301, 355, 361, 366, 388, 427, 429, 430, 634, 637, 639, 640, 642, 649, 651, 653], "sampl": [1, 2, 5, 9, 10, 31, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 74, 76, 77, 80, 81, 82, 85, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 115, 116, 117, 121, 122, 123, 124, 127, 128, 129, 130, 133, 135, 137, 141, 144, 147, 151, 159, 165, 168, 171, 172, 175, 180, 181, 182, 189, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 224, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 257, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 289, 290, 292, 293, 294, 296, 298, 300, 311, 316, 320, 321, 327, 328, 329, 337, 339, 340, 341, 344, 349, 350, 355, 358, 361, 366, 367, 370, 375, 376, 377, 379, 380, 381, 382, 383, 393, 394, 395, 396, 397, 398, 400, 410, 412, 413, 418, 419, 427, 429, 463, 469, 473, 475, 478, 489, 490, 493, 494, 495, 535, 613, 626, 629, 630, 634, 635, 636, 637, 638, 639, 640, 642, 644, 649, 650, 652, 655, 656], "attent": [1, 3, 9, 200, 235, 355, 361, 366, 427, 628, 634, 637, 647, 656], "given": [1, 3, 4, 16, 17, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 122, 124, 129, 130, 141, 144, 147, 151, 159, 165, 169, 170, 171, 172, 175, 180, 181, 182, 183, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 239, 245, 253, 260, 264, 279, 283, 285, 286, 287, 289, 291, 293, 294, 296, 298, 300, 302, 313, 314, 316, 317, 319, 321, 322, 324, 327, 332, 343, 347, 354, 355, 356, 357, 359, 360, 361, 366, 370, 375, 376, 378, 381, 382, 383, 384, 385, 387, 392, 397, 398, 400, 411, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 464, 467, 620, 628, 629, 630, 631, 634, 635, 636, 639, 640, 641, 642, 643, 650, 651, 656], "built": [1, 2, 3, 4, 6, 8, 87, 107, 108, 124, 142, 143, 150, 157, 158, 168, 169, 198, 354, 356, 357, 359, 360, 393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 420, 427, 428, 430, 431, 432, 618, 620, 621, 624, 628, 631, 634, 635, 636, 637, 638, 641, 643, 646, 651, 653, 656], "flatten": [1, 30, 31, 36, 37, 39, 40, 41, 42, 43, 46, 47, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 73, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 135, 198, 232, 250, 354, 356, 357, 359, 360, 428, 429, 431, 434, 469, 626, 628, 650], "suffici": [1, 4, 5, 634], "preprocess": [1, 3, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 285, 635, 638], "popul": [1, 3, 4, 16, 17, 19, 28, 30, 31, 65, 70, 71, 72, 79, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 200, 254, 279, 311, 332, 411, 427, 430, 634, 636, 637, 640, 642, 651, 653], "replaybuff": [1, 3, 4, 16, 17, 19, 22, 28, 30, 31, 47, 65, 70, 71, 78, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 115, 116, 121, 122, 123, 124, 129, 130, 139, 235, 265, 269, 296, 398, 403, 432, 478, 491, 618, 620, 626, 636, 638, 642, 644, 649, 650, 652, 653, 655], "lazytensorstorag": [1, 3, 16, 17, 19, 22, 30, 65, 72, 80, 81, 82, 121, 129, 130, 135, 269, 296, 478, 487, 636, 638, 644, 649, 650, 653], "lambda": [1, 3, 16, 17, 19, 22, 28, 29, 30, 31, 45, 53, 68, 72, 80, 87, 135, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 205, 225, 232, 240, 241, 253, 255, 279, 287, 294, 296, 297, 302, 352, 355, 361, 366, 375, 378, 379, 380, 404, 406, 407, 418, 427, 430, 434, 437, 445, 446, 450, 451, 452, 620, 628, 630, 634, 635, 637, 638, 649, 650, 652, 653, 655, 656], "reshap": [1, 3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 103, 129, 135, 232, 319, 324, 325, 340, 452, 628, 636, 649, 650], "slice": [1, 3, 4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 65, 70, 72, 76, 77, 85, 88, 89, 90, 91, 92, 97, 99, 103, 122, 124, 129, 130, 228, 234, 235, 494, 495, 637, 653], "recommend": [1, 3, 5, 8, 16, 17, 19, 22, 23, 24, 26, 28, 64, 65, 66, 72, 73, 81, 82, 87, 107, 108, 129, 135, 155, 192, 193, 194, 197, 198, 209, 235, 332, 353, 354, 356, 357, 359, 360, 361, 364, 365, 366, 395, 413, 428, 431, 630, 642, 647, 649, 650], "achiev": [1, 3, 4, 5, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 278, 296, 302, 355, 361, 366, 379, 427, 429, 430, 469, 631, 634, 635, 636, 637, 638, 646, 649, 650, 651, 653, 655, 656], "multidimension": [1, 3, 81, 121, 122, 653], "slicesampl": [1, 3, 97, 122, 130, 235, 494, 637, 653], "sampler": [1, 2, 3, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 115, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 131, 133, 135, 137, 235, 265, 340, 398, 403, 432, 491, 498, 634, 636, 637, 649, 650, 653], "One": [1, 3, 4, 5, 9, 36, 37, 41, 42, 43, 46, 51, 56, 57, 62, 63, 77, 86, 135, 141, 142, 143, 171, 175, 180, 181, 235, 269, 289, 298, 337, 382, 386, 417, 423, 458, 634, 635, 653, 656], "must": [1, 3, 4, 8, 12, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 115, 116, 117, 118, 122, 124, 129, 130, 131, 132, 133, 135, 137, 141, 142, 144, 147, 148, 151, 157, 159, 169, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 185, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 228, 231, 232, 235, 238, 240, 241, 247, 251, 253, 255, 257, 258, 260, 262, 273, 276, 278, 279, 280, 283, 284, 286, 287, 288, 293, 296, 303, 304, 313, 319, 321, 324, 325, 328, 329, 330, 331, 343, 355, 358, 361, 366, 370, 375, 376, 378, 379, 380, 381, 382, 383, 386, 387, 393, 394, 396, 397, 398, 400, 401, 402, 403, 404, 409, 411, 413, 414, 415, 416, 417, 418, 419, 427, 429, 430, 432, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 628, 630, 634, 635, 636, 637, 640, 646, 648, 651, 653], "shape": [1, 3, 4, 16, 17, 19, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 115, 116, 117, 121, 124, 129, 135, 137, 141, 144, 145, 146, 147, 150, 151, 152, 157, 158, 159, 162, 163, 164, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 185, 186, 187, 192, 193, 194, 197, 198, 199, 200, 201, 202, 205, 207, 208, 214, 215, 220, 226, 228, 232, 234, 236, 243, 246, 247, 248, 253, 255, 256, 260, 262, 266, 267, 269, 273, 276, 277, 279, 282, 287, 293, 295, 296, 300, 302, 305, 306, 307, 308, 309, 310, 311, 312, 315, 317, 318, 319, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 337, 338, 339, 340, 341, 342, 343, 348, 349, 351, 354, 355, 356, 357, 359, 360, 361, 366, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 390, 393, 394, 396, 397, 398, 400, 401, 402, 409, 413, 414, 415, 416, 418, 419, 423, 427, 428, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 463, 469, 473, 524, 525, 528, 529, 530, 620, 628, 629, 630, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 652, 653, 655, 656], "clearli": [1, 3, 628], "dimension": [1, 65, 69, 72, 80, 81, 82, 200, 245, 319, 324, 434, 439, 447, 630, 650], "num_slic": [1, 3, 97, 103, 122, 129, 130, 494, 495, 653], "4": [1, 2, 3, 4, 8, 36, 38, 42, 43, 47, 51, 53, 56, 57, 58, 62, 65, 68, 70, 71, 72, 74, 75, 77, 78, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 115, 116, 117, 121, 122, 124, 129, 130, 137, 141, 142, 143, 144, 145, 146, 147, 151, 157, 158, 159, 160, 161, 162, 165, 167, 171, 172, 175, 178, 179, 180, 181, 182, 192, 193, 194, 197, 198, 199, 200, 201, 202, 213, 228, 229, 231, 232, 235, 240, 241, 247, 269, 276, 277, 278, 284, 293, 294, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 322, 323, 325, 327, 328, 329, 330, 331, 335, 336, 337, 339, 340, 341, 342, 343, 351, 354, 356, 357, 359, 360, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 385, 387, 393, 394, 396, 397, 398, 400, 401, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 427, 428, 430, 431, 432, 452, 453, 477, 478, 533, 541, 551, 557, 628, 629, 633, 634, 635, 636, 637, 643, 649, 650, 651, 653, 654, 655, 656], "trajectory_kei": [1, 34, 129, 130], "traj_id": [1, 3, 4, 16, 17, 19, 30, 34, 47, 78, 232, 269, 642, 653], "total_fram": [1, 2, 3, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 47, 58, 70, 78, 232, 235, 269, 473, 478, 479, 481, 482, 483, 533, 613, 620, 631, 634, 635, 636, 637, 638, 642, 644, 649, 650, 653, 655], "dim": [1, 3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 72, 73, 76, 77, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 129, 198, 219, 235, 236, 258, 262, 275, 276, 279, 288, 293, 323, 347, 352, 354, 356, 357, 359, 360, 378, 428, 431, 541, 542, 563, 567, 580, 581, 585, 592, 624, 628, 630, 635, 636, 638, 649, 651, 653], "ndim": [1, 3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 65, 72, 76, 77, 81, 82, 85, 88, 89, 90, 91, 92, 115, 117, 121, 122, 135, 137, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 258, 296, 378, 485, 487, 499], "parallelenv": [1, 3, 4, 16, 17, 19, 22, 26, 30, 31, 109, 135, 141, 144, 147, 151, 159, 166, 172, 173, 174, 175, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 284, 285, 294, 296, 319, 324, 429, 452, 621, 626, 634, 635, 636, 639, 648, 655, 656], "make_env": [1, 4, 171, 180, 186, 284, 293, 294, 452, 615, 616, 628, 634, 635, 655, 656], "regular": [1, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 64, 66, 73, 87, 107, 108, 109, 121, 127, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 257, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 289, 290, 292, 293, 296, 299, 301, 312, 319, 324, 343, 354, 356, 357, 358, 359, 360, 376, 380, 381, 382, 383, 403, 413, 428, 429, 430, 431, 476, 477, 478, 626, 631, 634, 635, 638, 639, 640, 644, 646, 653, 656], "behav": [1, 4, 153, 165, 317, 322, 337, 401, 409, 411, 427, 430, 638, 652], "accordingli": [1, 3, 4, 64, 66, 73, 87, 107, 108, 122, 196, 198, 241, 258, 277, 278, 322, 354, 356, 357, 359, 360, 380, 428, 431, 637], "3": [1, 3, 4, 7, 8, 11, 12, 16, 17, 19, 22, 28, 30, 31, 33, 36, 37, 38, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 77, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 115, 117, 121, 122, 124, 129, 130, 135, 137, 141, 144, 145, 146, 147, 150, 151, 152, 153, 154, 159, 162, 163, 164, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 229, 231, 232, 235, 239, 240, 241, 245, 247, 248, 253, 255, 260, 262, 264, 266, 267, 269, 272, 273, 276, 277, 278, 279, 282, 284, 285, 286, 287, 289, 291, 294, 296, 297, 299, 300, 302, 303, 304, 306, 307, 308, 310, 313, 315, 317, 318, 319, 322, 323, 324, 325, 327, 328, 330, 331, 332, 337, 340, 342, 352, 353, 354, 355, 356, 357, 359, 360, 361, 366, 370, 371, 372, 373, 375, 376, 379, 381, 382, 385, 386, 387, 393, 394, 396, 397, 398, 400, 401, 402, 403, 404, 405, 409, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 440, 443, 444, 445, 446, 448, 449, 450, 451, 452, 454, 471, 524, 541, 564, 629, 631, 633, 634, 635, 636, 637, 639, 640, 642, 643, 649, 650, 651, 653, 654, 655, 656], "isn": [1, 3, 4, 9, 16, 17, 19, 22, 23, 24, 26, 28, 64, 66, 73, 87, 103, 107, 108, 121, 135, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 198, 200, 201, 202, 231, 247, 253, 354, 356, 357, 359, 360, 375, 382, 428, 431, 434, 640, 641, 643, 649, 650], "current": [1, 3, 4, 13, 15, 16, 17, 18, 19, 22, 25, 27, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 119, 122, 124, 130, 141, 144, 147, 151, 153, 159, 166, 169, 170, 171, 172, 175, 180, 181, 182, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 231, 232, 235, 253, 265, 278, 279, 280, 284, 285, 286, 294, 296, 314, 341, 345, 349, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 378, 393, 395, 396, 403, 410, 413, 415, 416, 427, 428, 429, 430, 431, 434, 457, 628, 631, 634, 635, 636, 637, 641, 649, 650, 651, 653, 656], "fulli": [1, 3, 9, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 318, 321, 323, 355, 361, 366, 427, 429, 430, 635, 638, 641, 651, 653], "ani": [1, 2, 3, 4, 6, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 124, 125, 128, 130, 131, 133, 135, 136, 137, 139, 140, 141, 144, 147, 148, 151, 152, 159, 166, 171, 172, 173, 174, 175, 180, 181, 182, 183, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 250, 251, 253, 254, 255, 257, 263, 264, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 297, 302, 303, 304, 310, 311, 325, 334, 340, 353, 354, 355, 356, 357, 359, 360, 361, 366, 374, 378, 382, 383, 384, 385, 393, 394, 395, 396, 397, 398, 400, 401, 402, 409, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 434, 436, 437, 452, 454, 459, 466, 473, 475, 476, 477, 479, 481, 482, 483, 485, 487, 491, 494, 495, 496, 497, 498, 499, 500, 502, 506, 510, 524, 525, 526, 528, 529, 530, 532, 533, 538, 545, 546, 547, 584, 591, 627, 628, 630, 631, 634, 635, 636, 637, 638, 640, 641, 646, 649, 650, 651, 653, 655, 656], "consecut": [1, 4, 97, 128, 155, 324, 341, 454, 637, 639, 642, 650, 653, 656], "won": [1, 4, 5, 16, 17, 19, 22, 23, 24, 26, 28, 38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 103, 107, 108, 109, 141, 144, 147, 148, 150, 151, 159, 166, 167, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 264, 291, 296, 354, 355, 356, 357, 359, 360, 361, 366, 393, 427, 428, 429, 430, 431, 473, 624, 635, 636, 639, 640], "therebi": [1, 35, 452, 630, 634, 635], "interrupt": [1, 3, 151, 202, 378, 440], "start": [1, 3, 4, 5, 6, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 35, 53, 70, 85, 86, 87, 97, 105, 121, 122, 129, 130, 141, 144, 147, 148, 151, 156, 159, 162, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 226, 242, 468, 626, 633, 634, 635, 637, 638, 645, 650, 651, 653, 654, 656], "get": [1, 3, 4, 5, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 42, 43, 45, 51, 53, 64, 65, 66, 68, 69, 72, 73, 75, 77, 80, 87, 97, 99, 103, 107, 108, 109, 115, 117, 122, 129, 130, 131, 133, 135, 137, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 208, 213, 214, 215, 229, 234, 236, 240, 243, 245, 246, 255, 260, 265, 278, 279, 282, 286, 293, 294, 316, 321, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 370, 379, 380, 383, 390, 427, 428, 430, 431, 434, 435, 436, 437, 438, 454, 458, 626, 628, 629, 630, 633, 634, 635, 636, 637, 638, 645, 647, 649, 650, 651, 653, 654, 655, 656], "rid": [1, 45, 68, 80, 355, 361, 366, 427, 430], "natur": [1, 3, 4, 14, 23, 24, 26, 192, 628, 634, 640, 641, 642, 653], "background": [1, 14, 16, 17, 22, 23, 24, 26, 31, 653], "simpli": [1, 2, 4, 7, 64, 66, 73, 86, 87, 107, 108, 133, 135, 140, 198, 204, 248, 273, 292, 354, 356, 357, 359, 360, 411, 427, 428, 430, 431, 434, 628, 629, 630, 634, 636, 641, 646, 649, 650, 656], "replay_buff": [1, 2, 3, 9, 16, 17, 19, 22, 28, 30, 31, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 235, 469, 478, 479, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 533, 620, 631, 634, 635, 636, 637, 642, 649, 650, 653], "rb": [1, 3, 16, 17, 19, 22, 30, 47, 65, 70, 71, 72, 78, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 116, 121, 122, 124, 129, 130, 135, 235, 269, 296, 635, 637, 638, 642, 644, 650, 652, 653, 655], "paus": [1, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31], "sleep": [1, 16, 17, 19, 22, 30, 70, 148, 656], "10": [1, 3, 4, 8, 29, 34, 36, 37, 38, 41, 45, 46, 53, 54, 58, 65, 70, 71, 72, 74, 80, 81, 82, 83, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 115, 116, 117, 121, 124, 129, 130, 135, 137, 141, 142, 143, 144, 147, 148, 151, 157, 158, 159, 165, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 185, 186, 192, 193, 194, 197, 198, 200, 201, 202, 205, 207, 208, 210, 212, 228, 229, 232, 234, 235, 240, 241, 278, 280, 281, 282, 293, 294, 296, 300, 302, 305, 306, 308, 310, 312, 316, 317, 318, 319, 321, 322, 323, 324, 327, 328, 329, 339, 341, 352, 354, 356, 357, 359, 360, 379, 383, 386, 390, 394, 398, 400, 407, 413, 414, 415, 419, 428, 431, 432, 434, 435, 436, 437, 440, 454, 463, 525, 528, 529, 530, 535, 540, 583, 601, 631, 634, 635, 636, 637, 638, 639, 640, 644, 649, 651, 653, 655, 656], "i": [1, 3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 38, 42, 43, 45, 47, 50, 51, 58, 65, 68, 69, 72, 75, 77, 78, 80, 82, 83, 87, 107, 108, 109, 110, 111, 115, 117, 121, 122, 129, 130, 137, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 241, 242, 258, 264, 269, 272, 284, 286, 291, 296, 318, 319, 323, 324, 343, 354, 355, 356, 357, 359, 360, 361, 366, 369, 376, 378, 379, 381, 382, 383, 393, 395, 396, 397, 401, 402, 409, 410, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 434, 435, 436, 437, 463, 613, 628, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 649, 650, 651, 653, 655, 656], "rang": [1, 3, 4, 5, 9, 65, 70, 71, 72, 74, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 115, 117, 124, 135, 141, 144, 147, 148, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 199, 200, 201, 202, 207, 269, 282, 293, 296, 297, 318, 323, 340, 354, 356, 357, 359, 360, 410, 418, 419, 428, 431, 630, 631, 634, 636, 637, 638, 641, 642, 644, 649, 650, 651, 653, 655], "optim_step": [1, 300, 327, 638, 644], "rest": [1, 2, 16, 17, 22, 45, 301, 629, 636, 637, 649, 651, 655], "multithread": [1, 3, 4, 65, 72, 81, 82, 97, 99, 100, 101, 102, 103, 104, 105, 106, 166, 167, 642, 653], "mind": [1, 4, 97, 103, 122, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 649, 650], "gil": 1, "relat": [1, 3, 4, 5, 11, 42, 65, 171, 197, 250, 393, 394, 396, 397, 398, 400, 401, 402, 409, 413, 414, 415, 416, 418, 419, 635, 644, 651], "restrict": [1, 3, 4, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431, 630, 635, 646, 652, 653, 656], "hand": [1, 3, 4, 8, 28, 42, 649, 650, 651], "let": [1, 2, 3, 4, 7, 8, 12, 34, 38, 45, 50, 53, 58, 65, 68, 69, 72, 75, 80, 81, 82, 83, 109, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 296, 330, 331, 355, 361, 366, 375, 427, 429, 430, 467, 628, 630, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "child": [1, 21, 38, 45, 50, 53, 58, 68, 69, 75, 80, 87, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430, 635], "fill": [1, 16, 17, 19, 22, 23, 24, 26, 28, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 97, 151, 202, 231, 279, 292, 324, 434, 637, 651, 652], "truli": [1, 292, 655], "decoupl": [1, 14, 16, 17, 19, 22, 23, 24, 26, 30, 634, 641, 655], "been": [1, 3, 4, 6, 8, 9, 13, 23, 26, 28, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 65, 70, 71, 72, 74, 76, 77, 81, 82, 85, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 128, 141, 144, 147, 151, 155, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 255, 257, 277, 278, 285, 286, 317, 319, 322, 324, 332, 378, 393, 411, 413, 415, 427, 430, 634, 635, 636, 637, 648, 649, 650, 651, 653, 655, 656], "shut": [1, 14, 16, 17, 19, 22, 23, 24, 26, 30, 31, 175, 181], "down": [1, 5, 14, 16, 17, 19, 22, 23, 24, 26, 30, 31, 175, 181, 630, 637, 639], "async_shutdown": [1, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 70], "mean": [1, 2, 3, 4, 5, 8, 16, 17, 18, 19, 22, 23, 24, 26, 28, 30, 64, 66, 73, 81, 85, 87, 97, 107, 108, 116, 121, 122, 129, 130, 135, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 205, 231, 260, 284, 293, 294, 298, 299, 300, 311, 314, 317, 319, 321, 322, 324, 327, 339, 340, 348, 349, 354, 356, 357, 359, 360, 379, 383, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 427, 428, 430, 431, 434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 466, 477, 629, 630, 634, 635, 636, 638, 640, 649, 650, 651, 653, 656], "drastic": [1, 158, 171, 653], "load": [1, 3, 7, 8, 16, 17, 19, 22, 30, 31, 32, 33, 38, 45, 47, 50, 58, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 78, 80, 81, 82, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 124, 131, 132, 133, 137, 138, 141, 144, 146, 147, 151, 159, 171, 172, 175, 180, 181, 182, 183, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 225, 293, 294, 296, 353, 354, 355, 356, 357, 359, 360, 361, 366, 427, 428, 429, 430, 431, 473, 475, 477, 478, 624, 628, 631, 634, 636, 638, 646, 647, 653], "factor": [1, 9, 12, 35, 45, 58, 269, 296, 298, 299, 316, 320, 334, 341, 349, 350, 394, 400, 403, 404, 406, 417, 440, 634, 635, 638, 640, 644, 649, 650, 653, 656], "signific": [1, 3, 4, 6, 9, 636, 655, 656], "understand": [1, 3, 9, 14, 23, 24, 26, 45, 628, 634, 635, 638, 639, 640, 646, 649, 650], "affect": [1, 4, 9, 38, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 241, 286, 294, 296, 354, 355, 356, 357, 359, 360, 361, 366, 427, 428, 429, 430, 431, 434, 435, 436, 437, 649], "legitim": [1, 630, 656], "unless": [1, 3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 103, 107, 108, 109, 112, 128, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 284, 286, 294, 296, 301, 354, 355, 356, 357, 359, 360, 361, 366, 393, 394, 396, 409, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 636], "benchmark": [1, 3, 4, 10, 142, 143, 151, 157, 158, 202], "backend": [1, 2, 4, 8, 16, 17, 19, 22, 23, 24, 28, 29, 30, 87, 141, 144, 147, 150, 151, 159, 171, 172, 175, 180, 181, 182, 191, 192, 193, 194, 197, 200, 201, 202, 225, 297, 353, 355, 361, 366, 506, 510, 628, 631, 634, 636, 637, 638, 639, 642, 643, 647, 651], "gloo": [1, 23, 24, 29], "nccl": [1, 23, 24, 353, 364, 365], "mpi": [1, 23, 24], "distributeddatacollector": [1, 25, 29, 626], "rpc": [1, 16, 17, 19, 22, 26, 27, 29, 30, 31, 71, 353], "rpcdatacollector": [1, 27, 29, 626], "launcher": [1, 23, 24, 26, 29], "rai": [1, 16, 17, 18, 19, 22, 28, 30, 31, 32, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 193, 194, 197, 207, 209, 213, 214, 257, 353, 358, 363, 366, 628], "submitit": [1, 23, 24, 26, 29], "mode": [1, 4, 7, 14, 16, 17, 19, 22, 23, 24, 26, 28, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 107, 108, 109, 141, 144, 147, 151, 156, 159, 166, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 243, 246, 278, 286, 293, 294, 296, 301, 311, 319, 320, 321, 324, 329, 337, 348, 349, 350, 354, 355, 356, 357, 359, 360, 361, 366, 369, 379, 383, 395, 411, 413, 427, 428, 429, 430, 431, 452, 462, 467, 583, 628, 629, 630, 634, 635, 649, 650, 655, 656], "find": [1, 5, 7, 8, 23, 24, 26, 65, 67, 83, 129, 130, 205, 298, 322, 341, 466, 470, 634, 635, 638, 640, 641, 646, 649, 650], "folder": [1, 3, 64, 66, 73, 87, 107, 108, 185, 198, 235, 354, 356, 357, 359, 360, 428, 431, 635], "machin": [1, 3, 8, 23, 24, 26, 58, 102, 155, 649, 650, 655], "wonder": 1, "why": [1, 3, 4, 226, 630, 649, 651, 656], "instead": [1, 3, 4, 5, 8, 9, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 32, 36, 38, 41, 45, 50, 58, 68, 69, 70, 75, 80, 84, 87, 103, 107, 108, 109, 121, 122, 141, 144, 147, 151, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 250, 296, 297, 298, 299, 302, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 332, 335, 336, 339, 341, 344, 345, 347, 352, 354, 355, 356, 357, 359, 360, 361, 366, 374, 376, 378, 381, 382, 386, 389, 393, 395, 396, 398, 401, 402, 403, 409, 410, 413, 414, 415, 416, 427, 428, 429, 430, 431, 432, 434, 438, 442, 624, 628, 630, 637, 638, 639, 640, 644, 651, 653, 656], "lower": [1, 3, 4, 28, 38, 39, 121, 122, 238, 293, 294, 344, 345, 386, 413, 636, 649, 651], "io": [1, 12, 97, 103, 157, 158, 166, 169, 170, 183, 184, 322, 323, 638], "footprint": [1, 3, 653], "commun": [1, 3, 4, 25, 27, 87, 107, 108, 159, 171, 175, 180, 198, 201, 353, 354, 356, 357, 359, 360, 364, 365, 428, 431, 627, 628, 636, 656], "yet": [1, 142, 143, 157, 429, 652], "plai": [1, 4, 173, 174, 182, 192, 235, 635, 636, 641, 653, 656], "role": [1, 4, 108, 164, 192, 194, 197, 205, 214, 215, 361, 366, 430, 628, 635, 641, 647, 656], "opposit": [1, 649], "direct": [1, 3, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 317, 322, 355, 361, 366, 411, 427, 429, 430, 628, 635, 641, 647], "faster": [1, 3, 5, 34, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 104, 105, 121, 166, 328, 434, 435, 436, 437, 637, 638, 649, 650], "share": [1, 2, 4, 7, 9, 16, 17, 19, 22, 30, 34, 64, 66, 72, 73, 81, 82, 85, 87, 107, 108, 110, 113, 115, 116, 117, 118, 122, 124, 125, 129, 131, 133, 137, 148, 171, 180, 193, 194, 197, 198, 207, 213, 214, 276, 284, 293, 294, 319, 324, 330, 331, 354, 356, 357, 359, 360, 371, 372, 373, 393, 394, 395, 396, 397, 401, 402, 409, 410, 413, 414, 415, 416, 418, 419, 428, 431, 491, 624, 626, 628, 629, 630, 631, 636, 638, 644, 646, 647, 648, 649, 650, 655, 656], "among": [1, 4, 60, 173, 174, 284, 402, 416, 630, 649, 650], "prohibit": [1, 4, 19, 135], "slow": [1, 3, 4, 5, 12, 64, 66, 73, 87, 107, 108, 116, 129, 130, 198, 354, 356, 357, 359, 360, 428, 431], "compar": [1, 4, 103, 135, 394, 396, 409, 414, 416, 418, 419, 467, 628, 630, 634, 636, 638, 640, 641, 649, 650, 653, 656], "gpu": [1, 3, 8, 9, 31, 33, 38, 45, 50, 58, 68, 69, 75, 80, 109, 115, 117, 137, 141, 144, 147, 151, 152, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 257, 296, 353, 355, 358, 361, 362, 363, 366, 427, 429, 430, 628, 634, 636, 637, 649, 650, 656], "driver": [1, 8], "keyword": [1, 3, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 117, 118, 121, 122, 124, 127, 129, 130, 133, 137, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 157, 158, 159, 163, 164, 166, 167, 169, 170, 171, 172, 175, 177, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 228, 229, 231, 232, 234, 235, 236, 238, 239, 240, 241, 244, 247, 248, 249, 251, 253, 254, 255, 257, 258, 263, 264, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 302, 316, 319, 324, 328, 329, 330, 331, 341, 353, 354, 355, 356, 357, 359, 360, 361, 366, 370, 374, 375, 378, 379, 380, 382, 383, 386, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 422, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 442, 452, 454, 459, 461, 473, 477, 478, 621, 634, 635, 636, 638, 640, 643, 649, 650, 653, 655, 656], "mani": [1, 2, 3, 4, 5, 72, 87, 107, 108, 142, 143, 145, 146, 147, 150, 152, 153, 157, 158, 166, 167, 177, 198, 200, 205, 207, 279, 354, 356, 357, 359, 360, 393, 395, 402, 410, 413, 427, 428, 431, 475, 628, 629, 634, 635, 636, 638, 639, 640, 642, 644, 649, 650, 651, 653, 655, 656], "eg": [1, 3, 4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 73, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 110, 115, 116, 117, 118, 131, 133, 137, 141, 144, 145, 146, 147, 150, 151, 152, 153, 155, 159, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 245, 277, 286, 297, 330, 354, 356, 357, 359, 360, 374, 428, 431, 454], "gymnasium": [1, 3, 4, 6, 16, 17, 19, 22, 30, 80, 141, 144, 147, 150, 151, 152, 156, 159, 160, 161, 171, 172, 175, 180, 181, 182, 191, 192, 193, 194, 197, 200, 201, 202, 225, 248, 273, 277, 292, 297, 506, 635, 636, 638, 651, 655], "warn": [1, 4, 64, 66, 69, 73, 75, 87, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 286, 293, 298, 316, 341, 354, 356, 357, 359, 360, 428, 431, 462, 628, 635, 646, 647], "quickli": [1, 4, 635, 649, 650, 656], "becom": [1, 3, 4, 5, 28, 317, 322, 649, 650, 656], "quit": [1, 4, 12, 97, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 634, 635, 636, 638, 640, 649, 650, 656], "annoi": [1, 4], "filter": [1, 3, 4, 5, 86, 122, 129, 130, 393, 394, 396, 397, 401, 402, 409, 413, 414, 416, 639], "out": [1, 3, 4, 5, 6, 10, 15, 18, 20, 21, 25, 27, 28, 32, 33, 38, 45, 50, 53, 58, 64, 66, 68, 69, 73, 75, 80, 86, 87, 99, 103, 107, 108, 109, 113, 122, 129, 130, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 276, 279, 296, 298, 317, 318, 322, 328, 329, 332, 333, 334, 354, 355, 356, 357, 359, 360, 361, 366, 370, 374, 375, 376, 379, 380, 381, 382, 383, 411, 425, 426, 427, 428, 429, 430, 431, 628, 630, 631, 634, 635, 636, 637, 638, 639, 640, 642, 649, 650, 651, 653, 655, 656], "still": [1, 3, 4, 10, 45, 68, 80, 87, 88, 103, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 284, 286, 341, 355, 361, 366, 410, 411, 427, 430, 628, 630, 634, 635, 637, 648, 651, 653, 656], "wish": [1, 4, 12, 16, 17, 22, 103, 225, 641, 653], "displai": [1, 4, 8, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 473, 631, 634, 635, 646, 650, 651], "filter_warnings_subprocess": [1, 4], "fals": [1, 3, 4, 12, 13, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 227, 228, 229, 231, 232, 235, 236, 239, 241, 243, 246, 247, 248, 250, 253, 254, 255, 257, 258, 259, 260, 262, 264, 265, 266, 267, 269, 271, 272, 273, 276, 277, 279, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 296, 297, 298, 299, 300, 302, 303, 304, 306, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 341, 342, 343, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360, 361, 363, 366, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 393, 394, 395, 396, 397, 398, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 423, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 443, 444, 445, 446, 448, 449, 450, 451, 452, 454, 461, 462, 465, 466, 467, 469, 470, 473, 478, 479, 481, 482, 483, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 537, 538, 563, 566, 576, 587, 599, 600, 601, 602, 603, 609, 610, 611, 624, 628, 629, 630, 631, 634, 635, 636, 637, 638, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 656], "power": [2, 12, 635], "top": [2, 4, 5, 109, 135, 142, 143, 157, 158, 242, 285, 300, 327, 355, 361, 366, 548, 640], "hydra": [2, 477, 631], "dataclass": [2, 64, 66, 73, 85, 87, 107, 108, 198, 354, 356, 357, 359, 360, 411, 428, 431, 631], "overridden": [2, 3, 4, 15, 18, 20, 21, 25, 27, 38, 45, 50, 68, 69, 75, 80, 97, 100, 101, 103, 104, 105, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 298, 299, 302, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 332, 335, 336, 339, 341, 344, 345, 347, 352, 374, 376, 378, 381, 386, 389, 434, 436, 437, 637, 649], "extend": [2, 3, 9, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 47, 53, 65, 68, 70, 71, 72, 78, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 114, 115, 118, 121, 122, 124, 125, 129, 130, 133, 135, 136, 139, 140, 192, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 228, 234, 269, 285, 296, 299, 411, 427, 429, 430, 469, 477, 626, 628, 630, 631, 634, 635, 636, 638, 642, 644, 649, 650, 652, 653, 655], "advantag": [2, 4, 9, 200, 207, 315, 393, 395, 410, 413, 415, 427, 429, 434, 435, 436, 437, 438, 439, 441, 443, 445, 447, 448, 450, 628, 630, 631, 634, 635, 636, 637, 650, 651, 656], "easi": [2, 4, 6, 12, 97, 102, 141, 144, 145, 146, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 298, 316, 341, 628, 629, 630, 634, 635, 636, 647, 650, 652, 653, 655, 656], "glimps": 2, "go": [2, 3, 4, 8, 116, 162, 171, 241, 265, 269, 374, 440, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "sota": [2, 16, 17, 165, 251, 415, 463, 615, 628, 631, 634, 635, 655], "ppo_train": [2, 631], "help": [2, 4, 5, 38, 45, 50, 58, 68, 69, 75, 80, 85, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 247, 296, 355, 361, 366, 393, 395, 410, 413, 415, 427, 429, 430, 477, 627, 630, 631, 634, 635, 636, 637, 646, 647, 649, 650], "overrid": [2, 4, 15, 18, 20, 21, 25, 27, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 72, 75, 76, 77, 80, 85, 88, 89, 90, 91, 92, 97, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 231, 296, 311, 355, 361, 366, 427, 429, 430, 454, 624, 629, 631, 646], "reproduc": [2, 4, 69, 75, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 235, 253, 478, 634, 636, 638, 650], "command": [2, 7, 8, 11, 175, 181, 182, 636, 646, 649, 650, 651, 656], "here": [2, 3, 4, 5, 8, 9, 10, 11, 16, 17, 28, 104, 105, 135, 141, 144, 145, 146, 147, 151, 155, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 212, 235, 284, 332, 461, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 642, 644, 649, 650, 651, 653, 655, 656], "minim": [2, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 456, 628, 631, 653], "config": [2, 7, 8, 264, 291, 305, 310, 339, 477, 614, 615, 616, 618, 621, 631], "yaml": 2, "training_env": [2, 631], "env_nam": [2, 7, 141, 142, 144, 145, 147, 148, 150, 151, 153, 157, 159, 160, 166, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 631, 634, 636, 656], "cartpol": [2, 3, 4, 12, 47, 58, 78, 80, 141, 144, 145, 146, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 231, 232, 235, 240, 272, 278, 293, 296, 378, 452, 635, 637, 640, 642, 643, 644, 653, 656], "v1": [2, 3, 4, 12, 16, 17, 19, 22, 28, 29, 30, 31, 47, 58, 70, 78, 80, 87, 99, 101, 107, 108, 109, 135, 141, 144, 147, 148, 150, 151, 152, 157, 158, 159, 166, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 231, 232, 235, 238, 240, 241, 248, 254, 255, 260, 267, 269, 272, 273, 274, 277, 278, 279, 280, 281, 284, 285, 287, 293, 294, 296, 302, 319, 324, 354, 356, 357, 359, 360, 378, 423, 428, 429, 431, 443, 444, 445, 446, 448, 449, 450, 451, 452, 629, 631, 635, 637, 639, 640, 641, 642, 643, 644, 651, 653, 655, 656], "part": [2, 3, 4, 5, 9, 38, 45, 50, 58, 68, 69, 74, 75, 80, 87, 97, 100, 101, 103, 104, 105, 109, 122, 141, 142, 144, 147, 151, 157, 159, 169, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 234, 260, 269, 272, 296, 355, 361, 366, 387, 427, 429, 430, 463, 624, 628, 630, 634, 636, 637, 638, 644, 649, 651, 656], "tell": [2, 3, 4, 5, 8, 141, 173, 174, 284, 634, 637, 642, 649, 650], "includ": [2, 3, 4, 5, 8, 10, 28, 38, 45, 50, 58, 60, 68, 69, 75, 80, 85, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 131, 133, 137, 141, 144, 147, 151, 159, 165, 169, 170, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 250, 253, 278, 284, 286, 293, 294, 296, 319, 324, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 393, 396, 402, 411, 413, 416, 427, 428, 429, 430, 431, 466, 477, 533, 613, 628, 629, 631, 634, 635, 636, 637, 638, 646, 647, 649, 650, 651, 653, 656], "target": [2, 3, 5, 9, 28, 35, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 278, 296, 340, 353, 355, 361, 366, 382, 383, 393, 394, 395, 396, 397, 398, 400, 402, 403, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 427, 429, 430, 432, 433, 434, 435, 436, 437, 438, 472, 478, 613, 619, 620, 630, 631, 637, 638, 644, 649, 651], "proper": [2, 3, 4, 5, 7, 8, 209, 353, 434, 435, 436, 437, 628, 635, 636, 646, 649, 650, 651, 653], "specifi": [2, 3, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 141, 144, 147, 151, 159, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 240, 242, 243, 244, 246, 272, 275, 278, 283, 287, 288, 296, 297, 300, 322, 353, 354, 355, 356, 357, 359, 360, 361, 364, 365, 366, 382, 383, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 427, 428, 429, 430, 431, 461, 629, 634, 636, 637, 638, 642, 646, 649], "select": [2, 5, 45, 65, 68, 70, 71, 72, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 124, 144, 163, 164, 173, 174, 176, 185, 186, 192, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 251, 254, 255, 257, 258, 259, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 290, 292, 293, 296, 300, 353, 355, 361, 366, 375, 380, 427, 429, 430, 471, 629, 630, 634, 638, 639, 647, 649, 653], "name": [2, 3, 4, 7, 8, 16, 17, 19, 22, 32, 33, 38, 42, 43, 45, 50, 51, 58, 64, 66, 68, 69, 73, 75, 77, 80, 86, 87, 97, 100, 102, 105, 106, 107, 108, 109, 141, 142, 144, 145, 147, 151, 157, 159, 162, 163, 164, 166, 169, 171, 172, 173, 174, 175, 177, 180, 181, 182, 185, 186, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 227, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 245, 247, 248, 249, 251, 253, 254, 255, 257, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 289, 290, 292, 293, 296, 297, 319, 324, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 375, 380, 393, 394, 395, 396, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 419, 427, 428, 429, 430, 431, 432, 434, 436, 437, 438, 452, 456, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 628, 631, 634, 635, 636, 637, 638, 641, 642, 643, 646, 649, 650, 651, 652, 656], "syntax": [2, 392, 631, 634], "dmcontrol": [2, 4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "brax": [2, 9, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 267, 503, 639, 656], "observ": [2, 3, 4, 9, 16, 17, 19, 22, 28, 30, 31, 35, 47, 53, 58, 70, 78, 80, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 112, 113, 120, 122, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 221, 226, 228, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 252, 253, 254, 255, 257, 258, 260, 261, 262, 266, 267, 268, 269, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 296, 302, 305, 306, 307, 308, 309, 310, 313, 316, 319, 324, 330, 335, 336, 339, 340, 341, 343, 344, 370, 371, 372, 373, 374, 375, 378, 379, 380, 387, 388, 393, 394, 395, 396, 397, 398, 400, 401, 402, 405, 409, 410, 413, 414, 415, 416, 418, 419, 429, 432, 434, 435, 436, 437, 438, 452, 454, 477, 478, 529, 620, 628, 629, 630, 631, 635, 636, 637, 638, 639, 640, 641, 643, 644, 648, 649, 650, 651, 653, 655, 656], "reward": [2, 3, 4, 16, 17, 19, 44, 45, 47, 49, 53, 58, 59, 64, 73, 74, 78, 80, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 121, 122, 135, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 228, 229, 232, 233, 238, 239, 243, 244, 246, 247, 248, 253, 255, 256, 257, 258, 262, 266, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 283, 285, 286, 287, 288, 290, 291, 293, 294, 296, 300, 319, 327, 374, 378, 388, 393, 394, 396, 397, 398, 400, 401, 402, 405, 409, 411, 413, 414, 415, 416, 418, 419, 427, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 465, 466, 467, 470, 477, 478, 624, 630, 631, 634, 635, 636, 637, 638, 639, 643, 646, 647, 649, 650, 651, 655, 656], "neural": [2, 162, 173, 174, 303, 304, 338, 340, 346, 382, 434, 629, 635, 636, 637, 640, 649, 650, 651, 656], "mlp": [2, 165, 300, 303, 304, 306, 307, 308, 309, 315, 319, 324, 327, 331, 332, 371, 375, 390, 398, 400, 525, 629, 635, 638, 640, 641, 644, 648, 652, 655], "convnet": [2, 306, 307, 315, 330, 524, 637, 638, 640, 655], "writer": [2, 3, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 114, 117, 122, 124, 125, 129, 135, 136, 137, 140, 491, 492, 497, 498, 636, 653], "assign": [2, 4, 5, 16, 17, 22, 32, 38, 39, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 88, 107, 108, 109, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 284, 286, 296, 354, 355, 356, 357, 359, 360, 361, 364, 365, 366, 396, 397, 398, 400, 416, 427, 428, 429, 430, 431, 636, 640, 646, 649, 650, 653], "locat": [2, 3, 8, 64, 66, 73, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 223, 242, 247, 260, 271, 294, 320, 349, 350, 353, 354, 356, 357, 359, 360, 428, 431, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 628, 634, 635, 636, 643, 649, 650, 653], "batched_env": 2, "create_env_fn": [2, 16, 17, 19, 22, 23, 24, 26, 28, 148, 171, 180, 479, 481, 482, 483, 500, 533, 631, 634, 655], "transformed_env": [2, 239, 286, 639], "base_env": [2, 4, 141, 143, 144, 147, 151, 152, 158, 159, 170, 171, 172, 175, 180, 181, 182, 184, 192, 193, 194, 197, 200, 201, 202, 213, 228, 229, 232, 238, 240, 241, 243, 245, 246, 255, 262, 266, 268, 274, 277, 279, 280, 284, 286, 296, 454, 462, 502, 628, 631, 634, 635, 636, 638, 649, 652, 655, 656], "transform0": 2, "noop_reset": 2, "transform1": [2, 4], "step_count": [2, 3, 16, 17, 19, 58, 141, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 241, 277, 296, 582, 636, 637, 638, 639, 644], "noop": [2, 259, 565], "30": [2, 3, 4, 72, 80, 101, 109, 129, 130, 206, 231, 259, 344, 345, 452, 456, 459, 461, 520, 565, 628, 642, 647, 650, 651, 653], "max_step": [2, 4, 12, 135, 141, 144, 147, 151, 159, 163, 164, 165, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 200, 201, 202, 205, 277, 284, 296, 452, 582, 639, 640, 641, 643, 644, 649, 650, 655, 656], "200": [2, 3, 16, 17, 19, 28, 38, 45, 47, 50, 58, 68, 69, 70, 75, 78, 80, 97, 109, 141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 269, 296, 306, 307, 314, 344, 345, 355, 361, 366, 427, 429, 430, 452, 454, 634, 637, 638, 642, 644, 653], "step_count_kei": [2, 240, 241, 277, 582], "num_work": [2, 3, 16, 17, 25, 27, 64, 66, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 166, 171, 180, 213, 481, 482, 500, 631, 634, 635], "_partial_": [2, 479, 481, 482, 483, 485, 486, 487, 488, 491, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 524, 525, 526, 527, 528, 529, 530, 531, 532, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612], "individu": [2, 3, 5, 23, 24, 26, 28, 38, 45, 50, 58, 68, 69, 75, 80, 86, 109, 122, 124, 135, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 294, 296, 355, 361, 366, 395, 410, 413, 427, 429, 430, 634, 637, 650], "construct": [2, 3, 4, 6, 34, 38, 45, 50, 58, 65, 68, 69, 72, 75, 80, 81, 82, 85, 97, 109, 124, 141, 144, 147, 148, 150, 151, 159, 171, 172, 173, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 243, 246, 294, 296, 319, 324, 345, 355, 361, 366, 383, 427, 429, 430, 473, 628, 629, 635, 636, 637, 640, 649, 651, 653, 656], "repeat": [2, 3, 87, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 166, 167, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 203, 207, 213, 284, 300, 311, 353, 355, 361, 366, 589, 628, 636, 649, 650, 651], "layer": [2, 260, 293, 299, 303, 304, 306, 307, 312, 314, 317, 318, 319, 322, 323, 324, 325, 330, 331, 333, 334, 335, 336, 346, 347, 368, 377, 386, 525, 628, 629, 635, 636, 637, 638, 640, 649, 652], "track": [2, 3, 4, 5, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 82, 87, 107, 108, 121, 122, 128, 144, 198, 200, 211, 272, 281, 293, 294, 296, 341, 354, 356, 357, 359, 360, 378, 428, 429, 431, 459, 465, 475, 626, 635, 637, 639, 642, 650, 651, 653], "count": [2, 3, 4, 16, 17, 19, 22, 30, 53, 58, 87, 147, 148, 240, 277, 284, 294, 341, 353, 467, 473, 613, 628, 634, 635, 636, 637, 653, 656], "composit": [2, 3, 4, 36, 37, 39, 40, 41, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 87, 88, 89, 90, 91, 92, 94, 108, 109, 127, 133, 140, 141, 144, 147, 149, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 227, 229, 232, 243, 244, 245, 246, 248, 253, 255, 258, 266, 267, 273, 277, 279, 283, 284, 285, 287, 294, 296, 298, 300, 327, 370, 379, 383, 385, 386, 390, 393, 413, 429, 626, 628, 634, 636, 640, 646, 651], "combin": [2, 3, 5, 48, 69, 122, 208, 214, 215, 353, 418, 628, 631, 635, 638, 643, 653, 655], "both": [2, 3, 4, 8, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 32, 38, 42, 43, 45, 50, 51, 58, 65, 68, 69, 70, 71, 72, 75, 77, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 141, 144, 147, 148, 150, 151, 159, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 183, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 228, 235, 253, 267, 283, 284, 286, 296, 303, 304, 319, 323, 324, 325, 330, 331, 353, 355, 361, 363, 366, 371, 372, 373, 376, 381, 393, 395, 396, 397, 401, 402, 409, 410, 411, 413, 414, 415, 416, 418, 419, 427, 429, 430, 434, 466, 467, 533, 628, 629, 631, 634, 636, 638, 639, 641, 646, 647, 649, 650, 651, 652, 653, 656], "maximum": [2, 4, 5, 14, 16, 17, 18, 19, 22, 23, 24, 26, 28, 36, 58, 64, 66, 67, 74, 80, 83, 86, 87, 88, 106, 110, 115, 116, 117, 118, 121, 122, 137, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 207, 245, 270, 277, 278, 280, 299, 348, 349, 350, 355, 358, 361, 366, 386, 394, 396, 401, 402, 409, 411, 412, 416, 427, 430, 454, 469, 478, 628, 629, 634, 635, 636, 637, 640, 649, 650, 653], "length": [2, 3, 16, 17, 26, 36, 37, 38, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 67, 68, 74, 76, 77, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 103, 106, 108, 122, 129, 130, 133, 141, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 207, 215, 228, 235, 256, 265, 293, 300, 303, 304, 306, 308, 310, 317, 321, 322, 325, 327, 330, 331, 355, 361, 366, 370, 382, 387, 429, 430, 463, 469, 628, 634, 636, 637, 642, 644, 646, 651, 653, 656], "concept": [2, 3, 4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 340, 628, 635, 646, 653], "nest": [2, 3, 4, 34, 38, 42, 43, 45, 47, 49, 50, 51, 58, 59, 64, 66, 68, 69, 72, 73, 75, 77, 78, 79, 80, 87, 93, 107, 108, 109, 115, 116, 117, 120, 124, 137, 141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 227, 235, 277, 280, 284, 285, 296, 354, 355, 356, 357, 359, 360, 361, 366, 378, 413, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 452, 462, 466, 631, 635, 636, 638, 650, 651, 653, 655], "deep": [2, 4, 10, 235, 256, 306, 307, 308, 309, 312, 341, 393, 396, 408, 416, 417, 634, 649], "insid": [2, 4, 64, 66, 73, 87, 107, 108, 171, 198, 244, 354, 356, 357, 359, 360, 428, 431, 656], "factori": [2, 10, 16, 17, 19, 22, 23, 24, 26, 28, 70, 72, 81, 82, 83, 85, 213, 257, 479, 500, 524, 525, 634], "onc": [2, 3, 4, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 103, 107, 108, 109, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 231, 258, 269, 279, 286, 296, 298, 341, 354, 355, 356, 357, 359, 360, 361, 366, 378, 427, 428, 429, 430, 431, 470, 629, 631, 635, 636, 637, 640, 643, 651, 653, 656], "per": [2, 3, 4, 5, 16, 17, 19, 22, 23, 24, 26, 28, 31, 100, 109, 121, 122, 129, 135, 155, 157, 158, 171, 173, 174, 215, 238, 258, 272, 303, 304, 314, 316, 330, 331, 353, 362, 378, 413, 454, 456, 459, 461, 473, 475, 478, 622, 623, 628, 631, 634, 635, 636, 637, 638, 640, 641, 644, 649, 650, 653, 655], "variabl": [2, 3, 4, 5, 8, 9, 21, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 69, 75, 76, 77, 85, 88, 89, 90, 91, 92, 97, 100, 101, 104, 105, 108, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 163, 164, 167, 168, 169, 170, 171, 172, 175, 177, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 197, 200, 201, 202, 207, 215, 239, 281, 285, 294, 317, 318, 319, 322, 323, 324, 327, 355, 361, 366, 371, 372, 373, 411, 414, 462, 628, 631, 635, 647], "interpol": [2, 124, 268, 573, 635, 638], "refer": [2, 4, 8, 9, 10, 12, 27, 28, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 74, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 107, 108, 109, 141, 144, 147, 150, 151, 152, 156, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 253, 284, 285, 286, 293, 296, 300, 313, 314, 327, 328, 329, 330, 331, 332, 335, 336, 344, 345, 354, 355, 356, 357, 359, 360, 361, 366, 373, 376, 393, 396, 403, 404, 405, 406, 413, 416, 427, 428, 429, 430, 431, 434, 439, 447, 628, 633, 634, 636, 638, 640, 641, 642, 643, 649, 650, 653], "flag": [2, 4, 9, 45, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 196, 197, 199, 200, 201, 202, 205, 254, 341, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 629, 649, 650, 651, 652], "script": [2, 8, 100, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 462, 620, 624, 629, 630, 631, 634, 635, 638, 643, 649, 650, 651, 653], "discov": [2, 5], "It": [2, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 116, 124, 127, 135, 140, 141, 144, 147, 151, 153, 159, 165, 166, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 229, 232, 234, 235, 247, 253, 255, 260, 265, 278, 284, 286, 292, 294, 296, 298, 306, 308, 314, 316, 330, 331, 340, 341, 342, 344, 345, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 366, 376, 378, 381, 383, 393, 394, 395, 396, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 417, 419, 427, 428, 429, 430, 431, 432, 433, 434, 452, 461, 466, 467, 477, 526, 627, 628, 629, 630, 634, 635, 637, 638, 639, 649, 650, 651, 652, 653, 655, 656], "print": [2, 3, 4, 7, 8, 16, 17, 19, 28, 29, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 121, 122, 124, 129, 130, 135, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 185, 186, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 225, 226, 227, 228, 231, 232, 235, 236, 240, 241, 243, 244, 245, 246, 254, 260, 266, 267, 269, 272, 277, 279, 280, 281, 282, 293, 294, 296, 303, 304, 306, 307, 308, 309, 310, 313, 315, 316, 319, 324, 325, 328, 329, 330, 331, 337, 340, 341, 343, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 385, 387, 390, 411, 413, 427, 428, 429, 430, 431, 452, 620, 628, 629, 631, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "someth": [2, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 162, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430, 627, 635, 636, 651, 656], "policy_model": 2, "tanh_norm": 2, "value_model": [2, 404, 406], "policy_network": [2, 631], "value_network": [2, 327, 397, 398, 400, 401, 403, 409, 416, 434, 435, 436, 437, 630, 631, 634, 636, 638, 641, 644, 649], "tensor": [2, 3, 9, 16, 17, 19, 22, 23, 24, 26, 28, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 127, 129, 130, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 157, 158, 159, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 226, 227, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 245, 246, 247, 248, 250, 253, 254, 256, 260, 262, 264, 265, 266, 267, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 291, 293, 294, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 337, 338, 339, 340, 341, 342, 343, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 391, 393, 394, 396, 397, 398, 400, 401, 402, 405, 406, 409, 411, 413, 414, 415, 416, 418, 419, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 466, 487, 499, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 649, 650, 651, 655, 656], "without_replac": 2, "round_robin": 2, "adam": [2, 194, 340, 349, 478, 602, 634, 635, 636, 637, 638, 641, 644, 649, 650, 651], "wandb": [2, 454, 458, 461, 523, 643, 655], "out_featur": [2, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 300, 303, 304, 306, 307, 308, 309, 314, 315, 319, 324, 325, 327, 330, 331, 333, 334, 355, 361, 366, 371, 375, 382, 390, 398, 400, 427, 429, 430, 525, 528, 529, 530, 629, 634, 637, 638, 640, 641, 644, 655], "in_featur": [2, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 303, 304, 306, 307, 308, 309, 315, 325, 330, 331, 333, 334, 355, 361, 366, 371, 382, 390, 398, 400, 427, 429, 430, 524, 525, 528, 529, 530, 638, 640, 641], "num_cel": [2, 303, 304, 306, 307, 308, 309, 314, 315, 319, 324, 325, 330, 331, 371, 390, 524, 525, 528, 529, 530, 631, 635, 636, 637, 638, 640, 641, 644, 649, 650, 655], "128": [2, 3, 97, 99, 103, 130, 142, 143, 157, 158, 307, 310, 635, 637, 638, 644, 649, 652, 653], "num_cal": 2, "in_kei": [2, 3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 45, 53, 68, 70, 80, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 141, 142, 143, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 300, 302, 312, 319, 324, 327, 342, 351, 352, 355, 358, 361, 366, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 385, 386, 387, 390, 393, 394, 395, 396, 397, 398, 400, 401, 402, 407, 409, 410, 413, 414, 415, 416, 418, 419, 427, 429, 430, 432, 434, 435, 436, 437, 453, 454, 526, 528, 529, 530, 536, 539, 540, 541, 542, 543, 544, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 564, 566, 567, 568, 569, 570, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 620, 629, 634, 635, 636, 637, 638, 640, 641, 644, 647, 648, 649, 650, 651, 652, 653, 655, 656], "out_kei": [2, 3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 45, 53, 68, 70, 80, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 141, 142, 143, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 296, 300, 302, 312, 313, 319, 324, 327, 342, 343, 351, 352, 355, 358, 361, 366, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 390, 393, 394, 395, 396, 401, 402, 407, 409, 410, 413, 414, 415, 416, 418, 427, 429, 430, 432, 434, 435, 436, 437, 452, 454, 467, 526, 528, 529, 530, 536, 539, 540, 541, 542, 543, 544, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 564, 566, 567, 568, 569, 570, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 620, 629, 634, 635, 636, 637, 638, 640, 644, 647, 648, 649, 650, 651, 652, 653, 655, 656], "state_valu": [2, 3, 372, 373, 387, 395, 401, 409, 410, 413, 414, 416, 434, 435, 436, 437, 439, 441, 443, 445, 447, 448, 450, 629, 634, 650], "loss_modul": [2, 395, 408, 410, 411, 413, 417, 427, 430, 472, 473, 478, 533, 619, 620, 630, 631, 634, 635, 636, 649, 650, 653], "100000": [2, 478, 635], "1024": [2, 28, 70, 310, 653], "lr": [2, 340, 478, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 631, 634, 635, 636, 637, 644, 649, 650, 651], "001": [2, 602, 603, 608, 611, 612, 634, 651], "actor_network": [2, 393, 394, 395, 396, 397, 399, 401, 402, 409, 410, 412, 413, 414, 415, 416, 418, 419, 427, 430, 472, 478, 532, 533, 630, 634, 636, 641, 649, 650], "critic_network": [2, 393, 395, 410, 413, 415, 532, 533, 636, 650], "exp_nam": [2, 12, 454, 455, 456, 459, 460, 461, 520, 522, 523, 620, 631, 635, 643, 644], "my_experi": 2, "0001": [2, 294, 314, 528, 599, 602, 606], "chang": [2, 4, 6, 8, 12, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 72, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 107, 108, 109, 110, 115, 116, 117, 118, 122, 128, 129, 131, 133, 137, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 239, 243, 244, 246, 248, 255, 258, 266, 267, 273, 277, 283, 285, 286, 287, 293, 294, 296, 322, 354, 355, 356, 357, 359, 360, 361, 366, 393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 477, 478, 628, 630, 631, 634, 637, 647, 649, 650, 651, 652, 653, 656], "rate": [2, 5, 12, 97, 293, 294, 433, 477, 635, 636, 649, 650], "multirun": 2, "01": [2, 4, 231, 260, 294, 299, 341, 389, 393, 395, 410, 413, 427, 599, 601, 603, 609, 610], "8": [2, 3, 4, 7, 8, 42, 43, 51, 58, 72, 77, 80, 97, 98, 99, 100, 101, 102, 103, 104, 105, 121, 122, 129, 130, 141, 142, 143, 144, 145, 146, 147, 151, 159, 169, 170, 171, 172, 175, 180, 181, 182, 183, 192, 193, 194, 197, 200, 201, 202, 228, 231, 240, 241, 278, 281, 287, 294, 303, 304, 306, 307, 315, 325, 371, 372, 373, 379, 382, 385, 409, 634, 635, 651, 653, 655], "my_custom_config": 2, "under": [2, 3, 4, 5, 28, 38, 42, 43, 45, 50, 51, 53, 58, 68, 69, 74, 75, 77, 80, 97, 99, 100, 101, 103, 104, 105, 109, 141, 144, 145, 146, 147, 150, 151, 152, 153, 159, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 256, 257, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 290, 292, 293, 296, 301, 355, 361, 366, 370, 375, 376, 379, 380, 381, 382, 383, 411, 427, 429, 430, 434, 435, 436, 437, 438, 454, 473, 628, 630, 634, 635, 640, 649, 651, 656], "hood": [2, 3, 4, 28, 97, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 301, 628, 651], "configstor": 2, "regist": [2, 4, 15, 18, 20, 21, 25, 27, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 183, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 226, 243, 246, 247, 272, 284, 286, 296, 298, 299, 302, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 332, 335, 336, 339, 341, 344, 345, 347, 352, 354, 355, 356, 357, 359, 360, 361, 366, 374, 376, 378, 381, 386, 389, 393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 452, 454, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 631, 634, 636, 639, 653], "type": [2, 4, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 105, 106, 107, 108, 109, 124, 141, 144, 147, 151, 159, 162, 165, 168, 171, 172, 173, 174, 175, 180, 181, 182, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 226, 232, 235, 239, 243, 244, 247, 248, 253, 255, 258, 264, 266, 267, 273, 277, 279, 283, 284, 285, 286, 287, 289, 291, 293, 294, 296, 298, 303, 304, 325, 330, 331, 334, 342, 351, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 375, 379, 382, 383, 390, 393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 422, 424, 427, 428, 429, 430, 431, 432, 440, 452, 531, 622, 626, 629, 631, 634, 635, 636, 638, 642, 646, 649, 650, 651, 653, 656], "safeti": [2, 16, 17, 22, 165, 171, 180, 294, 646], "id": [2, 8, 15, 18, 20, 21, 25, 27, 33, 34, 74, 87, 122, 124, 129, 130, 141, 144, 147, 150, 151, 159, 171, 172, 175, 180, 181, 182, 183, 184, 192, 193, 194, 197, 199, 200, 201, 202, 341, 353, 361, 396, 414, 457, 461, 523, 642, 653], "registr": [2, 21, 635], "happen": [2, 3, 4, 25, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 297, 341, 475, 635, 638, 641, 642, 643, 652, 656], "automat": [2, 3, 4, 6, 13, 21, 33, 39, 53, 85, 87, 88, 105, 107, 108, 115, 117, 124, 130, 137, 141, 142, 143, 144, 147, 150, 151, 152, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 196, 197, 198, 200, 201, 202, 211, 231, 243, 246, 260, 279, 292, 294, 303, 319, 324, 353, 354, 355, 356, 357, 359, 360, 361, 364, 365, 366, 370, 378, 379, 383, 428, 431, 452, 462, 466, 628, 629, 634, 636, 637, 639, 640, 649, 650, 651, 653, 655], "import": [2, 3, 4, 5, 7, 11, 12, 16, 17, 19, 22, 28, 29, 30, 31, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 121, 122, 124, 129, 130, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 161, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 225, 226, 227, 228, 229, 231, 232, 234, 235, 238, 240, 241, 247, 248, 253, 254, 255, 256, 260, 262, 264, 266, 267, 268, 269, 272, 273, 274, 276, 277, 278, 279, 280, 281, 284, 285, 287, 291, 293, 294, 296, 297, 300, 302, 306, 307, 308, 309, 312, 313, 315, 316, 317, 318, 319, 322, 323, 324, 325, 327, 330, 331, 332, 341, 342, 343, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 390, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 452, 454, 465, 467, 477, 478, 620, 628, 629, 630, 631, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 648, 649, 650, 651, 652, 653, 655, 656], "config_stor": 2, "cs": 2, "gymenvconfig": [2, 631], "batchedenvconfig": [2, 631], "tanhnormalmodelconfig": [2, 526, 631], "inherit": [2, 4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 326, 330, 331, 411, 631, 636, 649, 650], "envs_lib": 2, "envlibsconfig": 2, "mycustomenvconfig": 2, "_target_": [2, 479, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 528, 529, 530, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612], "str": [2, 16, 17, 19, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 121, 122, 124, 135, 137, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 157, 159, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 224, 227, 231, 235, 247, 253, 254, 255, 257, 264, 268, 277, 278, 281, 283, 284, 286, 287, 289, 291, 292, 293, 296, 297, 300, 312, 313, 319, 324, 326, 327, 328, 330, 331, 332, 342, 343, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 370, 375, 376, 379, 380, 381, 382, 383, 386, 387, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 423, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 528, 529, 530, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 624, 628, 635, 636, 638, 646], "my_modul": 2, "mycustomenv": 2, "myenv": [2, 171, 232, 243, 246], "custom_param": 2, "float": [2, 4, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 35, 38, 39, 42, 44, 45, 50, 58, 62, 65, 68, 69, 74, 75, 80, 81, 87, 88, 103, 107, 108, 109, 121, 122, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 231, 235, 239, 243, 246, 255, 256, 260, 264, 269, 270, 271, 278, 279, 282, 285, 286, 289, 291, 294, 296, 298, 299, 301, 302, 311, 314, 317, 320, 322, 325, 328, 329, 333, 334, 340, 344, 345, 348, 350, 353, 354, 355, 356, 357, 359, 360, 361, 366, 382, 386, 389, 391, 392, 393, 394, 395, 396, 400, 401, 402, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 427, 428, 429, 430, 431, 433, 439, 440, 441, 442, 443, 444, 445, 446, 447, 470, 478, 489, 525, 528, 532, 533, 544, 562, 564, 566, 574, 575, 576, 583, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 628, 634, 635, 653, 656], "def": [2, 3, 4, 29, 38, 45, 50, 58, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 141, 144, 147, 148, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 225, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 246, 247, 248, 249, 251, 254, 255, 257, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 289, 290, 292, 293, 294, 296, 297, 300, 313, 317, 318, 322, 323, 327, 332, 354, 355, 356, 357, 359, 360, 361, 366, 378, 379, 387, 394, 396, 397, 402, 409, 411, 414, 416, 418, 419, 427, 428, 429, 430, 431, 452, 462, 628, 630, 631, 634, 635, 638, 646, 648, 649, 650, 651, 653, 655, 656], "__post_init__": 2, "self": [2, 4, 16, 17, 19, 22, 23, 24, 26, 28, 35, 38, 42, 43, 45, 50, 51, 58, 64, 66, 68, 69, 73, 75, 77, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 246, 247, 248, 249, 251, 254, 255, 257, 263, 264, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 289, 290, 291, 292, 293, 296, 297, 298, 300, 313, 316, 319, 324, 327, 330, 331, 342, 351, 354, 355, 356, 357, 359, 360, 361, 366, 379, 382, 387, 393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 628, 631, 634, 646, 651, 655], "super": [2, 4, 109, 165, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 246, 247, 248, 249, 251, 254, 255, 257, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 290, 292, 293, 296, 300, 313, 327, 387, 394, 396, 397, 402, 409, 414, 416, 418, 419, 429, 634, 651, 655], "my_custom": 2, "begin": [2, 5, 16, 17, 19, 22, 23, 24, 26, 28, 122, 129, 231, 317, 318, 322, 323, 392, 462, 630, 638, 639, 640, 641, 642, 643, 644, 646], "gradual": 2, "add": [2, 3, 4, 5, 7, 28, 38, 42, 43, 45, 50, 51, 53, 58, 65, 68, 69, 70, 71, 72, 75, 77, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 114, 116, 121, 124, 125, 135, 136, 139, 140, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 253, 255, 283, 286, 296, 319, 324, 333, 355, 361, 366, 377, 393, 421, 427, 429, 430, 468, 628, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 649, 650, 651, 653, 655], "leverag": [2, 18, 28, 141, 144, 147, 151, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 353, 628, 634, 650, 656], "sparingli": 2, "correctli": [2, 4, 8, 38, 45, 50, 58, 68, 69, 75, 80, 109, 110, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430, 628], "duplic": [2, 3, 38, 45, 50, 58, 68, 69, 75, 80, 109, 128, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 394, 396, 398, 403, 409, 411, 414, 416, 418, 419, 427, 429, 430, 432], "As": [2, 3, 4, 5, 58, 72, 81, 82, 85, 97, 124, 141, 144, 147, 151, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 269, 311, 383, 434, 629, 634, 635, 636, 637, 638, 639, 641, 642, 649, 650, 651, 652, 653, 655, 656], "expand": [2, 3, 9, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 73, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 115, 129, 130, 198, 232, 279, 311, 354, 356, 357, 359, 360, 382, 385, 394, 396, 409, 411, 414, 416, 418, 419, 427, 428, 430, 431, 631, 649, 650, 651, 653, 655], "sactrainerconfig": [2, 631], "td3trainerconfig": 2, "addit": [2, 3, 4, 5, 15, 18, 25, 27, 38, 45, 50, 58, 60, 68, 69, 75, 80, 87, 99, 107, 108, 109, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 185, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 239, 264, 279, 283, 285, 286, 289, 291, 296, 298, 317, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 366, 374, 378, 382, 392, 395, 411, 413, 427, 428, 429, 430, 431, 434, 452, 454, 628, 630, 631, 634, 635, 638, 639, 649, 650, 653], "design": [2, 15, 25, 27, 38, 45, 50, 58, 60, 62, 68, 69, 75, 80, 87, 107, 108, 109, 127, 133, 140, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 235, 253, 265, 284, 286, 294, 296, 353, 354, 355, 356, 357, 359, 360, 361, 366, 374, 393, 394, 395, 396, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 419, 427, 428, 429, 430, 431, 432, 626, 631, 634, 635, 636, 639, 640, 641, 646, 647, 648, 649, 650, 651, 653, 655, 656], "maintain": [2, 3, 4, 6, 10, 44, 60, 209, 235, 294, 402, 416, 628, 651], "central": [3, 15, 21, 25, 27, 330, 331, 332, 353, 634, 635, 639, 649, 650, 653], "wide": [3, 4, 6, 655], "give": [3, 4, 8, 42, 43, 51, 77, 81, 100, 108, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 235, 395, 410, 413, 627, 630, 634, 635, 638, 649, 650, 651, 652, 655], "abil": [3, 411, 651, 653], "panel": [3, 636], "usag": [3, 4, 6, 8, 16, 17, 19, 22, 23, 24, 26, 28, 45, 68, 80, 99, 105, 111, 113, 135, 193, 209, 211, 232, 235, 247, 301, 319, 324, 353, 355, 361, 366, 395, 396, 401, 409, 410, 413, 416, 420, 427, 430, 477, 626, 629, 631, 634, 636, 637, 640, 641, 643, 649, 650, 653], "almost": [3, 294, 328, 329, 637], "physic": [3, 7, 8, 113, 171, 172, 177, 631, 634, 649, 650, 651], "theori": 3, "crude": 3, "made": [3, 4, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 72, 75, 76, 77, 80, 85, 88, 89, 90, 91, 92, 97, 109, 110, 115, 116, 117, 118, 131, 133, 137, 141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 279, 285, 296, 332, 341, 355, 361, 366, 398, 411, 427, 429, 430, 432, 526, 634, 635, 637, 649, 650, 652, 653, 655], "liststorag": [3, 53, 65, 70, 72, 80, 81, 82, 116, 124, 488, 653], "veri": [3, 4, 87, 107, 108, 157, 158, 197, 198, 354, 356, 357, 359, 360, 428, 431, 635, 639, 642, 646, 649, 651, 653, 655, 656], "ineffici": [3, 5], "contigu": [3, 4, 9, 39, 42, 50, 88, 100, 103, 104, 116, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 220, 253, 256, 279, 287, 651, 653, 655], "tensorstorag": [3, 72, 80, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 121, 122, 135, 138, 499, 642, 653], "lazymemmapstorag": [3, 47, 65, 70, 71, 72, 78, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 122, 124, 129, 130, 234, 235, 485, 634, 635, 637, 642, 649, 652, 653], "citizen": 3, "pytre": [3, 65, 70, 72, 81, 82, 87, 107, 108, 118, 124, 138, 198, 354, 356, 357, 359, 360, 428, 431], "tupl": [3, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 113, 118, 122, 124, 129, 133, 135, 141, 144, 145, 146, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 253, 255, 260, 296, 302, 306, 312, 313, 319, 323, 324, 325, 332, 339, 342, 343, 353, 354, 355, 356, 357, 359, 360, 361, 366, 375, 376, 380, 381, 386, 393, 394, 395, 396, 397, 401, 402, 404, 409, 410, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 434, 435, 436, 437, 466, 467, 470, 532, 602, 603, 604, 606, 607, 608, 610, 612, 617, 646, 653, 655], "dictionari": [3, 15, 16, 17, 19, 22, 23, 24, 25, 26, 28, 30, 31, 38, 42, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 86, 87, 107, 108, 109, 122, 127, 129, 130, 141, 144, 147, 150, 151, 152, 159, 163, 164, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 279, 284, 286, 294, 296, 354, 355, 356, 357, 359, 360, 361, 366, 379, 383, 396, 402, 416, 418, 427, 428, 429, 430, 431, 467, 475, 622, 623, 624, 631, 635, 636, 639, 641, 649, 651, 656], "ram": [3, 117, 150, 152, 643, 653], "prealloc": [3, 4, 171, 180, 651], "ve": [3, 74, 634, 637, 644, 646], "string": [3, 23, 24, 26, 38, 45, 50, 53, 58, 60, 67, 68, 69, 75, 80, 86, 87, 106, 109, 116, 141, 144, 147, 151, 159, 163, 169, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 225, 253, 264, 277, 283, 291, 296, 319, 324, 353, 355, 358, 361, 366, 375, 378, 379, 380, 392, 427, 429, 430, 453, 466, 471, 628, 630, 634, 636, 637, 646, 653], "element": [3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 34, 36, 53, 54, 56, 62, 64, 65, 66, 70, 71, 72, 73, 80, 81, 82, 85, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 115, 116, 117, 118, 121, 122, 124, 129, 130, 135, 137, 141, 144, 147, 151, 159, 168, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 199, 200, 201, 202, 207, 228, 235, 240, 241, 265, 274, 278, 279, 294, 298, 303, 304, 317, 318, 322, 354, 356, 357, 359, 360, 369, 370, 375, 378, 382, 383, 387, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 427, 428, 430, 431, 434, 463, 628, 630, 634, 636, 640, 642, 646, 653, 656], "none": [3, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 127, 129, 130, 131, 133, 135, 137, 141, 144, 147, 148, 150, 151, 159, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 250, 252, 253, 255, 256, 257, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 341, 342, 343, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 466, 467, 468, 469, 470, 471, 473, 475, 476, 478, 479, 481, 482, 483, 485, 486, 487, 488, 489, 491, 494, 495, 498, 499, 500, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 525, 526, 528, 529, 530, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 605, 607, 609, 610, 611, 614, 615, 616, 617, 619, 620, 622, 623, 624, 628, 629, 631, 634, 635, 637, 638, 647, 651, 653, 655], "int": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 129, 130, 131, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 177, 180, 181, 182, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 228, 230, 231, 232, 234, 235, 236, 237, 239, 242, 245, 250, 251, 253, 257, 258, 259, 260, 262, 264, 265, 268, 275, 276, 277, 280, 283, 284, 286, 288, 291, 296, 298, 299, 300, 303, 304, 305, 306, 308, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 339, 341, 342, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 374, 375, 376, 378, 379, 381, 383, 393, 394, 395, 402, 404, 405, 410, 411, 412, 413, 414, 418, 419, 427, 428, 429, 430, 431, 434, 436, 437, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 456, 459, 461, 463, 464, 465, 467, 469, 473, 476, 478, 479, 481, 482, 483, 485, 486, 487, 488, 489, 491, 494, 495, 498, 499, 500, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 525, 532, 533, 535, 537, 538, 540, 541, 542, 543, 548, 551, 557, 563, 564, 565, 567, 570, 573, 580, 581, 582, 585, 588, 589, 592, 605, 622, 623, 624, 638, 651, 653], "entri": [3, 4, 16, 17, 22, 34, 38, 42, 43, 45, 47, 50, 51, 53, 58, 64, 66, 67, 68, 69, 73, 75, 77, 78, 80, 86, 87, 94, 99, 100, 101, 102, 104, 105, 107, 108, 109, 129, 130, 141, 144, 145, 146, 147, 150, 151, 152, 153, 159, 163, 164, 171, 172, 175, 177, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 231, 235, 237, 238, 241, 242, 243, 244, 246, 247, 250, 254, 256, 258, 260, 262, 264, 267, 269, 272, 274, 276, 277, 278, 279, 281, 284, 286, 288, 291, 293, 296, 319, 321, 328, 329, 353, 354, 355, 356, 357, 359, 360, 361, 366, 374, 375, 378, 380, 381, 394, 396, 416, 427, 428, 429, 430, 431, 434, 435, 436, 437, 629, 634, 636, 637, 639, 640, 641, 643, 649, 650, 651, 652, 653, 655, 656], "onto": [3, 9, 62, 64, 66, 73, 87, 107, 108, 198, 209, 214, 220, 244, 298, 341, 354, 356, 357, 359, 360, 370, 375, 376, 379, 380, 381, 382, 383, 428, 431, 434, 637, 651], "__setitem__": 3, "indic": [3, 4, 9, 16, 17, 18, 19, 22, 23, 24, 26, 28, 34, 36, 37, 39, 40, 41, 42, 43, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 114, 121, 122, 124, 125, 127, 128, 129, 130, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 166, 167, 171, 172, 175, 177, 180, 181, 182, 185, 186, 192, 193, 194, 197, 198, 200, 201, 202, 227, 228, 235, 236, 240, 277, 278, 279, 280, 286, 294, 296, 297, 303, 304, 321, 325, 328, 329, 331, 341, 354, 356, 357, 359, 360, 378, 380, 381, 389, 393, 394, 395, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 427, 428, 430, 431, 432, 614, 624, 627, 628, 631, 636, 637, 638, 642, 643, 644, 651, 653, 656], "without": [3, 4, 8, 10, 15, 16, 17, 18, 19, 25, 27, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 97, 99, 103, 107, 108, 109, 124, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 229, 231, 243, 246, 282, 285, 296, 317, 318, 322, 323, 354, 355, 356, 357, 359, 360, 361, 364, 365, 366, 372, 373, 393, 394, 396, 397, 398, 400, 401, 402, 409, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 493, 495, 620, 627, 628, 629, 634, 635, 636, 638, 639, 640, 641, 642, 646, 647, 649, 650, 651, 653, 656], "updat": [3, 4, 5, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 38, 42, 44, 45, 50, 53, 58, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 121, 122, 124, 141, 144, 147, 151, 159, 165, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 229, 231, 232, 243, 245, 246, 253, 266, 277, 278, 284, 286, 290, 293, 294, 296, 298, 300, 301, 316, 317, 327, 332, 341, 353, 354, 355, 356, 357, 359, 360, 361, 366, 379, 380, 381, 382, 383, 393, 394, 395, 396, 397, 398, 400, 402, 403, 404, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 467, 472, 473, 475, 476, 478, 615, 616, 619, 620, 626, 628, 631, 635, 636, 637, 638, 641, 644, 649, 650, 651, 653, 656], "cursor": [3, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "afterward": [3, 38, 45, 50, 68, 69, 75, 80, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 298, 299, 302, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 332, 335, 336, 339, 341, 344, 345, 347, 352, 374, 376, 378, 381, 386, 389, 649, 656], "our": [3, 4, 8, 9, 12, 23, 53, 72, 235, 240, 454, 630, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 648, 649, 650, 652, 653, 655], "far": [3, 65, 70, 71, 72, 74, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 197, 320, 349, 350, 628, 644, 651, 656], "empti": [3, 4, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 118, 124, 141, 144, 147, 151, 158, 159, 168, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 243, 246, 264, 266, 280, 286, 289, 291, 294, 296, 353, 354, 355, 356, 357, 359, 360, 361, 366, 382, 416, 427, 428, 429, 430, 431, 458, 634, 651], "64": [3, 4, 64, 66, 73, 87, 97, 103, 107, 108, 124, 198, 235, 268, 306, 307, 315, 319, 324, 331, 332, 342, 354, 356, 357, 359, 360, 428, 431, 432, 524, 634, 635, 636, 637, 638, 640, 644, 648, 651, 653, 655, 656], "dtype": [3, 4, 16, 17, 19, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 115, 116, 117, 121, 122, 129, 130, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 157, 158, 159, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 223, 226, 227, 228, 229, 232, 233, 239, 240, 243, 244, 245, 246, 247, 248, 253, 255, 256, 260, 262, 264, 266, 267, 269, 273, 276, 277, 279, 281, 282, 285, 286, 287, 289, 291, 296, 300, 302, 312, 313, 317, 318, 319, 321, 322, 323, 324, 327, 333, 334, 341, 342, 343, 351, 353, 354, 355, 356, 357, 359, 360, 361, 366, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 387, 390, 393, 394, 396, 397, 398, 400, 401, 402, 409, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 440, 549, 587, 628, 629, 638, 646, 647, 648, 651, 653, 655, 656], "unit8": 3, "img": 3, "randint": [3, 86, 87, 107, 108, 124, 198, 207, 282, 321, 354, 356, 357, 359, 360, 428, 431, 653], "255": [3, 124, 282, 653], "uint8": [3, 4, 42, 64, 66, 73, 87, 97, 103, 107, 108, 145, 146, 163, 164, 198, 247, 253, 262, 282, 354, 356, 357, 359, 360, 428, 431, 635, 653], "next": [3, 4, 5, 9, 16, 17, 19, 31, 34, 42, 43, 45, 47, 49, 51, 53, 58, 65, 70, 71, 72, 74, 77, 78, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 112, 113, 120, 122, 124, 129, 130, 135, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 157, 158, 159, 163, 164, 165, 169, 170, 171, 172, 175, 178, 179, 180, 181, 182, 183, 185, 186, 192, 193, 194, 197, 200, 201, 202, 205, 207, 208, 210, 212, 214, 220, 226, 228, 231, 232, 234, 235, 240, 241, 243, 246, 247, 248, 253, 254, 255, 256, 258, 262, 266, 267, 269, 272, 273, 277, 279, 281, 284, 287, 292, 293, 294, 296, 300, 318, 319, 323, 324, 327, 345, 378, 388, 390, 393, 394, 396, 397, 398, 400, 401, 402, 403, 409, 413, 414, 415, 416, 418, 419, 429, 430, 432, 433, 434, 435, 436, 437, 438, 454, 466, 467, 470, 494, 495, 628, 635, 637, 638, 640, 644, 646, 651, 652, 655, 656], "ask": [3, 4, 9, 97, 103, 122, 129, 130, 361, 454, 636, 637, 639, 640, 649, 650, 652, 656], "look": [3, 4, 6, 8, 9, 38, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 122, 141, 144, 147, 151, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 240, 253, 264, 265, 289, 296, 301, 354, 355, 356, 357, 359, 360, 361, 366, 379, 383, 384, 385, 427, 428, 429, 430, 431, 630, 636, 637, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653, 655, 656], "lead": [3, 4, 5, 9, 11, 30, 34, 42, 43, 51, 58, 65, 72, 77, 87, 99, 121, 128, 141, 144, 145, 146, 147, 150, 151, 152, 153, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 279, 297, 320, 342, 349, 350, 369, 634, 637, 638, 649, 650, 651, 653, 655], "match": [3, 4, 7, 9, 16, 17, 19, 22, 23, 24, 26, 28, 29, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 124, 133, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 245, 247, 248, 250, 252, 254, 255, 256, 257, 258, 260, 262, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 296, 303, 304, 311, 319, 324, 325, 330, 331, 348, 354, 355, 356, 357, 359, 360, 361, 366, 370, 374, 375, 379, 380, 382, 383, 386, 387, 394, 395, 396, 402, 410, 412, 413, 414, 416, 427, 428, 429, 430, 431, 469, 476, 628, 629, 630, 634, 636, 638, 648, 650, 651, 653, 656], "don": [3, 4, 5, 7, 8, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 192, 235, 285, 328, 353, 635, 636, 638, 642, 653, 655, 656], "throw": [3, 38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 354, 355, 356, 357, 359, 360, 361, 366, 427, 428, 429, 430, 431, 656], "rb_td": 3, "batch_siz": [3, 4, 9, 16, 17, 19, 30, 33, 34, 42, 45, 47, 53, 60, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 78, 80, 81, 82, 83, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 121, 122, 123, 124, 129, 130, 135, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 226, 227, 228, 232, 234, 235, 239, 243, 246, 247, 248, 253, 262, 266, 267, 269, 273, 276, 277, 279, 285, 286, 287, 296, 300, 302, 310, 311, 312, 313, 316, 319, 324, 327, 341, 342, 343, 351, 352, 354, 355, 356, 357, 359, 360, 361, 366, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 393, 394, 396, 397, 398, 400, 401, 402, 409, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 454, 463, 469, 475, 478, 491, 498, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 538, 628, 629, 630, 631, 634, 635, 636, 637, 642, 646, 647, 649, 650, 651, 653, 655, 656], "max": [3, 34, 62, 66, 81, 86, 106, 121, 122, 135, 158, 199, 245, 280, 341, 394, 395, 396, 402, 412, 414, 416, 427, 466, 477, 628, 634, 636, 637, 638, 644], "label": [3, 66, 67, 74, 86, 87, 634, 649, 653], "100": [3, 16, 17, 19, 22, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 85, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 115, 117, 124, 129, 130, 135, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 238, 240, 247, 260, 269, 274, 277, 296, 321, 328, 329, 330, 353, 355, 361, 366, 376, 378, 427, 429, 430, 454, 464, 478, 605, 620, 628, 635, 636, 638, 639, 641, 644, 648, 649, 650, 651, 653, 655, 656], "rb_pytre": 3, "randn": [3, 4, 65, 68, 70, 71, 72, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 115, 116, 117, 122, 124, 129, 130, 137, 141, 198, 208, 220, 234, 260, 302, 305, 306, 310, 312, 313, 317, 318, 321, 322, 323, 328, 329, 330, 337, 339, 343, 354, 356, 357, 359, 360, 370, 371, 372, 373, 374, 375, 379, 380, 382, 385, 386, 387, 393, 394, 396, 397, 398, 400, 401, 402, 409, 411, 413, 414, 415, 416, 418, 419, 427, 428, 430, 431, 434, 435, 436, 437, 471, 524, 525, 528, 529, 530, 629, 638, 653, 655, 656], "c": [3, 4, 7, 8, 16, 17, 19, 22, 30, 42, 45, 64, 66, 68, 72, 73, 80, 81, 82, 87, 102, 107, 108, 116, 198, 260, 282, 287, 321, 322, 323, 354, 355, 356, 357, 359, 360, 361, 366, 427, 428, 430, 431, 635, 653], "zero": [3, 4, 5, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 115, 117, 121, 122, 124, 129, 130, 135, 137, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 232, 234, 236, 240, 243, 245, 246, 260, 266, 269, 276, 294, 296, 299, 300, 307, 308, 309, 315, 316, 317, 318, 319, 322, 323, 324, 328, 329, 331, 332, 341, 342, 351, 354, 355, 356, 357, 359, 360, 361, 366, 381, 383, 389, 393, 394, 396, 397, 398, 400, 401, 402, 409, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 440, 637, 638, 647, 653, 655, 656], "assert": [3, 4, 7, 19, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 135, 141, 144, 147, 151, 154, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 198, 200, 201, 202, 205, 220, 225, 228, 232, 235, 238, 243, 246, 255, 267, 274, 286, 293, 302, 331, 352, 354, 356, 357, 359, 360, 428, 430, 431, 434, 435, 436, 437, 462, 463, 471, 524, 525, 528, 529, 530, 628, 642, 648, 653, 656], "len": [3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 65, 70, 71, 72, 76, 77, 81, 82, 85, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 115, 117, 124, 137, 207, 262, 303, 304, 325, 331, 430, 634, 637, 638, 642, 644, 649, 651, 652, 653, 655], "ambigu": [3, 65, 70, 72, 124], "signatur": [3, 16, 17, 19, 22, 23, 24, 26, 28, 38, 45, 50, 53, 58, 65, 68, 69, 70, 72, 75, 80, 87, 109, 124, 133, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 232, 239, 253, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430, 630, 634, 638, 639, 651], "deal": [3, 4, 65, 70, 72, 124, 411, 427, 430, 630, 634, 636, 650, 653], "interpret": [3, 4, 65, 70, 72, 124, 628, 635], "put": [3, 65, 70, 72, 124, 151, 163, 164, 182, 185, 186, 293, 461, 624, 628, 629, 635, 636, 637, 639, 646, 649, 651], "solv": [3, 5, 8, 10, 11, 65, 70, 72, 124, 205, 627, 634, 635, 636, 642, 644, 649, 650, 651, 653], "clear": [3, 4, 12, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 72, 75, 76, 77, 80, 85, 88, 89, 90, 91, 92, 100, 109, 124, 141, 142, 143, 144, 147, 151, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 321, 355, 361, 366, 427, 429, 430, 464, 639, 642, 647], "cut": [3, 65, 70, 72, 124], "distinct": [3, 4, 65, 70, 72, 87, 107, 108, 124, 198, 232, 235, 354, 356, 357, 359, 360, 428, 431, 628, 641, 648], "view": [3, 4, 9, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 72, 75, 76, 77, 80, 85, 88, 89, 90, 91, 92, 103, 104, 109, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 229, 296, 313, 317, 322, 325, 355, 361, 366, 427, 429, 430, 628, 631, 639, 651, 653, 655, 656], "through": [3, 4, 5, 6, 9, 16, 17, 19, 21, 22, 23, 26, 28, 30, 31, 33, 42, 43, 51, 65, 69, 70, 71, 72, 75, 77, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 124, 141, 142, 143, 144, 147, 150, 151, 152, 155, 157, 158, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 206, 207, 231, 241, 243, 246, 265, 297, 302, 325, 342, 353, 354, 356, 357, 359, 360, 366, 378, 379, 383, 384, 385, 389, 392, 411, 428, 431, 434, 435, 436, 437, 462, 628, 629, 630, 634, 635, 636, 637, 639, 641, 648, 649, 650, 651, 652, 653, 656], "collate_fn": [3, 65, 70, 71, 72, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 192, 193, 194, 197, 653, 655], "__init__": [3, 4, 8, 109, 147, 165, 183, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 225, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 246, 247, 248, 249, 251, 254, 255, 257, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 290, 292, 293, 296, 300, 311, 313, 317, 322, 327, 333, 334, 363, 387, 394, 396, 397, 402, 409, 414, 416, 418, 419, 429, 631, 651, 656], "major": 3, "worri": [3, 83, 656], "though": [3, 5, 12, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 325, 361, 636, 649, 650], "too": [3, 8, 16, 17, 19, 22, 23, 24, 26, 28, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 67, 68, 74, 76, 77, 80, 85, 88, 89, 90, 91, 92, 109, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 257, 259, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 290, 292, 293, 296, 320, 349, 350, 355, 361, 366, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 418, 419, 427, 429, 430, 432, 434, 435, 436, 437, 635, 640, 643, 651, 653, 656], "latter": [3, 23, 24, 26, 38, 45, 50, 58, 68, 69, 75, 80, 99, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 298, 299, 302, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 332, 335, 336, 339, 341, 344, 345, 347, 352, 355, 361, 366, 374, 376, 378, 381, 386, 389, 413, 427, 429, 430, 622, 623], "inv": [3, 4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 238, 245, 248, 253, 262, 269, 274, 276, 281, 285, 288, 296, 429, 651], "obvious": [3, 638], "ignor": [3, 16, 17, 19, 22, 23, 24, 26, 28, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 67, 68, 69, 75, 76, 77, 80, 83, 85, 87, 88, 89, 90, 91, 92, 107, 108, 109, 113, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 245, 248, 273, 282, 296, 298, 299, 302, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 328, 329, 332, 335, 336, 339, 341, 344, 345, 347, 352, 354, 355, 356, 357, 359, 360, 361, 366, 374, 376, 378, 381, 386, 389, 427, 428, 429, 430, 431, 434, 646, 647, 653], "thread": [3, 4, 16, 17, 19, 22, 30, 31, 64, 66, 73, 87, 107, 108, 141, 142, 143, 157, 158, 171, 180, 181, 198, 294, 353, 354, 356, 357, 359, 360, 428, 431, 628], "prefetch": [3, 65, 72, 81, 82, 97, 99, 100, 101, 102, 103, 104, 105, 106, 634, 635, 637, 653], "advis": [3, 12, 100, 643, 656], "techniqu": [3, 9, 171, 180, 635, 638, 642, 653], "real": [3, 6, 103, 355, 361, 366, 383, 630, 637, 638, 651, 652], "life": [3, 247, 553, 652], "adopt": [3, 4, 6, 634, 656], "throughput": [3, 10, 158, 353, 362, 366, 628, 634], "constant": [3, 12, 44, 121, 122, 235, 260, 278, 631, 634, 636, 637, 656], "throughout": [3, 4, 393, 394, 395, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 419, 427, 430, 432, 636, 649, 656], "further": [3, 4, 6, 35, 430, 634, 636, 638, 639], "refin": [3, 42, 43, 51, 77, 103, 393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 427, 430, 432, 628], "coupl": [3, 395, 413, 637, 640, 641, 651, 653], "first_elt": 3, "wa": [3, 4, 6, 8, 42, 43, 45, 51, 53, 64, 65, 66, 68, 70, 71, 72, 73, 77, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 111, 122, 124, 128, 129, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 198, 200, 201, 202, 207, 227, 235, 253, 286, 322, 354, 355, 356, 357, 359, 360, 361, 366, 393, 395, 408, 410, 413, 415, 417, 427, 428, 431, 440, 628, 630, 635, 636, 639, 640, 648, 649, 653, 655], "influenti": 3, "latenc": [3, 4, 628], "especi": [3, 4, 8, 9, 236, 355, 361, 366], "larger": [3, 5, 80, 319, 324, 401, 409, 655], "volum": 3, "due": [3, 4, 6, 14, 23, 24, 26, 34, 395, 413, 478, 628, 631, 641, 652, 653, 656], "memorymappedtensor": [3, 47, 64, 66, 78, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 456, 642], "file": [3, 7, 8, 9, 64, 66, 73, 87, 97, 99, 100, 101, 103, 104, 105, 107, 108, 113, 185, 198, 354, 356, 357, 359, 360, 428, 431, 453, 454, 456, 473, 477, 478, 626, 631, 633, 635, 649, 653, 654], "improv": [3, 5, 12, 32, 199, 251, 393, 477, 630, 631, 638, 649, 650, 653], "failur": [3, 5, 199, 353, 395, 413, 427, 628], "recoveri": [3, 628], "were": [3, 8, 16, 17, 19, 21, 22, 23, 24, 26, 28, 71, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 171, 180, 253, 395, 413, 628, 636, 649, 653], "found": [3, 4, 7, 8, 11, 16, 17, 19, 22, 28, 34, 38, 42, 43, 45, 50, 51, 53, 58, 64, 66, 68, 69, 73, 75, 77, 80, 86, 87, 97, 99, 100, 101, 103, 104, 105, 107, 108, 109, 129, 130, 141, 144, 145, 146, 147, 150, 151, 152, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 229, 235, 256, 269, 272, 280, 293, 294, 296, 316, 330, 331, 354, 355, 356, 357, 359, 360, 361, 366, 379, 383, 410, 411, 413, 427, 428, 429, 430, 431, 628, 630, 634, 635, 637, 638, 639, 641, 643, 646, 651, 653, 655], "rough": 3, "1x": 3, "83x": 3, "44x": 3, "applic": [3, 87, 107, 108, 192, 198, 354, 356, 357, 359, 360, 416, 428, 431, 432, 628, 639, 640, 651], "bandwidth": 3, "primari": [3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 159, 201, 642], "concern": [3, 628, 641], "transfer": [3, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 33, 87, 107, 108, 198, 354, 356, 357, 359, 360, 383, 428, 431], "sensori": [3, 110], "imag": [3, 4, 5, 8, 12, 103, 107, 110, 235, 237, 240, 242, 264, 282, 291, 325, 452, 454, 634, 635, 638, 639, 643, 650, 652, 656], "audio": [3, 107], "text": [3, 30, 67, 74, 83, 101, 107, 108, 109, 159, 192, 193, 194, 196, 197, 199, 200, 201, 209, 210, 212, 214, 215, 317, 318, 322, 323, 341, 353, 355, 358, 361, 362, 366, 429, 430, 628, 636, 646], "compressedliststorag": [3, 111], "save": [3, 4, 9, 38, 45, 50, 58, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 78, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 124, 131, 132, 133, 137, 138, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 292, 296, 354, 355, 356, 357, 359, 360, 361, 366, 427, 428, 429, 430, 431, 453, 454, 456, 461, 473, 478, 631, 638, 642, 643, 644, 649, 650], "substanti": [3, 631], "full": [3, 4, 87, 107, 108, 109, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 208, 214, 215, 301, 319, 324, 354, 356, 357, 359, 360, 361, 366, 376, 383, 413, 428, 431, 463, 628, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "fidel": 3, "lossless": 3, "zstd": [3, 110], "seamlessli": [3, 4, 192, 211, 628, 647, 651], "decompress": [3, 110], "vram": 3, "ratio": [3, 16, 17, 22, 74, 395, 413, 473, 475, 634, 636], "95x": 3, "122x": 3, "atari": [3, 4, 5, 97, 99, 100, 101, 103, 104, 105, 110, 235, 304, 454, 638, 643, 656], "al": [3, 4, 16, 17, 19, 22, 30, 35, 150, 152, 247, 262, 300, 553, 638, 656], "pong": [3, 4, 16, 17, 19, 22, 30, 97, 167, 262, 638, 656], "12": [3, 8, 11, 53, 64, 66, 73, 80, 87, 104, 107, 108, 115, 117, 130, 137, 157, 158, 171, 178, 179, 180, 194, 198, 240, 286, 294, 296, 354, 356, 357, 359, 360, 428, 431, 454, 653], "22": [3, 30, 103, 110, 129, 130, 292], "99x": 3, "106x": 3, "111x": 3, "max_siz": [3, 53, 65, 72, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 115, 116, 117, 118, 129, 130, 131, 135, 137, 485, 486, 487, 488, 499, 631, 636, 642], "1000": [3, 5, 19, 30, 53, 72, 80, 110, 115, 116, 121, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 235, 293, 298, 316, 321, 340, 341, 379, 383, 408, 478, 588, 634, 635, 636, 637, 638, 640, 642, 644, 647, 651, 652, 653], "compression_level": [3, 110], "32": [3, 29, 42, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 130, 151, 158, 178, 179, 185, 186, 202, 207, 213, 235, 253, 303, 304, 305, 306, 307, 309, 310, 315, 325, 330, 331, 335, 336, 339, 342, 351, 432, 452, 523, 524, 525, 528, 529, 530, 635, 637, 638, 640, 641, 651, 652, 653, 655, 656], "84": [3, 97, 110, 129, 268, 543, 548, 573, 637, 638], "ob": [3, 4, 5, 9, 34, 42, 43, 51, 53, 65, 70, 71, 72, 77, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 121, 124, 129, 130, 135, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 220, 226, 229, 231, 240, 243, 244, 246, 260, 274, 276, 282, 306, 307, 308, 309, 330, 331, 332, 380, 387, 394, 396, 397, 402, 409, 414, 416, 418, 419, 434, 435, 436, 437, 628, 635, 638, 648, 649, 651, 653, 655, 656], "adjust": [3, 12, 279, 634, 649, 650, 651], "fast": [3, 8, 10, 116, 142, 143, 226, 267, 414, 634, 635, 636, 655], "less": [3, 25, 87, 107, 108, 121, 122, 166, 198, 352, 354, 356, 357, 359, 360, 361, 428, 431, 622, 623, 630, 636, 637, 653, 655], "my_compress": 3, "my_decompress": 3, "compressed_tensor": 3, "metadata": [3, 32, 33, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 87, 88, 89, 90, 91, 92, 97, 99, 107, 108, 111, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 353, 354, 356, 357, 359, 360, 396, 402, 416, 418, 428, 431, 636, 639, 641, 642, 649, 650, 656], "compression_fn": [3, 110], "decompression_fn": [3, 110], "least": [3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 68, 76, 77, 85, 88, 89, 90, 91, 92, 122, 129, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 238, 257, 643, 656], "14": [3, 7, 80, 97, 98, 99, 100, 101, 102, 103, 104, 105, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 240, 260, 296, 297, 413], "zlib": 3, "otherwis": [3, 4, 13, 16, 17, 19, 29, 30, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 122, 124, 129, 130, 141, 142, 143, 144, 147, 150, 151, 152, 153, 156, 157, 158, 159, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 236, 240, 241, 245, 253, 260, 278, 279, 280, 284, 285, 286, 293, 296, 297, 299, 301, 317, 320, 322, 330, 331, 349, 350, 354, 355, 356, 357, 359, 360, 361, 366, 369, 375, 380, 383, 386, 394, 396, 405, 411, 412, 416, 427, 428, 429, 430, 431, 434, 436, 437, 467, 469, 630, 631, 634, 635, 636, 637, 646, 651, 656], "nvidia": [3, 8, 155, 638], "nvcomp": 3, "pleas": [3, 4, 38, 45, 50, 58, 68, 69, 75, 80, 84, 101, 109, 141, 144, 147, 150, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 235, 253, 280, 284, 286, 296, 330, 331, 332, 355, 361, 366, 396, 416, 427, 429, 430, 477, 627, 631], "compressed_replay_buff": 3, "long": [3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 67, 76, 77, 85, 88, 89, 90, 91, 92, 115, 122, 169, 170, 245, 284, 299, 322, 323, 353, 401, 637, 638, 642, 653], "sharabl": [3, 171, 180], "collabor": [3, 103], "rather": [3, 5, 65, 72, 81, 82, 124, 133, 169, 170, 200, 207, 267, 294, 628, 629, 630, 634, 635, 636, 637, 639, 641, 649, 650, 653], "incur": [3, 87, 107, 108, 142, 143, 157, 158, 198, 354, 356, 357, 359, 360, 428, 431], "transmiss": 3, "overhead": [3, 87, 107, 108, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 226, 321, 354, 356, 357, 359, 360, 383, 428, 431, 628], "content": [3, 4, 9, 19, 42, 43, 51, 64, 65, 66, 72, 73, 77, 81, 82, 87, 107, 108, 128, 129, 130, 141, 144, 147, 150, 151, 152, 159, 166, 171, 172, 175, 180, 181, 182, 192, 193, 194, 196, 197, 198, 200, 201, 202, 206, 214, 215, 266, 303, 304, 325, 330, 331, 354, 356, 357, 359, 360, 361, 366, 379, 411, 427, 428, 430, 431, 628, 636, 646, 647, 651, 655], "map": [3, 4, 9, 15, 18, 20, 25, 27, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 72, 73, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 120, 121, 122, 141, 144, 147, 151, 159, 162, 163, 164, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 185, 186, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 228, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 260, 262, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 296, 313, 354, 355, 356, 357, 359, 360, 361, 366, 370, 371, 372, 373, 375, 379, 380, 382, 383, 385, 386, 387, 388, 395, 396, 410, 413, 416, 427, 428, 429, 430, 431, 432, 434, 467, 485, 626, 629, 630, 634, 635, 636, 637, 640, 641, 652], "tensordictroundrobinwrit": [3, 82, 124], "goe": [3, 5, 87, 173, 174, 634, 636, 649, 650, 656], "prioritizedsampl": [3, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 122, 124, 398, 403, 432, 489, 634, 653], "access": [3, 4, 8, 9, 12, 16, 17, 19, 22, 30, 31, 38, 45, 50, 58, 65, 68, 69, 75, 80, 100, 101, 102, 109, 116, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 235, 264, 285, 289, 296, 353, 355, 361, 366, 427, 429, 430, 624, 627, 628, 634, 639, 649, 650, 651, 653, 655], "tensordictreplaybuff": [3, 65, 70, 71, 72, 81, 97, 98, 99, 100, 101, 102, 103, 104, 105, 121, 122, 124, 129, 130, 135, 234, 235, 469, 498, 620, 626, 634, 635, 637, 653], "mp": [3, 23, 24, 26, 97, 98, 99, 100, 101, 102, 103, 104, 105, 148, 293, 294], "td": [3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 42, 45, 47, 53, 64, 65, 66, 68, 70, 71, 72, 73, 78, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 115, 121, 122, 124, 135, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 157, 158, 159, 160, 161, 169, 170, 171, 172, 175, 176, 180, 181, 182, 183, 184, 192, 193, 194, 197, 198, 200, 201, 202, 205, 207, 226, 229, 232, 234, 236, 240, 241, 243, 244, 245, 246, 254, 255, 256, 258, 260, 269, 272, 276, 279, 282, 286, 293, 300, 302, 312, 313, 316, 326, 327, 341, 342, 343, 351, 354, 355, 356, 357, 359, 360, 361, 366, 370, 371, 372, 373, 374, 375, 379, 380, 382, 385, 387, 402, 416, 427, 428, 430, 431, 432, 435, 436, 437, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 463, 471, 628, 629, 630, 634, 635, 637, 650, 651, 652, 655], "__name__": [3, 4, 16, 17, 19, 22, 29, 30, 70, 148, 294, 452, 631, 635, 655], "__main__": [3, 4, 16, 17, 19, 22, 29, 30, 70, 148, 294, 452, 631, 655], "21": [3, 53, 87, 103, 104, 129, 130, 171, 173, 174, 180, 240, 633, 654], "proc": 3, "arg": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 37, 38, 39, 40, 42, 43, 45, 46, 50, 51, 52, 53, 55, 57, 58, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 115, 116, 117, 118, 122, 124, 129, 130, 131, 133, 137, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 222, 228, 229, 230, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 253, 254, 255, 257, 258, 263, 264, 265, 266, 267, 269, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 296, 298, 300, 302, 303, 304, 311, 312, 316, 319, 324, 325, 326, 327, 341, 352, 353, 354, 355, 356, 357, 359, 360, 361, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 461, 465, 469, 473, 477, 478, 624, 635, 638, 646], "join": [3, 148, 207, 626, 635, 636, 638, 649], "now": [3, 4, 8, 65, 72, 81, 82, 124, 169, 170, 171, 207, 209, 235, 273, 331, 353, 628, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 648, 649, 650, 652, 653, 656], "20": [3, 53, 80, 86, 87, 104, 129, 130, 135, 141, 144, 147, 151, 155, 159, 169, 170, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 278, 296, 315, 317, 318, 322, 323, 340, 374, 463, 605, 631, 647, 653, 656], "_data": [3, 651], "difficult": [3, 5, 171, 643], "pai": [3, 9, 235, 634, 637], "word": [3, 4, 12, 74, 97, 99, 101, 103, 104, 105, 411, 427, 430, 634, 642, 651, 656], "1m": [3, 97, 103, 613, 634, 636, 637], "doe": [3, 4, 20, 23, 38, 45, 50, 58, 64, 65, 66, 68, 69, 73, 75, 80, 81, 86, 87, 97, 99, 103, 107, 108, 109, 112, 113, 120, 122, 129, 131, 133, 140, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 257, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 290, 292, 293, 294, 296, 301, 310, 311, 317, 318, 319, 322, 323, 324, 333, 340, 352, 354, 355, 356, 357, 359, 360, 361, 366, 374, 384, 385, 393, 395, 403, 410, 411, 413, 427, 428, 429, 430, 431, 433, 473, 628, 630, 631, 634, 635, 636, 637, 639, 642, 649, 651, 653, 656], "howev": [3, 4, 6, 8, 32, 38, 45, 50, 58, 68, 69, 75, 80, 109, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 253, 254, 255, 257, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 289, 290, 292, 293, 296, 355, 361, 366, 393, 395, 396, 410, 413, 415, 416, 427, 429, 430, 628, 629, 634, 635, 637, 638, 641, 651, 653, 656], "capac": [3, 65, 72, 81, 82, 115, 117, 121, 122, 129, 137, 636, 642], "There": [3, 4, 11, 87, 107, 108, 124, 194, 198, 285, 301, 319, 324, 354, 356, 357, 359, 360, 393, 413, 428, 431, 629, 630, 631, 636, 637, 638, 640, 642, 649, 650, 651, 653, 655, 656], "circumv": 3, "account": [3, 115, 117, 137, 141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 231, 241, 328, 329, 629, 635, 637, 653, 656], "convent": [3, 4, 97, 99, 100, 101, 102, 103, 104, 105, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 200, 201, 202, 355, 630, 634, 637, 649, 650, 651], "dim_extend": [3, 65, 72, 81, 82], "obtain": [3, 4, 8, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 74, 76, 77, 85, 88, 89, 90, 91, 92, 97, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 215, 234, 264, 278, 291, 300, 302, 340, 342, 469, 634, 636, 639, 640, 641, 649, 650], "counterpart": [3, 4, 235], "desir": [3, 4, 12, 16, 17, 19, 22, 30, 38, 41, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 224, 230, 232, 239, 241, 260, 262, 264, 265, 279, 285, 286, 289, 291, 296, 303, 304, 311, 325, 331, 354, 355, 356, 357, 359, 360, 361, 366, 370, 375, 376, 379, 380, 381, 382, 383, 427, 428, 429, 430, 431, 629, 634, 638, 646, 649, 650, 651, 653], "diversifi": 3, "offer": [3, 4, 8, 141, 142, 143, 144, 147, 151, 157, 158, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 284, 452, 628, 629, 631, 634, 635, 638, 639, 641, 642, 649, 651, 653, 656], "accomplish": [3, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 639, 646], "__especially__": 3, "offlin": [3, 9, 16, 17, 19, 22, 23, 24, 26, 28, 97, 98, 100, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 257, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 290, 292, 293, 296, 394, 400, 401, 409, 418, 429, 461, 523, 631, 639, 652, 653], "docstr": [3, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430, 639, 640], "happi": [3, 638], "concaten": [3, 9, 16, 17, 28, 53, 54, 56, 87, 103, 107, 108, 198, 200, 235, 236, 260, 276, 322, 325, 354, 356, 357, 359, 360, 385, 428, 431, 628, 634, 635, 640, 649, 650, 651, 653, 656], "schedul": [3, 5, 8, 74, 353, 467, 636, 651], "transformedenv": [3, 4, 12, 13, 58, 109, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 228, 229, 232, 235, 238, 239, 241, 243, 246, 247, 248, 254, 255, 256, 259, 260, 262, 266, 267, 268, 269, 272, 273, 274, 277, 278, 279, 280, 284, 285, 293, 296, 319, 324, 378, 429, 454, 462, 502, 628, 634, 635, 636, 637, 638, 639, 643, 644, 648, 649, 650, 651, 652, 653, 655, 656], "stepcount": [3, 53, 58, 109, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 240, 241, 284, 285, 286, 296, 302, 429, 582, 628, 634, 635, 636, 637, 638, 639, 644, 649, 650, 655], "gymenv": [3, 4, 6, 12, 16, 17, 19, 22, 28, 29, 30, 31, 47, 53, 58, 70, 78, 80, 109, 135, 141, 144, 147, 148, 151, 153, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 228, 231, 232, 235, 238, 239, 240, 241, 247, 253, 254, 255, 260, 262, 267, 268, 269, 272, 274, 278, 279, 280, 281, 284, 285, 286, 287, 293, 294, 296, 302, 319, 324, 378, 429, 452, 454, 506, 620, 626, 629, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 652, 653, 655, 656], "randompolici": [3, 16, 17, 19, 22, 23, 24, 26, 28, 29, 30, 58, 235, 269, 626, 642, 653], "action_spec": [3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 58, 109, 141, 142, 143, 144, 147, 151, 157, 158, 159, 165, 171, 172, 173, 174, 175, 176, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 229, 232, 235, 239, 243, 244, 246, 255, 257, 260, 266, 269, 285, 286, 287, 288, 296, 300, 313, 327, 343, 345, 370, 375, 379, 380, 394, 396, 398, 400, 414, 416, 418, 419, 429, 620, 629, 634, 635, 636, 637, 638, 640, 641, 642, 644, 648, 649, 650, 651, 652, 653, 655, 656], "traj_kei": [3, 122, 129, 130, 494, 495, 653], "truncated_kei": [3, 122, 129, 130, 269, 277, 494, 495, 582], "strict_length": [3, 97, 103, 122, 129, 130, 454, 494, 495, 637], "enumer": [3, 16, 17, 19, 28, 30, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 72, 75, 76, 77, 78, 80, 82, 85, 88, 89, 90, 91, 92, 109, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 420, 427, 429, 430, 630, 634, 635, 636, 637, 644, 649, 653, 655], "break": [3, 6, 16, 17, 19, 22, 28, 30, 32, 38, 45, 50, 58, 68, 69, 70, 72, 75, 80, 82, 97, 100, 101, 103, 104, 105, 106, 109, 122, 129, 130, 135, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 235, 269, 293, 294, 296, 319, 324, 349, 355, 361, 366, 427, 429, 430, 454, 635, 638, 642, 644, 653, 655], "33": [3, 38, 42, 45, 50, 58, 68, 69, 75, 80, 109, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 303, 304, 325, 355, 361, 366, 427, 429, 430], "34": [3, 303, 304, 325, 413], "35": [3, 303, 304, 325, 647], "36": [3, 194], "37": [3, 234], "38": [3, 8, 53], "39": [3, 101, 157, 158], "40": [3, 80, 157, 158], "41": [3, 129], "11": [3, 11, 34, 53, 62, 80, 86, 87, 115, 116, 117, 121, 130, 137, 148, 228, 240, 282, 296, 300, 327], "13": [3, 6, 80, 129, 130, 177, 240, 292, 294, 296, 297], "15": [3, 34, 97, 98, 99, 100, 101, 102, 103, 104, 105, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 240, 296, 341, 374, 404, 653], "16": [3, 4, 16, 17, 22, 30, 38, 45, 50, 58, 68, 69, 75, 80, 104, 109, 122, 130, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 296, 353, 355, 358, 361, 366, 427, 429, 430, 628, 637, 653], "17": [3, 12, 104, 129, 130, 151, 171, 202, 228, 240, 296], "could": [3, 4, 5, 7, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 75, 76, 77, 80, 85, 88, 89, 90, 91, 92, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 383, 427, 429, 430, 628, 635, 636, 643, 649, 650, 652, 656], "sai": [3, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 330, 355, 361, 366, 427, 429, 430, 649, 652, 656], "interleav": 3, "cannot": [3, 4, 5, 8, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 42, 56, 62, 72, 81, 82, 110, 117, 118, 122, 125, 129, 130, 137, 141, 144, 147, 150, 151, 152, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 243, 246, 265, 272, 284, 330, 331, 380, 393, 396, 413, 635, 636, 637, 638, 649, 650, 651], "suggest": [3, 432, 634, 650], "serialenv": [3, 4, 141, 144, 147, 151, 159, 171, 172, 175, 181, 182, 192, 193, 194, 197, 200, 201, 202, 279, 294, 296, 302, 378, 626, 655, 656], "squeez": [3, 4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 109, 231, 232, 235, 240, 275, 278, 303, 304, 346, 347, 634, 638, 651, 653], "6": [3, 4, 8, 16, 17, 19, 22, 30, 31, 34, 42, 43, 51, 53, 58, 72, 75, 77, 80, 87, 97, 104, 105, 121, 122, 130, 145, 146, 151, 171, 178, 179, 194, 202, 228, 231, 240, 241, 260, 262, 278, 284, 294, 302, 303, 304, 306, 307, 308, 311, 315, 318, 325, 330, 331, 332, 335, 348, 378, 379, 387, 628, 635, 638, 655], "5": [3, 4, 16, 17, 19, 22, 30, 34, 41, 42, 43, 51, 53, 54, 55, 56, 57, 58, 62, 65, 70, 72, 75, 77, 80, 81, 82, 97, 108, 109, 110, 124, 129, 130, 135, 141, 144, 147, 148, 151, 157, 158, 159, 163, 164, 166, 171, 172, 175, 178, 179, 180, 181, 182, 185, 186, 192, 194, 197, 199, 200, 201, 202, 205, 210, 212, 228, 231, 232, 234, 240, 241, 256, 269, 276, 277, 278, 284, 294, 296, 299, 300, 301, 302, 303, 304, 306, 307, 312, 313, 314, 315, 317, 320, 321, 322, 325, 327, 330, 331, 335, 340, 343, 349, 350, 353, 362, 363, 366, 374, 375, 378, 380, 386, 410, 413, 415, 418, 419, 452, 524, 525, 528, 530, 610, 628, 629, 633, 634, 635, 638, 640, 644, 649, 650, 651, 653, 654, 655, 656], "7": [3, 4, 7, 11, 45, 53, 58, 62, 65, 72, 80, 81, 121, 122, 130, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 199, 200, 201, 202, 228, 231, 240, 241, 278, 281, 294, 300, 302, 303, 304, 307, 325, 327, 330, 353, 361, 366, 440, 628, 634, 653, 655], "9": [3, 4, 8, 34, 38, 53, 58, 65, 72, 80, 81, 87, 104, 105, 107, 108, 122, 130, 135, 145, 146, 162, 173, 174, 182, 198, 228, 231, 240, 241, 278, 281, 286, 293, 294, 296, 328, 329, 354, 356, 357, 359, 360, 361, 366, 393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 420, 427, 428, 430, 431, 432, 462, 600, 602, 603, 604, 606, 607, 608, 612, 630, 634, 635, 649, 650], "18": [3, 53, 104, 129, 130, 178, 179, 185, 186, 284, 296, 331], "19": [3, 104, 129, 130, 135, 240, 296], "independ": [3, 16, 17, 19, 22, 23, 24, 26, 28, 30, 100, 171, 180, 250, 258, 279, 288, 301, 331, 353, 369, 393, 413, 630, 631, 634, 635, 637, 650, 653, 655], "congruent": 3, "randomcroptensordict": [3, 570, 634], "unlik": [3, 36, 72, 81, 82, 128, 151, 163, 164, 185, 186, 202, 299, 301, 378, 403, 413, 454, 628, 629, 635, 638, 640, 642, 655], "stop": [3, 4, 16, 17, 19, 22, 28, 30, 74, 105, 122, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 355, 361, 366, 636, 642, 649, 650, 655, 656], "signal": [3, 4, 16, 17, 19, 22, 34, 53, 97, 99, 101, 103, 104, 105, 122, 129, 130, 135, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 199, 200, 201, 202, 227, 235, 241, 247, 256, 277, 280, 630, 634, 636, 649, 650, 653, 656], "disk": [3, 4, 53, 64, 65, 66, 70, 71, 72, 73, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 111, 115, 124, 198, 354, 356, 357, 359, 360, 428, 431, 473, 631, 634, 635, 637, 638, 642, 643, 649, 653], "dump": [3, 4, 12, 47, 64, 65, 66, 70, 71, 72, 73, 78, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 113, 115, 116, 117, 118, 124, 131, 133, 137, 198, 213, 354, 356, 357, 359, 360, 428, 431, 452, 453, 454, 643, 644, 649], "json": [3, 210, 646], "anticip": [3, 243, 246], "compli": [3, 103, 301, 629], "back": [3, 15, 18, 21, 25, 27, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 73, 76, 77, 85, 87, 88, 89, 90, 91, 92, 99, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 198, 200, 201, 202, 217, 283, 292, 332, 354, 356, 357, 359, 360, 370, 375, 376, 379, 380, 381, 382, 383, 428, 431, 628, 636, 638, 649, 650, 651, 653], "exact": [3, 4, 34, 171, 322], "statu": [3, 4, 25, 147, 209], "prioriti": [3, 5, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 115, 116, 117, 118, 121, 122, 124, 131, 133, 137, 396, 397, 398, 400, 401, 402, 403, 409, 414, 416, 418, 419, 432, 631, 634, 635, 653], "heap": 3, "naiv": [3, 289, 639], "just": [3, 4, 5, 87, 107, 108, 133, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 162, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 192, 193, 194, 197, 198, 200, 201, 202, 227, 231, 238, 279, 331, 354, 356, 357, 359, 360, 428, 431, 463, 628, 631, 634, 635, 636, 637, 638, 639, 640, 642, 646, 649, 650, 651, 653, 655, 656], "public": [3, 71, 102, 132, 264, 291, 628], "serializ": [3, 31, 358, 628], "consum": [3, 128, 130, 378, 628, 635, 636, 642, 650, 653], "much": [3, 4, 9, 16, 17, 22, 65, 81, 87, 103, 107, 108, 121, 122, 171, 180, 198, 354, 356, 357, 359, 360, 410, 413, 428, 431, 636, 638, 639, 643, 649, 650, 651, 653, 656], "plu": [3, 16, 17, 22, 74, 171, 180, 628, 651], "three": [3, 36, 37, 41, 46, 54, 55, 56, 57, 62, 63, 68, 106, 192, 396, 628, 629, 631, 636, 638, 639, 640, 649, 650, 651, 653, 656], "flatstoragecheckpoint": 3, "discard": [3, 4, 86, 99, 101, 151, 226, 289, 453, 653, 656], "At": [3, 257, 281, 316, 326, 635, 636, 637, 642, 648, 651, 652], "correct": [3, 5, 64, 66, 73, 87, 107, 108, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 204, 205, 208, 235, 255, 321, 354, 356, 357, 359, 360, 427, 428, 431, 613, 636, 637, 646], "nestedstoragecheckpoint": 3, "represent": [3, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 107, 108, 109, 116, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 264, 289, 291, 296, 354, 355, 356, 357, 359, 360, 361, 366, 393, 413, 427, 428, 429, 430, 431, 628, 634, 651, 652, 656], "appar": [3, 4, 465], "h5storagecheckpoint": 3, "h5db": 3, "space": [3, 10, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 108, 112, 113, 120, 141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 220, 223, 228, 238, 245, 253, 256, 279, 287, 298, 304, 310, 313, 330, 336, 341, 343, 366, 370, 375, 376, 379, 380, 381, 382, 383, 385, 386, 387, 390, 393, 398, 400, 401, 402, 413, 418, 419, 432, 629, 630, 631, 635, 636, 637, 638, 639, 640, 641, 649, 650, 651, 656], "assumpt": [3, 4, 85, 651, 653], "accur": [3, 8, 99, 105, 628, 635, 651, 653], "truncat": [3, 4, 16, 17, 19, 22, 47, 49, 53, 58, 59, 67, 78, 80, 83, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 112, 113, 120, 122, 129, 130, 141, 144, 145, 146, 147, 150, 151, 152, 159, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 183, 185, 186, 192, 193, 194, 197, 200, 201, 202, 207, 227, 228, 247, 248, 253, 259, 266, 269, 273, 277, 279, 286, 287, 296, 319, 324, 350, 378, 434, 440, 494, 495, 582, 634, 636, 639, 649, 656], "marl": [3, 162, 188, 235, 276, 280, 330, 331, 332, 402, 416, 630, 639, 649, 650], "extra": [3, 11, 38, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 235, 293, 294, 296, 354, 355, 356, 357, 359, 360, 361, 366, 427, 428, 429, 430, 431, 461, 628, 629, 636, 637, 653], "fail": [3, 8, 29, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 214, 229, 355, 361, 366], "concret": [3, 634, 636, 646], "set_se": [3, 4, 16, 17, 19, 22, 28, 30, 31, 47, 53, 58, 78, 80, 141, 142, 143, 144, 147, 151, 157, 158, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 231, 240, 241, 260, 267, 272, 278, 280, 286, 296, 628, 638, 642, 644, 651, 655, 656], "manual_se": [3, 4, 36, 47, 54, 55, 65, 72, 78, 80, 81, 82, 87, 100, 104, 105, 107, 108, 116, 129, 130, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 229, 231, 240, 241, 245, 260, 269, 272, 278, 280, 294, 296, 316, 328, 329, 337, 340, 341, 354, 356, 357, 359, 360, 370, 376, 383, 386, 393, 394, 396, 397, 401, 409, 416, 428, 431, 638, 642, 644, 649, 650, 651, 655, 656], "rb_test": 3, "_storag": [3, 652, 653], "102": 3, "path_to_save_dir": 3, "assert_allclose_td": 3, "altern": [3, 5, 16, 17, 19, 22, 30, 41, 64, 66, 73, 87, 107, 108, 166, 192, 198, 240, 284, 310, 328, 329, 330, 353, 354, 356, 357, 359, 360, 392, 396, 428, 431, 452, 628, 634, 636, 638, 649, 650], "state_dict": [3, 16, 17, 19, 22, 28, 30, 31, 32, 33, 38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 110, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 284, 286, 293, 294, 296, 330, 331, 354, 355, 356, 357, 359, 360, 361, 366, 396, 416, 427, 428, 429, 430, 431, 475, 624, 628, 631, 634, 635, 656], "load_state_dict": [3, 16, 17, 19, 22, 28, 30, 31, 38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 110, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 284, 286, 293, 294, 296, 354, 355, 356, 357, 359, 360, 361, 366, 396, 416, 427, 428, 429, 430, 431, 475, 631, 634], "drawback": 3, "struggl": 3, "big": [3, 636, 642, 653, 656], "sequenti": [3, 10, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 234, 255, 296, 355, 361, 366, 369, 371, 372, 373, 379, 384, 385, 390, 393, 394, 396, 402, 409, 413, 414, 415, 416, 418, 427, 429, 430, 629, 636, 637, 640, 650, 651, 652, 655, 656], "known": [3, 4, 6, 8, 9, 80, 151, 202, 279, 441, 442, 634, 635, 639], "indiffer": 3, "heavili": [3, 12], "smooth": [3, 299, 634, 635, 641], "essenti": [3, 4, 14, 23, 24, 26, 393, 394, 395, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 419, 427, 430, 432, 628, 635, 639, 649, 651, 653], "purpos": [3, 4, 8, 12, 87, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 235, 317, 354, 356, 357, 359, 360, 393, 395, 407, 410, 413, 415, 427, 428, 431, 620, 634, 636, 637, 638, 641, 643, 649, 650, 652, 656], "guid": [3, 12, 173, 174, 178, 179, 278, 353, 627, 634, 650, 655], "explan": [3, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 301, 355, 361, 366, 427, 429, 430], "effect": [3, 4, 19, 30, 31, 38, 42, 45, 50, 58, 65, 68, 69, 70, 72, 75, 80, 81, 82, 87, 97, 103, 107, 108, 109, 121, 122, 124, 127, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 231, 235, 241, 286, 296, 301, 354, 355, 356, 357, 359, 360, 361, 366, 395, 413, 427, 428, 429, 430, 431, 473, 478, 628, 629, 634, 640, 649, 653, 656], "realm": [3, 640], "practition": 3, "often": [3, 4, 9, 332, 395, 408, 411, 413, 427, 430, 473, 634, 635, 639, 641, 651, 653, 656], "encount": [3, 5, 103, 258, 378, 627, 635, 640, 651], "situat": [3, 163, 164, 200, 207], "sometim": [3, 4, 85, 637, 656], "immedi": [3, 38, 42, 43, 45, 50, 51, 58, 68, 69, 75, 77, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430, 433, 649, 650], "199": 3, "info": [3, 4, 16, 17, 65, 70, 71, 72, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 121, 122, 124, 127, 129, 130, 141, 144, 145, 146, 147, 150, 151, 152, 153, 159, 163, 164, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 197, 200, 201, 202, 253, 287, 289, 292, 295, 461, 628, 639, 644, 646, 649, 650, 653, 655], "glanc": [3, 639], "seem": [3, 634, 637, 639], "togeth": [3, 4, 12, 16, 17, 19, 22, 23, 24, 26, 28, 53, 68, 74, 76, 77, 116, 141, 144, 147, 151, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 235, 265, 276, 285, 317, 319, 322, 324, 351, 371, 372, 373, 388, 628, 629, 635, 637, 639, 649], "omit": [3, 159, 201, 207, 298, 316, 341, 468, 636, 641, 651, 653], "imposs": [3, 4, 72, 81, 82, 135, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 393, 395, 410, 413, 415], "determin": [3, 4, 16, 17, 18, 53, 65, 81, 87, 99, 107, 108, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 185, 186, 187, 192, 193, 194, 196, 197, 198, 200, 201, 202, 205, 264, 291, 330, 341, 354, 355, 356, 357, 359, 360, 361, 366, 396, 427, 428, 431, 635, 640, 649, 650], "complic": [3, 45, 68, 80, 355, 361, 366, 427, 430, 651, 653, 656], "matter": [3, 44, 642], "inconsist": [3, 656], "miss": [3, 4, 5, 7, 8, 38, 42, 45, 50, 53, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 253, 284, 286, 292, 296, 297, 355, 361, 366, 384, 385, 393, 396, 413, 416, 427, 429, 430, 627, 634, 637, 647], "elimin": [3, 4, 628, 639], "upon": [3, 4, 9, 21, 649, 651], "canon": 3, "definit": [3, 62, 131, 330, 646], "markov": [3, 4, 639, 656], "mdp": [3, 226, 639, 651], "context": [3, 4, 6, 9, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 38, 45, 50, 58, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 130, 141, 144, 147, 148, 151, 159, 168, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 279, 288, 296, 301, 319, 324, 331, 333, 355, 361, 366, 369, 374, 425, 426, 427, 429, 430, 434, 435, 436, 437, 439, 447, 454, 462, 467, 628, 629, 630, 634, 635, 636, 637, 638, 649, 650, 651, 652, 653, 655], "condit": [3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 86, 88, 89, 90, 91, 92, 200, 205, 240, 241, 278, 293, 375, 376, 378, 380, 381, 392, 546, 628, 630, 634, 649, 651, 653], "termin": [3, 4, 8, 16, 17, 19, 22, 30, 47, 49, 53, 58, 59, 70, 74, 78, 80, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113, 120, 129, 141, 144, 145, 146, 147, 150, 151, 152, 157, 158, 159, 163, 164, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 185, 186, 192, 193, 194, 197, 200, 201, 202, 207, 227, 228, 231, 232, 247, 253, 266, 279, 287, 296, 300, 319, 324, 327, 378, 384, 393, 394, 396, 397, 398, 400, 401, 402, 409, 413, 414, 415, 416, 418, 419, 432, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 628, 634, 635, 636, 646, 649, 650, 651, 655, 656], "imit": [3, 4, 407], "inform": [3, 4, 5, 16, 17, 19, 22, 23, 24, 26, 27, 28, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 80, 83, 85, 87, 88, 89, 90, 91, 92, 103, 107, 108, 109, 121, 122, 141, 144, 147, 148, 151, 154, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 302, 303, 304, 325, 331, 354, 355, 356, 357, 359, 360, 361, 366, 427, 428, 429, 430, 431, 629, 630, 631, 634, 635, 636, 637, 638, 639, 646, 649, 650, 651, 653, 655], "stateless": [3, 4, 31, 53, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 232, 241, 294, 364, 365, 411, 427, 430, 452, 634, 639, 651, 656], "simul": [3, 4, 6, 8, 9, 85, 142, 143, 144, 153, 157, 158, 177, 185, 186, 192, 222, 300, 327, 628, 629, 634, 636, 638, 639, 643, 647, 649, 650], "furthermor": [3, 649, 650], "certain": [3, 5, 23, 24, 26, 28, 38, 45, 50, 58, 68, 69, 75, 80, 86, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 225, 240, 241, 251, 277, 286, 296, 316, 318, 323, 355, 361, 366, 410, 427, 429, 430, 628, 634, 635, 636, 638, 644, 649, 650, 656], "uniform": [3, 65, 81, 121, 122, 355, 361, 366, 649], "unambigu": 3, "distinguish": [3, 4, 72, 81, 82, 163, 164, 185, 186], "everyth": [3, 199, 635, 636, 637, 643, 644], "belong": [3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 97, 103, 292, 293, 383, 634, 642, 650], "rule": [3, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 243, 246, 296, 355, 361, 366, 383, 427, 429, 430, 629, 636], "field": [3, 4, 16, 17, 19, 22, 30, 31, 34, 38, 42, 45, 47, 50, 53, 58, 64, 66, 67, 68, 69, 73, 74, 75, 78, 80, 81, 82, 83, 85, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 115, 116, 117, 121, 129, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 157, 158, 159, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 228, 232, 243, 246, 247, 248, 253, 262, 266, 267, 269, 273, 276, 277, 279, 284, 286, 287, 296, 300, 302, 312, 313, 319, 324, 327, 341, 342, 343, 351, 354, 355, 356, 357, 359, 360, 361, 366, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 385, 387, 393, 394, 396, 397, 398, 400, 401, 402, 409, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 533, 614, 627, 628, 629, 635, 647, 651], "taken": [3, 4, 31, 36, 37, 41, 46, 54, 55, 56, 57, 62, 63, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 228, 268, 328, 329, 630, 634, 636, 637, 640, 649, 650, 651], "is_shar": [3, 4, 16, 17, 19, 30, 34, 42, 45, 47, 53, 64, 66, 67, 68, 73, 74, 78, 80, 81, 82, 83, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 115, 116, 117, 121, 129, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 157, 158, 159, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 185, 186, 192, 193, 194, 197, 198, 200, 201, 202, 207, 226, 228, 232, 243, 246, 247, 248, 253, 262, 266, 267, 269, 273, 276, 277, 279, 287, 293, 300, 302, 312, 313, 319, 324, 327, 341, 342, 343, 351, 354, 355, 356, 357, 359, 360, 361, 366, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 385, 387, 393, 394, 396, 397, 398, 400, 401, 402, 409, 413, 414, 415, 416, 418, 419, 427, 428, 430, 431, 432, 629, 651], "envbas": [3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 53, 87, 109, 141, 144, 148, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 229, 232, 243, 246, 259, 266, 267, 285, 286, 293, 296, 300, 319, 324, 326, 327, 378, 429, 467, 614, 615, 616, 620, 622, 623, 624, 626, 639], "brought": [3, 636, 637, 640], "step_mdp": [3, 4, 42, 43, 51, 77, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 319, 324, 626, 637, 639, 651, 655, 656], "trigger": [3, 8, 45, 68, 80, 200, 294, 355, 361, 366, 427, 430, 637], "turn": [3, 23, 24, 26, 28, 31, 42, 43, 51, 64, 66, 69, 73, 75, 77, 87, 107, 108, 109, 144, 158, 171, 182, 192, 198, 240, 252, 285, 288, 292, 354, 356, 357, 359, 360, 375, 427, 428, 431, 434, 452, 467, 628, 630, 634, 635, 637, 640, 651, 652], "retain": [3, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 628], "regard": [3, 99, 105, 313, 376, 393, 403, 413, 634, 636, 651], "recur": [3, 393, 394, 396, 397, 398, 400, 401, 402, 409, 413, 414, 415, 416, 418, 419, 434, 435, 436, 437, 438, 640], "anyth": [3, 5, 16, 17, 19, 22, 23, 24, 26, 28, 630], "els": [3, 142, 143, 207, 232, 317, 318, 322, 323, 335, 628, 629, 631, 634, 635, 636, 637, 646, 647, 649, 650, 651, 652], "repetit": [3, 361, 636, 639, 642], "embed": [3, 264, 289, 290, 291, 306, 342, 370, 371, 372, 373, 382, 383, 387, 652], "strictli": [3, 4, 9, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 256, 284, 286, 296, 355, 361, 366, 396, 416, 427, 429, 430, 634, 636], "enforc": [3, 38, 42, 45, 50, 58, 68, 69, 75, 80, 109, 128, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 284, 286, 296, 355, 361, 363, 366, 384, 395, 396, 413, 416, 427, 429, 430, 651], "n_action": [3, 378, 394, 396, 398, 400, 412, 416], "rightmost": [3, 630], "n_ob": [3, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 255, 378, 393, 394, 396, 397, 398, 400, 401, 402, 409, 413, 414, 415, 416, 418, 419, 641], "estim": [3, 5, 97, 122, 129, 130, 192, 193, 194, 197, 200, 207, 247, 255, 306, 349, 371, 372, 373, 393, 394, 395, 396, 397, 398, 400, 402, 403, 404, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 427, 430, 432, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 628, 630, 631, 635, 636, 640, 641, 649, 650], "subsequ": [3, 38, 45, 50, 58, 68, 69, 75, 80, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 231, 296, 355, 361, 366, 427, 429, 430, 637, 649], "proce": [3, 649], "f": [3, 16, 17, 19, 22, 30, 104, 109, 142, 143, 151, 157, 158, 202, 208, 212, 214, 215, 281, 297, 323, 392, 430, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 628, 634, 635, 636, 637, 644, 647, 649, 650, 651, 653, 656], "next_state_valu": [3, 418, 419, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 626], "broadcast": [3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 311, 353, 402, 416, 628], "left": [3, 60, 97, 99, 103, 109, 122, 129, 195, 196, 199, 200, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 232, 239, 240, 242, 243, 244, 248, 255, 258, 264, 266, 267, 273, 277, 280, 283, 285, 287, 289, 291, 294, 296, 316, 328, 330, 355, 361, 366, 429, 548, 635, 636, 638, 642, 643], "would": [3, 4, 38, 45, 50, 58, 68, 69, 74, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 317, 319, 322, 324, 325, 330, 355, 361, 366, 383, 427, 429, 430, 630, 631, 635, 636, 637, 639, 641, 642, 651, 653, 655, 656], "bug": [3, 5], "worst": [3, 635], "twice": [3, 9, 130], "feasibl": 3, "mostli": [3, 4, 22, 340, 454, 630, 643, 653, 656], "eas": [3, 4, 649, 650], "flat": [3, 135, 434], "manner": [3, 151, 202, 210, 264, 289, 629, 634, 635, 636, 642, 648, 651, 653], "ted2flat": [3, 47, 626], "flat2t": [3, 626], "unflatten": [3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 198, 232, 354, 356, 357, 359, 360, 378, 428, 431], "deseri": [3, 4, 47], "posit": [3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 85, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 122, 124, 141, 144, 145, 146, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 240, 250, 251, 253, 275, 276, 277, 280, 284, 286, 288, 296, 321, 355, 361, 366, 396, 416, 427, 429, 430, 628, 630, 636, 649, 650, 651, 653], "mark": [3, 4, 19, 105, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 281, 319, 324, 434, 436, 437, 628, 642, 653], "identifi": [3, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 67, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 199, 200, 201, 202, 214, 215, 628, 646], "abov": [3, 4, 8, 32, 38, 45, 50, 58, 68, 69, 75, 80, 88, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 285, 296, 320, 349, 350, 355, 361, 366, 392, 427, 429, 430, 628, 630, 631, 634, 636, 638, 639, 640, 649, 650, 651, 656], "output": [3, 4, 5, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 38, 45, 50, 53, 58, 65, 68, 69, 72, 75, 80, 81, 82, 85, 87, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 122, 129, 130, 141, 144, 145, 146, 147, 150, 151, 152, 153, 158, 159, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 232, 233, 235, 238, 239, 241, 242, 243, 244, 246, 248, 250, 253, 255, 258, 260, 264, 266, 267, 272, 273, 276, 277, 280, 281, 283, 285, 286, 287, 289, 291, 292, 294, 296, 298, 303, 304, 305, 306, 307, 310, 312, 313, 314, 317, 318, 319, 322, 323, 324, 325, 330, 331, 338, 340, 341, 343, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 370, 371, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 452, 454, 463, 628, 629, 630, 634, 635, 636, 637, 638, 639, 640, 643, 646, 647, 648, 649, 650, 651, 652, 655, 656], "typic": [3, 4, 5, 9, 14, 15, 18, 19, 20, 23, 24, 25, 26, 27, 30, 38, 45, 50, 58, 68, 69, 75, 80, 87, 101, 109, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 247, 278, 296, 338, 340, 355, 361, 366, 379, 394, 396, 411, 413, 416, 427, 429, 430, 477, 628, 629, 630, 631, 636, 638, 639, 641, 642, 647, 649, 650, 651], "grumodul": [3, 234, 279, 369, 390, 637], "lstmmodul": [3, 319, 369, 637, 638], "skip": [3, 4, 18, 38, 45, 50, 58, 68, 69, 75, 80, 97, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 241, 251, 253, 258, 284, 286, 296, 355, 361, 366, 379, 383, 396, 411, 416, 427, 429, 430, 434, 435, 436, 437, 453, 454, 465, 467, 478, 628, 634, 635, 647, 651], "accumul": [3, 9, 296], "upcom": [3, 209, 214, 411, 427, 430, 443, 444, 445, 446, 448, 449, 450, 451, 631, 634], "popular": [3, 4, 629, 637, 641, 650], "rainbow": 3, "multistep": [3, 16, 17, 19, 22, 23, 24, 26, 28, 30, 296, 626, 635], "shift": [3, 47, 49, 58, 59, 78, 112, 113, 120, 389, 434, 435, 436, 437, 636], "approxim": [3, 650, 656], "intens": [3, 4, 9, 321], "ataridqnexperiencereplai": 3, "onlin": [3, 9, 16, 22, 235, 310, 339, 393, 399, 412, 413, 463, 624, 636, 637, 650, 653], "2x": 3, "small": [3, 121, 122, 130, 289, 294, 299, 634, 636, 638, 649, 650, 656], "clearer": [3, 638, 640], "lazi": [3, 4, 76, 77, 87, 94, 95, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 198, 200, 201, 202, 264, 289, 303, 330, 333, 354, 356, 357, 359, 360, 384, 385, 428, 431, 485, 486, 487, 634, 635, 640, 642, 648, 653, 656], "certainli": 3, "welcom": [3, 477, 628, 631, 639], "wrapper": [3, 4, 22, 33, 64, 66, 73, 74, 81, 82, 87, 107, 108, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 193, 194, 197, 198, 200, 201, 202, 207, 209, 292, 297, 301, 302, 352, 354, 355, 356, 357, 358, 359, 360, 361, 363, 366, 374, 378, 383, 388, 428, 431, 434, 459, 460, 461, 624, 626, 633, 636, 637, 639, 645, 646, 649, 650, 652, 654, 655, 656], "around": [3, 6, 8, 22, 81, 82, 141, 144, 147, 151, 159, 165, 171, 172, 175, 176, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 207, 301, 340, 378, 383, 434, 628, 634, 635, 646, 650, 656], "selecttransform": [3, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 578], "excludetransform": [3, 104, 273, 554, 653], "promptli": 3, "virtual": [3, 4, 150], "instal": [3, 4, 6, 11, 23, 24, 26, 69, 80, 99, 102, 141, 144, 147, 151, 156, 159, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 192, 193, 194, 197, 199, 200, 201, 202, 456, 473, 627, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 649, 650, 656], "respons": [3, 4, 9, 16, 17, 19, 21, 23, 26, 28, 30, 31, 122, 129, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 196, 197, 199, 200, 201, 202, 205, 210, 212, 354, 356, 358, 359, 360, 361, 366, 427, 430, 473, 641, 642, 646, 647, 656], "d4rl": [3, 99, 105], "repositori": [3, 8, 100, 101, 102, 105, 185, 186, 649, 650], "wheel": [3, 636], "publish": 3, "openml": [3, 102, 168, 513], "scikit": [3, 102, 168], "panda": [3, 102], "raw": [3, 4, 5, 74, 110, 217, 253, 283, 287, 320, 349, 350, 635, 638, 642, 651], "modifi": [3, 4, 8, 9, 38, 45, 50, 58, 68, 69, 75, 80, 86, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 235, 239, 241, 250, 253, 255, 257, 264, 279, 285, 286, 289, 291, 294, 296, 332, 341, 354, 355, 356, 357, 359, 360, 361, 366, 374, 382, 383, 427, 428, 429, 430, 431, 613, 628, 630, 634, 635, 636, 638, 639, 649, 650, 651], "fly": [3, 235, 293, 410, 628, 630, 636, 651, 653, 656], "pre": [3, 8, 29, 33, 38, 45, 50, 58, 68, 69, 75, 80, 86, 103, 109, 117, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 264, 283, 289, 291, 296, 355, 361, 366, 427, 429, 430, 628, 656], "conisder": 3, "pipelin": [3, 4, 8, 151, 202, 628, 629, 630, 631, 636], "replac": [3, 4, 7, 8, 38, 45, 50, 58, 68, 69, 75, 80, 97, 103, 109, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 231, 245, 247, 254, 293, 294, 296, 316, 353, 355, 361, 366, 394, 396, 402, 409, 414, 416, 418, 419, 427, 429, 430, 434, 435, 436, 437, 493, 495, 537, 629, 649, 653, 655], "produc": [3, 4, 19, 42, 43, 51, 53, 77, 129, 228, 231, 232, 303, 304, 325, 331, 337, 371, 373, 374, 383, 434, 454, 628, 636, 637, 638, 639, 640, 642, 653, 656], "download": [3, 8, 11, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 97, 99, 100, 101, 103, 104, 105, 155, 264, 291, 454, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "forc": [3, 4, 7, 8, 16, 17, 22, 23, 24, 26, 28, 97, 100, 101, 103, 104, 105, 172, 361, 635, 649, 650, 651], "robosetexperiencereplai": [3, 129, 130], "fk1": [3, 104], "v4": [3, 104, 151, 171, 202, 228, 268, 443, 444, 445, 446, 448, 449, 450, 451, 631, 634, 636, 652, 655], "expert": [3, 104], "fk1_microopenrandom_v2d": [3, 104], "func": [3, 97, 98, 99, 100, 101, 102, 103, 104, 105, 295], "obs_norm": 3, "norm": [3, 5, 9, 87, 107, 108, 142, 143, 198, 299, 354, 356, 357, 359, 360, 428, 431, 466, 473, 477, 478, 628, 634, 635, 636, 649, 650, 651], "os": [3, 66, 86, 106, 635, 647], "cpu_count": [3, 66, 86, 106], "num_chunk": [3, 97, 98, 99, 100, 101, 102, 103, 104, 105], "mp_start_method": [3, 97, 98, 99, 100, 101, 102, 103, 104, 105, 171, 180, 284, 635, 655], "fork": [3, 6, 97, 98, 99, 100, 101, 102, 103, 104, 105, 634, 635, 636, 637, 649, 650, 652, 655], "recreat": [3, 651], "customari": 3, "moreov": [3, 4], "fine": [3, 4, 35, 72, 81, 82, 122, 124, 129, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 232, 255, 430, 628, 638, 642, 652], "grain": [3, 4, 72, 81, 82, 122, 124, 129, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 232], "nomenclatur": 3, "compact": [3, 53, 78, 112, 113, 120], "propos": [3, 235, 247, 301, 326, 408, 417, 629, 637, 653], "replaybufferensembl": [3, 97, 127, 133, 140], "primit": [3, 4, 5, 103, 393, 394, 396, 397, 398, 400, 401, 402, 409, 413, 414, 415, 416, 418, 419, 628], "dummi": [3, 4, 182, 207, 452, 634, 638, 642, 656], "semant": [3, 76, 77, 150, 152, 652], "ident": [3, 4, 16, 17, 19, 58, 64, 66, 72, 73, 80, 81, 82, 87, 107, 108, 115, 124, 129, 141, 144, 147, 150, 151, 152, 159, 166, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 199, 200, 201, 202, 247, 276, 285, 294, 299, 330, 331, 354, 356, 357, 359, 360, 394, 396, 409, 414, 416, 418, 419, 428, 431, 434, 435, 436, 437, 622, 623, 635, 639, 649, 650], "another_kei": [3, 124], "renam": [3, 4, 42, 43, 51, 64, 66, 73, 77, 87, 107, 108, 124, 193, 198, 226, 267, 269, 286, 354, 356, 357, 359, 360, 428, 431, 634], "resiz": [3, 4, 105, 124, 235, 573, 635, 637, 638, 639, 653, 656], "comops": 3, "totensorimag": [3, 4, 105, 124, 235, 268, 587, 635, 637, 638, 653, 655, 656], "renametransform": [3, 4, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 235, 572], "rb0": [3, 124], "pixel": [3, 4, 8, 42, 105, 124, 144, 145, 146, 150, 152, 153, 177, 235, 237, 242, 247, 250, 252, 260, 262, 264, 268, 282, 289, 291, 306, 335, 336, 452, 454, 634, 635, 637, 638, 643, 649, 652, 653, 655, 656], "rb1": [3, 124], "pixels33": [3, 124], "data0": [3, 116, 124], "244": [3, 124, 264, 291], "data1": [3, 116, 124, 655], "_": [3, 9, 65, 70, 71, 72, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 116, 124, 144, 148, 155, 185, 186, 198, 207, 236, 243, 245, 246, 255, 260, 267, 282, 293, 296, 340, 354, 356, 357, 359, 360, 370, 382, 383, 387, 392, 393, 394, 396, 397, 401, 402, 409, 413, 414, 416, 418, 419, 428, 431, 434, 435, 436, 437, 456, 634, 635, 636, 637, 638, 644, 649, 650, 651, 653, 655], "parent": [3, 4, 28, 38, 45, 49, 50, 58, 60, 68, 69, 75, 80, 85, 87, 98, 109, 124, 133, 140, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 232, 235, 236, 239, 240, 241, 244, 247, 250, 251, 258, 260, 264, 272, 277, 278, 279, 280, 284, 285, 288, 289, 296, 319, 324, 355, 361, 366, 371, 390, 411, 413, 427, 429, 430, 438, 452, 454, 480, 526, 527, 634, 642, 651, 655, 656], "basic": [3, 4, 20, 165, 192, 477, 626, 628, 629, 636, 641, 642, 644, 649, 655, 656], "properti": [3, 4, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 231, 284, 285, 286, 293, 294, 296, 311, 320, 321, 328, 329, 333, 337, 348, 349, 350, 354, 355, 356, 357, 358, 359, 360, 361, 366, 378, 393, 396, 411, 413, 415, 416, 427, 428, 429, 430, 431, 628, 640, 642, 651, 653], "input": [3, 4, 5, 16, 17, 19, 22, 23, 24, 26, 28, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 73, 74, 75, 76, 77, 80, 83, 85, 87, 88, 89, 90, 91, 92, 107, 108, 109, 116, 118, 132, 138, 141, 144, 147, 151, 159, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 257, 258, 262, 263, 264, 265, 266, 267, 269, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 299, 301, 302, 303, 304, 306, 307, 308, 309, 312, 313, 316, 317, 318, 319, 321, 322, 323, 324, 325, 330, 331, 332, 333, 334, 341, 343, 344, 345, 346, 347, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 370, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 394, 395, 396, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 466, 470, 613, 620, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 646, 649, 650, 651, 655, 656], "send": [3, 4, 9, 21, 32, 87, 107, 108, 175, 181, 198, 354, 356, 357, 359, 360, 428, 431, 461, 626, 655], "receiv": [3, 4, 15, 18, 20, 21, 25, 27, 32, 33, 38, 45, 50, 58, 68, 69, 74, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 240, 285, 286, 294, 296, 325, 354, 355, 356, 357, 359, 360, 361, 366, 427, 428, 429, 430, 431, 440, 626, 628, 630, 634, 636, 641, 648, 651], "spawn": [3, 4, 5, 23, 29, 155, 166, 171, 180, 284, 635, 649, 650], "check_env_spec": [3, 4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 228, 253, 266, 287, 452, 626, 636, 649, 650, 651], "saniti": [3, 4, 8, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 636], "make_composite_from_td": [3, 85, 626, 651], "fall": [3, 5, 15, 18, 21, 25, 27, 32, 33, 64, 66, 73, 87, 99, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "bound": [3, 4, 5, 28, 38, 40, 42, 45, 50, 58, 68, 69, 75, 80, 88, 109, 141, 144, 147, 151, 159, 171, 172, 175, 176, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 238, 259, 293, 296, 298, 316, 341, 344, 345, 355, 361, 366, 370, 375, 376, 379, 380, 381, 382, 383, 386, 393, 394, 396, 397, 409, 413, 414, 416, 418, 419, 427, 429, 430, 626, 629, 634, 635, 636, 638, 649, 651, 655, 656], "unbound": [3, 4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 70, 72, 73, 76, 77, 85, 87, 89, 90, 91, 92, 107, 108, 124, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 207, 220, 229, 232, 243, 246, 266, 279, 300, 327, 354, 356, 357, 359, 360, 370, 382, 385, 387, 415, 428, 431, 626, 628, 646, 651, 653], "boundeddiscret": [3, 39, 42], "boundedcontinu": [3, 29, 39, 42, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 253, 256, 287], "unboundeddiscret": [3, 88, 172, 253, 626], "unboundedcontinu": [3, 88, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 220, 266, 279, 385, 390, 626], "implicitli": 3, "onehot": [3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 63, 76, 77, 85, 88, 89, 90, 91, 92, 142, 143, 150, 152, 153, 156, 157, 158, 166, 167, 169, 170, 177, 183, 184, 313, 343, 375, 380, 398, 400, 401, 402, 432, 626, 629], "multionehot": [3, 54, 55, 57, 398, 401, 402, 432, 626], "multicategor": [3, 55, 56, 57, 626], "binari": [3, 4, 8, 37, 38, 62, 183, 229, 233, 313, 343, 375, 376, 380, 381, 398, 401, 402, 432, 626, 646], "arbitrari": [3, 4, 36, 62, 72, 141, 144, 147, 151, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 231, 630, 634, 635, 651, 653], "nevertheless": [3, 4, 636, 639, 653], "similarli": [3, 4, 28, 38, 45, 50, 58, 68, 69, 75, 80, 109, 128, 133, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 258, 296, 330, 355, 361, 366, 384, 385, 401, 409, 427, 429, 430, 434, 628, 656], "possess": [3, 85, 99], "unsqueez": [3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 87, 88, 89, 90, 91, 92, 122, 220, 229, 232, 235, 236, 282, 288, 587, 628, 634, 638, 649, 650, 651], "move": [3, 5, 38, 45, 50, 58, 68, 69, 75, 80, 85, 105, 109, 116, 118, 141, 144, 147, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 228, 239, 244, 264, 279, 285, 286, 289, 291, 293, 294, 296, 325, 355, 361, 366, 382, 427, 429, 430, 470, 634, 635, 637, 639, 656], "unbind": [3, 64, 65, 66, 72, 73, 81, 82, 87, 107, 108, 198, 258, 354, 356, 357, 359, 360, 378, 428, 430, 431, 628], "said": [3, 636], "neg": [3, 9, 16, 17, 19, 22, 23, 24, 26, 28, 65, 68, 81, 85, 121, 122, 204, 235, 250, 265, 276, 288, 355, 395, 404, 410, 413, 434, 436, 437, 630, 636, 649, 650, 651], "seen": [3, 4, 23, 24, 26, 28, 42, 43, 51, 77, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 244, 630, 634, 635, 637, 641, 649, 650, 653], "predict": [3, 4, 58, 74, 312, 314, 326, 327, 374, 388, 393, 395, 400, 403, 405, 406, 410, 413, 415, 427, 433, 634, 635, 641], "deprec": [3, 34, 37, 38, 40, 43, 45, 46, 50, 51, 52, 55, 57, 58, 61, 63, 64, 66, 68, 69, 73, 75, 80, 87, 90, 92, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 284, 286, 293, 296, 354, 355, 356, 357, 359, 360, 361, 366, 393, 395, 396, 398, 401, 402, 403, 409, 410, 413, 414, 415, 416, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 442, 656], "mont": [3, 192, 193, 194, 197, 200, 207, 393, 395, 410, 413, 427, 429, 628, 634], "carlo": [3, 192, 193, 194, 197, 200, 207, 393, 395, 410, 413, 427, 429, 628, 634], "mct": [3, 53], "act": [3, 4, 5, 129, 130, 173, 174, 286, 312, 331, 394, 396, 397, 409, 414, 416, 418, 419, 637, 638, 649, 650, 653, 655], "tradit": [3, 321, 628, 641, 649], "integ": [3, 16, 17, 19, 22, 30, 31, 34, 50, 54, 56, 58, 62, 68, 69, 74, 75, 87, 122, 129, 130, 131, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 200, 201, 202, 210, 211, 228, 231, 247, 251, 260, 277, 294, 303, 304, 325, 330, 331, 396, 401, 409, 416, 630, 638, 653], "advanc": [3, 4, 28, 65, 72, 81, 82, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 353, 628, 631, 639, 642, 653], "rebuild": [3, 53], "initi": [3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 41, 45, 46, 50, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 115, 117, 124, 135, 141, 144, 147, 151, 159, 169, 170, 171, 172, 175, 180, 181, 182, 183, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 234, 253, 260, 264, 279, 286, 289, 294, 295, 296, 297, 298, 299, 300, 316, 317, 318, 322, 323, 327, 330, 331, 332, 333, 334, 341, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 378, 393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 624, 628, 629, 630, 634, 635, 637, 639, 640, 642, 646, 649, 651, 656], "pair": [3, 4, 33, 58, 64, 66, 68, 73, 80, 87, 99, 107, 108, 141, 144, 145, 146, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 269, 279, 284, 319, 354, 356, 357, 359, 360, 371, 379, 383, 402, 411, 416, 427, 428, 430, 431, 434, 435, 436, 437, 438, 629, 630, 634, 635, 636, 640, 641, 648, 651, 656], "term": [3, 74, 87, 107, 108, 116, 198, 208, 214, 255, 322, 323, 333, 334, 354, 356, 357, 359, 360, 392, 393, 402, 413, 428, 431, 476, 635, 636, 639, 640, 650], "pseudocod": [3, 4, 628], "next_stat": [3, 630], "associ": [3, 4, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 38, 42, 43, 45, 50, 51, 53, 58, 64, 66, 68, 69, 70, 73, 75, 77, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 284, 285, 296, 344, 354, 355, 356, 357, 358, 359, 360, 361, 366, 427, 428, 429, 430, 431, 624, 634, 653], "sens": [3, 5, 64, 66, 73, 87, 107, 108, 198, 207, 235, 354, 356, 357, 359, 360, 428, 431, 642, 651], "hard": [3, 4, 8, 135, 145, 146, 171, 408, 628, 635, 656], "know": [3, 4, 5, 10, 65, 72, 81, 82, 150, 152, 298, 411, 414, 427, 430, 467, 634, 635, 636, 637, 638, 639, 640, 641, 642, 649, 650, 653], "next_td": [3, 208, 214], "Of": [3, 4, 8, 627, 651, 656], "cours": [3, 4, 5, 627, 651, 656], "handi": [3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 643], "undertaken": [3, 87, 630, 651], "link": [3, 7, 8, 147, 635, 644], "hash": [3, 50, 53, 68, 69, 75, 80, 87, 144, 159, 201, 559], "past": [3, 5, 235, 378, 635, 653], "node_map": [3, 53], "_index": [3, 68, 80], "Then": [3, 8, 16, 17, 19, 22, 23, 24, 26, 28, 197, 205, 292, 636, 648], "next_data": [3, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "data_map": [3, 53], "form": [3, 16, 17, 22, 38, 45, 50, 58, 65, 68, 69, 72, 75, 80, 81, 82, 97, 99, 100, 101, 102, 103, 104, 105, 109, 112, 113, 120, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 293, 294, 296, 317, 319, 322, 324, 355, 361, 366, 383, 392, 393, 395, 410, 413, 427, 429, 430, 473, 478, 628, 629, 640], "figur": [3, 4, 87, 159, 201, 634, 636, 637, 650, 651, 656], "flowchart": 3, "o": [3, 38, 45, 50, 58, 68, 69, 75, 80, 109, 111, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 323, 355, 361, 366, 427, 429, 430], "get_tre": [3, 53, 87], "vertex": [3, 87], "longer": [3, 87, 107, 108, 198, 209, 297, 354, 356, 357, 359, 360, 428, 431, 635, 637, 644, 649, 650, 653], "vertic": [3, 87], "branch": [3, 53, 87], "depth": [3, 72, 85, 141, 144, 147, 151, 159, 165, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 300, 303, 304, 306, 307, 308, 309, 314, 315, 325, 327, 330, 331, 332, 335, 336, 375, 524, 525, 528, 529, 530, 629, 635, 639, 641, 642, 648, 649, 650, 653], "until": [3, 4, 8, 28, 30, 109, 158, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 280, 285, 296, 429, 462, 636, 637, 644, 649, 650], "anymor": [3, 64, 66, 73, 87, 107, 108, 198, 286, 354, 356, 357, 359, 360, 382, 428, 431], "remov": [3, 7, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 94, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 266, 275, 286, 296, 354, 355, 356, 357, 359, 360, 361, 366, 411, 427, 428, 429, 430, 431, 649, 650, 655, 656], "utmost": 3, "post": [3, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 38, 45, 50, 58, 68, 69, 75, 80, 101, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430, 628], "grpo": [3, 200, 207, 427, 626], "commonli": [3, 122, 129, 130, 656], "emploi": [3, 334], "scarc": 3, "address": [3, 32, 353, 364, 365, 628, 653], "subdomain": 3, "extern": [3, 4, 243, 246, 294, 353, 364, 365, 646, 649, 656], "token": [3, 30, 66, 67, 74, 83, 86, 106, 108, 109, 159, 192, 193, 194, 196, 197, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 212, 214, 215, 216, 321, 353, 355, 358, 361, 366, 427, 430, 588, 646, 647], "dm": [4, 634, 656], "box": [4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 87, 88, 89, 90, 91, 92, 150, 152, 332, 411, 427, 430, 646], "lib": [4, 6, 7, 8, 10, 11, 16, 17, 19, 22, 28, 29, 30, 31, 70, 109, 141, 144, 147, 148, 151, 156, 159, 163, 164, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 235, 238, 247, 254, 255, 260, 262, 267, 269, 272, 279, 285, 292, 293, 296, 429, 452, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 620, 634, 635, 636, 637, 648, 650, 652, 653, 655, 656], "hope": [4, 12], "nn": [4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 35, 38, 44, 45, 50, 58, 68, 69, 70, 74, 75, 80, 87, 107, 108, 109, 141, 142, 143, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 240, 245, 247, 255, 264, 279, 285, 286, 289, 291, 296, 300, 302, 303, 304, 306, 307, 308, 309, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 327, 329, 330, 331, 332, 341, 342, 343, 351, 354, 355, 356, 357, 359, 360, 361, 366, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 387, 390, 392, 393, 394, 396, 397, 398, 400, 401, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 529, 620, 629, 630, 634, 635, 636, 637, 638, 640, 641, 644, 648, 649, 650, 651, 652, 655], "organis": [4, 104, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 286, 635], "attribut": [4, 5, 8, 16, 17, 19, 22, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 141, 144, 147, 150, 151, 152, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 247, 258, 264, 286, 289, 293, 294, 296, 354, 355, 356, 357, 359, 360, 361, 366, 383, 393, 394, 396, 397, 398, 400, 402, 403, 404, 407, 409, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 634, 637, 651], "live": [4, 38, 45, 50, 58, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 247, 296, 355, 361, 366, 427, 429, 430, 553], "actual": [4, 5, 8, 15, 18, 20, 21, 25, 27, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 73, 76, 77, 85, 87, 88, 89, 90, 91, 92, 97, 99, 100, 101, 103, 104, 105, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 292, 354, 356, 357, 359, 360, 428, 431, 613, 628, 630, 634, 636, 638, 649, 650, 651], "care": [4, 9, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 68, 69, 75, 76, 77, 80, 85, 88, 89, 90, 91, 92, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 298, 299, 302, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 332, 335, 336, 339, 341, 344, 345, 347, 352, 374, 376, 378, 381, 386, 389, 454, 634, 636, 638, 649, 650, 651, 653], "parametr": [4, 334, 383, 394, 396, 401, 409, 416, 634, 636], "observation_spec": [4, 53, 109, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 229, 232, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 250, 252, 253, 254, 255, 257, 260, 262, 264, 266, 268, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 292, 293, 294, 296, 300, 319, 324, 327, 429, 614, 620, 634, 636, 641, 648, 649, 650, 651, 656], "state_spec": [4, 109, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 229, 239, 244, 257, 260, 285, 287, 288, 296, 300, 327, 429, 651, 656], "reward_spec": [4, 109, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 229, 232, 233, 238, 239, 243, 244, 246, 256, 257, 266, 270, 271, 272, 274, 276, 283, 285, 287, 288, 294, 296, 300, 327, 429, 628, 636, 646, 649, 650, 651, 656], "done_spec": [4, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 243, 244, 246, 247, 257, 266, 276, 283, 285, 287, 296, 429, 649, 650, 651, 656], "input_spec": [4, 87, 109, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 232, 239, 243, 244, 245, 258, 262, 266, 267, 272, 273, 276, 277, 278, 279, 283, 285, 286, 287, 290, 296, 429, 636, 651], "full_action_spec": [4, 87, 141, 144, 147, 151, 159, 169, 170, 171, 172, 175, 180, 181, 182, 183, 184, 192, 193, 194, 197, 200, 201, 202, 228, 244, 300, 327, 649, 650], "full_state_spec": [4, 53, 87, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 228, 244, 300, 327], "output_spec": [4, 87, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 239, 243, 244, 248, 255, 258, 266, 267, 273, 277, 283, 285, 286, 287, 294, 296, 429, 651], "full_observation_spec": [4, 87, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 200, 201, 202, 300, 327], "full_reward_spec": [4, 87, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 232, 244, 266, 649, 650], "full_done_spec": [4, 87, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 227, 232, 244, 266, 649, 650], "carri": [4, 28, 56, 86, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 279, 294, 411, 427, 430, 635, 637, 649, 650, 651, 653], "nontensor": [4, 61, 108, 197, 202, 253, 287, 626], "spec_lock": [4, 147], "modif": [4, 6, 38, 42, 43, 45, 50, 51, 58, 68, 69, 75, 77, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 250, 253, 296, 355, 361, 366, 411, 427, 429, 430, 628, 630, 636, 651], "children": [4, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 38, 42, 43, 45, 50, 51, 58, 68, 69, 75, 77, 80, 87, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "unlock": [4, 42, 43, 51, 64, 66, 73, 77, 87, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 354, 356, 357, 359, 360, 428, 431], "set_spec_lock_": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "reason": [4, 5, 9, 38, 45, 50, 58, 68, 69, 75, 80, 103, 109, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 264, 289, 296, 324, 355, 361, 366, 427, 429, 430, 628, 630, 634, 635, 636, 641, 642, 649, 651, 653], "cach": [4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 76, 77, 85, 86, 88, 89, 90, 91, 92, 97, 99, 100, 101, 103, 104, 105, 106, 122, 129, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 213, 226, 231, 243, 246, 264, 285, 286, 291, 301, 321, 353, 464, 628], "principl": [4, 628], "new_spec": 4, "eras": [4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 122, 129, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 286], "relock": 4, "previous": [4, 5, 53, 101, 636, 656], "importantli": [4, 379, 383], "action_s": 4, "With": [4, 87, 107, 108, 157, 158, 162, 198, 278, 354, 356, 357, 359, 360, 428, 431, 631, 635, 646, 648, 649, 650, 653, 656], "necessarili": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 656], "present": [4, 30, 38, 45, 50, 58, 64, 65, 66, 68, 69, 70, 72, 73, 75, 80, 85, 87, 97, 99, 103, 107, 108, 109, 121, 122, 124, 128, 141, 144, 147, 150, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 248, 269, 273, 279, 284, 286, 296, 304, 305, 306, 307, 308, 309, 315, 319, 322, 324, 334, 339, 341, 354, 355, 356, 357, 359, 360, 361, 366, 378, 382, 383, 384, 385, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 624, 628, 631, 634, 644, 648, 649, 650, 653, 655], "0s": [4, 97, 103, 279, 637], "step_and_maybe_reset": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 628, 639, 646], "done_kei": [4, 34, 45, 47, 49, 53, 59, 78, 109, 112, 113, 120, 129, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 226, 231, 235, 247, 269, 277, 296, 429, 553, 649, 650], "_reset": [4, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 227, 229, 231, 232, 235, 243, 246, 254, 266, 281, 300, 327, 649], "data_": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "append": [4, 9, 12, 53, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 124, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 204, 207, 214, 231, 238, 239, 258, 269, 279, 286, 292, 318, 319, 323, 324, 375, 380, 628, 634, 635, 636, 637, 638, 646, 649, 650, 651, 652, 653, 655], "seed": [4, 16, 17, 19, 22, 28, 30, 31, 72, 81, 82, 104, 124, 141, 144, 147, 151, 159, 165, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 187, 192, 193, 194, 197, 200, 201, 202, 203, 229, 232, 243, 246, 253, 266, 286, 452, 473, 478, 533, 649], "determinist": [4, 16, 17, 19, 22, 23, 24, 26, 28, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 224, 239, 264, 279, 285, 286, 289, 291, 296, 305, 314, 335, 345, 355, 361, 366, 370, 379, 382, 383, 386, 394, 395, 411, 413, 427, 429, 430, 467, 629, 634, 635, 636, 637, 638, 640, 641, 644, 649, 651, 655, 656], "preced": [4, 58, 144, 235, 637], "risk": [4, 265], "overlap": [4, 81, 135], "tensordictmodul": [4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 45, 68, 70, 74, 80, 141, 142, 143, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 234, 240, 255, 302, 313, 319, 324, 327, 342, 343, 351, 352, 355, 361, 366, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 384, 385, 386, 388, 390, 394, 396, 397, 401, 402, 404, 405, 406, 407, 409, 411, 414, 416, 418, 419, 427, 430, 432, 433, 434, 435, 436, 437, 467, 529, 620, 626, 634, 636, 637, 641, 644, 648, 649, 650, 651, 652, 656], "trail": [4, 60, 199, 293, 646], "treat": [4, 58, 630, 640, 641], "brief": [4, 628, 636, 639, 641, 653], "deliveri": 4, "metaclass": [4, 147, 152], "flank": [4, 630, 637], "dual": 4, "union": [4, 26, 38, 42, 43, 45, 50, 51, 52, 56, 57, 58, 60, 62, 63, 68, 69, 75, 76, 77, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 330, 351, 355, 361, 366, 400, 402, 414, 427, 429, 430, 621, 624], "assess": [4, 16, 17, 19, 22, 23, 24, 26, 28, 42, 43, 51, 77, 163, 164, 188, 197, 634], "split_trajectori": [4, 16, 17, 19, 22, 23, 24, 26, 28, 97, 103, 122, 129, 130, 626], "adjac": [4, 34, 250, 378], "junction": 4, "inittrack": [4, 319, 324, 378, 560, 634, 637], "tutori": [4, 172, 206, 625, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 651, 652, 653, 654, 656], "scratch": [4, 9, 635, 651], "mere": [4, 22, 638], "batch_lock": [4, 141, 144, 147, 149, 151, 159, 171, 175, 180, 181, 192, 193, 194, 197, 200, 201, 202, 232, 279, 286, 651], "contrast": [4, 317, 340, 408, 653], "notabl": 4, "braxenv": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 267, 503, 626, 639], "jumanjienv": [4, 509, 626], "straightforward": [4, 20, 628, 634, 635, 639, 640, 641, 642, 653], "merg": [4, 65, 72, 81, 82, 97, 99, 100, 101, 102, 103, 104, 105, 651], "silent": [4, 38, 45, 50, 68, 69, 75, 80, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 298, 299, 302, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 332, 335, 336, 339, 341, 344, 345, 347, 352, 355, 374, 376, 378, 381, 386, 389], "_step": [4, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 251, 254, 255, 257, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 290, 292, 293, 296, 429], "temporari": [4, 115, 117, 634], "hold": [4, 285, 425, 426, 429, 628, 651, 653], "arm": 4, "unbatch": [4, 317, 322], "captur": [4, 298, 316, 341, 603, 628, 638], "break_when_all_don": [4, 141, 144, 147, 151, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "conditionalskip": [4, 547], "programmat": 4, "pretti": [4, 634, 639, 643, 653], "likewis": 4, "break_when_any_don": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 231, 284, 296, 302, 378, 650], "te": 4, "paragraph": 4, "dive": 4, "gym3": 4, "envpool": [4, 166, 167, 512], "simultan": [4, 26, 158, 166, 167, 171, 180, 628, 651], "scale": [4, 5, 35, 99, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 199, 200, 201, 202, 235, 255, 260, 271, 278, 282, 293, 294, 299, 314, 320, 344, 345, 349, 350, 371, 372, 373, 379, 383, 385, 393, 394, 396, 409, 413, 414, 415, 416, 470, 566, 576, 614, 624, 628, 629, 634, 635, 636, 637, 640, 650, 655], "varieti": [4, 12], "from_pixel": [4, 12, 142, 143, 145, 146, 150, 152, 153, 157, 158, 177, 235, 268, 452, 454, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 634, 635, 637, 639, 643, 644, 652, 653, 655, 656], "81": [4, 87, 107, 108, 129, 198, 354, 356, 357, 359, 360, 428, 431], "d": [4, 42, 43, 45, 51, 65, 68, 72, 77, 80, 81, 82, 100, 102, 104, 105, 106, 121, 122, 299, 317, 322, 355, 361, 366, 379, 383, 427, 430, 655], "privat": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 292, 651, 656], "absenc": 4, "total": [4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 36, 54, 56, 62, 64, 65, 66, 70, 71, 72, 73, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 130, 135, 194, 198, 205, 240, 354, 356, 357, 359, 360, 364, 365, 395, 410, 413, 427, 428, 431, 463, 465, 467, 473, 475, 477, 478, 613, 614, 633, 634, 635, 636, 637, 641, 649, 650, 652, 653, 654, 655], "accord": [4, 16, 17, 19, 22, 23, 24, 26, 28, 42, 43, 51, 53, 64, 66, 73, 74, 77, 87, 107, 108, 124, 127, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 183, 184, 192, 193, 194, 197, 198, 200, 201, 202, 260, 271, 320, 333, 344, 349, 350, 354, 356, 357, 359, 360, 428, 431, 432, 629, 630, 640, 641, 649, 651, 653], "inner": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 245, 286, 631, 635, 636, 650, 656], "kept": [4, 25, 27, 34, 128, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 226, 245, 273, 320, 349, 350, 641, 649], "wherev": 4, "lost": [4, 9, 292], "intern": [4, 53, 84, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 294, 353, 355, 361, 366, 628, 632], "face": [4, 6, 9, 10, 358, 361, 628, 639, 647, 656], "NOT": [4, 112, 113, 120, 130, 265], "right": [4, 7, 8, 34, 74, 122, 129, 202, 240, 361, 366, 635, 636, 638, 650, 651, 656], "preliminari": 4, "warranti": 4, "preclud": 4, "presenc": [4, 45, 68, 80, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 355, 361, 366, 427, 430, 641], "annihil": 4, "supersed": [4, 34], "pettingzoowrapp": [4, 626], "__not__": [4, 379, 394, 396, 409, 414, 416, 418, 419], "constrain": [4, 255, 319, 324, 413, 656], "li": 4, "fact": [4, 8, 9, 628, 634, 636, 639, 649, 650, 651, 652, 653, 656], "meaning": [4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 199, 475], "perfectli": [4, 631, 634, 638, 651], "meaningless": 4, "val": [4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 193, 294, 462, 641, 655], "agent0": [4, 413, 638], "agent1": [4, 413], "bool": [4, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 28, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 121, 122, 124, 125, 127, 128, 129, 130, 131, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 227, 228, 229, 231, 232, 235, 236, 240, 241, 243, 245, 246, 247, 248, 250, 253, 255, 257, 258, 259, 260, 262, 264, 266, 267, 269, 271, 272, 273, 276, 277, 279, 282, 283, 284, 286, 287, 288, 289, 291, 293, 294, 296, 297, 298, 299, 300, 302, 303, 304, 306, 307, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 330, 331, 332, 333, 334, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 369, 370, 375, 376, 378, 379, 380, 381, 382, 383, 384, 386, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 423, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 440, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 461, 462, 465, 466, 467, 469, 470, 473, 478, 479, 481, 482, 483, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 537, 538, 563, 565, 566, 576, 582, 587, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 624, 628, 635, 636, 638, 646, 647, 651, 655, 656], "500": [4, 634, 635], "note": [4, 5, 16, 17, 19, 22, 23, 24, 26, 28, 38, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 227, 243, 246, 284, 293, 294, 296, 301, 317, 319, 321, 322, 324, 341, 353, 354, 355, 356, 357, 359, 360, 361, 366, 379, 383, 395, 403, 413, 427, 428, 429, 430, 431, 626, 630, 635, 638, 640, 646, 648, 649, 650, 656], "launch": [4, 16, 17, 22, 23, 24, 26, 29, 97, 100, 171, 180, 353, 362], "bottleneck": [4, 9, 122, 129, 130], "great": [4, 8, 9, 638, 647, 649, 655], "speedup": [4, 9, 649, 656], "precis": [4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 226, 243, 246, 318, 323, 634, 636], "misspecifi": 4, "caus": [4, 8, 9, 16, 17, 19, 115, 117, 121, 122, 137, 141, 144, 147, 151, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 265, 427, 656], "breakag": 4, "rais": [4, 14, 16, 17, 19, 22, 23, 24, 25, 26, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 101, 103, 107, 108, 109, 115, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 183, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 249, 259, 269, 278, 279, 280, 284, 286, 293, 296, 298, 316, 341, 354, 355, 356, 357, 359, 360, 361, 362, 366, 396, 411, 416, 427, 428, 429, 430, 431, 462, 634, 636, 649, 650, 653], "mismatch": [4, 68, 395, 413, 427, 635], "subprocess": [4, 16, 17, 22, 148, 171, 180], "multithreadedenv": [4, 512, 626], "underneath": 4, "higher": [4, 5, 121, 122, 199, 208, 215, 238, 353, 355, 361, 366, 386, 430, 628, 634, 635, 636, 649, 653, 656], "cover": [4, 150, 152, 321, 627, 636, 639, 642, 643, 651, 655], "classic": [4, 156, 165, 174, 628, 635], "benchmark_batched_env": 4, "significantli": [4, 14, 23, 24, 26, 110, 129, 130, 235, 395, 413, 427, 630, 634, 635, 641, 650], "asyncenvpool": [4, 30, 175, 181], "pool": [4, 97, 98, 99, 100, 101, 102, 103, 104, 105, 141, 175, 181, 280], "concurr": [4, 141, 353, 358, 475, 628, 649, 650], "contrari": [4, 630], "permit": [4, 238, 250, 276, 288, 393, 395, 410, 413, 415], "job": [4, 8, 23, 24, 26, 29, 72, 81, 82, 124, 653, 655], "famili": [4, 108], "interest": [4, 379, 383, 629, 635, 636, 639, 650, 651, 656], "prefer": [4, 16, 17, 22, 26, 34, 35, 65, 72, 81, 82, 129, 130, 141, 175, 181, 203, 265, 273, 413, 418, 469, 629, 636, 649, 650, 653, 655], "lifecycl": [4, 353, 628], "processorasyncenvpool": 4, "inter": [4, 171, 175], "threadingasyncenvpool": 4, "executor": [4, 23, 24, 26, 181], "functool": [4, 16, 17, 19, 22, 30, 141], "s0": [4, 141], "clamp": [4, 141, 383, 386, 405, 473, 630, 649, 651], "env_index": [4, 141], "async_step_send": [4, 141, 175, 181], "s0_result": [4, 141], "async_step_recv": [4, 141, 175, 181], "close": [4, 14, 16, 17, 19, 22, 23, 24, 26, 30, 70, 109, 141, 151, 166, 195, 196, 199, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 255, 285, 294, 296, 393, 395, 410, 413, 427, 429, 452, 634, 635, 639, 646, 648, 649, 651, 655], "paradigm": [4, 22, 650], "decpodp": 4, "game": [4, 5, 6, 97, 144, 163, 164, 169, 170, 240, 304, 454, 638, 643], "thank": [4, 192, 214, 215, 430, 628, 634, 638, 639, 655], "carrier": [4, 636, 637, 639, 653], "particular": [4, 38, 45, 50, 58, 68, 69, 75, 80, 86, 87, 99, 100, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 286, 296, 355, 361, 366, 427, 429, 430, 630, 631, 635, 637, 639, 648, 650, 653], "thu": [4, 410, 650], "vma": [4, 185, 186, 452, 519, 649, 650], "robot": [4, 6, 8, 103, 264, 289, 291, 413, 638, 650], "vmasenv": [4, 452, 519, 626, 649, 650], "balanc": [4, 121, 122, 145, 146, 353, 628, 634, 635], "num_env": [4, 16, 17, 22, 28, 141, 150, 154, 167, 185, 186, 193, 194, 197, 203, 452, 506, 510, 649, 650], "n_agent": [4, 185, 186, 330, 331, 332, 342, 351, 432, 452, 630, 649, 650], "ground_rew": 4, "pos_rew": 4, "style": [4, 65, 72, 81, 82, 97, 99, 100, 101, 102, 103, 104, 105, 210, 478], "vari": [4, 150, 152, 153, 173, 174, 177, 185, 265, 630, 638, 650], "creation": [4, 171, 180, 215, 361, 427, 656], "info_spec": [4, 171], "agent_i_action_spec": 4, "agent_i_reward_spec": 4, "agent_i_observation_spec": 4, "categor": [4, 36, 37, 39, 40, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 141, 142, 143, 144, 147, 150, 151, 152, 153, 156, 157, 158, 159, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 197, 200, 201, 202, 227, 228, 229, 247, 266, 313, 321, 337, 340, 343, 355, 375, 376, 379, 380, 381, 398, 401, 402, 432, 535, 626, 637], "prefix": [4, 34, 38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 86, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 281, 284, 286, 296, 353, 354, 355, 356, 357, 359, 360, 361, 366, 379, 396, 411, 416, 427, 428, 429, 430, 431, 453, 637, 641, 646, 656], "exactli": [4, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 153, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 284, 286, 296, 317, 322, 337, 355, 361, 366, 396, 416, 427, 429, 430, 634, 637, 642, 649, 650], "action_kei": [4, 16, 17, 19, 22, 23, 24, 26, 28, 53, 141, 144, 147, 151, 159, 171, 172, 175, 176, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 226, 228, 229, 245, 255, 258, 298, 300, 316, 326, 327, 341, 378, 535, 630, 649, 650], "reward_kei": [4, 45, 47, 49, 53, 59, 78, 112, 113, 120, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 226, 296, 300, 327, 466, 470, 649, 650], "set_kei": [4, 247, 393, 395, 396, 398, 401, 402, 403, 409, 410, 411, 413, 414, 415, 416, 427, 430, 432, 438, 634, 649, 650], "awai": [4, 636, 639, 649, 650, 655], "leaf": [4, 16, 17, 19, 21, 22, 23, 24, 26, 28, 36, 37, 39, 40, 41, 42, 43, 46, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 77, 85, 87, 88, 89, 90, 91, 92, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 254, 277, 279, 285, 383], "autoresettransform": [4, 537], "invalid": [4, 38, 45, 50, 58, 68, 69, 75, 80, 109, 135, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 188, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 328, 329, 355, 361, 362, 366, 427, 429, 430, 647], "nan": [4, 231, 292, 537], "auto_reset": [4, 53, 141, 144, 147, 151, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 207, 231, 296, 651], "auto_reset_replac": [4, 231], "placehold": [4, 152, 153, 197, 247, 286, 292], "set_gym_backend": [4, 16, 17, 19, 22, 30, 141, 144, 147, 150, 151, 159, 171, 172, 175, 180, 181, 182, 191, 192, 193, 194, 197, 200, 201, 202, 231, 626, 639, 655], "autoresettinggymenv": [4, 231], "td_reset": [4, 231], "exclud": [4, 9, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 80, 85, 88, 89, 90, 91, 92, 99, 104, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 214, 215, 226, 231, 235, 248, 342, 358, 366, 395, 410, 413, 427, 649, 650, 653], "r": [4, 5, 53, 58, 87, 107, 108, 144, 194, 197, 198, 210, 212, 228, 229, 231, 238, 240, 241, 260, 274, 281, 284, 293, 294, 299, 302, 318, 354, 356, 357, 359, 360, 383, 392, 413, 428, 431, 433, 452, 628, 635, 651, 656], "3633e": [4, 231], "02": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 231, 294, 635, 644], "4877e": [4, 231], "2849e": [4, 231], "7584e": [4, 231], "6609e": [4, 231], "6166e": [4, 231], "8366e": [4, 231], "2761e": [4, 231], "5685e": [4, 231], "4102e": [4, 231], "8111e": [4, 231], "9959e": [4, 231], "0865e": [4, 231], "5644e": [4, 231], "2119e": [4, 231], "2542e": [4, 231], "03": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 231, 260, 281], "9952e": [4, 231], "4059e": [4, 231], "2094e": [4, 231], "9009e": [4, 231], "5140e": [4, 231], "3554e": [4, 231], "2920e": [4, 231], "7893e": [4, 231], "6429e": [4, 231], "3057e": [4, 231], "2867e": [4, 231], "6963e": [4, 231], "3818e": [4, 231], "2576e": [4, 231], "2679e": [4, 231], "1640e": [4, 231], "00": [4, 142, 143, 231, 633, 654], "6972e": [4, 231], "0212e": [4, 231], "5959e": [4, 231], "4637e": [4, 231], "3121e": [4, 231], "2168e": [4, 231], "5232e": [4, 231], "7704e": [4, 231], "7457e": [4, 231], "4127e": [4, 231], "1064e": [4, 231], "0854e": [4, 231], "5712e": [4, 231], "2189e": [4, 231], "5235e": [4, 231], "8289e": [4, 231], "0009e": [4, 231], "0257e": [4, 231], "8893e": [4, 231], "5872e": [4, 231], "9405e": [4, 231], "7766e": [4, 231], "0403e": [4, 231], "0626e": [4, 231], "2959e": [4, 231], "7263e": [4, 231], "2775e": [4, 231], "9564e": [4, 231], "0411e": [4, 231], "6769e": [4, 231], "6354e": [4, 231], "8698e": [4, 231], "1765e": [4, 231], "6292e": [4, 231], "5375e": [4, 231], "1820e": [4, 231], "7023e": [4, 231], "5836e": [4, 231], "9016e": [4, 231], "4826e": [4, 231], "6191e": [4, 231], "6387e": [4, 231], "8667e": [4, 231], "2056e": [4, 231], "1147e": [4, 231], "5991e": [4, 231], "0278e": [4, 231], "5219e": [4, 231], "3067e": [4, 231], "6617e": [4, 231], "3322e": [4, 231], "2629e": [4, 231], "4599e": [4, 231], "7298e": [4, 231], "5848e": [4, 231], "0148e": [4, 231], "5745e": [4, 231], "6982e": [4, 231], "7877e": [4, 231], "3527e": [4, 231], "7285e": [4, 231], "6668e": [4, 231], "0583e": [4, 231], "6956e": [4, 231], "3962e": [4, 231], "9845e": [4, 231], "5015e": [4, 231], "5903e": [4, 231], "9993e": [4, 231], "9418e": [4, 231], "0196e": [4, 231], "6557e": [4, 231], "2109e": [4, 231], "8997e": [4, 231], "1507e": [4, 231], "7363e": [4, 231], "0310e": [4, 231], "9574e": [4, 231], "8980e": [4, 231], "0090e": [4, 231], "forecast": 4, "awar": [4, 8, 42, 43, 51, 77, 109, 110, 115, 116, 117, 118, 131, 133, 137, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 285, 296, 319, 324, 353, 429, 635, 637], "detect": [4, 105, 108, 196, 200, 411, 421, 427, 430, 628, 630], "return_contigu": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 648], "tensordictbas": [4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 71, 73, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 135, 141, 144, 147, 149, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 226, 227, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 247, 248, 249, 250, 251, 254, 255, 257, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 298, 300, 316, 319, 324, 326, 327, 341, 354, 355, 356, 357, 359, 360, 361, 366, 374, 376, 378, 381, 382, 383, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 473, 634, 649, 651], "envwithdynamicspec": 4, "max_count": 4, "_set_se": [4, 229, 232, 243, 246, 266, 651], "lazystackedtensordict": [4, 30, 53, 77, 87, 97, 107, 108, 116, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 207, 354, 356, 357, 359, 360, 428, 431, 648], "float32": [4, 16, 17, 19, 39, 42, 45, 47, 53, 64, 65, 66, 68, 73, 74, 78, 80, 81, 82, 85, 86, 87, 88, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 115, 116, 117, 121, 122, 129, 137, 141, 142, 143, 144, 147, 150, 151, 152, 157, 158, 159, 165, 168, 169, 170, 171, 172, 175, 178, 179, 180, 181, 182, 183, 185, 186, 192, 193, 194, 197, 198, 200, 201, 202, 220, 226, 228, 232, 243, 246, 247, 248, 253, 256, 260, 262, 266, 267, 269, 273, 276, 277, 279, 282, 287, 300, 302, 312, 313, 319, 324, 327, 341, 342, 343, 351, 354, 355, 356, 357, 359, 360, 361, 366, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 385, 387, 390, 393, 394, 396, 397, 398, 400, 401, 402, 409, 413, 414, 415, 416, 418, 419, 427, 428, 430, 431, 432, 549, 629, 646, 651], "exclusive_field": [4, 30, 53, 87, 97, 107, 108, 116, 141, 194, 197, 198, 207, 354, 356, 357, 359, 360, 428, 431], "stack_dim": [4, 30, 53, 87, 97, 107, 108, 116, 141, 194, 197, 198, 207, 219, 354, 356, 357, 359, 360, 428, 431, 486], "dramat": 4, "carefulli": [4, 205, 649, 650, 656], "against": [4, 6, 8, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 75, 76, 77, 80, 85, 88, 89, 90, 91, 92, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 370, 375, 376, 379, 380, 381, 382, 383, 394, 396, 409, 414, 416, 418, 419, 427, 429, 430, 636, 649, 650], "plain": [4, 9, 394, 396, 402, 409, 414, 416, 418, 419, 435, 436, 437, 639], "expens": [4, 31, 122, 129, 130, 452, 653], "absent": [4, 42, 43, 51, 77, 80, 99, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 273, 286], "torchvis": [4, 12, 264, 291, 456, 649, 655, 656], "callabl": [4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 124, 141, 144, 147, 148, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 225, 230, 232, 239, 240, 241, 247, 253, 257, 279, 286, 287, 296, 297, 303, 304, 325, 332, 355, 361, 366, 383, 392, 411, 427, 429, 430, 452, 476, 478, 615, 616, 622, 623, 624, 635, 653], "bring": [4, 636, 639, 656], "kind": [4, 72, 85, 641, 649, 653], "consult": 4, "resize_par": 4, "revers": [4, 322], "order": [4, 12, 19, 21, 30, 31, 38, 45, 50, 58, 62, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 128, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 236, 243, 246, 253, 262, 276, 284, 286, 296, 340, 353, 355, 361, 366, 370, 375, 382, 384, 385, 387, 393, 394, 396, 397, 401, 402, 409, 413, 414, 415, 416, 418, 419, 427, 429, 430, 635, 649, 650], "chain": [4, 64, 65, 66, 72, 73, 81, 82, 87, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 159, 192, 198, 200, 201, 213, 214, 239, 245, 303, 304, 354, 356, 357, 359, 360, 385, 428, 431, 628, 656], "in_keys_inv": [4, 213, 217, 221, 238, 243, 244, 246, 253, 260, 261, 262, 266, 267, 269, 274, 283, 285, 287, 288, 544, 549, 550, 552, 634, 648, 651, 656], "append_transform": [4, 53, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 221, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 253, 254, 255, 257, 263, 264, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 302, 319, 324, 429, 452, 628, 634, 637, 646, 649, 651, 653, 655, 656], "doubletofloat": [4, 552, 634, 636, 648], "float64": [4, 38, 45, 50, 58, 68, 69, 75, 80, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 141, 144, 145, 146, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 228, 239, 243, 246, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "think": [4, 108, 192, 194, 196, 197, 199, 205, 627, 628, 636, 649, 650, 656], "in_": 4, "out_": 4, "perspect": [4, 205, 313, 376, 403, 636, 638], "outer": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 286, 631, 634, 635, 656], "obs_standard": 4, "out_keys_inv": [4, 213, 217, 221, 238, 243, 244, 246, 253, 260, 261, 262, 266, 267, 274, 276, 283, 285, 287, 288, 544, 549, 550, 552, 651], "illustr": [4, 628, 634, 635, 640, 653], "schemat": [4, 630], "outermost": 4, "innermost": 4, "similar": [4, 38, 45, 50, 58, 60, 64, 66, 68, 69, 72, 73, 75, 80, 87, 103, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 290, 291, 293, 294, 296, 353, 354, 355, 356, 357, 359, 360, 361, 366, 371, 373, 379, 382, 383, 427, 428, 429, 430, 431, 628, 630, 634, 635, 636, 637, 638, 640, 641, 642, 643, 651, 653, 655, 656], "transform_action_spec": [4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 244, 257, 260, 285, 287, 288, 296, 429], "spec_from_random_valu": 4, "_apply_transform": [4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 257, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 290, 292, 293, 296, 429, 651, 656], "rand": [4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 65, 70, 71, 72, 76, 77, 81, 82, 85, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 116, 124, 142, 143, 157, 158, 165, 169, 170, 176, 183, 184, 229, 232, 243, 246, 266, 276, 300, 327, 379, 393, 394, 396, 397, 398, 400, 401, 402, 409, 411, 413, 414, 416, 418, 419, 427, 430, 651, 655, 656], "approach": [4, 65, 72, 81, 82, 87, 107, 108, 198, 209, 235, 260, 299, 321, 330, 331, 354, 356, 357, 359, 360, 364, 365, 366, 418, 428, 431, 478, 628, 634, 636, 641, 642, 649, 656], "did": [4, 72, 292, 440, 635, 636, 642, 653, 656], "_inv_apply_transform": [4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 228, 285, 296, 429, 651, 656], "actiondiscret": [4, 535], "rand_act": [4, 141, 144, 147, 151, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 207, 232, 286, 639], "action_discret": 4, "addonetoob": 4, "Is": [4, 285], "rewrit": [4, 285], "_call": [4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 245, 247, 248, 249, 250, 251, 254, 255, 257, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 290, 292, 293, 296, 429, 646, 651], "_inv_cal": [4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 228, 285, 296, 429], "overwrit": [4, 285], "till": [4, 285, 292], "encapsul": [4, 285, 639, 640, 641], "forget": [4, 285, 322], "edit": [4, 205, 285, 296, 642], "transform_output_spec": [4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 239, 243, 244, 248, 255, 258, 266, 267, 273, 277, 283, 285, 287, 294, 296, 429], "transform_input_spec": [4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 232, 239, 243, 244, 245, 258, 262, 266, 267, 272, 276, 277, 278, 279, 283, 285, 287, 290, 296, 429], "transform_observation_spec": [4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 235, 236, 237, 238, 239, 242, 243, 244, 247, 248, 250, 252, 254, 255, 257, 258, 260, 262, 266, 267, 268, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 292, 293, 294, 296, 429, 651], "transform_state_spec": [4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 244, 257, 260, 285, 287, 288, 296, 429], "transform_reward_spec": [4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 233, 238, 239, 243, 244, 248, 255, 256, 257, 258, 266, 267, 270, 271, 272, 273, 274, 276, 277, 283, 285, 287, 288, 294, 296, 429, 628, 646], "rewardsum": [4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 226, 285, 296, 429, 577, 649, 650], "undo": [4, 205], "addonetoact": 4, "subtract": [4, 208, 278], "manipul": [4, 5, 9, 145, 146, 264, 285, 289, 628], "third_transform": 4, "unexpect": [4, 16, 17, 19, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430, 656], "behviour": 4, "fortun": [4, 637, 638, 639, 640, 643], "alreadi": [4, 9, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 80, 85, 86, 87, 88, 89, 90, 91, 92, 97, 107, 108, 109, 115, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 257, 279, 296, 297, 354, 355, 356, 357, 358, 359, 360, 361, 366, 383, 427, 428, 429, 430, 431, 434, 435, 436, 437, 628, 634, 636, 643, 649, 650], "catfram": [4, 378, 541, 635], "notic": [4, 135, 235, 630, 636, 644, 651], "parenthood": 4, "henc": [4, 31, 65, 227, 265, 330, 634, 636, 649, 650, 651], "transform2": 4, "transform3": 4, "last_two": 4, "isinst": [4, 171, 180, 286, 452, 462, 529, 651], "discret": [4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 141, 144, 147, 150, 151, 152, 159, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 200, 201, 202, 228, 245, 253, 337, 340, 343, 400, 401, 402, 403, 629, 635, 640, 650], "might": [4, 64, 66, 67, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431, 458, 627, 634, 639, 656], "action_mask": [4, 144, 157, 158, 173, 174, 178, 179, 229, 536, 647], "unavail": [4, 173, 174], "probabl": [4, 5, 9, 74, 121, 122, 124, 127, 208, 209, 214, 215, 301, 302, 311, 313, 316, 317, 319, 321, 322, 324, 325, 328, 329, 337, 349, 350, 355, 358, 361, 366, 379, 383, 396, 402, 413, 416, 430, 628, 629, 630, 635, 638, 640, 655], "probabilistictensordictmodul": [4, 255, 383, 384, 630, 655], "tensordictsequenti": [4, 45, 68, 80, 302, 316, 319, 324, 341, 355, 361, 366, 375, 378, 384, 385, 390, 427, 430, 629, 634, 635, 637, 638, 640, 644, 648, 649, 652, 655], "maskedcategor": [4, 329, 626], "linear": [4, 16, 17, 19, 22, 28, 30, 31, 38, 45, 50, 58, 68, 69, 70, 75, 80, 87, 107, 108, 109, 141, 142, 143, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 255, 264, 279, 285, 286, 289, 291, 296, 300, 302, 303, 304, 306, 307, 308, 309, 313, 315, 316, 325, 327, 330, 331, 333, 334, 341, 343, 344, 345, 354, 355, 356, 357, 359, 360, 361, 366, 370, 371, 372, 373, 377, 378, 379, 380, 382, 385, 387, 393, 394, 396, 397, 398, 400, 401, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 620, 629, 635, 648, 652, 655], "in_feat": 4, "out_feat": 4, "logit": [4, 66, 74, 312, 321, 328, 329, 337, 340, 355, 358, 361, 366, 376, 379, 401, 402, 628, 629], "dist": [4, 11, 321, 328, 329, 337, 383, 630, 640], "distribution_class": [4, 255, 371, 372, 373, 374, 379, 383, 385, 393, 394, 396, 401, 402, 409, 413, 414, 415, 416, 629, 634, 636, 640, 649, 650, 655], "wrap": [4, 6, 16, 17, 19, 22, 23, 24, 26, 28, 35, 38, 44, 45, 50, 58, 68, 69, 74, 75, 80, 101, 109, 141, 142, 143, 144, 147, 151, 152, 156, 157, 158, 159, 164, 167, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 184, 186, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 241, 257, 284, 286, 296, 297, 319, 324, 352, 355, 358, 361, 366, 371, 372, 373, 378, 380, 383, 388, 411, 427, 429, 430, 432, 628, 629, 634, 635, 636, 637, 641, 644, 646, 649, 650, 656], "actionmask": [4, 144, 536], "your_base_env": 4, "mask_kei": [4, 34, 229, 265, 296, 355, 361, 366, 536], "itself": [4, 19, 38, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 231, 296, 354, 355, 356, 357, 359, 360, 361, 366, 411, 418, 427, 428, 429, 430, 431, 636, 639], "ey": 4, "report": [4, 142, 143, 157, 158, 477, 631, 643], "foremost": 4, "callback": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 650], "ad": [4, 5, 16, 17, 19, 22, 30, 34, 38, 45, 50, 53, 58, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 87, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 121, 122, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 253, 272, 284, 286, 296, 299, 333, 334, 341, 354, 355, 356, 357, 359, 360, 361, 366, 392, 393, 395, 396, 398, 403, 410, 413, 416, 427, 428, 429, 430, 431, 432, 635, 637, 638, 640, 646, 649, 653, 655, 656], "tensordictrecord": [4, 626], "videorecord": [4, 12, 452, 626, 636, 643, 644, 649], "csvlogger": [4, 12, 452, 454, 520, 626, 635, 643, 644, 649], "wandblogg": [4, 523, 626, 643], "tensorboardlogg": [4, 522, 620, 626, 643], "tag": [4, 8, 12, 196, 197, 199, 452, 454, 456, 459, 624, 628, 643, 644, 646, 649], "mp4": [4, 452, 454, 456, 644, 649], "video_format": [4, 452, 454, 456, 520, 644, 649], "whc": 4, "cwh": 4, "exp": [4, 392, 630], "v5": [4, 16, 17, 19, 22, 30, 150, 152, 167, 247, 262, 638, 656], "grow": [4, 116, 628], "tediou": [4, 639], "workspac": [4, 87, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 253], "pixelrendertransform": [4, 626, 649], "stream": [4, 103, 110], "alik": [4, 452], "envcreat": [4, 19, 29, 171, 180, 284, 294, 452, 620, 621, 624, 626, 634, 635, 655, 656], "render_mod": [4, 452, 506, 510, 651], "rgb_arrai": [4, 452, 649, 650, 651], "uncom": [4, 643], "line": [4, 8, 38, 45, 50, 53, 58, 68, 69, 75, 80, 87, 97, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430, 631, 635, 643, 649, 650], "comment": [4, 631, 635, 655], "pixels_record": [4, 452], "mission": [4, 210], "irrespect": [4, 382, 383], "jumanji": [4, 141, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 509], "framework": [4, 5, 10, 29, 141, 142, 143, 144, 147, 151, 157, 158, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 317, 628, 646, 647, 655, 656], "Its": [4, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 293, 296, 355, 361, 366, 382, 427, 429, 430, 438], "success": [4, 97, 98, 99, 100, 101, 102, 103, 104, 105, 194, 196, 199, 200, 207, 235, 281, 316, 396, 418, 628, 635, 642, 644, 647, 651, 653, 655], "foundat": [4, 6, 173, 174, 484, 628, 636, 650], "inspir": [4, 638, 651], "gone": [4, 5, 6, 378], "concomittantli": 4, "problem": [4, 8, 9, 10, 19, 197, 427, 635, 636, 637, 642, 649, 650, 651, 653, 656], "decor": [4, 9, 223, 225, 297, 319, 324, 369, 411, 434, 435, 436, 437, 462, 628, 637, 655], "relev": [4, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 74, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 434, 435, 436, 437, 438, 461, 638, 651], "gym_backend": [4, 225, 626], "env1": [4, 302, 628, 648], "venv": 4, "python3": [4, 7, 8, 11], "site": [4, 7, 8, 104, 144, 225], "env2": [4, 628, 648], "_env": [4, 7, 150, 656], "classic_control": 4, "pendulumenv": [4, 53, 626, 651], "0x15147e190": 4, "0x1629916a0": 4, "mo_gymnasium": [4, 161, 191, 256], "side": [4, 5, 208, 209, 214, 215, 328, 355, 656], "v0": [4, 16, 17, 42, 43, 51, 64, 66, 73, 77, 87, 107, 108, 141, 144, 147, 151, 153, 156, 157, 158, 159, 160, 161, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 239, 256, 286, 293, 294, 354, 356, 357, 359, 360, 428, 431, 462, 620], "26": [4, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 214, 215, 240], "fun": [4, 225, 297, 636, 649, 650], "reveal": 5, "curv": 5, "exploit": [5, 640], "cv": 5, "flip": [5, 158], "correspondingli": 5, "invers": [5, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 65, 70, 71, 72, 76, 77, 81, 82, 85, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 235, 243, 246, 248, 253, 257, 260, 267, 269, 281, 283, 285, 287, 296, 391, 395, 401, 409, 413, 427, 429, 626, 651], "prescript": 5, "tune": [5, 35, 255, 430, 628, 649, 650, 652], "coeffici": [5, 35, 44, 74, 208, 214, 255, 395, 402, 410, 413, 416, 427, 430, 650], "bonu": [5, 199, 393, 395, 410, 413, 427, 628], "beta": [5, 65, 81, 121, 122, 401, 409, 410, 430, 489, 602, 603, 604, 606, 607, 608, 612, 634, 635, 653, 655], "reduc": [5, 7, 41, 121, 122, 135, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 226, 235, 241, 278, 294, 299, 301, 349, 430, 583, 626, 628, 635, 649], "downstream": [5, 630, 634], "formul": [5, 649, 650], "gradient": [5, 38, 45, 50, 58, 65, 68, 69, 72, 75, 80, 81, 82, 109, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 257, 286, 296, 301, 320, 329, 334, 337, 349, 350, 355, 361, 366, 383, 393, 395, 396, 397, 401, 402, 407, 409, 410, 411, 413, 414, 415, 416, 418, 419, 427, 429, 430, 433, 434, 435, 436, 437, 473, 478, 634, 636, 649, 650, 651], "easier": [5, 69, 628, 629, 634, 655], "local": [5, 8, 11, 14, 16, 17, 19, 20, 22, 23, 24, 26, 28, 30, 31, 32, 38, 45, 50, 58, 68, 69, 71, 75, 80, 101, 107, 109, 122, 129, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 286, 294, 296, 330, 331, 342, 351, 355, 361, 363, 366, 427, 429, 430, 432, 459, 461, 638, 643, 644, 649, 650], "optima": 5, "product": [5, 10, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 317, 318, 322, 323, 622, 623, 647], "sum": [5, 16, 17, 28, 38, 45, 56, 62, 80, 87, 107, 108, 135, 142, 143, 145, 146, 150, 152, 153, 157, 158, 166, 167, 177, 198, 199, 234, 256, 272, 328, 329, 349, 351, 354, 356, 357, 359, 360, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 410, 412, 413, 414, 415, 416, 418, 419, 427, 428, 430, 431, 433, 440, 466, 628, 630, 634, 635, 636, 638, 641, 644, 649, 650, 651, 656], "stat": [5, 260, 293, 294, 614, 624, 635, 636], "w": [5, 124, 144, 169, 170, 235, 237, 242, 268, 282, 317, 341, 413, 454, 573, 635, 653], "yield": [5, 16, 17, 19, 28, 30, 31, 38, 45, 50, 58, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 353, 355, 361, 366, 411, 427, 429, 430, 628, 634, 637, 641], "insight": [5, 193, 475, 638], "auxiliari": [5, 641], "credit": 5, "spars": [5, 45, 628, 637], "intermedi": [5, 16, 17, 45, 53, 68, 80, 234, 302, 319, 324, 355, 361, 366, 376, 427, 430, 634, 638, 652], "instrument": 5, "greatli": 5, "soccer": 5, "kick": 5, "ball": [5, 194], "likelihood": [5, 634], "score": [5, 74, 199, 338, 340, 361, 413, 628], "undesir": 5, "unintention": 5, "valuabl": 5, "idiosyncrat": 5, "subtask": 5, "hierarch": [5, 631], "explicit": [5, 16, 17, 19, 193, 194, 197, 207, 213, 214, 297, 358, 628, 653], "curios": 5, "magnitudin": 5, "domin": 5, "smaller": [5, 35, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 322, 401, 409, 636, 650], "addition": [5, 311], "timestep": [5, 74, 99, 269, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 649, 650], "realli": 5, "huge": [5, 331, 637], "std": [5, 260, 293, 298, 339, 477, 634, 656], "torchrl": [5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 633, 637, 639, 641, 642, 643, 644, 645, 648, 652, 653, 654], "unseen": 5, "extrins": 5, "wrong": [5, 122, 129, 205], "bonus": 5, "denser": 5, "prior": [5, 75, 345, 405, 650], "freshli": 5, "drop": [5, 128, 130, 226, 294, 353, 395, 413, 427], "meant": [5, 58, 165, 200], "encourag": [5, 171, 205, 340, 402, 413, 416, 478, 634, 635, 653], "measur": [5, 109, 115, 117, 121, 137, 142, 143, 157, 158, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 257, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 290, 292, 293, 296, 395, 413, 427, 429, 475, 478, 636, 642], "novelti": 5, "revisit": 5, "diminish": 5, "decreas": [5, 35, 640], "ideal": [5, 192, 240, 260, 427, 628, 647, 651], "distil": 5, "nois": [5, 295, 334, 341, 368, 414, 418, 419, 467, 624, 634, 649], "exploratori": [5, 393, 395, 410, 413, 427], "misalign": 5, "trade": [5, 640], "unavoid": 5, "bootstrap": [5, 403, 434, 435, 441, 442, 634, 637], "noisi": [5, 333, 334, 368, 629], "unstabl": [5, 121, 122, 320, 349, 350], "inher": [5, 393, 413], "stochast": [5, 255, 314, 334, 335, 345, 394, 396, 399, 401, 402, 407, 409, 412, 414, 416, 478, 629, 636, 640, 650], "enemi": 5, "pomdp": [5, 653], "loos": [5, 383, 629, 635, 636], "nonexist": 5, "sequenc": [5, 16, 17, 19, 22, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 74, 76, 77, 80, 83, 85, 86, 87, 88, 89, 90, 91, 92, 103, 106, 107, 108, 114, 124, 125, 127, 133, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 166, 167, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 217, 221, 233, 234, 235, 236, 237, 242, 243, 245, 246, 250, 252, 253, 256, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 287, 293, 294, 303, 304, 311, 313, 317, 321, 322, 325, 328, 329, 330, 331, 337, 343, 347, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 374, 384, 385, 399, 427, 428, 430, 431, 453, 454, 467, 468, 469, 471, 473, 628, 629, 634, 636, 637, 638, 648, 649, 650, 656], "lstm": [5, 279, 323, 324, 638], "rel": [5, 124, 279, 311, 348, 628, 634, 635, 649, 650, 653], "tend": 5, "stabl": [5, 10, 11, 121, 122, 168], "compens": 5, "descent": [5, 334], "minimum": [5, 88, 141, 171, 180, 270, 314, 348, 349, 350, 355, 361, 366, 386, 389, 392, 394, 396, 402, 411, 412, 416, 427, 430, 463, 630, 634, 636, 644, 649, 650], "manual": [5, 12, 23, 26, 28, 53, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 151, 152, 202, 211, 477, 628, 634, 637, 653], "deviat": [5, 260, 293, 294, 298, 300, 314, 327, 333, 334, 339, 340, 413, 418, 419, 430, 466, 634, 640, 650], "radic": 5, "stabil": [5, 121, 122, 251, 301, 393, 395, 410, 413, 415, 427], "stage": [5, 634, 651], "never": [5, 16, 17, 22, 30, 39, 88, 121, 122, 281, 321, 642, 655], "prevent": [5, 36, 37, 41, 42, 43, 46, 51, 54, 55, 56, 57, 62, 63, 70, 77, 113, 121, 122, 142, 143, 293, 294, 320, 349, 350, 353, 361, 366, 393, 395, 410, 413, 415, 427, 470, 628, 643, 653], "entir": [5, 16, 17, 19, 42, 103, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 235, 294, 330, 628, 636, 639, 651, 653], "submit": [5, 150, 232, 627, 655], "adequ": [5, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 636, 649, 650], "infeas": 5, "allevi": [5, 629], "prune": [5, 159, 201], "fire": [5, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "illeg": 5, "chess": [5, 144, 169, 170], "grasp": 5, "wherein": 5, "cumul": [5, 45, 272, 278, 300, 440, 636], "q": [5, 10, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 306, 307, 308, 309, 312, 313, 315, 342, 343, 351, 373, 376, 380, 381, 394, 396, 397, 398, 400, 401, 402, 403, 408, 409, 414, 416, 418, 419, 432, 626, 634, 641, 646], "flow": [5, 434, 628, 634, 636, 649, 650, 651, 653], "reparameter": [5, 311, 321, 329, 337], "soft": [5, 408, 416, 417, 478, 631, 649], "critic": [5, 9, 199, 371, 377, 393, 395, 396, 397, 401, 402, 409, 410, 413, 414, 415, 416, 418, 419, 427, 478, 532, 631, 634, 641], "clip": [5, 74, 205, 238, 270, 393, 395, 410, 413, 415, 418, 419, 427, 473, 478, 532, 631, 636, 650, 651], "oppos": [5, 86], "incorrect": [5, 129, 205, 413], "thought": [5, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 628], "region": [5, 122], "squash": [5, 637, 655], "tanh": [5, 303, 304, 317, 318, 320, 322, 323, 325, 331, 348, 349, 350, 386, 636, 640, 649, 650, 651, 652], "prob": [5, 208, 209, 214, 215, 321, 328, 329, 337, 340, 353, 355, 358, 361, 366, 636, 647, 650], "rememb": [5, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431, 649], "remap": 5, "origin": [5, 9, 45, 64, 66, 67, 68, 73, 74, 80, 83, 87, 107, 108, 110, 155, 192, 198, 244, 245, 255, 264, 286, 291, 296, 317, 321, 354, 355, 356, 357, 359, 360, 361, 366, 379, 382, 383, 394, 396, 408, 409, 411, 413, 414, 416, 418, 419, 427, 428, 430, 431, 628, 634, 638, 646, 648, 651, 656], "world": [6, 165, 353, 362, 388, 405, 628, 638, 643, 649, 650, 651, 656], "histor": 6, "ceas": 6, "farama": [6, 101, 160, 161, 173, 174, 636, 651], "gymwrapp": [6, 141, 144, 147, 151, 156, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 248, 273, 277, 292, 626, 636, 655], "feel": [6, 627, 644, 655], "free": [6, 8, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 87, 107, 108, 198, 226, 243, 246, 321, 354, 356, 357, 359, 360, 393, 405, 413, 428, 431, 631, 636, 644, 650, 655], "gladli": 6, "prepar": [7, 49, 100, 192, 195, 214, 215, 430, 628, 636], "conda": [7, 8, 627], "cmake": 7, "activ": [7, 8, 10, 53, 303, 304, 310, 314, 325, 330, 331, 395, 410, 413, 629, 631, 651, 655], "sim": 7, "bullet": 7, "headless": [7, 8, 156, 206, 646], "cluster": [7, 8, 9, 23, 28, 100, 627], "withbullet": 7, "forg": [7, 8], "aihabitat": [7, 153], "y": [7, 8, 45, 68, 72, 80, 87, 107, 108, 168, 198, 315, 330, 352, 354, 355, 356, 357, 359, 360, 361, 366, 427, 428, 430, 431, 524, 525, 528, 530, 634, 650, 653], "facebookresearch": [7, 100, 153], "subdirectori": 7, "verbos": [7, 30, 31, 109, 199, 353, 362, 429, 644, 646], "magnum_log": 7, "quiet": 7, "habitat_sim_log": 7, "readm": [7, 8, 185, 655], "md": [7, 8], "habitatenv": [7, 507, 626], "_has_habitat": 7, "available_env": [7, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 160, 163, 164, 168, 169, 170, 171, 172, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 197, 200, 201, 202, 656], "startswith": [7, 302, 630, 634, 641], "oserror": 7, "libllvmlit": 7, "ionstal": 7, "pointer": [7, 148, 411, 634], "llvmlite": 7, "var": [7, 8, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 284, 286, 294, 296, 355, 361, 366, 396, 411, 416, 427, 429, 430], "ld_preload": [7, 8], "bind": 7, "deactiv": [7, 8, 142, 143, 375, 394, 396, 402, 409, 411, 414, 416, 418, 419, 435, 436, 437], "importerror": [7, 8, 11, 647], "usr": [7, 8, 11], "x86_64": [7, 8], "linux": [7, 8], "gnu": [7, 8], "libopengl": [7, 8], "undefin": [7, 8, 11, 38, 41, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 284, 286, 296, 355, 361, 366, 396, 411, 416, 427, 429, 430, 638, 653], "symbol": [7, 8, 11], "_glapi_tls_curr": [7, 8], "mujoco_env": [7, 8], "libglvnd": [7, 8], "glx": [7, 8], "cos7": [7, 8], "reinstal": [7, 8], "xvfbwrapper": [7, 8], "sysroot": [7, 8], "lib64": [7, 8], "libgldispatch": [7, 8], "offici": [8, 99, 638], "stand": [8, 48, 145, 146, 171, 180, 648, 651], "joint": [8, 635], "contact": [8, 67, 649], "engin": [8, 32, 33, 177, 353, 362, 363, 366, 429, 646, 651], "biomechan": 8, "graphic": 8, "anim": [8, 650], "area": 8, "demand": [8, 643, 656], "articul": 8, "acquir": [8, 636], "deepmind": [8, 9, 10, 103, 141, 144, 145, 146, 147, 151, 159, 163, 164, 169, 170, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 247, 636, 639], "whomev": 8, "licenc": 8, "incorpor": [8, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 298, 316, 341, 418, 478, 637, 640, 651], "relianc": 8, "obsolet": 8, "legaci": [8, 34, 64, 66, 73, 87, 107, 108, 198, 208, 209, 214, 215, 354, 355, 356, 357, 359, 360, 361, 366, 428, 431], "pro": [8, 627], "tip": [8, 627], "glfw": [8, 634], "osmesa": 8, "egl": 8, "advic": [8, 103, 656], "sudo": [8, 627], "apt": [8, 650], "libglfw3": 8, "libglew2": 8, "libgl1": 8, "mesa": 8, "libosmesa6": 8, "workflow": [8, 159, 201, 353, 371, 372, 373, 628, 647], "glew": 8, "mesalib": 8, "anaconda": 8, "libgl": 8, "cos6": 8, "menpo": 8, "glfw3": 8, "mujoco_gl": 8, "pyopengl_platform": 8, "mkdir": 8, "earlier": [8, 630, 634, 636, 637, 649, 650, 653], "roboti": 8, "html": [8, 16, 17, 166, 168, 169, 170, 646], "wget": 8, "mujoco210": 8, "tar": [8, 100], "gz": 8, "xf": 8, "charg": [8, 16, 17, 22, 171, 180], "mjkei": 8, "txt": [8, 430], "mjlib_path": 8, "home": [8, 64, 66, 86, 106], "bin": [8, 313, 340, 376, 629], "libmujoco210": 8, "ld_library_path": 8, "mujoco_py_mujoco_path": 8, "mujoco_py_mjkey_path": 8, "reload": 8, "later": [8, 121, 122, 309, 379, 383, 634, 636, 638, 653], "older": [8, 297], "hack": [8, 634], "adatp": 8, "unnot": [8, 265], "mujoco_pi": 8, "cymj": 8, "linuxgpuextensionbuild": 8, "filenam": [8, 64, 66, 73, 87, 107, 108, 113, 198, 354, 356, 357, 359, 360, 428, 431, 635, 653], "troubleshoot": [8, 395, 410, 413], "gl": 8, "h": [8, 124, 235, 237, 242, 268, 282, 317, 318, 319, 322, 323, 324, 327, 454, 573, 635, 653], "eglshim": 8, "fatal": 8, "No": [8, 16, 17, 19, 22, 23, 24, 26, 28, 30, 32, 36, 37, 41, 46, 56, 57, 62, 63, 199, 628], "directori": [8, 64, 66, 73, 86, 87, 97, 99, 100, 101, 103, 104, 105, 107, 108, 111, 115, 198, 354, 356, 357, 359, 360, 428, 431, 459, 461, 628, 630, 631, 634, 640, 643, 649], "devel": 8, "ubuntu": [8, 155], "libglew": 8, "dev": 8, "cento": 8, "yum": 8, "glu": 8, "disappear": [8, 635, 637, 648], "libstdc": 8, "glibcxx_3": 8, "29": [8, 129, 130], "compil": [8, 16, 17, 19, 34, 38, 45, 50, 58, 68, 69, 72, 75, 80, 81, 82, 87, 107, 108, 109, 110, 114, 115, 116, 117, 118, 122, 125, 129, 130, 131, 136, 137, 139, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 297, 317, 318, 322, 323, 349, 353, 354, 355, 356, 357, 359, 360, 361, 362, 366, 427, 428, 429, 430, 431, 434, 485, 486, 487, 488, 492, 494, 495, 499], "libosmesa": 8, "libgcc": 8, "filenotfounderror": [8, 101], "errno": 8, "patchelf": 8, "fatalerror": 8, "gladloadgl": 8, "mj_env": 8, "912": 8, "glfwerror": 8, "65537": 8, "myscript": 8, "runtimeerror": [8, 9, 16, 17, 19, 22, 25, 30, 38, 41, 42, 43, 45, 50, 51, 58, 68, 69, 75, 77, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 259, 284, 286, 296, 355, 361, 362, 366, 396, 416, 427, 429, 430, 630, 656], "slurm": 8, "mjrendercontext": 8, "pyx": 8, "46": [8, 129, 142, 143], "114": 8, "_setup_opengl_context": 8, "opengl_context": 8, "130": 8, "offscreenopenglcontext": 8, "opengl": [8, 649, 650], "global": [8, 38, 45, 50, 58, 68, 69, 72, 75, 80, 81, 82, 109, 124, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 240, 284, 296, 342, 351, 355, 361, 364, 365, 366, 379, 383, 427, 429, 430, 432, 631, 634, 649, 650], "cuda_visible_devic": 8, "slurm_step_gpu": 8, "black": [8, 144, 649], "onscreen": 8, "101": 8, "lgl": 8, "libegl": 8, "x11": [8, 650], "xlib": 8, "libx11": 8, "xorg": 8, "attributeerror": [8, 16, 17, 22, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "nonetyp": 8, "glgeterror": 8, "this_dir": 8, "pwd": 8, "ln": 8, "libglut": 8, "sketch": [9, 631], "n_training_step": 9, "datapoint": [9, 86, 653], "n_data_per_train": 9, "no_grad": [9, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 255, 257, 296, 301, 317, 318, 322, 323, 355, 361, 366, 427, 429, 430, 434, 435, 436, 437, 636, 637, 638, 650], "loss_fn": [9, 637, 641, 642, 655], "zero_grad": [9, 38, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 340, 354, 355, 356, 357, 359, 360, 361, 366, 427, 428, 429, 430, 431, 631, 634, 636, 637, 638, 641, 644, 649, 650, 651], "backpropag": [9, 142, 143, 157, 158, 171, 393, 394, 395, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 419, 427, 430, 432, 641, 650, 651], "differenti": [9, 86, 142, 143, 255, 396, 418, 434, 435, 436, 437, 599, 600, 601, 603, 609, 610, 611, 637, 640, 641, 649, 650, 651], "denomin": 9, "artifact": 9, "numer": [9, 72, 121, 122, 151, 202, 293, 320, 349, 350, 370, 375, 376, 379, 380, 381, 382, 383, 470, 636, 653, 656], "misconcept": 9, "freed": 9, "appear": [9, 12, 39, 62, 87, 88, 97, 103, 122, 129, 130, 147, 200, 207, 630, 651, 653], "compuat": 9, "fix": [9, 44, 171, 279, 394, 396, 412, 416, 635, 644, 651, 656], "retain_graph": [9, 142, 143], "discuss": [9, 10, 642, 649, 650], "inplac": [9, 38, 45, 50, 53, 58, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 354, 355, 356, 357, 358, 359, 360, 361, 366, 382, 427, 428, 429, 430, 431, 634], "forward": [9, 16, 17, 19, 22, 23, 24, 26, 28, 38, 45, 50, 58, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 257, 260, 263, 264, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 290, 292, 293, 296, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 336, 339, 341, 342, 344, 345, 347, 351, 352, 353, 355, 361, 366, 374, 376, 378, 379, 381, 382, 383, 386, 387, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 427, 429, 430, 432, 434, 435, 436, 437, 438, 626, 630, 637, 651, 655], "submodul": [9, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 279, 296, 319, 324, 355, 361, 366, 390, 411, 427, 429, 430], "param": [9, 38, 45, 50, 58, 68, 69, 74, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 239, 243, 244, 248, 255, 258, 266, 267, 273, 277, 283, 285, 287, 294, 296, 311, 313, 330, 331, 332, 348, 354, 355, 356, 357, 359, 360, 361, 366, 374, 379, 382, 385, 411, 422, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 634, 638, 644, 649, 650, 651, 652, 655], "grad": [9, 38, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 354, 355, 356, 357, 359, 360, 361, 366, 383, 427, 428, 429, 430, 431, 634, 636], "whose": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 74, 75, 76, 77, 80, 85, 88, 89, 90, 91, 92, 109, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 342, 355, 361, 366, 382, 427, 429, 430], "fit": [9, 69, 260, 279, 297, 353, 630, 631, 634], "jax": [9, 142, 143, 157, 158, 297], "improperli": 9, "underli": [9, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 355, 361, 411, 637, 639, 641, 643, 651], "tedeiou": 9, "priorit": [9, 65, 81, 121, 122, 396, 397, 398, 400, 401, 402, 409, 414, 416, 418, 419, 489, 634, 635, 642, 655], "amount": [9, 171, 341, 434, 635, 653], "costli": [9, 651], "constitut": [9, 635, 650, 651], "profil": 9, "frequent": [9, 53, 653], "program": [9, 401, 409, 638, 656], "functorch": [9, 11], "incl": 9, "suit": [9, 146, 636, 639, 655, 656], "mujoco_instal": 9, "valueerror": [9, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 362, 366, 427, 429, 430, 647], "bad": 9, "fds_to_keep": 9, "new_shap": 9, "permut": [9, 128, 262, 282, 638, 655, 656], "idea": [10, 121, 122, 414, 628, 631, 637, 640, 649, 650], "introductori": 10, "intro": [10, 636, 637], "dai": [10, 655], "2022": [10, 11, 301, 655], "spin": [10, 145, 146], "hug": [10, 358, 361, 628, 647], "syllabu": 10, "lectur": 10, "awesom": 10, "curat": 10, "succinct": [10, 640], "summari": [10, 260, 293, 294, 634, 635, 636, 637], "reddit": 10, "reagent": 10, "orient": [10, 105, 656], "baselines3": 10, "tf": 10, "bandit": [10, 168], "tensorflow": [10, 328, 329], "kera": 10, "acm": 10, "dopamin": 10, "prototyp": [10, 477, 478, 631, 638, 644], "salina": 10, "tianshou": 10, "eleg": 10, "rlpyt": 10, "rllib": 10, "industri": [10, 655], "grade": [10, 628], "cherri": 10, "jaxrl": 10, "mbrl": [10, 165, 629], "rlmeta": 10, "light": 10, "elegantrl": 10, "cloud": 10, "mtrl": 10, "baselin": 10, "689": 11, "_torchrl": 11, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 11, "colab": [11, 636, 637, 649, 650], "notebook": [11, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "24": [11, 104, 130, 150, 166, 167, 194, 205, 340, 378, 454, 649], "pip3": [11, 634, 636, 637, 649, 650], "url": [11, 107, 153, 646], "org": [11, 16, 17, 35, 65, 100, 101, 103, 105, 121, 122, 142, 143, 145, 146, 153, 157, 158, 163, 164, 166, 167, 168, 177, 185, 186, 235, 264, 289, 299, 305, 306, 307, 308, 309, 310, 313, 314, 315, 322, 327, 328, 329, 334, 335, 336, 340, 341, 342, 344, 345, 351, 376, 393, 394, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 412, 413, 415, 416, 417, 418, 434, 439, 447, 625, 645, 652], "whl": 11, "u": [11, 102, 317, 318, 322, 323, 651], "upgrad": 11, "lib_version_her": 11, "pyav": 12, "conveni": [12, 235, 353, 628, 636, 649, 650, 651, 653], "knob": 12, "dispos": 12, "clarifi": 12, "behind": [12, 273, 626], "ultim": [12, 320, 349, 350], "ffmpeg": 12, "whatev": [12, 355, 361, 366, 630, 634], "fed": [12, 650, 653], "feed": [12, 264, 291, 411, 427, 430, 629, 634, 649, 650, 653], "suppos": [12, 171, 467, 631, 656], "snippet": [12, 264, 289, 634], "gave": 12, "extrem": [12, 171, 180, 393, 395, 410, 413, 415, 427], "blurri": [12, 638], "stitch": 12, "my_exp": [12, 643], "pixels_onli": [12, 145, 146, 150, 152, 153, 177, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 634, 635, 643, 644, 655, 656], "my_video": [12, 643], "record_env": [12, 643, 644], "codec": 12, "h264": 12, "crf": 12, "preset": 12, "qualiti": [12, 199, 373, 413, 629], "allow_non": 13, "unwrap": [13, 247, 286, 462, 553], "seealso": 13, "timeout": [14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 171, 206, 210, 212, 353, 355, 361, 366], "close_env": [14, 16, 17, 19, 22, 23, 24, 26, 30], "shutdown": [14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 175, 181, 232, 353, 628, 634, 635, 653, 655], "init_updat": [14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31], "kwarg": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 37, 38, 39, 40, 42, 43, 45, 46, 50, 51, 52, 55, 57, 58, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 115, 116, 117, 118, 120, 121, 122, 124, 129, 130, 131, 133, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 222, 223, 229, 230, 232, 239, 257, 264, 266, 275, 279, 284, 285, 286, 288, 290, 291, 293, 295, 296, 298, 300, 302, 303, 304, 306, 307, 308, 309, 312, 315, 316, 319, 320, 324, 325, 326, 327, 330, 331, 332, 337, 341, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 422, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 452, 454, 458, 459, 461, 465, 473, 477, 478, 615, 616, 621, 622, 623, 630, 636, 638, 650], "init": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 38, 45, 50, 58, 68, 69, 70, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 285, 293, 296, 330, 331, 332, 355, 358, 361, 366, 427, 429, 430, 434, 461, 628, 635, 636], "implic": [14, 23, 24, 26], "notimplementederror": [14, 23, 24, 26, 87, 634], "subclass": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 38, 39, 42, 45, 50, 68, 69, 75, 80, 88, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 230, 231, 285, 292, 298, 299, 302, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 332, 335, 336, 339, 341, 344, 345, 347, 352, 366, 374, 376, 378, 381, 382, 383, 384, 386, 389, 411, 413, 635, 637, 642, 651, 653], "policy_or_weight": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 45, 68, 80, 234, 257, 352, 355, 361, 366, 375, 378, 380, 427, 430, 526, 637], "worker_id": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32], "upload": [14, 16, 17, 19, 22, 23, 24, 26, 28, 30], "extract": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 42, 43, 51, 77, 100, 122, 192, 206, 217, 231, 253, 283, 287, 377, 628, 634, 636, 655], "Will": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 64, 66, 73, 87, 107, 108, 122, 129, 166, 198, 354, 356, 357, 359, 360, 428, 431, 454], "_get_server_weight": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32], "typeerror": [14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "weight_updat": [14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 479, 481, 482, 483, 628, 635], "overwritten": [14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 53, 97, 100, 101, 103, 104, 105, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 250], "localweightsupdaterbas": [14, 16, 17, 19, 22, 23, 24, 26, 28, 30], "remoteweightsupdaterbas": [14, 16, 17, 19, 22, 23, 24, 26, 28, 30], "get_server_weight": 15, "policy_weight": [15, 18, 20, 25, 27], "date": [15, 18, 144, 234, 457], "datacollectorbas": [15, 16, 18, 20, 21, 24, 25, 27, 32, 33, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 285, 296, 379, 383, 429, 476, 478, 615, 616, 620, 626], "all_worker_id": [15, 18, 20, 21, 25, 27, 32, 33], "scope": [15, 18, 20, 21, 25, 27, 32, 33, 87, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 638, 656], "classmethod": [15, 18, 20, 21, 25, 27, 30, 31, 32, 33, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 253, 289, 297, 304, 305, 339, 353, 354, 356, 357, 359, 360, 428, 431], "from_polici": [15, 18, 20, 21, 25, 27, 32, 33], "increment_vers": [15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 30, 31, 32, 33, 211], "increment": [15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 30, 31, 32, 33, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 200, 201, 202, 211, 260, 410, 628], "post_hook": [15, 18, 20, 21, 25, 27, 32, 33], "abc": [15, 18, 20, 21, 25, 27, 32, 33], "push_weight": [15, 18, 20, 21, 25, 27, 32, 33], "noth": [15, 18, 20, 21, 25, 27, 32, 53, 159, 201, 634, 636], "register_collector": [15, 18, 20, 21, 25, 27, 32, 33, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 355, 361, 366], "register_post_hook": [15, 18, 20, 21, 25, 27, 32, 33], "policy_factori": [16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 479, 481, 482, 483], "device_typ": [16, 19, 22, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 213, 264, 289, 291, 303, 304, 305, 306, 307, 308, 309, 315, 325, 330, 331, 333, 334, 339, 342, 382, 469, 618], "env_devic": [16, 17, 19, 22, 23, 24, 26, 28, 479, 481, 482, 483, 635], "create_env_kwarg": [16, 17, 19, 22, 28, 141, 148, 166, 171, 180, 284, 479, 481, 482, 483, 500, 634, 656], "collector_class": [16, 17, 23, 24, 26, 27, 28], "postproc": [16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 58, 269, 479, 481, 482, 483, 635, 653], "explorationtyp": [16, 17, 19, 22, 23, 24, 26, 28, 379, 411, 467, 629, 634, 635, 636, 637, 640, 649, 655], "interactiontyp": [16, 19, 22, 23, 24, 26, 28, 189, 224, 379, 383, 467], "preemptive_threshold": [16, 17, 22], "num_thread": [16, 17, 22, 64, 66, 73, 87, 107, 108, 151, 171, 180, 198, 202, 354, 356, 357, 359, 360, 428, 431], "num_sub_thread": [16, 17, 22, 171, 180], "set_trunc": [16, 17, 19, 22, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 479, 481, 482, 483], "use_buff": [16, 17, 19, 171, 180, 479, 481, 482, 483], "extend_buff": [16, 17, 19, 479, 481, 482, 483], "replay_buffer_chunk": 16, "trust_polici": [16, 17, 19, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 479, 481, 482, 483], "compile_polici": [16, 17, 19, 479, 481, 482, 483], "cudagraph_polici": [16, 17, 19, 479, 481, 482, 483], "no_cuda_sync": [16, 17, 19, 479, 481, 482, 483], "track_policy_vers": [16, 17, 19, 22, 30, 31, 211, 479, 481, 482, 483, 628], "datacollector": [16, 17, 19, 22, 28, 30, 31, 58, 413, 636, 642, 653], "recept": 16, "safe": [16, 17, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 73, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 122, 129, 198, 298, 341, 348, 349, 354, 356, 357, 359, 360, 370, 375, 376, 379, 380, 381, 382, 383, 385, 428, 431, 629, 655], "guard": [16, 17], "doc": [16, 17, 83, 153, 156, 157, 158, 168, 177, 461, 630, 635, 649, 650, 653], "env_mak": [16, 17, 19, 28, 70, 141, 620, 656], "2000": [16, 17, 19, 58, 86, 154, 340, 454, 653], "50": [16, 17, 19, 28, 33, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 67, 74, 76, 77, 85, 88, 89, 90, 91, 92, 97, 105, 109, 129, 130, 163, 164, 205, 296, 353, 358, 361, 366, 610, 637, 647, 653], "del": [16, 17, 19, 30, 634, 635, 636, 648, 649, 653, 655, 656], "int64": [16, 17, 19, 30, 34, 36, 37, 41, 46, 47, 53, 54, 55, 56, 57, 62, 63, 64, 66, 67, 68, 73, 74, 78, 81, 83, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 121, 129, 141, 144, 147, 151, 159, 162, 163, 164, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 207, 228, 232, 240, 247, 262, 269, 277, 313, 341, 343, 354, 356, 357, 359, 360, 375, 376, 379, 380, 381, 428, 431, 629, 651], "undergon": [16, 17, 19, 22, 23, 24, 26, 28, 86], "env_obs_kei": [16, 17, 19, 22, 23, 24, 26, 28], "mustn": [16, 17, 19, 22, 23, 24, 26, 28], "pickl": [16, 17, 19, 22, 23, 24, 26, 28, 38, 45, 50, 58, 65, 68, 69, 72, 75, 80, 81, 82, 109, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 293, 294, 296, 355, 361, 366, 427, 429, 430], "exclus": [16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 60, 72, 81, 82, 87, 93, 94, 97, 103, 107, 108, 122, 129, 130, 198, 204, 232, 248, 250, 257, 317, 319, 322, 324, 328, 329, 354, 356, 357, 359, 360, 363, 375, 376, 380, 381, 417, 418, 419, 428, 431, 434, 435, 436, 437, 438, 461, 624, 629], "lifespan": [16, 17, 19, 22, 23, 24, 26, 30, 31, 635], "divis": [16, 17, 19, 22, 23, 24, 26, 38, 97, 103, 122, 129, 130, 294, 299, 650], "endless": [16, 17, 19, 22, 23, 24, 26, 207, 628], "sit": [16, 17, 19, 22, 23, 24, 26, 28, 476, 635], "cast": [16, 17, 19, 22, 23, 24, 26, 28, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 106, 107, 108, 109, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 157, 158, 159, 166, 167, 169, 170, 171, 172, 175, 177, 180, 181, 182, 183, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 246, 247, 248, 249, 251, 254, 255, 257, 263, 264, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 296, 354, 355, 356, 357, 359, 360, 361, 366, 382, 395, 410, 413, 427, 428, 429, 430, 431, 649, 656], "deriv": [16, 17, 23, 24, 26, 28, 84, 87, 107, 108, 198, 311, 354, 356, 357, 359, 360, 428, 431, 473], "span": [16, 17, 19, 22, 23, 24, 26, 28, 103, 122, 129, 130, 494, 495], "n_step": [16, 17, 19, 22, 23, 24, 26, 28, 58, 296, 378, 564, 635, 636, 649, 650], "mainli": [16, 17, 19, 22, 23, 24, 26, 28, 74, 192, 193, 194, 197, 461, 629, 649, 650, 651], "round": [16, 17, 19, 22, 23, 24, 26, 28, 97, 144, 353, 492], "closest": [16, 17, 19, 22, 23, 24, 26, 28], "boolm": [16, 17, 22], "finish": [16, 17, 19, 22, 28, 30, 151, 202, 269, 656], "earli": [16, 17, 22, 58, 121, 122, 151, 202, 277, 355, 361, 366, 655], "harm": [16, 17, 22, 171, 180], "add_truncated_kei": [16, 17, 19, 22, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 286], "trust": [16, 17, 19, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 241, 324], "cudagraphmodul": [16, 17, 19, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "behaviour": [16, 17, 19, 45, 68, 80, 355, 361, 366, 427, 430, 637, 638, 655], "bypass": [16, 17, 19, 101, 640], "isaaclab": [16, 17, 19, 152, 156], "maniskil": [16, 17, 19], "crash": [16, 17, 19, 269], "multiprocessedweightupdat": [16, 17], "policyvers": [16, 17, 19, 22, 30, 31, 628], "mediat": [16, 17, 19, 22, 30], "get_policy_vers": [16, 17, 19, 22, 30, 31], "uuid": [16, 17, 19, 22, 30, 31, 211, 457, 635, 656], "disabl": [16, 17, 19, 22, 30, 31, 36, 37, 38, 41, 45, 46, 50, 54, 55, 56, 57, 58, 62, 63, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 286, 296, 320, 350, 355, 361, 366, 427, 429, 430, 452, 477, 634, 649, 650], "getattr_env": [16, 17, 19, 22, 30, 31], "attr": [16, 17, 19, 22, 30, 31], "getattr_polici": [16, 17, 19, 22, 30, 31], "getattr_rb": [16, 17, 19, 22, 30, 31], "ordereddict": [16, 17, 19, 22, 28, 30, 31, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 284, 286, 293, 294, 296, 355, 361, 366, 396, 416, 427, 429, 430], "worker0": [16, 17, 22], "state_dict0": [16, 17, 22], "worker1": [16, 17, 22], "state_dict1": [16, 17, 22], "policy_vers": [16, 17, 19, 22, 30, 31, 211, 628], "reset_idx": [16, 17, 22], "static_se": [16, 17, 19, 22, 28, 30, 31, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 286], "env_fn": [16, 17, 19, 22, 30, 31, 148, 622, 623], "env_fn_parallel": [16, 17, 19, 22, 30, 31], "300": [16, 17, 19, 22, 30, 31, 129, 130, 308, 309], "out_se": [16, 17, 19, 22, 30, 31, 656], "irrevers": [16, 17, 22], "pipe": [16, 17, 19, 22, 30, 171], "tqdm": [16, 17, 19, 22, 30, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 473, 634, 636, 637, 649, 650, 651], "ale_pi": [16, 17, 19, 22, 30, 638], "10000": [16, 17, 22, 28, 171, 299, 473, 478, 533, 637], "progress": [16, 17, 19, 22, 30, 31, 353, 465, 466, 467, 473, 475, 477, 478, 631, 635, 637, 656], "bar": [16, 17, 19, 22, 30, 115, 117, 137, 353, 374, 465, 466, 467, 473, 478, 631, 635], "pbar": [16, 17, 19, 22, 30, 97, 98, 99, 100, 101, 102, 103, 104, 105, 634, 636, 637, 649, 650, 651], "100_000": [16, 17, 19, 22, 30, 638, 644], "prec_wc": [16, 17, 19, 22, 30], "wc": [16, 17, 19, 22, 30], "write_count": [16, 17, 19, 22, 30, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 475], "set_descript": [16, 17, 19, 22, 30, 634, 636, 637, 649, 650, 651], "remote_collector": [18, 28], "max_interv": 18, "_maybe_map_weight": [18, 21, 25, 27, 32], "_sync_weights_with_work": [18, 21, 25, 27, 32], "_skip_upd": 18, "interv": [18, 228, 281, 453, 454, 464, 476, 478, 635, 651], "raycollector": [18, 70, 626], "return_same_td": [19, 483], "interruptor": [19, 483], "cautious": [19, 413], "whole": [19, 38, 42, 43, 45, 50, 51, 58, 68, 69, 75, 77, 80, 86, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 284, 286, 296, 355, 361, 366, 379, 396, 416, 427, 429, 430, 463, 634, 636], "_interruptor": 19, "outsid": [19, 244, 284, 630, 643, 649, 650, 651], "start_collect": 19, "stop_collect": 19, "preeptiv": 19, "chunk": [19, 30, 31, 109, 640], "policy_state_dict": [19, 30, 31], "env_state_dict": [19, 30, 31], "256": [19, 30, 106, 163, 164, 253, 310, 631, 635, 636, 638, 649, 650], "weight_gett": 20, "vanillaweightsend": 20, "fetch": [20, 64, 66, 73, 87, 107, 108, 142, 143, 145, 146, 198, 255, 354, 356, 357, 359, 360, 428, 431, 640, 652, 653], "sender": 20, "update_weight": [20, 25, 27, 353, 476], "piec": [21, 114, 125, 136, 139, 140, 634, 635, 636, 643, 649, 650, 651, 653], "scheme": [21, 631, 656], "_push_weight": 21, "unchang": [21, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 245, 257, 264, 279, 285, 286, 289, 291, 296, 316, 355, 361, 366, 382, 427, 429, 430, 454, 469, 634, 653], "__call__": [21, 38, 45, 50, 58, 67, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 383, 427, 429, 430, 631], "proxi": [21, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 73, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 198, 329, 337, 354, 356, 357, 359, 360, 379, 428, 431, 630], "weakref": [21, 53, 87], "exporationtyp": [23, 24, 26], "collector_kwarg": [23, 24, 26, 28], "num_workers_per_collector": [23, 24, 26, 28], "slurm_kwarg": [23, 24, 26], "update_after_each_batch": [23, 24, 26, 28], "max_weight_update_interv": [23, 24, 26, 28], "tcp_port": [23, 24, 26, 29], "respect": [23, 24, 26, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 229, 233, 239, 243, 246, 258, 264, 265, 274, 279, 285, 286, 289, 291, 296, 317, 321, 322, 330, 345, 355, 361, 366, 382, 387, 393, 395, 410, 413, 415, 427, 429, 430, 434, 436, 437, 468, 630, 636, 637, 649, 650], "subnod": [23, 24, 26, 28], "readi": [23, 26, 28, 30, 31, 192, 353, 627, 635, 636, 638, 640, 643, 653, 655], "fashion": [23, 26, 28, 64, 66, 73, 87, 107, 108, 130, 198, 354, 356, 357, 359, 360, 428, 431], "distributed_back": [23, 24], "ucc": [23, 24], "submitit_delai": [23, 29], "former": [23, 24, 26, 34, 38, 45, 50, 65, 68, 69, 72, 75, 80, 81, 82, 99, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 298, 299, 302, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 332, 335, 336, 339, 341, 344, 345, 347, 352, 374, 376, 378, 381, 386, 389, 634], "whilst": [23, 24, 26, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "homonym": [23, 24, 26, 651], "visit": [23, 24, 26, 87, 197], "facebookincub": [23, 24, 26], "tcp": [23, 24, 26, 29], "port": [23, 24, 26, 29, 32, 183, 353, 364, 365], "10003": [23, 24, 26, 29], "distributedweightupdat": 23, "liter": [24, 87, 107, 141, 187, 192, 193, 194, 196, 197, 200, 204, 205, 207, 211, 353, 354, 356, 357, 359, 360, 361, 366, 369, 427, 430], "update_interv": 24, "frequenc": [24, 340, 366, 478, 634], "restart": 25, "rank": [25, 87, 107, 108, 135, 198, 300, 354, 356, 357, 359, 360, 364, 365, 428, 431], "visible_devic": 26, "tensorpipe_opt": 26, "tensorpiperpcbackendopt": 26, "rpcweightupdat": 26, "collector_info": 27, "collector_rref": 27, "ray_init_config": [28, 31, 70], "remote_config": [28, 30, 31, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "num_collector": [28, 622, 623, 634, 635], "coordin": [28, 115, 117, 242, 628], "autodetect": 28, "num_cpu": [28, 31, 70, 213, 257, 358], "num_gpu": [28, 31, 70, 213, 257, 358], "equat": [28, 68, 87, 103, 151, 202, 293, 294, 341, 392, 395, 417, 427, 636, 639, 651], "exce": [28, 653], "indefinit": [28, 96], "rayreplaybuff": [28, 65, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 626], "enfoc": 28, "rayweightupdat": 28, "distributed_collector": [28, 70], "add_collector": 28, "local_polici": 28, "stop_remote_collector": 28, "num_job": 29, "tcpport": 29, "submitit_main_conf": 29, "slurm_cpus_per_task": 29, "slurm_gpus_per_nod": 29, "slurm_partit": 29, "timeout_min": 29, "submitit_collection_conf": 29, "delai": [29, 418, 641], "jump": [29, 639], "host": [29, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "satellit": 29, "rendezv": 29, "hang": [29, 628], "forev": 29, "default_config": [29, 305, 310, 339, 374], "default_slurm_conf_main": 29, "default_slurm_conf": 29, "dialog_turns_per_batch": [30, 31], "yield_only_last_step": [30, 31], "yield_completed_trajectori": [30, 31], "total_dialog_turn": [30, 31, 109], "async_env": [30, 31], "flatten_data": [30, 31], "queue": [30, 175, 293, 355, 361, 366, 429, 628, 653, 655], "simplifi": [30, 33, 65, 223, 358, 628, 640, 651, 653], "vllm": [30, 32, 33, 200, 353, 362, 363, 364, 365, 366, 646], "vllmwrapper": [30, 192, 200, 355, 361, 628, 647], "mocking_class": [30, 284], "dummystrdataload": 30, "llmenv": [30, 195, 203, 207], "llm_model": 30, "gpt2": [30, 67, 74, 83, 86, 159, 201, 305, 310, 339, 358, 361, 366, 628], "get_token": 30, "pad_token": [30, 67, 83, 214, 215, 430], "eos_token": [30, 67, 196, 214, 215, 430], "from_dataload": [30, 192, 193, 194, 197, 200, 207], "from_text": [30, 108, 200, 207, 430, 628], "group_repeat": [30, 192, 193, 194, 197, 200, 203, 207], "attention_mask": [30, 64, 66, 67, 73, 74, 83, 86, 106, 200, 361, 366], "nontensorstack": [30, 53, 60, 108, 116, 141, 144, 159, 194, 197, 201, 207, 217, 253, 283, 287], "plsgqejeyd": 30, "text_respons": [30, 194, 197, 199, 200, 202, 205, 210, 212, 430, 628, 646], "ec": 30, "tjbjz3perwhz": 30, "tokens_respons": [30, 200], "as_remot": [30, 31, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "cl": [30, 31, 65, 70, 71, 72, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 124, 198, 354, 356, 357, 359, 360, 428, 431, 635], "quantiti": [30, 31, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "reserv": [30, 31, 65, 70, 71, 72, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 124, 198, 354, 356, 357, 359, 360, 428, 431, 631], "alia": [30, 38, 45, 50, 58, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 115, 116, 117, 118, 124, 131, 133, 137, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 412, 413, 414, 415, 416, 418, 419, 427, 429, 430, 432, 438], "get_policy_model": [30, 31], "rayllmcollector": [30, 628], "is_initi": [30, 31, 358, 628], "sync_it": 31, "lightweight": [31, 638, 643], "dialog": [31, 109], "yeild": 31, "block": [31, 33, 106, 114, 140, 156, 197, 199, 212, 353, 628, 629, 634, 637, 638, 641, 642, 649, 653], "idl": [31, 171], "somehwat": 31, "v2": [32, 33, 87, 107, 108, 157, 158, 178, 179, 198, 354, 356, 357, 359, 360, 423, 428, 431, 443, 444, 445, 446, 448, 449, 450, 451, 637], "master_address": [32, 364, 365], "master": [32, 35, 353, 364, 365, 649, 650], "localhost": [32, 183, 364, 365], "master_port": [32, 364, 365], "model_metadata": [32, 33], "vllm_tp_size": 32, "vllmupdaterv2": 32, "asyncvllm": [32, 362, 366, 628], "vllm_engin": [32, 33], "Not": [32, 54, 55, 72, 142, 143, 157, 284, 319, 324, 361, 628], "reliabl": [32, 628], "get_model_metadata": [32, 33, 353], "transformerswrapp": [32, 33, 192, 214, 215, 355, 358, 366, 430, 628, 647], "rlvllmengin": [33, 353, 363], "vllmupdat": [33, 628], "get_tp_siz": [33, 353], "push": [33, 430], "push_weights_from_transform": 33, "transformers_model": [33, 647], "pretrainedmodel": 33, "push_weights_from_transformers_optim": 33, "rollout_tensordict": 34, "nestedkei": [34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 68, 73, 76, 77, 78, 80, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 122, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 176, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 208, 214, 215, 217, 221, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 293, 294, 296, 298, 302, 313, 316, 341, 343, 354, 355, 356, 357, 359, 360, 361, 366, 374, 378, 383, 395, 398, 410, 413, 428, 429, 431, 432, 452, 454, 466], "as_nest": 34, "x": [34, 45, 58, 68, 69, 72, 74, 75, 80, 87, 103, 107, 108, 130, 159, 198, 201, 253, 255, 282, 287, 297, 299, 301, 302, 304, 313, 315, 317, 318, 319, 322, 323, 324, 325, 327, 330, 331, 352, 354, 355, 356, 357, 359, 360, 361, 366, 375, 379, 380, 389, 392, 427, 428, 430, 431, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 473, 628, 634, 638, 649, 651, 653, 655], "durat": [34, 650], "meta": [34, 64, 66, 73, 85, 87, 99, 107, 108, 149, 153, 198, 354, 356, 357, 359, 360, 393, 395, 410, 413, 415, 428, 431, 628, 631, 636, 649, 650, 653], "aren": [34, 278, 637], "eventu": [34, 342, 637, 651], "recov": [34, 87, 99, 101, 103, 104, 105, 107, 108, 129, 130, 198, 354, 356, 357, 359, 360, 384, 401, 409, 428, 431, 648], "layout": [34, 355, 358, 361, 366], "to_padded_tensor": 34, "nested_tensor": [34, 150, 152], "stride": [34, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 303, 304, 306, 307, 315, 330, 355, 361, 366, 427, 429, 430, 524, 635, 649, 655], "jag": 34, "focu": [34, 634, 635, 636, 638, 640, 641, 642, 649], "team": [34, 649, 650, 655], "cat": [34, 53, 87, 107, 108, 198, 207, 354, 356, 357, 359, 360, 387, 394, 396, 397, 409, 414, 416, 418, 419, 428, 431, 649, 653, 655], "arang": [34, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 122, 129, 130, 228, 313, 328, 329, 375, 463, 629, 653], "obs_": 34, "trajectory_id": 34, "int32": [34, 38, 39, 53, 82, 88, 97, 103, 129, 157, 158, 169, 170, 182, 220, 378], "data_split": 34, "got": [34, 642], "init_kl_coef": 35, "horizon": [35, 163, 164, 185, 186, 300, 327, 636], "kl": [35, 44, 74, 192, 208, 209, 214, 215, 255, 405, 410, 427, 430, 628], "describ": [35, 64, 66, 73, 85, 87, 107, 108, 176, 198, 236, 348, 349, 354, 356, 357, 359, 360, 398, 428, 431, 457, 630, 634, 636, 649, 650, 651, 656], "ziegler": 35, "et": [35, 300, 628], "relax": [35, 452], "penalti": [35, 74, 199, 204, 208, 355, 361, 366, 407, 410], "strai": [35, 74], "greater": [35, 97, 122, 129, 130, 240, 256, 258, 319, 324, 396, 634, 635], "increas": [35, 113, 235, 280, 301, 341, 395, 413, 427, 430, 649, 650], "pull": [35, 53, 87, 193, 653], "toward": [35, 121, 122, 291], "aggress": [35, 121, 122, 430], "kl_coef": [35, 44, 74], "arxiv": [35, 65, 100, 103, 105, 121, 122, 142, 143, 145, 146, 157, 158, 163, 164, 166, 167, 177, 185, 186, 235, 264, 289, 299, 305, 306, 307, 308, 309, 310, 313, 314, 315, 322, 327, 334, 335, 336, 340, 341, 342, 344, 345, 351, 376, 393, 394, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 412, 413, 416, 417, 418, 434, 439, 447, 652], "pdf": [35, 235, 305, 306, 307, 308, 309, 313, 340, 341, 376, 396, 403, 407, 414, 417, 418, 434, 439, 447], "1909": 35, "08593": 35, "lm": 35, "blob": 35, "lm_human_prefer": 35, "train_polici": 35, "kl_valu": 35, "coef": [35, 208, 255], "newest": 35, "int8": [36, 147, 162, 173, 174, 233], "encod": [36, 37, 38, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 73, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 142, 143, 147, 150, 151, 152, 153, 156, 157, 158, 166, 167, 169, 170, 177, 183, 184, 198, 202, 228, 245, 336, 337, 340, 344, 354, 355, 356, 357, 359, 360, 361, 366, 392, 428, 431, 635, 636, 637, 640, 651, 653], "null": [36, 39, 40, 42, 43, 45, 51, 52, 60, 61, 65, 76, 77, 81, 85, 88, 89, 90, 91, 92, 192, 200, 233, 253], "denot": [36, 650], "clariti": [36, 53, 286], "assert_is_in": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "cardin": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 87, 88, 89, 90, 91, 92, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 313, 343, 375, 376, 381, 636], "outcom": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 311, 328, 329, 348, 411, 427, 430, 649], "cartesian": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "clear_device_": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "is_in": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 656], "np": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 110, 151, 198, 202, 292, 354, 356, 357, 359, 360, 386, 428, 431, 452, 638, 649, 651], "ndarrai": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 151, 198, 202, 341, 354, 356, 357, 359, 360, 386, 428, 431, 452, 638, 649], "ignore_devic": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "arrai": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 65, 74, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 110, 121, 141, 144, 147, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 207, 247, 317, 318, 322, 323, 354, 356, 357, 359, 360, 428, 431, 634, 649], "use_mask": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 173, 174], "erase_memoize_cach": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "memoiz": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 151, 202], "memoize_encod": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "compliant": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "singleton": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 199, 303, 304, 325, 346, 347, 626, 630, 646], "start_dim": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "end_dim": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "implements_for_spec": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "torch_funct": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "index_typ": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 60, 61, 76, 77, 85, 88, 89, 90, 91, 92], "tensor_to_index": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "exanpl": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "one_hot": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 313, 329, 343], "categ": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 379], "to_categorical_spec": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "idx_one_hot": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "idx_categ": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "to_categor": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "make_neg_dim": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "convert": [36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 110, 141, 142, 143, 144, 147, 150, 151, 152, 153, 156, 157, 158, 159, 166, 167, 169, 170, 171, 172, 175, 177, 180, 181, 182, 183, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 243, 246, 264, 279, 285, 286, 289, 291, 293, 294, 296, 354, 355, 356, 357, 359, 360, 361, 366, 382, 392, 411, 427, 428, 429, 430, 431, 628, 634, 635, 636, 651, 653], "shortcut": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 651, 656], "ndimens": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 634], "violat": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 629], "project": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 69, 76, 77, 85, 88, 89, 90, 91, 92, 245, 298, 322, 341, 370, 375, 376, 379, 380, 381, 382, 383, 461, 523, 629, 631, 655, 656], "uniformli": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 121, 122, 123, 411, 427, 430, 656], "normal": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 71, 76, 77, 85, 88, 89, 90, 91, 92, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 260, 293, 294, 298, 299, 303, 304, 320, 325, 328, 329, 349, 350, 379, 383, 395, 396, 410, 413, 429, 430, 467, 470, 624, 628, 629, 631, 637, 640, 650, 656], "drawn": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 279, 316, 379, 383, 636, 649, 650], "set_provisional_n": [36, 37, 41, 46, 54, 55], "temporarili": [36, 37, 41, 46, 54, 55, 113, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 642, 653], "dest": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 80, 85, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 264, 289, 291, 382], "to_numpi": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "transformed_in": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 348, 624], "check_spec_encod": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "to_one_hot": [36, 37, 41, 46, 54, 55, 56, 57, 62, 63], "hot": [36, 37, 41, 46, 54, 55, 56, 57, 62, 63, 142, 143, 150, 152, 153, 156, 157, 158, 163, 164, 166, 167, 169, 170, 173, 174, 177, 183, 184, 185, 186, 228, 245, 313, 337, 338, 343, 375, 376, 380, 381, 393, 394, 396, 397, 398, 400, 401, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 427, 430, 432, 637], "categ_sampl": [36, 37, 41, 46, 56, 57, 62, 63], "onehot_sampl": [36, 37, 41, 46, 56, 57], "to_one_hot_spec": [36, 37, 41, 46, 54, 55, 56, 57, 62, 63], "categoricalbox": [36, 37, 41, 46, 56, 57, 62, 63, 172], "type_check": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "update_mask": [36, 37, 41, 46, 54, 55, 56, 57, 62, 63], "unmask": [36, 37, 41, 46, 54, 55, 56, 57, 62, 63, 328], "ts": [36, 37, 41, 46, 54, 55, 56, 57, 62, 63], "num_bit": 38, "convert_to_binari": 38, "decim": 38, "1001": 38, "bit": [38, 253, 636, 637, 639, 649, 650, 653], "heavysid": 38, "binary_to_decim": 38, "add_modul": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "fn": [38, 45, 50, 58, 67, 68, 69, 75, 80, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 287, 296, 355, 361, 366, 427, 429, 430, 591, 622, 623], "recurs": [38, 42, 43, 45, 50, 51, 58, 68, 69, 75, 77, 80, 87, 93, 94, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 354, 355, 356, 357, 359, 360, 361, 366, 411, 427, 428, 429, 430, 431, 638], "init_weight": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "m": [38, 45, 50, 54, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 245, 296, 302, 355, 361, 366, 383, 427, 429, 430, 628, 635, 651], "fill_": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430, 635, 637], "net": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 307, 309, 312, 315, 331, 355, 361, 366, 393, 394, 396, 402, 409, 413, 414, 415, 416, 427, 429, 430, 524, 525, 528, 530, 620, 635, 651, 652, 655], "bia": [38, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 253, 264, 279, 284, 285, 286, 289, 291, 296, 299, 303, 304, 306, 307, 308, 309, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 331, 333, 334, 341, 354, 355, 356, 357, 359, 360, 361, 366, 382, 389, 391, 392, 396, 411, 416, 427, 428, 429, 430, 431, 630, 634, 635, 636, 637, 650], "requires_grad": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 255, 284, 286, 296, 340, 355, 361, 366, 383, 396, 416, 427, 429, 430, 503], "bfloat16": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "datatyp": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430, 653], "member": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 411, 427, 429, 430, 454], "xdoctest": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 253, 264, 279, 284, 285, 286, 289, 291, 296, 355, 361, 366, 382, 396, 411, 416, 427, 429, 430], "buf": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "20l": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 411, 427, 429, 430], "1l": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 411, 427, 429, 430], "5l": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 411, 427, 429, 430], "doubl": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 243, 244, 246, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 398, 403, 408, 414, 417, 427, 429, 430, 432, 634, 635, 636, 637, 656], "eval": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 286, 293, 296, 301, 355, 361, 366, 395, 413, 427, 429, 430, 629, 634, 635, 636], "evalu": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 152, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 240, 286, 296, 301, 311, 328, 329, 337, 350, 355, 361, 366, 414, 427, 429, 430, 615, 616, 635, 636, 644], "dropout": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 286, 296, 301, 302, 317, 319, 322, 324, 325, 355, 361, 366, 427, 429, 430, 525, 629, 637], "batchnorm": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 286, 296, 299, 355, 361, 366, 427, 429, 430], "comparison": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 286, 296, 355, 361, 366, 411, 427, 429, 430, 628, 634, 635], "extra_repr": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "recip": [38, 45, 50, 67, 68, 69, 75, 80, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 298, 299, 302, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 332, 335, 336, 339, 341, 344, 345, 347, 352, 374, 376, 378, 381, 386, 389], "get_buff": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "get_submodul": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "qualifi": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "referenc": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "resolv": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "get_extra_st": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 293, 294, 296, 355, 361, 366, 427, 429, 430], "set_extra_st": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 293, 294, 296, 355, 361, 366, 427, 429, 430], "picklabl": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 293, 294, 296, 355, 361, 366, 427, 429, 430], "get_paramet": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "net_b": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "net_c": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "conv": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 303, 304, 355, 361, 366, 427, 429, 430, 635], "conv2d": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 304, 306, 307, 315, 330, 355, 361, 366, 427, 429, 430], "kernel_s": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 303, 304, 306, 307, 315, 330, 335, 355, 361, 366, 427, 429, 430, 524, 635, 655], "diagram": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430, 628], "degre": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 241, 296, 355, 361, 366, 427, 429, 430], "named_modul": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "half": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430, 634], "ipu": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "strict": [38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 284, 286, 296, 354, 355, 356, 357, 359, 360, 361, 366, 396, 416, 427, 428, 429, 430, 431, 638], "descend": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 284, 286, 296, 355, 361, 366, 396, 416, 427, 429, 430], "get_swap_module_params_on_convers": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 284, 286, 296, 355, 361, 366, 396, 416, 427, 429, 430], "persist": [38, 45, 48, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 253, 284, 286, 296, 355, 361, 366, 396, 416, 427, 429, 430], "preserv": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 284, 286, 296, 355, 361, 366, 382, 396, 416, 427, 429, 430], "missing_kei": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 284, 286, 296, 355, 361, 366, 396, 416, 427, 429, 430], "unexpected_kei": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 284, 286, 296, 355, 361, 366, 396, 416, 427, 429, 430], "namedtupl": [38, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 284, 286, 296, 354, 355, 356, 357, 359, 360, 361, 366, 396, 416, 427, 428, 429, 430, 431], "l": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 317, 322, 355, 361, 366, 427, 429, 430, 433, 636, 651], "idx": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "mtia": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "named_buff": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "remove_dupl": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 411, 427, 429, 430], "prepend": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 411, 427, 429, 430, 638], "running_var": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "named_children": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "conv4": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "conv5": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "memo": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "named_paramet": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 255, 296, 355, 361, 366, 411, 427, 429, 430], "register_backward_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "removablehandl": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "favor": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 293, 296, 355, 361, 366, 427, 429, 430, 636], "register_full_backward_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "register_buff": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "running_mean": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "alongsid": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430, 628, 643], "num_featur": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 299, 355, 361, 366, 427, 429, 430], "register_forward_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 313, 343, 355, 361, 366, 427, 429, 430], "with_kwarg": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "always_cal": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "register_module_forward_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "regardless": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 395, 410, 413, 427, 429, 430, 628], "register_forward_pre_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "invok": [38, 45, 50, 58, 68, 69, 71, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "And": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430, 641], "forward_pr": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "register_module_forward_pre_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "ordinarili": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "grad_input": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "grad_output": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "technic": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430, 635, 637, 638, 640], "caller": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "register_module_full_backward_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "register_full_backward_pre_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "backward_pr": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "register_module_full_backward_pre_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "register_load_state_dict_post_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "incompatible_kei": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "thrown": [38, 45, 50, 58, 68, 69, 75, 76, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430, 653], "register_load_state_dict_pre_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "local_metadata": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "error_msg": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "noqa": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 156, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430, 638], "b950": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "register_modul": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430, 631], "register_paramet": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "register_state_dict_post_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "register_state_dict_pre_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "keep_var": [38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 284, 286, 296, 354, 355, 356, 357, 359, 360, 361, 366, 396, 416, 427, 428, 429, 430, 431], "requires_grad_": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430, 638], "autograd": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 284, 286, 296, 355, 361, 366, 396, 416, 427, 429, 430], "freez": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 293, 294, 296, 355, 361, 366, 427, 429, 430], "finetun": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "gan": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "set_submodul": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "share_memori": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430, 634], "share_memory_": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430, 655], "destin": [38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 234, 243, 244, 246, 253, 284, 286, 289, 293, 296, 354, 355, 356, 357, 359, 360, 361, 366, 396, 416, 427, 428, 429, 430, 431, 454], "averag": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 284, 286, 293, 294, 296, 341, 355, 361, 366, 396, 404, 405, 416, 427, 429, 430, 470, 628, 634, 636], "shallow": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 284, 286, 296, 355, 361, 366, 396, 416, 427, 429, 430, 637], "detach": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 284, 286, 296, 355, 361, 366, 396, 407, 411, 416, 418, 427, 429, 430, 434, 435, 436, 437, 634], "non_block": [38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 354, 355, 356, 357, 359, 360, 361, 366, 382, 427, 428, 429, 430, 431], "memory_format": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "channels_last": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "tri": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 353, 355, 361, 366, 382, 427, 429, 430, 643], "pin": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "4d": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "ignore_w": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "1913": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "3420": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "5113": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "2325": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "torch_doctest_cuda1": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "gpu1": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "1914": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "5112": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "2324": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "float16": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 318, 323, 355, 361, 366, 382, 427, 429, 430], "cdoubl": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "3741": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "j": [38, 45, 50, 58, 65, 68, 69, 75, 80, 109, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430, 631, 637, 641], "2382": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "5593": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "4443": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "complex128": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "6122": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "1150": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 264, 279, 285, 286, 289, 291, 296, 355, 361, 366, 382, 427, 429, 430], "to_empti": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "dst_type": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "xpu": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "set_to_non": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 296, 355, 361, 366, 427, 429, 430], "upper": [39, 127, 259], "continuousbox": [39, 42, 88, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 220, 253, 256, 279, 287], "provision": [41, 366], "descript": [42, 156, 185, 210, 231, 635, 636], "akin": 42, "unnam": [42, 43, 51, 77], "compositespec": [42, 626, 646, 651, 656], "constraint": [42, 165, 349, 636, 649, 650], "data_cl": 42, "tensorclass": [42, 64, 66, 73, 87, 106, 107, 108, 115, 117, 137, 198, 354, 355, 356, 357, 359, 360, 366, 428, 431, 628], "step_mdp_stat": 42, "pixels_spec": 42, "observation_vector_spec": 42, "composite_spec": 42, "observation_vector": [42, 236, 634], "_nodefault": [42, 43, 51, 77], "is_empti": [42, 43, 51, 77, 651], "include_nest": [42, 43, 51, 77], "leaves_onli": [42, 43, 51, 77], "is_leaf": [42, 43, 51, 77], "step_mdp_static_onli": [42, 43, 51, 77], "_compositespecitemsview": [42, 43, 51, 77], "_compositespeckeysview": [42, 43, 51, 77], "reflect": [42, 43, 51, 77, 152, 173, 174, 226, 253, 292, 411, 427, 430, 613, 635, 636, 637, 650], "lock_": [42, 43, 51, 77], "propag": [42, 43, 51, 77, 393, 395, 396, 397, 401, 402, 409, 410, 413, 414, 415, 416, 418, 419, 434, 435, 436, 437, 628, 636, 637, 649, 650], "succeed": [42, 43, 51, 77, 253, 287], "pop": [42, 43, 51, 77, 214, 239], "keyerror": [42, 43, 51, 77, 193, 194, 197, 286, 413], "refine_nam": [42, 43, 51, 77], "lift": [42, 43, 51, 77, 103], "coexist": [42, 43, 51, 77], "nice": [42, 43, 51, 77, 636, 639, 642], "ellipsi": [42, 43, 51, 77], "greedili": [42, 43, 51, 77, 640], "spec_refin": [42, 43, 51, 77], "selected_kei": [42, 43, 51, 77, 273, 634], "unlock_": [42, 43, 51, 77], "_compositespecvaluesview": [42, 43, 51, 77], "multipli": [44, 199, 200, 207, 301, 317, 322, 393, 394, 395, 396, 402, 410, 412, 413, 414, 416, 427, 470, 634, 649], "calcul": [44, 74, 194, 269, 317, 393, 395, 400, 410, 413, 415, 418, 427, 434, 475], "reassign": 45, "reward2go": [45, 626], "reward_key_out": 45, "time_dim": [45, 434, 436, 437, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451], "unrol": [45, 404, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451], "discount": [45, 58, 103, 148, 269, 296, 394, 400, 403, 404, 406, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 630, 635, 636, 649, 650], "lastrewardtotraj": 45, "last_reward_to_traj": 45, "new_tensordict": 45, "is_tdmodule_compat": [45, 68, 80, 355, 361, 366, 427, 430], "reset_out_kei": [45, 68, 80, 355, 361, 366, 427, 430], "orign": [45, 68, 80, 87, 107, 108, 198, 354, 355, 356, 357, 359, 360, 361, 366, 427, 428, 430, 431], "mod": [45, 68, 80, 240, 255, 302, 319, 324, 355, 361, 366, 378, 383, 386, 427, 430, 637, 638, 644], "select_out_kei": [45, 68, 80, 355, 361, 366, 393, 394, 396, 397, 401, 402, 409, 413, 414, 416, 418, 419, 427, 430, 638], "reset_parameters_recurs": [45, 68, 80, 355, 361, 366, 411, 427, 430], "relu": [45, 68, 80, 165, 300, 310, 327, 355, 361, 366, 392], "old_param": [45, 68, 80, 355, 361, 366], "bork": [45, 68, 80, 355, 361, 366], "dork": [45, 68, 80, 355, 361, 366], "reset_paramet": [45, 68, 80, 332, 333, 334, 355, 361, 366], "from_modul": [45, 68, 80, 87, 107, 108, 198, 313, 354, 355, 356, 357, 359, 360, 361, 366, 382, 385, 428, 431, 655], "out_keys_sourc": [45, 68, 80, 355, 361, 366, 427, 430], "rubric": [45, 68, 80, 260, 355, 361, 366, 385, 427, 430], "revert": [45, 68, 80, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 355, 361, 366, 427, 430, 640, 653], "seq": [45, 68, 80, 302, 317, 319, 322, 324, 355, 361, 366, 378, 427, 430, 637, 638, 644, 648], "z": [45, 68, 80, 318, 355, 361, 366, 427, 430], "shift_kei": [47, 49, 59, 78], "is_full_kei": [47, 49, 59, 78], "is_ful": [47, 49, 59, 78], "tempfil": [47, 64, 65, 66, 70, 71, 72, 73, 78, 81, 82, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 115, 124, 198, 354, 356, 357, 359, 360, 428, 431, 620, 634, 635, 637, 638, 642, 649, 652, 653], "register_save_hook": [47, 65, 70, 71, 72, 78, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "temporarydirectori": [47, 64, 65, 66, 70, 71, 72, 73, 78, 81, 82, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 124, 198, 354, 356, 357, 359, 360, 428, 431, 634, 635, 637, 638, 642, 649, 652, 653], "tmpdir": [47, 65, 70, 71, 72, 78, 81, 82, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 634, 635, 638, 649], "rb_load": [47, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "register_load_hook": [47, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "filesystem": [48, 653], "ted2nest": [49, 626], "stackedcomposit": [51, 626], "tensordictmap": [53, 626], "observation_kei": [53, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "excluded_kei": [53, 248], "consolid": [53, 80, 94, 117], "lazili": [53, 87, 107, 108, 116, 198, 331, 354, 356, 357, 359, 360, 428, 431, 651], "from_tensordict_pair": [53, 80], "querymodul": [53, 80], "get_keys_from_env": 53, "cattensor": [53, 97, 98, 99, 100, 101, 102, 103, 104, 105, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 542, 634, 648, 651, 656], "unsqueezetransform": [53, 235, 592, 651, 653], "oracl": 53, "obs_kei": 53, "state_kei": [53, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "reset_st": 53, "rollout0": 53, "rollout1": 53, "rollout1b": 53, "collaps": 53, "max_length": [53, 64, 66, 67, 83, 86, 87, 106, 207, 217, 283, 638, 644], "valid_path": [53, 87], "assert_clos": 53, "subtre": [53, 87], "intersect": [53, 297], "Or": [53, 178, 179, 330], "rollout_from_path": [53, 87], "plot": [53, 87, 634, 636, 637, 649, 650, 651], "_nestedkei": [53, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "return_nod": 53, "diverg": [53, 192, 208, 209, 214, 215, 255, 379, 383, 405, 410, 427, 430, 628], "endpoint": 53, "r0": [53, 634], "123": [53, 87], "392": [53, 87], "989": [53, 87], "809": [53, 87], "847": [53, 87], "r1": 53, "235": 53, "td_root": [53, 87], "node_data": [53, 87], "node_id": [53, 87], "nontensordata": [53, 60, 87, 97, 103, 107, 108, 144, 169, 170, 198, 207, 217, 253, 283, 287, 354, 356, 357, 359, 360, 428, 431, 452], "_parent": [53, 87], "0x716eeb78fbf0": 53, "0x": 53, "4341220243998689835": 53, "6745467818783115365": 53, "win": [53, 87, 355], "to_str": [53, 87], "node_format_fn": [53, 87], "indent": [53, 87], "rollouts_data": [53, 87], "456": [53, 87], "359": [53, 87], "3094": [53, 87], "75": [53, 87, 104, 129, 599], "948": [53, 87], "68": [53, 87, 129], "9045": [53, 87], "rollout_data": [53, 87], "nvec": [54, 56], "remove_singleton": 54, "ax": [54, 333, 334, 649], "neither": [54, 55, 56, 57, 103, 183, 651], "use_regist": [56, 62], "mone_hot": [56, 57], "boxlist": [56, 57], "gamma": [58, 269, 296, 327, 393, 394, 396, 397, 398, 400, 402, 403, 404, 406, 409, 411, 413, 414, 415, 416, 418, 419, 420, 422, 427, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 532, 564, 574, 620, 630, 634, 635, 636, 649, 650, 655], "sutton": [58, 630, 649, 650], "1988": 58, "tempor": [58, 121, 319, 324, 327, 435, 436, 441, 442], "44": [58, 129], "ahead": [58, 214, 296, 656], "bias": [58, 121, 122, 317, 318, 322, 323, 389, 630, 634], "mitig": [58, 235], "multisteptransform": [58, 564, 626], "99": [58, 269, 293, 327, 406, 422, 433, 440, 564, 574, 597, 598, 606, 609, 620, 634, 635, 636, 638, 641, 644, 649, 650, 655], "nontermin": 58, "original_reward": 58, "newli": [58, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 628], "OR": 58, "row": [59, 79, 157, 158, 256], "example_data": [60, 108, 197, 200, 207], "feature_dim": 60, "conform": 60, "templat": [60, 108, 192, 193, 194, 197, 214, 215, 216, 361, 366, 455], "randomli": [60, 103, 128, 182, 205, 229, 259, 260, 279, 316, 379, 383, 640, 649, 650, 651, 653], "unidimension": 62, "action_valu": [62, 312, 313, 343, 375, 376, 380, 381, 396, 402, 411, 427, 430, 432, 629, 637, 638, 640, 644], "keepdim": [62, 628], "chosen_action_valu": [62, 342, 343, 351, 380, 381, 432, 629, 637, 640], "priori": 62, "uniqu": [62, 87, 129, 130, 159, 163, 164, 199, 201, 235, 247, 278, 279, 280, 284, 378, 461, 628, 642, 653], "tensor_spec": [62, 176, 227, 229, 401, 402, 413, 415], "one_hot_sampl": [62, 63], "chosen_data": [64, 106], "rewarddata": [64, 106, 626], "rejected_data": [64, 106], "copy_exist": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "return_earli": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "share_non_tensor": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "robust_kei": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "memmap": [64, 66, 73, 87, 107, 108, 115, 117, 171, 180, 198, 293, 354, 356, 357, 359, 360, 428, 431, 454, 456, 469], "from_dataset": [64, 66, 106], "dataset_nam": [64, 66, 74, 86, 106, 168], "550": [64, 66, 74, 86, 106, 129, 130], "root_dir": [64, 66, 86, 106], "from_disk": [64, 66, 86, 106], "carperai": [64, 66, 74, 86], "openai_summarize_comparison": [64, 66, 86], "load_from_disk": [64, 66, 86, 106], "load_dataset": [64, 66, 86, 106], "92534": 64, "input_id": [64, 66, 67, 73, 74, 83, 86, 106, 159, 200, 201], "end_scor": [64, 73, 74, 106], "sub_data": [64, 66], "from_tensordict": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "non_tensordict": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "getattr": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "load_memmap": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "load_": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "load_memmap_": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "robust": [64, 66, 73, 87, 107, 108, 198, 265, 299, 354, 356, 357, 359, 360, 428, 431, 628], "decod": [64, 66, 73, 87, 107, 108, 159, 198, 201, 221, 335, 353, 354, 355, 356, 357, 359, 360, 361, 366, 428, 431, 628], "emit": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "fromkei": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "saved_td": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "td_load": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "fake": [64, 66, 73, 87, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 354, 356, 357, 359, 360, 428, 431, 634, 635, 638], "_subclass": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "faketensormod": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "faketensor": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "from_flatten": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "attemptedli": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "existsok": [64, 66, 73, 87, 107, 108, 115, 198, 354, 356, 357, 359, 360, 428, 431], "mimic": [64, 66, 73, 87, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 354, 356, 357, 359, 360, 428, 431], "non_tensor": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "charact": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431, 636, 638], "cross": [64, 66, 73, 87, 107, 108, 198, 300, 321, 354, 355, 356, 357, 359, 360, 361, 366, 428, 431], "tensordictfutur": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "serialis": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "deepli": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "memmap_": [64, 66, 73, 87, 107, 108, 198, 293, 354, 356, 357, 359, 360, 428, 431], "memmap_lik": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "contentless": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "1_000_000": [64, 65, 66, 70, 71, 72, 73, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 124, 129, 198, 354, 356, 357, 359, 360, 428, 431, 634, 637, 649], "alloc": [64, 66, 73, 87, 107, 108, 117, 198, 213, 311, 328, 329, 353, 354, 356, 357, 359, 360, 428, 431, 628, 634], "memmap_refresh_": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "refresh": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431, 644, 649, 650], "saved_path": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "setattr": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "tent": [64, 66, 73, 86, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "to_tensordict": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "retain_non": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "discrard": [64, 66, 73, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "alpha": [65, 81, 121, 122, 303, 304, 306, 307, 308, 309, 315, 330, 394, 396, 402, 412, 414, 416, 418, 489, 599, 609, 634, 653, 655], "ep": [65, 81, 121, 122, 260, 293, 294, 299, 341, 395, 417, 427, 470, 489, 566, 576, 597, 598, 600, 601, 602, 603, 604, 607, 608, 609, 612, 630, 634, 635, 637, 638, 641, 644], "1e": [65, 81, 121, 122, 260, 293, 294, 299, 311, 314, 348, 566, 576, 597, 598, 600, 601, 603, 604, 605, 607, 608, 609, 610, 612, 634, 635, 636, 650], "08": [65, 81, 121, 122, 566, 576, 597, 598, 603, 604, 607, 608, 609, 612], "pin_memori": [65, 72, 81, 82, 97, 99, 100, 101, 102, 103, 104, 105, 263, 634, 655], "delayed_init": [65, 72, 81, 82, 124], "schaul": [65, 121, 122], "quan": [65, 121, 122], "antonogl": [65, 121, 122], "silver": [65, 121, 122], "2015": [65, 121, 122, 240], "ab": [65, 100, 103, 105, 121, 122, 142, 143, 145, 146, 157, 158, 163, 164, 166, 167, 177, 185, 186, 234, 264, 289, 293, 299, 305, 310, 314, 315, 322, 327, 334, 335, 336, 342, 344, 345, 351, 393, 394, 398, 399, 400, 401, 404, 405, 406, 408, 409, 412, 413, 416, 652], "1511": [65, 121, 122, 315], "05952": [65, 121, 122], "expon": [65, 81, 121, 122], "\u03b1": [65, 81], "delta": [65, 81, 317, 322, 348, 379, 383, 626, 630, 649], "1_000": [65, 72, 81, 82, 649, 653], "mini": [65, 72, 81, 82, 97, 99, 100, 101, 102, 103, 104, 105, 650], "decid": [65, 72, 81, 82, 649, 655], "incompat": [65, 72, 81, 82, 415, 653], "drop_last": [65, 72, 81, 82, 128, 130, 493], "notion": [65, 72, 81, 82, 340], "caution": [65, 72, 81, 82, 128, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 656], "codebas": [65, 72, 81, 82, 651], "sent": [65, 72, 81, 82, 87, 107, 108, 110, 115, 117, 124, 137, 198, 293, 354, 356, 357, 359, 360, 428, 431, 628], "transform_factori": [65, 70, 72, 81, 82, 124], "return_info": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 121, 122, 124, 653], "tensordictprioritizedreplaybuff": [65, 626, 655], "_weight": [65, 81, 121, 122], "update_prior": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 121, 122, 124, 469, 631, 635, 653, 655], "36278465": 65, "invert": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 124, 391, 636], "default_remote_class_config": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "overriden": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "randomsampl": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 490, 634, 649], "td_error": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 396, 397, 398, 400, 401, 402, 403, 409, 411, 414, 416, 418, 419, 427, 430, 432, 634, 653, 655], "update_tensordict_prior": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 634, 653, 655], "empty_write_count": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "insert_transform": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 193, 194, 197, 230, 286], "insert": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 124, 125, 135, 136, 139, 140, 193, 194, 197, 214, 230, 235, 239, 276, 286, 288, 628], "__iter__": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 207], "set_sampl": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "set_storag": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "set_writ": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "prompt_rindex": [66, 67, 74], "promptdatatldr": 66, "116722": 66, "prompt": [67, 74, 108, 109, 192, 193, 194, 195, 197, 199, 200, 205, 207, 210, 212, 353, 354, 356, 358, 359, 360, 361, 366, 427, 429, 647], "return_tensordict": [67, 83], "tensodict": [67, 83], "valid_sampl": 67, "eough": 67, "toknen": 67, "meet": 67, "criterion": 67, "autotoken": [67, 83, 86, 108, 192, 193, 194, 196, 197, 204, 205, 209, 210, 212, 214, 215, 361, 366, 430, 628, 646, 647], "from_pretrain": [67, 74, 83, 108, 159, 194, 197, 201, 205, 210, 212, 214, 215, 353, 358, 361, 366, 430, 628, 646, 647], "enough": [67, 637, 653], "inde": [67, 245, 636, 638, 651], "index_kei": [68, 80], "hash_kei": 68, "_hash": 68, "hash_modul": [68, 75, 80], "siphash": [68, 69, 80, 159, 201], "hash_to_int": 68, "hashtoint": 68, "query_modul": [68, 80], "key1": [68, 80, 87, 107, 108, 198, 236, 276, 354, 356, 357, 359, 360, 428, 431, 463, 471, 655], "key2": [68, 80, 87, 107, 108, 198, 236, 276, 354, 356, 357, 359, 360, 428, 431, 463, 471, 655], "write_hash": 68, "n_compon": 69, "dtype_cast": 69, "as_tensor": [69, 75, 638], "init_method": 69, "emb": [69, 637], "sklearn": [69, 102, 168], "byte": [69, 75, 109, 110, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 257, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 290, 292, 293, 296, 429], "builtin": [69, 75], "pythonhashse": [69, 75], "todo": 69, "replay_buffer_cl": 70, "optiona": 70, "asyncio": [70, 141], "ray_buff": 70, "object_store_memori": 70, "600": [70, 74], "await": 70, "invoc": 71, "friendli": [71, 634], "include_info": [71, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105], "storagecheckpointerbas": [72, 131], "roundrobinwrit": [72, 97, 98, 99, 100, 101, 102, 103, 104, 105, 492], "_pytre": [72, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431, 653], "tree_map": [72, 87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431, 653], "assert0": [72, 653], "ref_model": [74, 209, 214, 215], "reward_model": [74, 388], "max_new_token": [74, 355, 358, 361, 366, 628, 647], "score_clip": 74, "kl_schedul": 74, "klcontrollerbas": 74, "num_step": [74, 638], "causal": [74, 361], "sentenc": [74, 196], "frozen": [74, 255, 293, 294], "gpt2rewardmodel": 74, "get_dataload": [74, 626], "promptdata": [74, 626], "gpt2lmheadmodel": 74, "dl": [74, 207], "block_siz": [74, 106], "tensorclass_typ": [74, 106], "openai_summarize_tldr": 74, "config_class": 74, "model_path": 74, "rollout_from_model": 74, "rollout_from_data": 74, "reward_kl": [74, 255], "reward_raw": 74, "sample_log_prob": [74, 255, 371, 372, 373, 379, 383, 385, 413], "create_rollout_td": 74, "log_prob": [74, 208, 214, 311, 321, 328, 329, 337, 340, 350, 355, 358, 361, 366, 383, 396, 402, 416, 430, 630, 647], "log_ratio": 74, "replic": [74, 630], "rindex": 74, "eo": [74, 199, 366], "generation_config": 74, "generationconfig": 74, "ti": [74, 443, 444, 445, 446, 448, 449, 450, 451, 635], "log_probs_gen": 74, "logprobs_of_label": 74, "hash_a": 75, "4669941682990263259": 75, "3778166555168484291": 75, "9122128731510687521": 75, "hash_b": 75, "heterogen": [76, 77, 116, 141, 144, 147, 151, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 330, 331, 634, 635], "220": 78, "resembl": 80, "tensormap": 80, "collat": [80, 124, 193, 194, 197], "subtyp": 80, "embedding_storag": 80, "tensor_dict_storag": 80, "new_index": 80, "key3": 80, "retrieve_valu": 80, "storage_constructor": 80, "write_fn": 80, "tensordictstorag": 80, "thumb": [80, 171, 636], "lazydynamicstorag": 80, "fixedstorag": 80, "randomprojectionhash": 80, "priority_kei": [81, 82, 98, 121, 396, 398, 401, 402, 403, 409, 411, 414, 416, 418, 419, 427, 430, 432, 653, 655], "reduct": [81, 121, 122, 135, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 407, 409, 410, 412, 413, 414, 415, 416, 418, 419, 427, 430, 466, 489, 532], "prioritizedreplaybuff": [81, 626, 655], "min": [81, 121, 122, 135, 341, 394, 395, 396, 402, 412, 414, 416, 427, 466, 635, 636], "median": [81, 121, 122, 135, 151, 157, 158, 202, 228, 379, 383], "huggingfac": [83, 100, 105, 199, 361, 377], "co": [83, 199, 247, 353, 628, 651], "pad_trunc": 83, "am": 83, "me": [83, 205, 210, 646], "reassur": 83, "ok": 83, "_encode_memo_dict": 85, "primarili": [85, 265, 628, 640], "educ": 85, "guess": 85, "knowledg": [85, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 641, 643], "tokenizer_fn": 86, "tensordicttoken": [86, 626], "pre_tokenization_hook": 86, "valid_s": 86, "tokenizer_class": 86, "tokenizer_model_nam": 86, "tokein": 86, "elementwis": 86, "vocabulari": [86, 159, 200, 201, 217, 283, 321], "loader": [86, 636], "185068": 86, "dataset_to_tensordict": 86, "data_dir": 86, "batch_dim": [86, 87, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 354, 356, 357, 359, 360, 428, 431, 624], "valid_mask_kei": 86, "batch_dimens": 86, "filder": 86, "from_dict": [86, 87, 107, 108, 198, 207, 354, 356, 357, 359, 360, 428, 431], "data_memmap": 86, "ref": 87, "branching_act": 87, "prev_act": 87, "edg": [87, 638], "travers": [87, 213], "breadth": 87, "bf": 87, "from_ani": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "auto_batch_s": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "opinion": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "obj": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "from_dataclass": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "from_namedtupl": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "from_tupl": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "from_struct_arrai": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "hdf5": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "from_h5": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "dest_cl": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "as_tensorclass": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "deleg": [87, 107, 108, 198, 213, 354, 356, 357, 359, 360, 428, 431, 651], "convers": [87, 107, 108, 142, 143, 157, 158, 192, 194, 197, 198, 214, 215, 223, 354, 356, 357, 359, 360, 427, 428, 431, 628, 630, 646, 647], "persistenttensordict": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "h5": [87, 104, 105, 107, 108, 113, 198, 354, 356, 357, 359, 360, 428, 431], "as_modul": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "use_state_dict": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "lazy_stack": [87, 107, 108, 109, 198, 354, 356, 357, 359, 360, 428, 430, 431, 628, 648], "expand_ident": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "ensebml": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "tensordictparam": [87, 107, 108, 198, 330, 331, 354, 356, 357, 359, 360, 383, 428, 431], "densli": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "dens": [87, 107, 108, 141, 198, 328, 329, 354, 356, 357, 359, 360, 428, 431, 628], "reinstanti": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "tempt": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "empty_modul": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "n_model": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "exec_modul": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "to_modul": [87, 107, 108, 198, 313, 354, 356, 357, 359, 360, 382, 385, 428, 431, 634, 655], "backprop": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "named_tupl": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "a_tensor": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "a_str": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "nt": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "to_namedtupl": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "genericdict": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "from_pytre": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "biject": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "castabl": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "surject": [87, 107, 108, 198, 354, 356, 357, 359, 360, 392, 428, 431], "weird": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "weirdlookingclass": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "weird_kei": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "pytree_recon": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "to_pytre": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "from_remote_init": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "processgroup": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "init_remot": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "src": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "struct_arrai": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "rex": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "fido": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "27": [87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 129, 130, 142, 143, 171, 180, 198, 240, 354, 356, 357, 359, 360, 428, 431], "u10": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "ag": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "i4": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "f4": [87, 107, 108, 144, 198, 354, 356, 357, 359, 360, 428, 431], "x_recon": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "to_struct_arrai": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "my_tupl": [87, 107, 108, 198, 354, 356, 357, 359, 360, 428, 431], "fully_expand": 87, "get_vertex_by_hash": 87, "get_vertex_by_id": 87, "is_termin": 87, "make_nod": 87, "maybe_dense_stack": [87, 107, 108, 198, 207, 354, 356, 357, 359, 360, 428, 431], "node_observ": 87, "bag": 87, "num_children": 87, "num_vertic": 87, "count_repeat": 87, "recustruct": 87, "plotli": 87, "make_label": 87, "visual": [87, 264, 289, 291, 454, 636, 649, 651], "unsupport": 87, "selected_act": 87, "mctsforest": [87, 159, 201, 626], "key_typ": 87, "recurse_through_entri": 94, "recurse_through_stack": 94, "dataset_id": [97, 99, 100, 101, 103, 104, 105], "num_proc": 97, "slice_len": [97, 103, 122, 129, 130, 454, 494, 495, 637], "strict_len": 97, "arari": 97, "2600": 97, "million": 97, "consequ": [97, 113, 322, 642], "50x10": 97, "available_dataset": [97, 98, 99, 100, 101, 102, 103, 104, 105, 129, 130], "ataridqn": 97, "immutabledatasetwrit": [97, 98, 99, 100, 101, 102, 103, 104, 105], "shorter": [97, 103, 122, 129, 130], "Be": [97, 103, 122, 129, 130], "game_nam": 97, "krull": 97, "1d": [97, 121, 122, 129, 130, 135], "cheapli": 97, "invalid_rang": 97, "999998": 97, "999999": 97, "add_count": 97, "valueestim": [97, 393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 422, 427, 430, 432, 626, 630, 634, 649, 650], "convolut": [97, 303, 304, 306, 307, 330, 346, 524, 638, 640], "2657628": 97, "2657629": 97, "2657630": 97, "2657631": 97, "2657632": 97, "2657633": 97, "2657634": 97, "2657635": 97, "2657636": 97, "2657637": 97, "2657638": 97, "2657639": 97, "2657640": 97, "2657641": 97, "2657642": 97, "2657643": 97, "2657644": 97, "2657645": 97, "2657646": 97, "2657647": 97, "2657648": 97, "2657649": 97, "2657650": 97, "2657651": 97, "2657652": 97, "2657653": 97, "2657654": 97, "2657655": 97, "2657656": 97, "2657657": 97, "2657658": 97, "2657659": 97, "2657660": 97, "2657661": 97, "2657662": 97, "2657663": 97, "2657664": 97, "2657665": 97, "2657666": 97, "2657667": 97, "2657668": 97, "2657669": 97, "2657670": 97, "2657671": 97, "2657672": 97, "2657673": 97, "2657674": 97, "2657675": 97, "2657676": 97, "2657677": 97, "2657678": 97, "2657679": 97, "2657680": 97, "2657681": 97, "2657682": 97, "2657683": 97, "2657684": 97, "2657685": 97, "2657686": 97, "2657687": 97, "2657688": 97, "2657689": 97, "2657690": 97, "2657691": 97, "1995687": 97, "1995688": 97, "1995689": 97, "1995690": 97, "1995691": 97, "1995692": 97, "1995693": 97, "1995694": 97, "1995695": 97, "1995696": 97, "1995697": 97, "1995698": 97, "1995699": 97, "1995700": 97, "1995701": 97, "1995702": 97, "1995703": 97, "1995704": 97, "1995705": 97, "1995706": 97, "1995707": 97, "1995708": 97, "1995709": 97, "1995710": 97, "1995711": 97, "1995712": 97, "1995713": 97, "1995714": 97, "1995715": 97, "1995716": 97, "1995717": 97, "1995718": 97, "1995719": 97, "1995720": 97, "1995721": 97, "1995722": 97, "1995723": 97, "1995724": 97, "1995725": 97, "1995726": 97, "1995727": 97, "1995728": 97, "1995729": 97, "1995730": 97, "1995731": 97, "1995732": 97, "1995733": 97, "1995734": 97, "1995735": 97, "1995736": 97, "1995737": 97, "1995738": 97, "1995739": 97, "1995740": 97, "1995741": 97, "1995742": 97, "1995743": 97, "1995744": 97, "1995745": 97, "1995746": 97, "1995747": 97, "1995748": 97, "1995749": 97, "1995750": 97, "_max_run": 97, "dataset_asterix": 97, "asterix": 97, "dataset_pong": 97, "sample_from_al": [97, 124, 127], "buffer_id": [97, 127, 133], "hidden": [97, 171, 180, 234, 306, 314, 317, 318, 319, 322, 323, 324, 335, 336, 344, 345, 371, 372, 373, 374, 382, 385, 395, 410, 413, 629, 637, 648, 655], "data_path": [97, 98, 99, 100, 101, 102, 103, 104, 105], "data_path_root": [97, 98, 99, 100, 101, 102, 103, 104, 105], "delet": [97, 98, 99, 100, 101, 102, 103, 104, 105, 117, 236, 276, 461], "chunksiz": [97, 98, 99, 100, 101, 102, 103, 104, 105], "max_tasks_per_child": [97, 98, 99, 100, 101, 102, 103, 104, 105], "worker_thread": [97, 98, 99, 100, 101, 102, 103, 104, 105], "index_with_gener": [97, 98, 99, 100, 101, 102, 103, 104, 105], "num_fram": [97, 98, 99, 100, 101, 102, 103, 104, 105], "unitari": [97, 98, 99, 100, 101, 102, 103, 104, 105, 651], "minariexperiencereplai": [97, 98, 99, 100, 102, 103, 104, 105], "1000000": [97, 98, 99, 100, 101, 102, 103, 104, 105, 478, 599], "distance_from_origin": [97, 98, 99, 100, 101, 102, 103, 104, 105], "forward_reward": [97, 98, 99, 100, 101, 102, 103, 104, 105], "qpo": [97, 98, 99, 100, 101, 102, 103, 104, 105], "qvel": [97, 98, 99, 100, 101, 102, 103, 104, 105], "reward_ctrl": [97, 98, 99, 100, 101, 102, 103, 104, 105, 151, 171, 202], "reward_forward": [97, 98, 99, 100, 101, 102, 103, 104, 105], "reward_surv": [97, 98, 99, 100, 101, 102, 103, 104, 105], "x_posit": [97, 98, 99, 100, 101, 102, 103, 104, 105, 151, 171, 202], "x_veloc": [97, 98, 99, 100, 101, 102, 103, 104, 105, 151, 171, 202], "y_posit": [97, 98, 99, 100, 101, 102, 103, 104, 105], "y_veloc": [97, 98, 99, 100, 101, 102, 103, 104, 105], "achieved_go": [97, 98, 99, 100, 101, 102, 103, 104, 105], "desired_go": [97, 98, 99, 100, 101, 102, 103, 104, 105], "_collate_id": [97, 98, 99, 100, 101, 102, 103, 104, 105], "0x120e21dc0": [97, 98, 99, 100, 101, 102, 103, 104, 105], "cat_tensor": [97, 98, 99, 100, 101, 102, 103, 104, 105], "cat_next_tensor": [97, 98, 99, 100, 101, 102, 103, 104, 105], "new_storag": [97, 98, 99, 100, 101, 102, 103, 104, 105], "31": [97, 98, 99, 100, 101, 102, 103, 104, 105, 129, 157, 158], "full_storag": [97, 98, 99, 100, 101, 102, 103, 104, 105], "0x168406fc0": [97, 98, 99, 100, 101, 102, 103, 104, 105], "from_env": 99, "use_truncated_as_don": 99, "direct_download": 99, "terminate_on_end": 99, "env_kwarg": [99, 104, 105, 232, 538, 622, 623, 634], "reconstruct": [99, 129, 130, 405, 634, 656], "get_dataset": 99, "qlearning_dataset": 99, "fewer": [99, 122, 129], "unexpectedli": 99, "traj_split": 99, "observationnorm": [99, 293, 294, 566, 624, 634, 635, 636, 637, 655], "maze2d": 99, "umaz": 99, "loc": [99, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 200, 201, 202, 255, 260, 271, 293, 294, 320, 349, 350, 371, 372, 373, 379, 383, 385, 393, 394, 396, 409, 413, 414, 415, 416, 566, 576, 614, 624, 629, 634, 635, 636, 637, 640, 650, 655], "gen": 100, "dgrl": 100, "accompani": [100, 232, 277], "gap": 100, "2312": 100, "05742": 100, "gen_dgrl": 100, "procgen": 100, "bigfish": 100, "bossfight": 100, "1m_e": 100, "1m_": 100, "comma": [100, 638], "npy": 100, "mmap": [100, 104, 105], "minut": 100, "internet": [100, 105], "connect": [100, 105, 183], "load_from_local_minari": 101, "minari": 101, "websit": [101, 103, 646], "currenrtli": 101, "minari_data": 101, "door": 101, "torchrl_logg": [101, 644, 646], "28": [101, 129, 130, 330], "door_body_po": 101, "dua": 102, "graff": 102, "2017": 102, "uci": [102, 144], "archiv": 102, "ic": 102, "edu": 102, "ml": [102, 183, 184, 353], "adult_num": [102, 168], "adult_onehot": [102, 168], "mushroom_num": [102, 168], "mushroom_onehot": [102, 168], "covertyp": [102, 168], "shuttl": [102, 168], "magic": [102, 168, 638, 639], "shuffl": [103, 128, 130, 193, 194, 197, 493, 650], "embodi": [103, 652], "institut": 103, "demonstr": [103, 628, 636, 638, 642, 646, 647, 649, 650, 651, 653, 656], "527": 103, "skill": 103, "160266": 103, "googl": [103, 104, 142, 143, 163, 164, 169, 170, 197, 199, 299, 636, 637, 646, 649, 650], "open_x_embodi": 103, "2310": [103, 177], "08864": 103, "language_instruct": 103, "get_non_tensor": 103, "nor": [103, 183], "insuffici": 103, "chosen": [103, 185, 186, 278, 279, 342, 343, 351, 381, 454, 629, 643], "openx": 103, "__will": 103, "change__": 103, "crop": [103, 237, 265, 454, 548], "modal": [103, 355, 361, 366, 634], "cmu_stretch": [103, 454], "is_init": [103, 105, 234, 254, 319, 324, 341, 378, 390, 434, 637, 638], "language_embed": 103, "512": [103, 315], "green": [103, 649], "garbag": 103, "lid": 103, "roboset": 104, "roboh": [104, 177, 516], "concis": [104, 641], "23": [104, 130, 240, 297], "totensor": 105, "image_s": 105, "v": [105, 293, 317, 318, 322, 323, 371, 401, 409, 416, 634, 635], "npz": 105, "2206": [105, 166, 167], "04779": [105, 394, 400], "vd4rl": 105, "squar": [105, 237, 242, 320, 349, 350, 395, 413, 427, 454, 628], "rectangular": [105, 303, 304], "walker_walk": 105, "64px": 105, "height": [105, 237, 242, 268, 543, 548], "veloc": [105, 141, 144, 145, 146, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 235, 649, 650, 651, 656], "infinit": [106, 163, 164, 185, 186, 193, 194, 197, 207, 294, 642, 653], "pairwisedataset": [106, 626], "function_cal": 107, "_wrap_td_method": 107, "wrapped_func": 107, "0x7f1d11444670": 107, "mime_typ": 107, "function_nam": 107, "function_arg": 107, "contentbas": 108, "is_complet": 108, "tool_cal": 108, "tool_respons": [108, 210, 212, 628], "apply_chat_templ": [108, 192, 210, 212, 430, 628, 646], "autoprocessor": 108, "add_generation_prompt": [108, 214, 215, 430, 628], "chat_templ": [108, 216, 361, 366, 430, 628], "chat_template_nam": [108, 361, 366, 430, 628], "continue_final_messag": 108, "return_tensor": [108, 214], "return_dict": [108, 215, 628], "return_assistant_tokens_mask": [108, 214, 215, 628], "chat": [108, 192, 193, 194, 197, 206, 210, 212, 214, 215, 216, 361, 366, 430, 628, 647], "pretrainedtoken": [108, 192, 203, 361, 366], "im_start": [108, 194, 197, 210, 212, 628], "assist": [108, 192, 194, 197, 205, 209, 210, 212, 214, 215, 361, 366, 427, 430, 637, 646, 647], "preval": 108, "messag": [108, 192, 205, 628, 647], "pt": [108, 214, 456, 520, 631], "assistant_mask": [108, 628], "qwen": [108, 194, 197, 205, 210, 212, 353, 361, 362, 363, 366, 430, 628, 646, 647], "dialogpt": [108, 628], "falcon": [108, 628], "deepseek": [108, 628], "chatml_format": [108, 361, 366, 430, 628], "default_spec": [108, 354, 356, 357, 359, 360], "set_list_to_stack": [108, 197, 210, 212, 214, 215, 628, 646], "foo": [108, 115, 117, 137, 374, 653, 656], "from_chat": [108, 192, 214, 215, 361, 366, 430, 628, 647], "qwen2": [108, 194, 197, 205, 210, 212, 353, 362, 363, 366, 628, 646, 647], "7b": [108, 353, 628, 646], "nyou": [108, 197], "im_end": [108, 194, 205, 210, 212, 628, 646], "nwrite": 108, "capit": [108, 301, 646, 647], "franc": [108, 646, 647], "germani": 108, "pari": [108, 197, 646], "berlin": 108, "answer": [108, 194, 196, 197, 199, 205, 628, 646], "topk_siz": 109, "prompt_kei": [109, 199, 429], "rewards_kei": [109, 429], "k": [109, 300, 302, 317, 318, 322, 323, 355, 361, 366], "lazystackstorag": [109, 486], "samplerwithoutreplac": [109, 135, 493, 636, 650, 653], "topk": 109, "selector": [109, 646], "_td": [109, 148, 404], "25": [109, 240, 532, 634], "wrote": 109, "top3": 109, "r3": 109, "as_padded_tensor": [109, 200, 207, 215, 355, 361, 366], "transformthatmeasuresbyt": [109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 257, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 290, 292, 293, 296, 429], "bytes_in_td": [109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 257, 263, 265, 266, 267, 269, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 290, 292, 293, 296, 429], "transform_done_spec": [109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 244, 257, 276, 283, 285, 287, 296, 429], "transform_env_batch_s": [109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 239, 285, 296, 429], "transform_env_devic": [109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 244, 285, 296, 429], "transform_full_done_spec": [109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 232, 239, 243, 244, 248, 255, 258, 266, 267, 273, 277, 283, 285, 287, 294, 296, 429], "compress": [110, 111, 626], "verifi": [110, 193, 413, 628], "attach": [110, 115, 116, 117, 118, 131, 133, 137, 635], "entiti": [110, 115, 116, 117, 118, 131, 133, 137], "to_bytestream": 110, "data_to_bytestream": 110, "checkpoint_fil": 113, "h5_kwarg": 113, "iff": 113, "suffix": [113, 467], "h5py": 113, "create_dataset": 113, "immut": [114, 141, 144, 147, 151, 159, 171, 175, 180, 181, 192, 193, 194, 197, 200, 201, 202, 267, 286], "scratch_dir": [115, 634, 635, 637, 642, 649, 652, 653], "shared_init": [115, 117], "mistak": [115, 117, 137], "overewritten": 115, "tensorstoragecheckpoint": 115, "pathlib": [115, 473, 477, 478, 638], "main_ckpt_dir": 115, "rb_memmap": 115, "10_000_000": 115, "myclass": [115, 117, 137], "lazystacktensordict": 116, "heterougen": 116, "linearli": 116, "densifi": 116, "unlimit": [116, 118], "st": 116, "cleanup_memmap": 117, "expans": [117, 411, 427, 430], "zero_": [117, 137, 220], "liststoag": 119, "max_capac": [121, 122, 489, 634, 653], "max_priority_within_buff": [121, 122], "proport": [121, 653], "magnitud": [121, 122, 634, 649], "focus": [121, 122, 634, 641], "p_i": [121, 122], "delta_i": [121, 122], "epsilon": [121, 122, 260, 298, 316, 341, 417, 470, 635, 636, 637, 640], "frac": [121, 122, 317, 318, 322, 323, 636], "sum_j": [121, 122], "p_j": [121, 122], "w_i": [121, 122], "cdot": [121, 122, 430], "unbias": [121, 122], "anneal": [121, 122, 341, 635, 640, 649], "guidelin": [121, 122], "math": [121, 122, 417], "benefit": [121, 122, 627, 628, 639, 647, 649, 650, 653], "data_0": 121, "data_1": 121, "smoothen": 121, "tdrb": 121, "pack": [121, 317, 322, 361, 636, 639, 656], "nd": [121, 122], "sum_tre": [121, 122], "min_tre": [121, 122], "end_kei": [122, 129, 130, 494, 495, 637], "cache_valu": [122, 129, 130, 494, 495, 637], "closer": [122, 655], "readili": [122, 129, 130, 383], "conjunct": [122, 129, 130, 635], "buffer0": [122, 129], "immutablewrit": [122, 129], "buffer1": [122, 129], "other_sampl": [122, 129], "short": [122, 129, 130, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 322, 323, 361, 635, 636, 639, 640, 650, 653], "tolist": [122, 628], "120110917137936e": 122, "06": [122, 311, 348, 600, 610], "storageensembl": [124, 127, 496], "samplerensembl": 124, "writerensembl": [124, 133], "num_buffer_sampl": [124, 127], "ensembl": [124, 127, 133, 134, 140, 382, 414, 496, 497], "forbidden": 124, "0x13a2ef430": 124, "0x13a2f9310": 124, "interpolationmod": 124, "bilinear": [124, 268, 573], "0x13a2f9220": 124, "0x13a2f9f70": 124, "0x13a2d9b50": 124, "0x13a2f95b0": 124, "0x128648260": 124, "roundrobin": [125, 136], "incomplet": [128, 130, 205], "fresh": [128, 207], "haven": [128, 652], "remain": [128, 205, 211, 234, 244, 245, 255, 257, 278, 334, 628, 641], "draw": [128, 316], "use_gpu": [129, 130, 494, 495], "slicesamplerwithoutreplac": [129, 495, 653], "acceler": [129, 130, 151, 202, 649, 650], "ep_1": [129, 130], "ep_2": [129, 130], "73": 129, "74": 129, "76": 129, "77": 129, "42": [129, 325, 340, 393, 394, 396, 397, 401, 409, 416], "43": 129, "45": 129, "67": [129, 648], "69": 129, "70": 129, "71": 129, "80": [129, 142, 143], "82": 129, "83": 129, "78": 129, "79": 129, "320": [129, 130, 145, 146], "700": [129, 130], "dataid": [129, 130], "counter": [130, 211, 240, 284, 378, 465, 631, 638], "request": [130, 232, 265, 353, 628], "51": 130, "__len__": 131, "rank_kei": 135, "get_insert_index": 135, "themselv": [141, 301, 635], "maybe_dens": 141, "maker": [141, 624, 635], "min_get": [141, 175, 181], "sort": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 236, 341], "another_act": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "discretebox": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "mutabl": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "action_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 636, 650], "had": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 640, 642], "all_act": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "any_don": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "_callabletransform": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 200, 201, 202], "auto_specs_": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "action_spac": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 247, 313, 343, 375, 376, 380, 381, 393, 394, 396, 397, 398, 400, 401, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 427, 430, 432, 637, 638, 640, 644], "discrep": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 393, 395, 397, 398, 410, 413, 415, 432], "broken": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202], "check_dtyp": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202], "rng": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 651], "done_keys_group": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "another_don": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "done_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "empty_cach": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 213, 286], "env_batch_s": [141, 175, 181], "fake_tensordict": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 635, 638], "envnam": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "full_action_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 649, 650], "full_done_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "full_observation_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "full_reward_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "pipeline_st": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "full_state_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "input_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "is_spec_lock": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "maybe_reset": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "speak": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 241, 383, 634], "observation_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "output_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "register_gym": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 639], "entry_point": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "info_kei": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "reward_threshold": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "nondeterminist": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "max_episode_step": [141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "order_enforc": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "autoreset": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "disable_env_check": [141, 144, 147, 150, 151, 159, 166, 167, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 506, 510], "apply_api_compat": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "nasium": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 223], "dmcontrolenv": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 454, 504, 626, 634, 639, 648, 656], "dmc": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "cheetah": [141, 144, 145, 146, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 454, 634], "removeemptyspec": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 571], "threshold": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 316, 394, 395, 427, 628, 636], "learnt": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 620], "checker": [141, 144, 147, 150, 151, 159, 166, 167, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "stepapicompat": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "deem": [141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 200, 201, 202], "task_nam": [141, 144, 145, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 504], "envgym": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0855": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0215": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0881": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0412": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "1101": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0080": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0254": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0424": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "9609e": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "9776e": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "04": [141, 144, 147, 151, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 281, 294], "6347e": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "3842e": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "5338e": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "3064e": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0381e": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "6656e": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "05": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 281, 299, 413, 651], "0204e": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0833": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0275": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0612": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0770": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "1256": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0082": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0186": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0476": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "2221": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "2256": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "5930": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "6937": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "5865": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "5479": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0187": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "6825": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "5224": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0018": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "1005": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0335": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 241], "0268": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0133": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0627": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0074": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0488": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0353": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0075": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0069": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0098": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0058": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0033": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0157": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0004": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 281], "0381": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0452": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "11355747": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "04257728": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "00408397": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "04155852": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0389733": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "01409826": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0978704": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "08808327": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "03970837": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "00535434": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "02353762": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "05116226": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "02788907": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "06848346": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "05154399": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0371798": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "05128025": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "dydact": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "ant": [141, 142, 143, 144, 147, 151, 154, 156, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 652], "gym_env": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 655], "reset_kei": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 235, 272, 278, 279, 280, 583, 649], "multitask": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "multiag": [141, 144, 147, 151, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 227, 331, 342, 351, 395, 410, 413, 432], "another_reward": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "reward_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "auto_cast_to_devic": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 650], "soon": [141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "__sort": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "as__": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "categorical_action_encod": [141, 142, 143, 144, 147, 150, 151, 152, 153, 156, 157, 158, 159, 166, 167, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 223, 240, 503, 506, 510, 638], "argmaxmodul": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "argmax": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 313, 343, 376, 381, 638, 640], "n_act": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 255, 393, 394, 396, 397, 398, 400, 401, 402, 409, 413, 414, 415, 416, 418, 419, 641], "ourselv": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 636, 656], "emul": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "epoch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 473, 477, 631, 636, 649, 650], "input_td": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "rollout_td": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "state_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "prevail": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 227, 236, 272, 355], "next_tensordict": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 226, 232, 236, 248, 249, 250, 263, 266, 267, 273, 276, 289, 293, 628], "precomput": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "_stepmdp": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 226], "exclude_act": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 226], "reset_data": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 628, 656], "2106": [142, 143, 399, 418], "13281": [142, 143], "cache_clear_frequ": [142, 143, 503], "leak": [142, 143, 353], "frame_skip": [142, 143, 145, 146, 150, 151, 152, 153, 157, 158, 160, 161, 166, 167, 177, 202, 251, 465, 467, 478, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 533, 557, 613, 631, 634, 635, 636, 655], "allow_done_after_reset": [142, 143, 145, 146, 147, 150, 152, 153, 156, 157, 158, 166, 167, 169, 170, 177, 183, 184, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519], "toler": [142, 143, 145, 146, 150, 152, 153, 156, 157, 158, 166, 167, 169, 170, 177, 183, 184, 213, 311, 348, 353, 628], "is_avail": [142, 143, 634, 635, 636, 637, 649, 650, 652], "87": [142, 143], "acrobot": [142, 143, 145, 146, 656], "advant": [142, 143, 157, 158], "timer": [142, 143, 151, 157, 158, 202, 586], "timeit": [142, 143, 157, 158, 638], "310": [142, 143], "ms": [142, 143, 157, 158], "268": [142, 143], "433": [142, 143], "213": [142, 143], "8605": [142, 143], "pipelineenv": 143, "get_environ": 143, "san": 144, "fen": [144, 169, 170], "pgn": 144, "legal": [144, 229], "board": [144, 182], "include_san": 144, "algebra": [144, 651], "notat": 144, "include_fen": 144, "forsyth": 144, "edward": 144, "include_pgn": 144, "portabl": [144, 643], "include_legal_mov": 144, "include_hash": 144, "mask_act": 144, "subset": [144, 651, 652], "29275": 144, "rnbqkbnr": [144, 169, 170], "pppppppp": [144, 169, 170], "kqkq": [144, 169, 170], "legal_mov": 144, "219": 144, "5p2": 144, "ppppp1pp": 144, "event": [144, 321, 328, 329, 337, 443, 444, 445, 446, 448, 449, 450, 451, 653], "white": 144, "96": 144, "kq": 144, "5n2": 144, "rnbqkb1r": 144, "nf3": 144, "na6": 144, "c4": 144, "f6": 144, "h4": 144, "rb8": 144, "na3": 144, "ra": 144, "get_legal_mov": 144, "dm_control": [145, 146, 504, 634, 648, 656], "2006": [145, 146, 240, 394, 400], "12983": [145, 146], "240": [145, 146, 655], "swingup": [145, 146, 656], "swingup_spars": [145, 146], "ball_in_cup": [145, 146], "catch": [145, 146, 638], "balance_spars": [145, 146], "three_pol": [145, 146], "two_pol": [145, 146], "finger": [145, 146], "turn_easi": [145, 146], "turn_hard": [145, 146], "fish": [145, 146], "upright": [145, 146, 635], "swim": [145, 146], "hopper": [145, 146], "hop": [145, 146], "humanoid": [145, 146, 171, 180, 648], "walk": [145, 146, 171, 180, 635, 648], "run_pure_st": [145, 146], "bring_bal": [145, 146], "bring_peg": [145, 146], "insert_bal": [145, 146], "insert_peg": [145, 146], "point_mass": [145, 146], "reacher": [145, 146], "swimmer": [145, 146], "swimmer6": [145, 146], "swimmer15": [145, 146], "walker": [145, 146], "dog": [145, 146], "trot": [145, 146], "humanoid_cmu": [145, 146], "lqr": [145, 146], "lqr_2_1": [145, 146], "lqr_6_2": [145, 146], "quadrup": [145, 146], "escap": [145, 146], "stacker": [145, 146], "stack_2": [145, 146], "stack_4": [145, 146], "deviceless": 147, "run_type_check": [147, 165], "hint": 147, "counterenv": 147, "creator": [148, 615, 616, 622, 623, 624], "substitut": [148, 278, 293, 640], "vecnorm": [148, 294, 597, 598, 624], "env_creat": [148, 634], "test_env1": 148, "observation_count": [148, 656], "test_env2": 148, "ps": 148, "p1": 148, "p2": 148, "9934": 148, "make_vari": [148, 284], "variant": [148, 284, 301, 629], "trajcount": [148, 589], "env_creator_pendulum": 148, "env_creator_cartpol": 148, "env_str": 149, "device_map": 149, "registri": [150, 183], "asyncvectorenv": 150, "pixel_observ": [150, 152, 153, 177], "pixelobservationwrapp": [150, 152, 153, 177], "adventur": [150, 152], "airraid": [150, 152, 656], "alien": [150, 152], "time_limit": 150, "timelimit": [150, 163, 164, 185, 186], "default_info_dict_read": [150, 151, 152, 171, 202], "reader": [150, 151, 152, 171, 202, 635], "set_info_dict_read": [150, 151, 152, 171, 202, 639], "info_dict": [150, 151, 152, 171, 202], "gymlikeenv": [150, 152, 202, 626], "auto_register_info_dict": [150, 151, 152, 171, 202], "multibinari": [150, 152], "multidiscret": [150, 152], "rag": [150, 152], "gym_conversion_exampl": [150, 152], "info_dict_read": [151, 171, 202], "ignore_priv": [151, 202], "baseinfodictread": [151, 202], "tensordictprim": [151, 171, 202, 302, 319, 324, 390, 584, 629, 637], "succe": [151, 171, 202], "underscor": [151, 202], "primer": [151, 192, 193, 194, 197, 200, 202, 207, 213, 279, 302, 319, 324, 390, 637], "halfcheetah": [151, 171, 202, 228, 268, 631, 634, 655], "reward_run": [151, 171, 202], "raise_if_clos": [151, 202], "fast_encod": [151, 202], "memoize_cach": [151, 202], "adaptive_autorang": [151, 202], "4f": [151, 202, 430, 636, 637, 651], "fp": [151, 202, 454, 459, 461], "10141": [151, 202], "5742fp": [151, 202], "10576": [151, 202], "8388fp": [151, 202], "read_act": [151, 202], "read_don": [151, 202], "nonsens": [151, 202], "fallback": [151, 202, 353], "read_ob": [151, 202], "dictat": [151, 202, 256, 379, 383, 413, 634, 651], "read_reward": [151, 202], "hoc": [151, 171, 202, 640], "dict_read": [151, 202], "my_info_kei": [151, 202], "some_env": [151, 202], "vecenv": 152, "vectorenv": 152, "convert_actions_to_numpi": [152, 506, 510], "missing_obs_valu": [152, 292, 506, 510], "vecgymenvtransform": [152, 596], "secur": [153, 646], "habitat3": 153, "ai": [153, 628, 652], "habitatrenderpick": 153, "isaacgym": [154, 155, 508], "isaacgymwrapp": [154, 626], "isaacgymenv": [155, 508, 626], "webpag": 155, "isaac": [155, 156], "essenc": [155, 639], "scripts_isaaclab": 156, "managerbasedrlenv": 156, "app": 156, "applaunch": 156, "argpars": [156, 621, 624], "parser": [156, 196, 621, 624, 628], "argumentpars": 156, "add_app_launcher_arg": 156, "args_cli": 156, "hydra_arg": 156, "parse_known_arg": 156, "app_launch": 156, "isaaclab_task": 156, "f401": 156, "manager_bas": 156, "ant_env_cfg": 156, "antenvcfg": 156, "isaac_lab": 156, "cfg": [156, 524, 525, 528, 529, 530, 613, 614, 615, 616, 617, 618, 619, 620, 621, 624, 631], "instadeepai": [157, 158], "2306": [157, 158, 294], "09884": [157, 158], "snake": [157, 158, 194], "grid": [157, 158, 454], "bodi": [157, 158], "body_st": [157, 158], "fruit_posit": [157, 158], "col": [157, 158], "head_posit": [157, 158], "tail": [157, 158], "game2048": [157, 158], "maze": [157, 158], "cleaner": [157, 158, 647], "cvrp": [157, 158], "multicvrp": [157, 158], "minesweep": [157, 158], "rubikscub": [157, 158], "knapsack": [157, 158], "sudoku": [157, 158], "tsp": [157, 158], "connector": [157, 158], "mmst": [157, 158], "graphcolor": [157, 158], "partli": [157, 158], "scrambl": [157, 158], "robotwarehous": [157, 158], "tetri": [157, 158], "binpack": [157, 158], "jobshop": [157, 158], "0x1fca91910": 157, "122": [157, 158, 656], "0x1ff9baee0": 157, "134": [157, 158], "0x1ff9ba7c0": 157, "172": [157, 158], "jit": 158, "eager": [158, 363], "tdreset": [158, 296, 648], "whichev": 158, "overview": [159, 201, 636, 638, 641, 649, 650, 655], "vocab_s": [159, 200, 201, 588], "hashing_modul": [159, 201], "text_output": [159, 201], "batch_decod": [159, 201], "text_kei": [159, 201, 355, 358, 361, 366], "gpt2token": [159, 201], "make_tensordict": [159, 201], "mo": [160, 161], "minecart": [160, 161], "mo_gym": [161, 256], "qualnam": 162, "group_map": [162, 163, 164, 169, 170, 173, 174, 183, 184, 185, 186, 188, 649], "constructiuon": [162, 173, 174], "premad": [162, 163, 164, 173, 174, 185, 186, 432], "all_in_one_group": [162, 169, 170, 188], "agent_0": [162, 173, 174, 183, 188, 276], "agent_1": [162, 173, 174, 183, 188, 276], "agent_2": [162, 173, 174, 183, 188], "agent_3": [162, 183], "one_group_per_ag": [162, 173, 174], "meltingpot": [163, 164, 511], "2211": [163, 164], "13746": [163, 164], "melt": [163, 164], "pot": [163, 164], "novel": [163, 164, 641], "social": [163, 164], "familiar": [163, 164, 635, 646, 650, 656], "unfamiliar": [163, 164], "broad": [163, 164], "cooper": [163, 164, 649, 650], "decept": [163, 164], "reciproc": [163, 164], "stubborn": [163, 164], "substrat": [163, 164], "ml_collect": 163, "config_dict": 163, "configdict": 163, "categorical_act": [163, 164, 169, 170, 173, 174, 178, 179, 183, 184, 185, 186], "marlgroupmaptyp": [163, 164, 169, 170, 173, 174, 183, 184, 185, 186, 188, 626, 649], "agent_nam": [163, 164, 185, 186, 188], "agent_names_to_indices_map": [163, 164, 185, 186], "env_torchrl": [163, 164], "commons_harvest__open": [163, 164], "rgb": [163, 164], "144": [163, 164], "192": [163, 164], "collective_reward": [163, 164], "ready_to_shoot": [163, 164], "88": [163, 164, 178, 179], "substrate_config": 164, "get_config": 164, "mp_env": 164, "build_from_config": 164, "default_player_rol": 164, "mymbenv": [165, 300, 327], "world_model": [165, 300, 327, 405], "hidden_observ": [165, 300, 327], "worldmodelwrapp": [165, 300, 327], "activation_class": [165, 300, 303, 304, 306, 307, 308, 309, 314, 315, 325, 327, 330, 331, 524, 525, 635, 640, 649, 650, 655], "activate_last_lay": [165, 300, 309, 325, 327, 525], "sail": [166, 167], "sg": [166, 167], "10558": [166, 167], "readthedoc": [166, 169, 170], "en": [166, 169, 170], "python_interfac": 166, "envpoolmixin": 167, "env_bas": 167, "task_id": 167, "env_typ": 167, "gym_reset_return_info": 167, "envpool_env": 167, "www": [168, 328, 329], "fetch_openml": 168, "106": 168, "openspiel": [169, 170, 514], "open_spiel": [169, 170], "game_str": 169, "return_st": [169, 170, 173, 174], "4672": [169, 170], "current_play": [169, 170], "674": 169, "2048": [169, 170], "add_nois": [169, 170], "amazon": [169, 170], "backgammon": [169, 170], "restor": [169, 170, 628], "td_restor": [169, 170], "pyspiel": 170, "load_gam": 170, "new_initial_st": 170, "3009": 170, "my_env_fun": [171, 180], "custom_attribute_list": [171, 180], "custom_attribut": [171, 180], "custom_method_list": [171, 180], "custom_method": [171, 180], "deploi": [171, 180, 232, 638], "slight": [171, 180, 635], "share_individual_td": [171, 180], "shared_memori": [171, 180], "policy_proof": [171, 180], "ll": [171, 180, 240, 317, 318, 322, 323, 634, 635, 636, 637, 639, 640, 641, 642, 644, 646, 650, 656], "serial_for_singl": [171, 180, 635], "circular": [171, 180, 634], "list_of_kwarg": [171, 180], "com_veloc": [171, 180], "head_height": [171, 180], "joint_angl": [171, 180], "torso_vert": [171, 180], "batched_pipe_timeout": 171, "stringent": [171, 636, 649, 650], "penv": [171, 284], "env_fix": 171, "influenc": 171, "update_kwarg": [171, 180], "th": [172, 250, 288, 317, 322, 651], "thdot": [172, 651], "max_spe": [172, 651], "max_torqu": [172, 651], "gen_param": [172, 651], "gravit": [172, 651], "torqu": [172, 651], "pettingzoo": [173, 174, 515, 649, 650], "pet": [173, 174], "zoo": [173, 174], "__": [173, 174], "aecenv": [173, 174], "dead": [173, 174], "done_on_ani": [173, 174, 649], "compulsori": [173, 174], "adversary_0": [173, 174], "adversari": [173, 174, 407, 649], "sisl": 173, "multiwalker_v9": 173, "aec": [173, 174], "n_piston": [173, 174], "pistonball_v6": [173, 174], "piston": [173, 174], "piston_0": [173, 174], "piston_1": [173, 174], "piston_20": [173, 174], "tictactoe_v3": [173, 174], "player": [173, 174, 182], "player_1": [173, 174], "player_2": [173, 174], "butterfli": 174, "parallel_env": [174, 634, 655, 656], "_setup": [175, 181], "async_reset_send": [175, 181], "async_reset_recv": [175, 181], "cube": 176, "expos": [177, 243, 246, 384, 395, 413, 628, 635], "vikashplu": 177, "wiki": 177, "06828": 177, "from_depth": 177, "smacv2": [178, 179, 517], "starcraft": [178, 179], "challeng": [178, 179, 639, 651, 652], "10gen_terran": [178, 179], "10gen_zerg": [178, 179], "10gen_protoss": [178, 179], "3m": [178, 179], "8m": [178, 179], "25m": [178, 179], "5m_vs_6m": [178, 179], "8m_vs_9m": [178, 179], "10m_vs_11m": [178, 179], "27m_vs_30m": [178, 179], "mmm": [178, 179], "mmm2": [178, 179], "2s3z": [178, 179], "3s5z": [178, 179], "3s5z_vs_3s6z": [178, 179], "3s_vs_3z": [178, 179], "3s_vs_4z": [178, 179], "3s_vs_5z": [178, 179], "1c3s5z": [178, 179], "2m_vs_1z": [178, 179], "corridor": [178, 179], "6h_vs_8z": [178, 179], "2s_vs_1sc": [178, 179], "so_many_banel": [178, 179], "bane_vs_ban": [178, 179], "2c_vs_64zg": [178, 179], "old": [178, 179, 286, 294, 410, 656], "smac": [178, 179], "map_nam": [178, 179], "176": [178, 179], "battle_won": [178, 179], "dead_al": [178, 179], "dead_enemi": [178, 179], "episode_limit": [178, 179], "322": [178, 179, 205], "procedur": [178, 179, 353], "distribution_config": [178, 179], "n_unit": [178, 179], "n_enemi": [178, 179], "team_gen": [178, 179], "dist_typ": [178, 179], "weighted_team": [178, 179], "unit_typ": [178, 179], "marin": [178, 179], "maraud": [178, 179], "medivac": [178, 179], "exception_unit_typ": [178, 179], "start_posit": [178, 179], "surrounded_and_reflect": [178, 179], "map_x": [178, 179], "map_i": [178, 179], "capability_config": [178, 179], "131": [178, 179], "starcraft2env": 179, "tic": 182, "tac": 182, "toe": 182, "single_play": 182, "player1": 182, "desired_batch_s": 182, "player0": 182, "uniti": [183, 184], "technolog": [183, 184], "llapi": [183, 184], "mlagents_env": [183, 184], "unityenviron": [183, 184], "file_nam": 183, "registered_nam": 183, "3dball": 183, "group_0": 183, "vectorsensor_size8": 183, "continuous_act": [183, 185, 186, 452, 649, 650], "agent_10": 183, "agent_11": 183, "agent_4": 183, "agent_5": 183, "agent_6": 183, "agent_7": 183, "agent_8": 183, "agent_9": 183, "group_reward": 183, "proroklab": [185, 186], "vectorizedmultiagentsimul": [185, 186], "2207": [185, 186], "03530": [185, 186], "basescenario": 185, "defaultt": 185, "sparsiti": 185, "unbatched_action_spec": [185, 186], "unbatched_observation_spec": [185, 186], "unbatched_reward_spec": [185, 186], "het_spec": [185, 186], "het_specs_map": [185, 186], "flock": [185, 186, 452], "agent_collision_rew": [185, 186], "agent_distance_rew": [185, 186], "ca": 188, "environment4": 188, "get_group_map": 188, "sumbodul": 191, "blank": [192, 628], "canva": [192, 628], "fundament": [192, 628, 642], "histori": [192, 193, 194, 196, 197, 200, 205, 206, 209, 210, 212, 214, 215, 354, 355, 358, 361, 366, 430, 626, 646], "intention": [192, 628], "data_kei": [192, 193, 194, 197, 200, 213], "dialogu": [192, 628], "klrewardtransform": [192, 208, 214, 215, 561, 628], "pythoninterpret": [192, 628], "dataloadingprim": [192, 193, 200, 213, 279, 628], "addthinkingprompt": [192, 628], "input_mod": [192, 193, 194, 196, 197, 214, 215, 355, 358, 361, 366, 628, 647], "system_prompt": [192, 193, 194, 197, 210, 212, 628, 646], "template_kwarg": [192, 193, 194, 197], "system_rol": [192, 628], "user_rol": [192, 628], "policy_rol": 192, "response_kei": 192, "datasetchatenv": 192, "gsm8kenv": [192, 193, 196, 203, 205, 628], "ifevalenv": [192, 193, 628], "hello": [192, 214, 215, 353, 361, 362, 366, 430, 628], "response_data": 192, "next_ob": [192, 260, 434, 435, 436, 437, 655], "rlvr": 193, "batch_size_dl": [193, 194, 197, 203], "apply_templ": [193, 194, 197, 210, 212, 646], "conflict": [193, 355, 361, 366], "ray_backend": [193, 194, 197], "dataloader_actor_nam": [193, 194, 197], "thin": [193, 202, 628, 630], "chatenv": [193, 194, 197, 202, 210, 212, 626, 646], "bucket": 193, "reset_dataload": [193, 194, 197, 207, 213], "set_missing_toler": [193, 194, 197, 213, 286], "gsm8k": [194, 195, 203, 628], "compute_reward": [194, 197], "gsm8k_dataload": 194, "3b": [194, 197, 205, 210, 212, 353, 362, 363, 366], "question": [194, 197, 646, 653, 655], "bought": 194, "sandwich": 194, "he": 194, "paid": 194, "breed": 194, "mari": 194, "saw": [194, 643, 651, 653], "reward_answ": [194, 196, 628], "reward_contain": [194, 196, 628], "reward_right": [194, 196, 628], "reward_think": [194, 196, 628], "snak": 194, "set_done_if_answ": [196, 199, 628], "make_gsm8k_env": 196, "extract_tag": [196, 628], "pars": [196, 216, 646, 653], "xml": [196, 628], "ifev": [197, 199, 628], "ifeval_dataload": 197, "pprint": [197, 628], "instruction_id_list": [197, 199], "detectable_cont": 197, "number_placehold": 197, "num_highlight": 197, "num_": 197, "respond": 197, "plan": [197, 300, 326, 327], "week": 197, "europ": 197, "trip": 197, "london": 197, "rome": 197, "cap": [197, 636, 653], "restaur": 197, "prompt_level_strict_acc": [198, 199], "inst_level_strict_acc": [198, 199], "prompt_level_loose_acc": [198, 199], "inst_level_loose_acc": [198, 199], "instruction_ids_kei": 199, "keyword_args_kei": 199, "id_kei": 199, "response_column": 199, "score_kei": 199, "ifeval_scor": 199, "aggregate_reward": 199, "ifevalscoredata": [199, 628], "format_weight": 199, "scorer": 199, "IF": 199, "column": 199, "think_block": 199, "answer_block": [199, 628], "langdetect": 199, "nltk": 199, "immutabledict": 199, "default_reward_aggreg": [199, 628], "tier": 199, "metric": [199, 395, 413, 427, 466, 475, 477, 478, 630, 631, 634], "formula": [199, 255, 320, 349, 350, 393, 395, 410, 413, 427, 630, 636], "format_scor": [199, 628], "quality_bonu": 199, "structure_multipli": 199, "complexity_scal": 199, "incent": 199, "cot": [200, 628], "token_kei": 200, "str_kei": 200, "attention_kei": 200, "assign_reward": 200, "has_attent": 200, "assign_don": 200, "batchless": 200, "eos_token_id": [200, 361], "pretrainedtokenizerbas": [200, 217, 283], "stack_method": [200, 207, 213], "as_nested_tensor": [200, 207, 355, 361, 366], "bert": [200, 217, 283], "uncas": [200, 217, 283], "tokens_in": 200, "tokens_out": 200, "mlgym": [202, 204, 628], "get_library_nam": 202, "prisonersdilemma": 204, "reward_wrong_format": 204, "mlgymenv": [204, 628], "wrongli": 204, "cond": [205, 240, 241, 547], "random_prompt": 205, "edit_last_turn": 205, "zero_reward": 205, "undo_don": 205, "egocentr": 205, "reconsid": 205, "But": [205, 648], "wrong_answ": 205, "natalia": 205, "sold": 205, "48": 205, "friend": 205, "april": 205, "she": [205, 653], "72": 205, "altogeth": [205, 241], "undon": 205, "correct_answ": 205, "allowed_domain": [206, 646], "tool_nam": [206, 210, 212], "web": [206, 638, 646], "brows": [206, 646], "browser": [206, 646], "click": [206, 646], "llm_tool": 206, "clean": [206, 353, 358, 628], "use_ray_servic": [207, 209, 214, 257], "mappabl": 207, "dataloader_factori": [207, 213], "unrel": 207, "raydataloadingprim": 207, "endless_dataload": [207, 213], "set_capture_non_tensor_stack": 207, "dummydataload": 207, "generate_random_str": 207, "ascii_lowercas": 207, "__next__": 207, "zxwvupirska": 207, "stringa": 207, "zxwvupirsk": 207, "roll": 207, "init_st": 207, "nngcmflsana": 207, "vrrbnhzpmga": 207, "nngcmflsan": 207, "vrrb": 207, "dummytensordataload": 207, "generate_random_tensor": 207, "pad_tensor": 207, "padding_length": 207, "data_spec": 207, "gen_log_probs_full_kei": [208, 214], "ref_log_probs_full_kei": [208, 214], "ref_log_prob": [208, 214, 215, 430], "kl_kei": [208, 214], "kl_penalti": [208, 214], "add_to_reward": [208, 214], "coeff": [208, 214, 395, 410, 413], "padding_sid": [208, 209, 214, 215, 328, 355, 361, 366], "retrievelogprob": [208, 209, 214, 430], "retrievekl": [208, 209, 215], "pad_output": [208, 214, 215, 355, 358, 361, 366, 647], "gen_log_prob": [208, 214], "pad_sequ": [208, 209, 214, 215], "kl_transform": 208, "gen_log_probs_kei": 208, "ref_log_probs_kei": 208, "chathistori": [209, 214, 215, 361, 366, 628], "llmwrapperbas": [209, 214, 215, 361, 366, 427, 628], "ref_model_factori": [209, 214], "assistant_onli": [209, 214, 215, 430], "servic": [209, 214, 257, 353, 362, 628], "actor_nam": [209, 213, 214, 257, 358], "gen_model": [209, 214], "klcomput": [209, 214, 215], "tool_schema": 210, "mcp": 210, "protocol": 210, "pattern": [210, 628, 631], "schema": 210, "add_numb": 210, "add_schema": 210, "successfulli": [210, 212, 628, 646, 647], "version_typ": 211, "period": [211, 299], "llmcollector": [211, 214, 355, 361, 366, 628], "tracker": [211, 254], "new_weight": 211, "current_vers": 211, "uuid4": 211, "nprint": 212, "reus": [213, 301, 306, 461, 628], "create_dataload": 213, "primer1": 213, "primer2": 213, "missing_toler": [213, 217, 283], "reset_par": [213, 285], "set_contain": [213, 285], "from_collector": 214, "get_new_vers": [214, 355, 358, 361, 366], "gen_model_factori": 214, "consciou": [214, 215], "identif": [214, 215], "history_kei": [214, 361, 366], "tokenizer_kwarg": [214, 215, 355, 361, 366, 430], "assit": [214, 215, 430], "rayretrievekl": 214, "optconfig": [214, 215, 430], "optforcausallm": [214, 215, 430], "weather": [214, 215, 430], "facebook": [214, 215, 430], "opt": [214, 215, 430, 628], "125m": [214, 215, 430], "return_log_prob": [214, 215, 255, 361, 366, 371, 372, 373, 379, 383, 385, 415, 430, 528, 629, 636, 640, 647, 649, 650, 655], "log_probs_kei": [214, 215, 355, 358, 361, 366], "chat_histori": [214, 215, 361, 366], "log_probs_full_kei": 215, "batchabl": 215, "use_raw_nontensor": [217, 253, 283, 287], "additional_token": [217, 283], "skip_special_token": [217, 283, 355, 361, 366], "add_special_token": [217, 283], "return_attention_mask": [217, 283], "call_before_reset": [217, 283], "test_input_spec": [217, 287], "list_of_tensordict": [218, 219], "unsqueeze_null_shap": 220, "dynamic_shap": 220, "model_bas": [221, 222, 300, 327], "model_based_env": [221, 404], "dreamerenv": [221, 404, 626], "model_based_env_ev": 221, "spec_typ": 223, "convert_specnam": 223, "remap_state_to_observ": 223, "spectyp": 223, "unus": 223, "probabilistictdmodul": [224, 325, 379, 383, 433, 467], "keep_oth": [226, 651], "exclude_reward": 226, "exclude_don": 226, "next_": 226, "write_full_fals": 227, "_terminated_or_trunc": 227, "num_interv": [228, 535], "out_action_kei": [228, 535], "samplingstrategi": 228, "optino": 228, "intenum": 228, "action_disc": 228, "masker": 229, "finit": [229, 249, 340, 640, 653], "maskedenv": 229, "ones_lik": [229, 328], "scatter": 229, "fill_float": [231, 537], "fill_int": [231, 537], "fill_bool": [231, 537], "someenvclass": 231, "autoresetenv": 231, "fooenv": 231, "sign": [231, 274, 434, 649], "envtyp": 231, "reshape_fn": [232, 538, 638], "reset_func": [232, 538], "tensordict_batch_s": 232, "tensordict_reset": [232, 651], "biner": 233, "burn_in": [234, 540], "burn": 234, "burnt": 234, "gru_modul": [234, 319, 390], "input_s": [234, 279, 317, 318, 319, 322, 323, 324, 390, 637, 638], "hidden_s": [234, 279, 317, 318, 319, 322, 323, 324, 390, 637, 638], "default_recurrent_mod": [234, 319, 324], "burn_in_transform": 234, "gru": [234, 279, 318, 319, 390, 638], "num_lay": [234, 317, 319, 322, 324, 335, 336, 390, 638], "86": 234, "3008": 234, "0344": 234, "padding_valu": [235, 328, 329, 355, 361, 366], "as_invers": 235, "movement": [235, 413], "1312": 235, "5602": 235, "consumpt": [235, 626], "pictur": 235, "pixels_trsf": [235, 653], "grayscal": [235, 558, 635, 637, 638, 653, 656], "data_exclud": [235, 653], "make_rb_transform_and_sampl": 235, "sampler_kwarg": 235, "redund": [235, 628, 637], "del_kei": [236, 276, 289, 648, 651], "unsqueeze_if_oor": 236, "observation_posit": 236, "observation_veloc": 236, "center": [237, 340, 454, 609], "width": [237, 242, 268, 543, 548], "scalar": [238, 270, 298, 307, 309, 316, 333, 334, 341, 389, 393, 394, 395, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 417, 419, 427, 430, 432, 434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 466, 629, 635, 641, 651], "rewardsc": [239, 286, 576, 634, 635, 637], "rewardclip": [239, 575], "transform_list": 239, "condition": 240, "switch": [240, 286, 294, 320, 350, 452, 631, 647], "met": [240, 241, 392, 649, 651], "unalt": 240, "criteria": [240, 361], "policy_switch": 240, "step_count_tot": 240, "step_count_main": 240, "0322": 240, "1540": 240, "0111": 240, "3190": 240, "0299": 240, "1544": 240, "0181": 240, "3280": 240, "0276": 240, "1550": 240, "0255": 240, "3414": 240, "0253": 240, "1558": 240, "0334": 240, "3596": 240, "0230": 240, "1569": 240, "0422": 240, "3828": 240, "0206": 240, "1582": 240, "0519": 240, "4117": 240, "1598": 240, "0629": 240, "4469": 240, "0156": 240, "1617": 240, "0753": 240, "4891": 240, "0130": 240, "1639": 240, "0895": 240, "5394": 240, "0104": 240, "1665": 240, "1058": 240, "5987": 240, "0076": 240, "1696": 240, "1246": 240, "6685": 240, "0047": 240, "1732": 240, "1463": 240, "7504": 240, "0016": 240, "1774": 240, "1715": 240, "8459": 240, "0020": 240, "0150": 240, "1884": 240, "6117": 240, "0017": 240, "2071": 240, "3838": 240, "0105": 240, "2115": 240, "5110": 240, "exectu": 241, "palliat": [241, 640], "inner_count": 241, "middle_env": 241, "middle_count": 241, "auto_unwrap": [241, 286, 462, 502], "9670": 241, "2546": 241, "9669": 241, "9802": 241, "1981": 241, "1601": 241, "9926": 241, "1214": 241, "5556": 241, "9994": 241, "7622": 241, "9984": 241, "0561": 241, "7933": 241, "9895": 241, "1445": 241, "7779": 241, "dtype_in": 243, "dtype_out": 243, "scan": [243, 246, 384, 385], "resp": [243, 246], "not_transform": [243, 246], "orig_devic": 244, "unspecifi": 244, "num_actions_effect": 245, "max_act": 245, "include_forward": 245, "num_act": [245, 304, 402, 551, 638, 640], "action_out": 245, "eol_kei": [247, 553], "lives_kei": [247, 553], "eol_attribut": [247, 553], "breakout": 247, "210": [247, 262], "160": [247, 262], "eol_transform": 247, "eol": 247, "dqnloss": [247, 393, 394, 396, 397, 400, 402, 403, 404, 408, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 427, 430, 432, 617, 626, 630, 635, 637, 638, 644], "register_kei": 247, "loss_or_advantag": 247, "lossmodul": [247, 473, 478, 619, 620, 626, 630], "valueestimatorbas": [247, 411, 427, 430, 626], "first_dim": 250, "last_dim": 250, "allow_positive_dim": [250, 276, 288], "frameskip": 250, "repeatedli": [251, 636, 650], "hash_fn": 253, "repertoir": 253, "reproducible_hash": 253, "unarytransform": [253, 591], "observation_str": 253, "tobyt": [253, 287], "observation_hash": 253, "x08": 253, "x8b": 253, "xbexav": 253, "xbf": 253, "x00": 253, "xee": 253, "xb5": 253, "x17": 253, "x8f": 253, "xbe": [253, 287], "x88": 253, "xccu": 253, "xc0vr": 253, "get_input_from_hash": 253, "hash_tensor": 253, "init_kei": [254, 378], "log_prob_kei": [255, 358, 383, 630], "pi_curr": 255, "pi_0": 255, "overfit": 255, "probabilist": [255, 379, 393, 413, 626, 636, 655], "get_dist": [255, 355, 358, 361, 366, 383, 384], "normalparamextractor": [255, 371, 372, 373, 379, 385, 393, 394, 396, 402, 409, 413, 414, 415, 416, 418, 419, 629, 636, 640, 650, 655], "probabilisticactor": [255, 371, 372, 373, 374, 393, 394, 396, 399, 401, 402, 409, 412, 413, 414, 415, 416, 418, 419, 629, 634, 636, 640, 649, 650], "tanhnorm": [255, 371, 372, 373, 379, 385, 393, 394, 396, 409, 413, 414, 415, 416, 418, 419, 528, 626, 636, 650, 655], "apply_": 255, "copy_": [255, 634], "mogymwrapp": [256, 626], "mo_env": 256, "sea": 256, "treasur": 256, "so_env": 256, "module_factori": 257, "observation_spec_transform": 257, "done_spec_transform": 257, "reward_spec_transform": 257, "state_spec_transform": 257, "action_spec_transform": 257, "stack_reward": [258, 563], "stack_observ": [258, 563], "auto_batch_size_": 258, "macro": [258, 378], "trial": 259, "standard_norm": [260, 271, 293, 294, 566, 576, 634, 635, 637], "affin": [260, 271, 293, 294], "recover": 260, "set_default_tensor_typ": 260, "doubletensor": 260, "isclos": 260, "init_stat": [260, 634, 635, 636, 637], "3752e": 260, "5087e": 260, "9294e": 260, "9636": 260, "5608": 260, "6408": 260, "num_it": [260, 635, 636], "reduce_dim": [260, 634, 635, 636, 637], "cat_dim": [260, 634, 635, 636, 637], "keep_dim": [260, 378, 635, 637], "statist": [260, 293, 294, 299, 353, 362, 415, 477, 478, 624, 634, 635, 636, 656], "gaussian": [260, 279, 298, 300, 327, 333, 334, 339, 636, 638, 649], "empir": [260, 300, 327, 379, 383, 634, 636, 650], "3d": [260, 303], "reorder": 262, "in_keys_in": [262, 288], "channel": [262, 282, 330, 335, 336, 635], "r3m": [264, 569, 652], "resnet": [264, 289, 291], "ego4d": [264, 289, 291], "univers": [264, 289, 291, 361, 639], "suraj": [264, 289], "nair": [264, 289], "aravind": [264, 289], "rajeswaran": [264, 289], "vikash": [264, 289, 291], "kumar": [264, 289, 291], "chelsea": [264, 289], "finn": [264, 289], "abhinav": [264, 289], "gupta": [264, 289], "2203": [264, 289, 327, 652], "12601": [264, 289, 652], "_init": [264, 289, 634], "resnet50": [264, 291, 652], "model_nam": [264, 289, 291, 353, 362, 363, 457, 569], "resnet34": 264, "resnet18": [264, 569], "r3m_vec": [264, 652], "stack_imag": [264, 291], "tread": [264, 291], "hub": [264, 291, 639], "resnet50_weight": [264, 291], "imagenet1k_v1": [264, 291], "download_path": [264, 291], "tensor_pixels_kei": [264, 291], "sub_seq_len": 265, "sample_dim": [265, 634], "hesit": 265, "mix": [265, 342, 351, 432, 628, 634, 649, 650], "improp": 265, "dummyenv": 266, "another_oth": 266, "other_reward": 266, "create_copi": 267, "stuff": [267, 642], "newnam": 267, "r2g": 269, "reward_to_go": 269, "bernoulli_": 269, "9010": 269, "9404": [269, 440], "9701": [269, 440], "9900": [269, 440], "0000": [269, 280, 281, 316, 340, 386, 440], "clamp_min": [270, 575], "clamp_max": [270, 575], "clip_min": 270, "clip_max": 270, "episode_": 272, "reward1": 272, "reward2": 272, "episode_reward": [272, 649, 650], "keep_reward": 273, "keep_don": 273, "logical_or": 274, "in_key_inv": 276, "unstack": 276, "update_don": [277, 582], "disjunct": 277, "recognis": 277, "target_return": [278, 583], "default_valu": [279, 390], "expand_spec": 279, "single_default_valu": 279, "call_before_env_reset": 279, "unit": [279, 300, 314, 317, 318, 335, 336, 344, 345, 636], "scala": 279, "mykei": 279, "__unless": 279, "exists__": 279, "get_primers_from_modul": [279, 302, 319, 324, 626], "recurrent_st": [279, 319, 324, 390, 637], "10th": 280, "0216": 280, "1149": 280, "1990": 280, "2749": 280, "3281": 280, "9290": 280, "3702": 280, "8978": 280, "time_kei": [281, 586], "elaps": [281, 643], "monitor": [281, 353, 355, 361, 366, 395, 413, 475, 477, 628, 639], "expend": 281, "_polici": 281, "time_reset": 281, "time_polici": 281, "time_step": [281, 323, 378], "0882": 281, "0002": 281, "5797e": 281, "6289e": 281, "7990e": 281, "0824e": 281, "0837e": 281, "6056e": 281, "2016e": 281, "1062e": 281, "7009e": 281, "from_int": [282, 587], "shape_toler": [282, 587], "ri": 282, "traj_count": [284, 589], "traj": 284, "countingenv": 284, "make_env_c0": 284, "make_env_c1": 284, "smoothli": [286, 299], "add_1": 286, "cache_spec": [286, 502], "shown": [286, 331, 628, 629, 638, 646, 648, 649, 650, 653], "inv_fn": 287, "unari": 287, "durin": 287, "ommit": 287, "observation_trsf": 287, "xbc": 287, "x7f": 287, "x859": 287, "x81": 287, "x9a": 287, "xbd": 287, "xb8t8": 287, "test_output_spec": 287, "danger": 288, "vc1": [289, 593], "vc1_vec": 289, "untrain": 289, "make_noload_model": 289, "vip": [290, 291, 594, 595, 652], "implicit": [291, 401, 409, 653], "jason": 291, "ma": 291, "shagun": 291, "sodhani": 291, "dinesh": 291, "jayaraman": 291, "osbert": 291, "bastani": 291, "ami": 291, "zhang": 291, "vip_vec": 291, "final_nam": 292, "sb3": 292, "terminal_obs_read": 292, "vecnormv2": [293, 598], "new_api": [293, 294], "to_observation_norm": [293, 294], "frozen_copi": [293, 294], "shared_td": 293, "race": 293, "decai": [293, 294, 298, 316, 417, 470, 597, 598, 634, 635, 637, 656], "underflow": [293, 470], "build_td_for_shared_vecnorm": 293, "memmori": 293, "td_share": 293, "unfreez": [293, 294], "train_env": 293, "eval_env": 293, "9999": 294, "shared_data": 294, "reduce_batch_dim": 294, "varianc": [294, 299, 300, 301, 320, 349, 350, 413, 630, 634, 636, 650], "vs": [294, 297, 355, 361, 366], "weigh": 294, "_cast_int_to_float": 294, "env_trsf": 294, "observation_norm": 294, "reward_norm": [294, 470], "unnorm": [294, 321, 328, 329, 337], "7967": 294, "1238": 294, "5911": 294, "5275": 294, "8585": 294, "5028": 294, "2505": 294, "3169": [294, 386], "1332": 294, "1235": 294, "6596e": 294, "3072e": 294, "9170e": 294, "9255e": 294, "9131e": 294, "4671e": 294, "3760e": 294, "2058e": 294, "3484e": 294, "6185e": 294, "1456": 294, "1862": 294, "2053": 294, "2605": 294, "4046": 294, "5185": 294, "8023": 294, "1364": 294, "6183": 294, "5406": 294, "0920": 294, "1492": 294, "2702": 294, "3917": 294, "5001": 294, "7947": 294, "0160": 294, "3347": 294, "9082": 294, "9679": 294, "2199": 294, "2918": 294, "1668": 294, "2083": 294, "4981": 294, "5046": 294, "7950": 294, "9791": 294, "1484": 294, "4182": 294, "2201": 294, "0403": 294, "5206": 294, "7791": 294, "8282": 294, "2279": 294, "2907": 294, "4929": 294, "7793": 294, "8626": 294, "1832": 294, "local_env": 294, "testifi": 294, "4307": 294, "9613": 294, "state_dim": [295, 305, 310, 339, 344, 345, 374], "action_dim": [295, 305, 306, 308, 310, 339, 374, 634, 648], "gsde": [295, 414, 624], "gsdemodul": 295, "rb_transform": [296, 564], "resist": 296, "insensit": 296, "sensit": [296, 635, 637], "_orig": 296, "95": [296, 327, 422, 636, 637], "window": [296, 378, 649, 653, 655], "module_nam": [297, 411, 427, 430], "from_vers": 297, "to_vers": 297, "class_method": 297, "import_modul": 297, "get_class_that_defined_method": 297, "module_set": 297, "setters_dict": 297, "setter": 297, "setter_dict": 297, "po": 298, "sigma_init": [298, 649], "sigma_end": [298, 649], "annealing_num_step": [298, 316, 341, 634, 635, 637, 638, 640, 644, 649], "sigma": [298, 317, 318, 320, 322, 323, 341, 349, 350, 430, 636, 649], "omiss": [298, 316, 341], "momentum": [299, 609, 611], "max_r": 299, "max_d": 299, "warmup_step": 299, "batchrenorm": 299, "1702": 299, "03275": 299, "corenet": 299, "enhanc": [299, 631], "warmup": 299, "phase": [299, 301, 650, 653], "outlier": 299, "warm": 299, "renorm": 299, "entropi": [300, 321, 328, 337, 393, 394, 395, 396, 401, 402, 409, 410, 412, 413, 414, 416, 418, 419, 427, 428, 477, 478, 631, 650], "botev": 300, "2013": 300, "cem": 300, "maximis": [300, 306, 308, 327, 635, 636, 650], "modelbasedenv": [300, 327], "planning_horizon": [300, 327], "mpc": [300, 326, 327], "num_candid": [300, 327], "candid": [300, 327], "top_k": [300, 327, 355, 361, 366], "modelbasedenvbas": [300, 326, 327, 626], "safemodul": [300, 326, 371, 373, 383, 393, 394, 396, 401, 402, 409, 413, 414, 415, 416, 418, 419, 615, 616, 620, 626, 655], "hausknecht": 301, "wagen": 301, "consistentdropoutmodul": [301, 629], "conceptu": 301, "devianc": 301, "set_exploration_typ": [301, 411, 467, 626, 629, 636, 637, 638, 640, 649, 655], "_main_async_collector": 301, "asyncdatacollector": [301, 479, 626], "ditto": 301, "consistentdropout": 302, "input_shap": 302, "batcht": 302, "make_tensordict_prim": [302, 319, 324, 637], "input_dtyp": 302, "get_default_dtyp": [302, 470], "mask_6127171760": 302, "env0": [302, 656], "elu": [303, 304, 306, 307, 308, 309, 314, 315, 330, 635, 655], "activation_kwarg": [303, 304, 325, 524, 525], "norm_class": [303, 304, 306, 307, 325, 524, 525], "norm_kwarg": [303, 304, 325, 524, 525], "bias_last_lay": [303, 304, 306, 307, 308, 309, 315, 325, 524, 525], "aggregator_class": [303, 304, 306, 307, 524, 635, 637, 655], "squashdim": [303, 304, 306, 315, 330, 655], "aggregator_kwarg": [303, 304, 306, 307, 524, 635, 637], "squeeze_output": [303, 304, 306, 307, 524, 635, 637], "cell": [303, 304, 317, 318, 319, 322, 323, 324, 325, 330, 331, 636, 638, 639, 640, 641, 642, 643, 644], "kernel": [303, 304, 330], "cnet": [303, 304], "conv3d": 303, "lazyconv2d": [304, 306, 307, 315, 330], "default_atari_dqn": [304, 638], "semin": 304, "transformer_config": [305, 339, 374], "decisiontransform": [305, 339], "dtconfig": [305, 310, 339], "2202": [305, 310, 412], "05607": [305, 310, 412], "return_to_go": [305, 310, 339, 374], "conv_net_kwarg": [306, 307], "mlp_net_kwarg": [306, 307, 308], "use_avg_pool": [306, 307], "WITH": [306, 307, 308, 309, 341, 417], "1509": [306, 307, 308, 309, 327, 341, 398, 408, 417], "02971": [306, 307, 308, 309, 341, 417], "ndims_in": 306, "avgpool": [306, 307], "lazylinear": [306, 307, 308, 309, 315, 325, 629, 636, 640, 651, 652], "2304": 306, "adaptiveavgpool2d": [307, 635, 637], "output_s": [307, 635, 637], "squeeze2dlay": 307, "400": [308, 309, 650], "mlp_net_kwargs_net1": 309, "mlp_net_kwargs_net2": 309, "mlp1": 309, "mlp2": 309, "desdescrib": 310, "n_embd": 310, "n_layer": [310, 317, 322], "n_head": 310, "n_inner": 310, "n_posit": 310, "resid_pdrop": 310, "attn_pdrop": 310, "gpt2config": 310, "atol": [311, 348], "rtol": [311, 348], "batch_shap": [311, 337, 348], "event_shap": [311, 348], "absolut": [311, 348, 634], "_instanc": 311, "densiti": [311, 328, 329, 337, 350], "mass": [311, 328, 329, 337, 350, 651], "rsampl": [311, 321, 329, 337, 383], "sample_shap": [311, 321, 328, 329, 337], "softmax": [312, 329, 337, 375, 376], "var_num": [313, 343, 375, 376, 381], "action_value_kei": [313, 343, 375, 376, 380, 381, 396, 411, 427, 430, 432], "action_mask_kei": [313, 316, 343, 375, 376, 380, 381], "1707": [313, 376, 403, 413], "06887": [313, 376, 403], "mult": [313, 331, 343, 375, 376, 380, 381], "tensordict_modul": [313, 317, 318, 322, 323, 343, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 393, 394, 396, 397, 401, 402, 409, 413, 414, 415, 416, 418, 419, 629], "nbin": [313, 375, 629], "customdistributionalqv": 313, "log_softmax": [313, 375], "qvalue_actor": [313, 343, 375, 380, 629], "std_bia": 314, "std_min_val": 314, "belief": [314, 335, 344, 345], "1912": [314, 404, 405, 406], "01603": [314, 404, 405, 406], "softplu": [314, 389, 391, 392], "out_features_valu": 315, "cnn_kwarg": [315, 635], "mlp_kwarg": [315, 635], "duel": 315, "cnn": [315, 330, 635, 638, 640, 655], "06581": 315, "greedi": [316, 343, 355, 361, 366, 376, 381, 635, 637, 638, 640], "eps_init": [316, 341, 635, 637, 638, 640, 644], "eps_end": [316, 341, 635], "explorative_polici": [316, 341], "9055": 316, "9277": 316, "6295": 316, "2532": 316, "grad_fn": [316, 370, 383], "addbackward0": 316, "batch_first": [317, 322, 637], "bidirect": [317, 322, 637], "cudnn": [317, 318, 319, 322, 323, 324, 637, 638], "rnn": [317, 318, 319, 322, 323, 324, 369, 402, 416, 434, 637, 638, 640], "device_count": [317, 318, 322, 323, 656], "n_in": [317, 318, 322, 323], "n_out": [317, 318, 322, 323], "h0": [317, 318, 322, 323], "h1": [317, 318, 322, 323], "vectoris": [317, 318, 322, 323], "call_gru": [317, 318], "h_out": [317, 318, 322, 323], "batched_cal": [317, 318, 322, 323], "gate": [317, 318, 322], "r_t": 317, "w_": [317, 318, 322, 323], "ir": [317, 318], "x_t": [317, 322], "b_": [317, 318, 322, 323], "hr": [317, 318, 322], "h_": [317, 318, 322], "z_t": 317, "iz": [317, 318], "hz": [317, 318], "n_t": 317, "odot": [317, 318, 322, 323], "hn": [317, 318, 322], "h_t": [317, 322], "sigmoid": [317, 318, 322, 323], "hadamard": [317, 318, 322, 323], "multilay": [317, 322], "_t": [317, 322, 650, 651], "ge": [317, 322], "bernoulli": [317, 322], "b_ih": [317, 318, 322, 323, 324], "b_hh": [317, 318, 322, 323, 324], "h_0": [317, 322, 323], "pack_padded_sequ": [317, 322], "pack_sequ": [317, 322], "num": [317, 322, 644], "_layer": [317, 322], "_size": [317, 318, 322, 323], "h_n": [317, 322], "packedsequ": [317, 322], "weight_ih_l": [317, 322], "learnabl": [317, 318, 322, 323], "w_ir": 317, "w_iz": 317, "w_in": 317, "num_direct": [317, 322], "weight_hh_l": [317, 322], "w_hr": 317, "w_hz": 317, "w_hn": 317, "bias_ih_l": [317, 322], "b_ir": 317, "b_iz": 317, "b_in": 317, "bias_hh_l": [317, 322], "b_hr": 317, "b_hz": 317, "b_hn": 317, "mathcal": [317, 318, 322, 323], "sqrt": [317, 318, 322, 323, 341], "seq_len": [317, 322], "subtli": 317, "matrix": [317, 322, 333, 334], "hx": [317, 318, 322, 323], "lstmcell": [318, 324, 638], "gru_cel": 318, "weight_ih": [318, 323], "weight_hh": [318, 323], "bias_ih": [318, 323], "bias_hh": [318, 323], "rocm": [318, 323], "embedd": [319, 324], "grucel": [319, 382], "python_bas": [319, 324], "custom_kei": [319, 324], "hasn": [319, 324], "set_recurrent_mod": [319, 324, 637], "recurrent_mod": [319, 324, 369], "rs": [319, 634], "gru_module_train": 319, "policy_train": [319, 430], "traj_td": 319, "make_cudnn_bas": [319, 324], "make_python_bas": [319, 324, 638], "supplementari": [319, 324, 636, 656], "That": [319, 324, 636, 649], "dealt": [319, 324], "poorli": [319, 324], "meth": [319, 324, 411, 651], "data_collector": [319, 324, 635], "upscal": [320, 349, 350], "tanh_loc": [320, 349, 350], "event_dim": [320, 348, 349], "poor": [320, 349, 350], "explos": [320, 349, 350], "ignore_index": 321, "50000": 321, "inf": [321, 328, 329], "test_distribut": 321, "clear_cach": 321, "masked_dist": 321, "masked_logit": 321, "position_level_mask": 321, "proj_siz": 322, "c0": [322, 323], "c1": [322, 323], "call_lstm": [322, 323], "c_out": [322, 323], "i_t": 322, "ii": [322, 323], "hi": [322, 323, 361, 366, 628], "f_t": 322, "hf": [322, 323, 628], "g_t": 322, "ig": [322, 323], "hg": [322, 323], "o_t": 322, "ho": [322, 323], "c_t": 322, "c_": 322, "1402": 322, "1128": 322, "c_0": [322, 323], "proj": 322, "c_n": 322, "w_ii": 322, "w_if": 322, "w_ig": 322, "w_io": 322, "w_hi": 322, "w_hf": 322, "w_hg": 322, "w_ho": 322, "b_ii": 322, "b_if": 322, "b_ig": 322, "b_io": 322, "b_hi": 322, "b_hf": 322, "b_hg": 322, "b_ho": 322, "weight_hr_l": 322, "_revers": 322, "analog": [322, 640], "cn": 322, "lstm_cell": 323, "h_1": 323, "c_1": 323, "cx": 323, "recurrent_state_h": 324, "recurrent_state_c": 324, "triplet": [324, 380, 381], "lstm_modul": 324, "rs_h": 324, "rs_c": 324, "single_bias_last_lay": [325, 525], "layer_class": [325, 525], "layer_kwarg": [325, 525], "perceptron": [325, 525, 640], "noisylinear": [325, 333, 626, 635], "noisylazylinear": [325, 626], "mpcplanner": 326, "tensordict_out": [326, 355, 361, 366, 656], "mppi": 327, "covari": 327, "william": [327, 415], "aldrich": 327, "theodor": 327, "01149": 327, "hansen": 327, "wang": 327, "su": 327, "04955": 327, "valueoper": [327, 371, 372, 373, 393, 394, 395, 396, 397, 402, 409, 410, 413, 414, 415, 416, 418, 419, 530, 620, 629, 634, 636, 641], "tdlambdaestim": [327, 626, 634], "value_net": [327, 398, 400, 415, 434, 435, 436, 437, 636, 638, 640, 641, 644], "adv": 327, "lmbda": [327, 422, 434, 437, 439, 445, 446, 447, 450, 451, 630, 634, 636, 650], "temperatur": [327, 353, 355, 361, 366, 394, 401, 409, 628], "neg_inf": [328, 329], "use_cross_entropi": 328, "api_doc": [328, 329], "tf_agent": [328, 329], "sparse_mask": [328, 329], "cross_entropi": 328, "1203": [328, 329], "0928": [328, 329], "0831": [328, 329], "1972": [328, 329], "grad_method": [329, 337], "reparamgradientstrategi": [329, 337], "passthrough": [329, 337], "relaxedonehot": [329, 337], "sample_non_valid": 329, "zeros_lik": [329, 651], "share_param": [330, 331, 332, 649, 650], "use_td_param": [330, 331, 332], "get_stateful_net": [330, 331, 332, 411, 427, 430, 629, 630], "from_stateful_net": [330, 331, 332, 411, 427, 430, 630], "homogen": [330, 331, 649, 650], "_empty_net": [330, 331], "roughli": [330, 331, 655], "agent_network": [330, 331], "modulelist": [330, 331], "2592": 330, "decentr": 330, "n_agent_input": [331, 332, 649, 650], "n_agent_output": [331, 332, 649, 650], "toech": 331, "centalis": 331, "agent_dim": 332, "vmap_random": [332, 411, 421, 427, 430, 630], "stateful_net": [332, 411, 427, 430], "Such": [332, 411, 427, 430], "multiagentmlp": [332, 649, 650], "snet": 332, "hasattr": [332, 628, 634], "kaiming_normal_": 332, "std_init": [333, 334], "initialize_paramet": 333, "isol": [333, 411, 427, 430, 628, 638], "1706": [334, 351], "10295v3": 334, "induc": [334, 383], "aid": 334, "1803": [335, 336, 342], "10122": [335, 336], "rnn_hidden": 335, "latent": 336, "ordin": [338, 626], "parametris": [338, 340], "inres": 339, "mu": [339, 341, 636], "impos": [340, 629], "proxim": [340, 413, 477, 533, 631, 636, 650], "atom": 340, "tang": 340, "agraw": 340, "2020": 340, "1901": 340, "10500": 340, "discretis": 340, "num_atom": 340, "num_sampl": [340, 355, 358, 361, 366], "middl": 340, "optimis": [340, 649, 650], "minimis": 340, "penalis": 340, "0308": 340, "1586": 340, "4727": 340, "2260": 340, "1120": 340, "histogram": 340, "return_typ": 340, "hist": [340, 653], "158": 340, "478": 340, "228": 340, "112": 340, "bin_edg": 340, "8000": 340, "6000": 340, "4000": 340, "ornstein": [341, 634, 638], "uhlenbeck": [341, 634, 638], "ou": [341, 634], "correl": 341, "noise_t": 341, "noise_": 341, "theta": [341, 636, 651], "sigma_t": 341, "sigma_": 341, "ou_prev_nois": 341, "ou_step": 341, "x0": 341, "sigma_min": 341, "n_steps_ann": 341, "is_init_kei": 341, "_ou_prev_nois": 341, "_ou_step": 341, "state_shap": [342, 432], "mixing_embed_dim": [342, 432], "qmix": [342, 649, 650], "mixer": [342, 351, 432], "monoton": 342, "hyper": 342, "11485": 342, "qmixerloss": [342, 351], "qmix_vdn": [342, 351], "vdn": [342, 351], "hidden_dim": [344, 345], "scale_lb": [344, 345, 528], "posterior": [344, 405], "rssm": [344, 345, 405], "1811": [344, 345], "04551": [344, 345], "obs_embed": 344, "rnn_hidden_dim": 345, "dream": 345, "safe_tanh": 349, "tanhtransform": 349, "overflow": [349, 370, 375, 376, 379, 380, 381, 382, 383], "get_mod": [349, 383], "decomposit": 351, "05296": 351, "hide": [352, 636, 649, 650], "satisfi": [352, 629], "vmap_dim": 352, "lam": 352, "sample_in": 352, "sample_in_td": 352, "vm": 352, "engine_arg": 353, "asyncenginearg": [353, 362], "num_replica": [353, 362, 366, 628], "actor_class": 353, "enable_prefix_cach": 353, "replica": [353, 362, 366, 628], "unifi": [353, 366, 628, 631, 647, 656], "placement": [353, 628], "vllm_async": 353, "samplingparam": [353, 628], "num_devic": [353, 362, 363, 628], "max_model_len": [353, 628], "4096": [353, 628], "sampling_param": [353, 362, 628], "max_token": [353, 355, 361, 366, 628], "tensor_parallel_s": 353, "actor_index": 353, "cleanup": [353, 366, 628], "grace": 353, "fault": [353, 628], "resili": 353, "collective_rpc": 353, "create_load_balanc": 353, "kv": 353, "robin": [353, 492], "loadbalanc": 353, "rout": 353, "smart": 353, "lb": 353, "selected_actor_index": 353, "select_actor": 353, "hierarchi": 353, "prefix_length": 353, "overload_threshold": 353, "prompt_token_id": 353, "use_tqdm": 353, "lora_request": 353, "prompt_adapter_request": 353, "guided_options_request": 353, "timeout_second": 353, "requestoutput": 353, "tokensprompt": 353, "lora": 353, "get_cache_usag": 353, "fraction": [353, 393, 395, 413], "get_master_address": 353, "get_master_port": 353, "get_num_unfinished_request": 353, "unfinish": 353, "get_random_actor_index": 353, "init_weight_update_group": 353, "asyncvllmengineservic": 353, "asyncllmengin": 353, "parameter_nam": 353, "logprob": [355, 361, 366, 628, 647], "input_kei": [355, 361, 366, 647], "attention_mask_kei": [355, 361, 366], "generate_kwarg": [355, 358, 361, 366, 628, 647], "num_return_sequ": [355, 361, 366], "top_p": [355, 361, 366], "nucleu": [355, 361, 366], "repetition_penalti": [355, 361, 366], "do_sampl": [355, 361, 366], "num_beam": [355, 361, 366], "beam": [355, 361, 366], "length_penalti": [355, 361, 366], "early_stop": [355, 361, 366], "stop_sequ": [355, 361, 366], "resolut": [355, 361, 366, 386], "pad_model_input": [355, 361, 366], "tokens_kei": [355, 358, 361, 366], "masks_kei": [355, 358, 361, 366], "ref_batch": [355, 361, 366], "min_batch_s": [355, 361, 366], "max_batch_s": [355, 361, 366], "batching_timeout": [355, 361, 366], "ref_transformers_wrapp": [355, 366], "ref_vllm_wrapp": [355, 361], "cleanup_batch": [355, 358, 361, 366, 628], "flush": [355, 361, 366], "cancel": [355, 361, 366], "pend": [355, 361, 366], "_batch_queu": [355, 361, 366], "logits_onli": [355, 361, 366], "get_batching_st": [355, 358, 361, 366], "logits_kei": [355, 361, 366], "llmmaskedcategor": [355, 626], "alter": [355, 358, 361, 366, 378, 411, 629], "weak": [355, 361, 366], "all_attention_mask": [357, 361, 366, 647], "all_assistant_mask": [357, 361, 366, 647], "max_concurr": [358, 628], "validate_model": 358, "automodelforcausallm": [358, 361, 647], "remote_wrapp": 358, "tensordict_input": 358, "dist_params_kei": 358, "dist_sample_kei": 358, "get_dist_with_prompt_mask": [358, 366], "wast": 361, "simpler": [361, 635, 639, 647], "unsur": 361, "overlong": 361, "tokenization_util": [361, 366], "output_scor": 361, "discourag": [361, 366, 636, 651], "pad_token_id": 361, "bad_words_id": 361, "force_words_id": 361, "no_repeat_ngram_s": 361, "gram": 361, "encoder_repetition_penalti": 361, "num_beam_group": 361, "diversity_penalti": 361, "return_dict_in_gener": 361, "ref_categorical_sequenti": [361, 366], "repeat_interleave_caus": 361, "sequence_length": [361, 374], "_create_block_diagonal_attention_mask": 361, "make_ray_work": 363, "enforce_eag": 363, "rayllmwork": 363, "localllmwrapp": 363, "world_siz": [364, 365], "statelessprocessgroup": [364, 365], "plane": [364, 365], "pyncclcommun": [364, 365], "async_engin": [366, 628], "presence_penalti": 366, "frequency_penalti": 366, "ignore_eo": 366, "prompt_logprob": 366, "detoken": 366, "include_stop_str_in_output": 366, "spaces_between_special_token": 366, "sampling_typ": 366, "temperature_last": 366, "top_p_last": 366, "top_k_last": 366, "assistant_mask_kei": 366, "set_token": 366, "defer": 366, "translat": [370, 379], "character": [370, 375, 379, 380, 382, 653], "td_modul": [370, 371, 372, 373, 379, 382, 383, 385, 387, 640, 655], "3635": 370, "0340": 370, "1476": 370, "3911": 370, "1664": 370, "5455": 370, "2247": 370, "4583": 370, "2916": 370, "2160": 370, "5337": 370, "5193": 370, "addmmbackward0": 370, "actorvalueoper": [371, 395, 410, 413, 629, 640], "get_policy_oper": [371, 372, 373, 395, 410, 413, 629], "standalon": [371, 372, 373, 638, 640], "tdmodul": [371, 372, 373, 620], "get_critic_oper": 371, "common_oper": [371, 373], "policy_oper": [371, 372, 373], "value_oper": [371, 372, 373], "module_hidden": [371, 373], "td_module_hidden": [371, 373], "module_act": [371, 373], "td_module_act": [371, 372, 373], "module_valu": [371, 372, 373], "td_module_valu": [371, 372, 373], "state_action_valu": [371, 387, 394, 396, 401, 409, 416, 433, 620, 629, 634, 649, 655], "td_clone": [371, 372, 373], "tensordictmodulewrapp": [371, 615, 616, 620], "get_policy_head": [371, 372, 373], "safesequenti": [371, 372, 373, 432], "head": [371, 373, 383, 390, 395, 410, 413, 626], "get_value_head": [371, 372, 373], "get_value_oper": [371, 372, 373, 395, 410, 413], "action_modul": 372, "actorcriticoper": [373, 629, 640], "actorcriticwrapp": [373, 629, 634], "inferec": 374, "set_tensor_kei": 374, "dt_inference_wrapp": 374, "baz": 374, "inference_context": 374, "obs_dim": 374, "tanhdelta": [374, 626, 634, 649], "dtactor": 374, "actor_modul": [374, 655], "dist_class": 374, "dist_kwarg": 374, "distribution_kwarg": [374, 379, 383, 636, 649, 650], "inference_actor": 374, "mask_context": 374, "out_act": 374, "qvaluemodul": [375, 380, 432, 637, 638, 640, 644], "distributionaldqnnet": 375, "make_log_softmax": 375, "my_action_valu": [376, 381], "chanc": 376, "lmheadmodel": 377, "actor_head": [377, 395, 410, 413], "base_model": 377, "lm_head": 377, "lookahead": 378, "reshape_cat": 378, "actor_bas": 378, "obs_cat": 378, "obs_cat_reshap": 378, "action_orig": 378, "multistepenvwrapp": 378, "ego": 378, "default_interaction_typ": [379, 383, 640], "interaction_typ": [379, 383], "set_interaction_typ": [379, 383], "compositedistribut": [379, 383, 393, 413, 630, 640], "distribution_map": [379, 383], "name_map": [379, 383], "cache_dist": [379, 383], "n_empirical_estim": [379, 383], "compound": [379, 640], "chose": 381, "functionalmodul": 382, "functionalmodulewithbuff": 382, "td_fmodul": 382, "td_function": 382, "td_state": 382, "params_repeat": 382, "td_vmap": [382, 385], "random_sampl": [382, 383], "suppli": 383, "paliat": 383, "get_median": 383, "get_mean": 383, "sample_key_nam": 383, "_log_prob": 383, "composite_lp_aggreg": 383, "clampbackward0": 383, "anihil": 383, "probabilistictensordictsequenti": [384, 393, 395, 410, 413, 415, 615, 616, 630, 655], "partial_toler": [384, 385, 648], "AND": [384, 385, 396], "tensordictsequ": 385, "safeprobabilisticmodul": [385, 629], "spec1": 385, "net1": 385, "module1": 385, "td_module1": 385, "spec2": 385, "module2": 385, "td_module2": 385, "boundari": [386, 636, 638, 649, 650], "9944": 386, "9991": 386, "3020": 386, "2299": 386, "5418": 386, "2989": 386, "6849": 386, "2690": 386, "9649": 386, "5686": 386, "8602": 386, "0315": 386, "8455": 386, "6027": 386, "4746": 386, "7843": 386, "7782": 386, "2111": 386, "5115": 386, "4687": 386, "5760": 386, "custommodul": 387, "imaginari": 388, "imagin": 388, "transition_model": 388, "get_reward_oper": 388, "get_transition_model_oper": 388, "min_val": [389, 392], "_bia": 389, "expln": 392, "biased_softplu": [392, 626], "biased_softplus_": 392, "add_custom_map": 392, "1602": 393, "01783v2": 393, "entropy_bonu": [393, 395, 410, 413, 427, 532, 636], "favour": [393, 395, 410, 413, 427], "samples_mc_entropi": [393, 395, 410, 412, 413, 427, 532], "entropy_coeff": [393, 395, 410, 413, 427, 532], "critic_coeff": [393, 395, 410, 413, 427, 532], "loss_critic_typ": [393, 395, 410, 413, 415, 532, 636], "l1": [393, 395, 397, 398, 402, 410, 413, 414, 415, 418, 419, 423, 432, 629, 634], "l2": [393, 395, 397, 398, 399, 400, 402, 405, 406, 410, 413, 414, 415, 418, 419, 423, 432, 634, 649], "smooth_l1": [393, 394, 395, 396, 397, 398, 401, 402, 409, 410, 413, 414, 415, 416, 418, 419, 423, 432, 532, 636], "separate_loss": [393, 395, 396, 397, 401, 402, 409, 410, 413, 414, 415, 416, 418, 419, 532], "advantage_kei": [393, 395, 410, 413, 415, 427, 429, 434, 435, 436, 437, 532], "value_target_kei": [393, 395, 410, 413, 415, 434, 435, 436, 437, 532], "value_target": [393, 395, 410, 413, 415, 434, 435, 436, 437, 636, 650], "ddp": [393, 395, 410, 413, 415], "fsdp": [393, 395, 410, 413, 415], "divid": [393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 407, 409, 410, 412, 413, 414, 415, 416, 418, 419, 427, 613, 634, 649, 650, 651], "clip_valu": [393, 395, 410, 413, 415, 427, 532], "loss_crit": [393, 413, 427, 636, 650], "loss_entropi": [393, 413, 428, 636, 650], "loss_object": [393, 413, 428, 636, 650], "next_reward": [393, 394, 396, 397, 398, 400, 401, 402, 409, 413, 414, 415, 416, 418, 419, 434, 435, 436, 437], "next_don": [393, 394, 396, 397, 398, 400, 401, 402, 409, 413, 414, 415, 416, 418, 419, 434, 435, 436, 437], "next_termin": [393, 394, 396, 397, 398, 400, 401, 402, 409, 413, 414, 415, 416, 418, 419, 434, 435, 436, 437], "loss_obj": 393, "next_observ": [393, 394, 396, 397, 398, 400, 401, 402, 409, 413, 414, 415, 416, 418, 419, 648], "sacloss": [393, 408, 417, 472, 478, 626], "default_kei": [393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 412, 413, 414, 415, 416, 418, 419, 427, 430, 432, 438], "_acceptedkei": [393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 411, 412, 413, 414, 415, 416, 418, 419, 427, 430, 432, 438], "make_value_estim": [393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 420, 427, 430, 432, 630, 634, 635, 649, 650, 655], "value_typ": [393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 422, 427, 430, 432, 634], "hyperparam": [393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 427, 430, 432, 634], "enum": [393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 422, 427, 430, 432, 634], "default_value_estim": [393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 427, 430, 432, 634, 655], "default_value_kwarg": [393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 427, 430, 432, 626, 634], "dqn_loss": [393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 420, 427, 430, 432], "td1": [393, 394, 396, 397, 398, 400, 402, 403, 404, 409, 411, 413, 414, 415, 416, 418, 419, 427, 430, 432, 634], "conserv": [394, 400], "qvalue_network": [394, 396, 401, 402, 409, 414, 416, 418, 419, 472, 478], "unti": [394, 396, 409, 414, 416, 418, 419], "loss_funct": [394, 396, 397, 398, 399, 400, 401, 402, 409, 414, 416, 418, 419, 423, 430, 432, 634, 649], "alpha_init": [394, 396, 402, 412, 414, 416], "min_alpha": [394, 396, 402, 412, 414, 416], "max_alpha": [394, 396, 402, 412, 414, 416], "fixed_alpha": [394, 396, 402, 412, 414, 416], "target_entropi": [394, 396, 402, 412, 414, 416], "prod": [394, 396, 412, 416], "delay_actor": [394, 397, 416, 418, 419], "delay_qvalu": [394, 402, 414, 416, 418, 419], "min_q_weight": 394, "max_q_backup": 394, "backup": 394, "deterministic_backup": 394, "num_random": 394, "with_lagrang": 394, "lagrang": 394, "lagrange_thresh": 394, "deactivate_vmap": [394, 396, 402, 409, 414, 416, 418, 419, 434, 435, 436, 437], "valueclass": [394, 396, 397, 402, 414, 416, 418, 419], "qvalu": [394, 396, 401, 402, 409, 414, 416, 418, 419], "loss_actor": [394, 396, 397, 401, 402, 409, 414, 415, 416, 418, 419, 468, 634, 649], "loss_actor_bc": 394, "loss_alpha": [394, 396, 402, 414, 416], "loss_cql": [394, 400], "loss_qvalu": [394, 396, 400, 401, 402, 409, 414, 416, 418, 419], "loss_alpha_prim": 394, "ess": [395, 413, 427, 428], "clip_epsilon": [395, 427, 636, 650], "head_nam": [395, 410, 413], "ppo_entropy_coeffici": [395, 410, 413], "normalize_advantag": [395, 410, 413, 532, 650], "normalize_advantage_exclude_dim": [395, 410, 413, 532], "multiobject": [395, 410, 413], "value_kei": [395, 410, 413, 434, 435, 436, 437, 532, 634], "somemodul": [395, 410, 413], "someactor": [395, 410, 413], "value_head": [395, 410, 413], "somevalu": [395, 410, 413], "IN": 396, "FOR": 396, "simplic": [396, 635, 636, 642, 652, 653, 655], "openreview": [396, 414], "pczqttstix": 396, "qvalue_loss": [396, 402, 416, 418], "actor_loss": [396, 402, 416, 418], "alpha_loss": [396, 402, 416], "num_qvalue_net": [396, 401, 402, 409, 414, 416, 418, 419], "maybe_init_target_entropi": 396, "fault_toler": 396, "target_entropy_buff": 396, "delay_valu": [397, 398, 400, 403, 415, 416, 432, 635, 637, 638, 644, 649], "loss_valu": [397, 401, 409, 415, 416, 634, 636, 649, 650], "pred_valu": [397, 400, 418, 419, 634], "pred_value_max": [397, 634], "target_valu": [397, 400, 414, 418, 419, 433, 630, 634], "target_value_max": [397, 634], "qvalueactor": [398, 400, 432, 635, 637], "double_dqn": 398, "06461": [398, 408], "mult_one_hot": [398, 401, 402, 432], "loss_val": [398, 400, 430, 630, 634, 636, 637, 638, 641, 642, 644, 649, 650, 653], "01345": 399, "distanc": [400, 410, 423, 433, 434, 650], "dcql_loss": 400, "2110": [401, 409], "06169": [401, 409], "expectil": [401, 409], "tau": [401, 409, 417, 634, 635, 649], "antmaz": [401, 409], "sticht": [401, 409], "onehotcategor": [401, 402, 626], "target_entropy_weight": 402, "skip_done_st": [402, 416], "maxim": [402, 416, 599, 600, 601, 603, 609, 610, 611, 634, 641, 651], "disctount": 403, "distributionalqvalueactor": [403, 629], "input_tensordict": [403, 634], "actor_model": 404, "imagination_horizon": 404, "discount_loss": [404, 406], "lambda_kl": 405, "lambda_reco": 405, "lambda_reward": 405, "reco_loss": 405, "reward_loss": 405, "free_nat": 405, "nat": 405, "delayed_clamp": 405, "global_averag": 405, "value_loss": [406, 416], "fake_data": 406, "1606": 407, "03476": 407, "discriminator_network": 407, "use_grad_penalti": 407, "gp_lambda": 407, "discrimin": 407, "ddpgloss": [408, 417, 620, 626, 634, 641, 649, 655], "td3loss": [408, 417, 626], "value_network_update_interv": 408, "qvalueclass": 409, "loss_value_diff": 409, "diff": 409, "old_polici": 410, "new_polici": 410, "apart": [410, 650], "dtarg": 410, "samples_mc_kl": 410, "analyt": 410, "decrement": 410, "loss_": [411, 468, 630, 634, 641], "equip": [411, 637, 638, 640], "gh": 411, "_forward_value_estimator_kei": 411, "value_estim": [411, 427, 430, 434, 435, 436, 437, 438, 630, 634, 650], "myloss": 411, "action2": 411, "augment": [411, 628, 642, 644, 653], "deterministic_sampling_mod": 411, "convert_to_funct": [411, 427, 430, 634], "expand_dim": [411, 427, 430], "create_target_param": [411, 427, 430, 634], "compare_against": [411, 427, 430, 634], "_param": [411, 427, 430], "resampl": [411, 427, 430], "_target_param": [411, 427, 430], "network_nam": [411, 427, 430], "blend": [411, 427, 430], "add_random_modul": [411, 427, 430, 626, 630], "flavor": [413, 634, 649, 650, 655], "clipppoloss": [413, 626, 636, 650], "klpenppoloss": [413, 626], "06347": 413, "log_explained_vari": [413, 532], "explain": [413, 638, 652], "explained_vari": 413, "wors": 413, "gae": [413, 626, 630, 631, 634, 636, 650], "ppo_loss": 413, "tdlambda": [413, 422, 630, 634], "base_lay": 413, "action_log_prob": 413, "randn_lik": 413, "kl_approx": [413, 428], "samplelogprob": 413, "gripper": 413, "composite_entropi": 413, "0234": 413, "set_composite_lp_aggreg": [413, 630, 650], "ay8zfzm0tdd": 414, "sub_sample_len": 414, "subsampl": [414, 463, 631], "action_log_prob_actor": 414, "state_action_value_actor": [414, 418, 419], "connectionist": 415, "1992": 415, "doi": 415, "1007": 415, "bf00992696": 415, "actor_net": [415, 634, 636], "1801": 416, "01290": 416, "1812": 416, "05905": 416, "redqloss": [417, 626], "theta_t": [417, 651], "theta_": [417, 651], "polyak": 417, "minimalist": 418, "06860": 418, "policy_nois": [418, 419], "noise_clip": [418, 419], "td3_bc": 418, "bc_loss": 418, "lmbd": 418, "td0": [420, 634, 649], "tensorlik": 423, "strict_shap": 423, "view_a": 423, "instabl": 427, "diagnost": 427, "masking_strategi": 427, "sft": [427, 430], "kl_to_ref_coeff": [427, 430], "kl_to_inference_coeff": 427, "grpolossoutput": [427, 429], "clip_fract": 428, "loss_kl_to_ref": [428, 430, 431], "kl_to_ref": [428, 431], "loss_kl_to_infer": 428, "kl_to_infer": 428, "grpo_siz": 429, "hit": 429, "supervis": [430, 628, 641, 642, 653, 656], "normalize_by_seq_length": 430, "minor_sft": 430, "minorsft": 430, "shime": 430, "xie": 430, "hong": 430, "chen": 430, "fred": 430, "yu": 430, "zey": 430, "sun": 430, "xiuyu": 430, "wu": 430, "2024": 430, "minor": [430, 649], "_chat_templ": 430, "policy_ref": 430, "txt_start": 430, "zip": [430, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "loss_sft": [430, 431], "qmixer": [432, 626], "local_valu": 432, "visibl": [432, 650], "acceptedkei": 432, "global_valu": 432, "penultim": 432, "local_value_network": 432, "mixer_network": 432, "value_modul": [432, 636, 655], "qnet": [432, 634], "next_val_kei": 433, "pred_next_v": 433, "mse": 433, "q_valu": 433, "n_steps_to_next": 433, "value_next_st": 433, "1506": [434, 439, 447], "02438": [434, 439, 447], "exponenti": [434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 470], "average_ga": [434, 636], "skip_exist": [434, 435, 436, 437], "get_default_devic": [434, 435, 436, 437, 438], "auto_reset_env": 434, "next_valu": [434, 435, 436, 437, 438], "gradient_mod": 434, "value_error": [434, 435, 436, 437, 438], "marker": [434, 634], "trajecotri": 434, "fair": 434, "target_param": [434, 435, 436, 437, 438, 634, 650], "98": [434, 435, 436, 437], "94": [434, 437], "unpack": [434, 435, 436, 437], "tensor_kei": [434, 435, 436, 437, 438], "aka": [435, 635, 649], "average_reward": [435, 436, 437], "tdestim": [435, 436, 438], "infti": 436, "valuefunctionbas": 438, "old_stat": [439, 441, 443, 445, 447, 448, 450], "new_stat": [439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451], "rolling_gamma": [443, 444, 445, 446, 448, 449, 450, 451], "g1": [443, 444, 445, 446, 448, 449, 450, 451], "g2": [443, 444, 445, 446, 448, 449, 450, 451], "g3": [443, 444, 445, 446, 448, 449, 450, 451], "g4": [443, 444, 445, 446, 448, 449, 450, 451], "v3": [443, 444, 445, 446, 448, 449, 450, 451], "preproc": [452, 638, 649], "as_non_tensor": [452, 649], "render_method": 452, "pass_tensordict": 452, "syntact": 452, "sugar": 452, "out_file_bas": 453, "skip_reset": 453, "center_crop": 454, "make_grid": 454, "log_video": 454, "csv": [454, 456, 458, 520, 635, 643, 644], "tensorboard": [454, 458, 460, 522, 631, 643, 655], "log_dir": [454, 455, 456, 458, 460, 461, 520, 522, 523, 635, 644], "cheetah_video": 454, "run_video": 454, "openxexperiencereplai": 454, "sec": [454, 651], "video_fp": [454, 456, 459, 520, 523], "run_video_0": 454, "cur_dir": 456, "csv_log": 456, "add_video": 456, "video_": 456, "experiment_nam": [457, 458], "logger_typ": 458, "logger_nam": 458, "mlflow": [458, 459], "wandb_kwarg": 458, "mlflow_kwarg": 458, "tracking_uri": 459, "uri": 459, "datastor": 459, "tb_log": [460, 522], "tensoarboard": 460, "td_log": 460, "save_dir": [461, 523], "resum": 461, "uncategor": 461, "my_funct": 462, "sub_traj_len": 463, "min_sub_traj_len": 463, "register_op": [463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 631, 635], "process_optim_batch": [463, 469, 470, 631], "td_out": [463, 471], "_process_optim_batch_hook": [463, 631], "batch_subsampl": 463, "clear_cuda": 464, "pre_optim_step": [464, 631], "log_pbar": [465, 466, 467, 470, 631, 635], "count_fram": 465, "pre_steps_log": [465, 466, 631], "count_frames_log": 465, "lognam": 466, "include_std": 466, "log_reward": [466, 478, 635], "r_train": 466, "log_action_norm": 466, "action_norm": 466, "percentag": 466, "log_don": 466, "done_percentag": 466, "record_interv": [467, 634, 635], "record_fram": [467, 613, 634, 635], "policy_explor": [467, 620, 634, 635, 638, 640, 644], "log_kei": [467, 635], "underestim": 467, "r_evalu": [467, 634], "loss_compon": 468, "appl": 468, "optimizer_hook": 468, "flatten_tensordict": [469, 635], "max_dim": 469, "rb_trainer": 469, "batch_process": [469, 470, 471, 631], "post_loss": [469, 631], "999": [470, 602, 603, 604, 607, 608, 612, 635], "jitter": 470, "finfo": 470, "default_dtyp": 470, "update_reward_stat": 470, "normalize_reward": 470, "make_train": [471, 626], "_process_batch_hook": [471, 631], "select_kei": [471, 631], "target_params_updat": 472, "targetnetupdat": [472, 478, 617, 619, 620], "target_net_updat": [472, 478, 620, 634, 635], "softupd": [472, 626, 634, 635, 637, 638, 641, 644, 649], "target_net_updater_hook": 472, "post_optim": [472, 631, 635], "versatil": [473, 639], "optim_steps_per_batch": [473, 478, 533, 631, 635], "clip_grad_norm": [473, 478, 533], "clip_norm": [473, 478, 533, 631], "progress_bar": [473, 478, 533], "save_trainer_interv": [473, 478, 533], "log_interv": [473, 478, 533, 631, 635], "save_trainer_fil": [473, 478, 533, 631], "async_collect": [473, 475, 533], "utd": [473, 475, 634, 637], "utd_ratio": 473, "load_from_fil": [473, 477, 478, 631], "update_count": 475, "utdr_hook": 475, "update_weights_interv": [476, 635], "policy_weights_gett": 476, "post_step": [476, 631, 635], "comprehens": [477, 478, 628, 631], "ppotrainerconfig": [477, 631], "bridg": 478, "elsewher": 478, "enable_log": 478, "log_act": 478, "log_observ": 478, "3e": [478, 636, 637, 649, 650], "configbas": [479, 481, 482, 483], "storageensemblewrit": 497, "batched_env_typ": 500, "make_batched_env": 500, "make_gym_env": 506, "mogymenv": [510, 626], "meltingpotenv": [511, 626], "openmlenv": [513, 626], "openspielenv": [514, 626], "pettingzooenv": [515, 626, 649], "robohiveenv": [516, 626], "smacv2env": [517, 626], "unity_mlag": 518, "unitymlagentsenv": [518, 626], "activationconfig": [524, 525], "normconfig": 524, "aggregatorconfig": 524, "layerconfig": 525, "valuemodelconfig": 526, "mlpconfig": [528, 529, 530, 631], "eval_mod": 528, "extract_normal_param": 528, "scale_map": 528, "biased_softplus_1": 528, "param_kei": 528, "_make_tanh_normal_model": 528, "_make_value_model": 530, "networkconfig": 530, "loss_typ": [531, 532], "_make_ppo_loss": 532, "num_epoch": [533, 636, 650], "_make_ppo_train": 533, "sensibl": [533, 631], "batchsizetransform": [538, 638], "binarizereward": 539, "burnintransform": 540, "centercrop": 543, "cliptransform": 544, "conditionalpolicyswitch": 546, "dtypecasttransform": 549, "devicecasttransform": 550, "discreteactionproject": 551, "gym_transform": 553, "endoflifetransform": 553, "exclude_kei": 554, "finitetensordictcheck": 555, "flattenobserv": 556, "frameskiptransform": 557, "linearisereward": 562, "multiact": 563, "noopresetenv": [565, 655, 656], "permutetransform": 567, "pinmemorytransform": 568, "r3mtransform": [569, 652], "crop_siz": 570, "key_map": 572, "reward2gotransform": 574, "include_kei": 578, "signtransform": 579, "squeezetransform": 580, "targetreturn": 583, "primer_spec": 584, "timemaxpool": 585, "vc1transform": 593, "viprewardtransform": 594, "viptransform": 595, "lambd": 599, "t0": [599, 638, 644], "weight_decai": [599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 611, 634, 635], "foreach": [599, 600, 601, 603, 607, 609, 610, 611], "asgd": 599, "rho": 600, "adadelta": 600, "lr_decai": 601, "initial_accumulator_valu": 601, "adagrad": 601, "amsgrad": [602, 603], "fuse": 603, "adamw": 603, "002": [604, 607], "adamax": 604, "max_it": 605, "max_ev": 605, "tolerance_grad": 605, "07": 605, "tolerance_chang": 605, "09": 605, "history_s": 605, "line_search_fn": 605, "lbfg": 605, "lion": 606, "momentum_decai": 607, "004": 607, "nadam": 607, "radam": 608, "rmsprop": 609, "eta": 610, "step_siz": 610, "rprop": 610, "dampen": 611, "nesterov": 611, "sgd": 611, "sparseadam": 612, "dictconfig": [613, 614, 615, 616, 618, 619, 620, 621, 624], "unknowingli": 613, "annealing_fram": [613, 634], "init_env_step": [613, 614, 634], "proof_environ": [614, 634], "sta": 614, "ot": 614, "actor_model_explor": [615, 616, 634], "make_env_kwarg": [615, 616], "replayargsconfig": 618, "constitu": 620, "egreedywrapp": 620, "env_proof": 620, "obs_spec": 620, "net_valu": 620, "dir": [620, 631, 635], "gettempdir": 620, "namespac": [621, 624], "transformed_env_constructor": [621, 626], "num_env_per_collector": [622, 623], "video_tag": 624, "norm_obs_onli": 624, "use_env_cr": 624, "custom_env_mak": 624, "custom_env": 624, "return_transformed_env": 624, "action_dim_gsd": 624, "state_dim_gsd": 624, "obs_norm_state_dict": 624, "weightupdat": 626, "distributedsyncdatacollector": 626, "submitit_delayed_launch": 626, "remotetensordictreplaybuff": 626, "rational": 626, "footnot": 626, "binarydiscretetensorspec": 626, "boundedtensorspec": 626, "discretetensorspec": 626, "lazystackedcompositespec": 626, "lazystackedtensorspec": 626, "multidiscretetensorspec": 626, "multionehotdiscretetensorspec": 626, "nontensorspec": 626, "onehotdiscretetensorspec": 626, "unboundedcontinuoustensorspec": 626, "unboundeddiscretetensorspec": 626, "prompttensordicttoken": 626, "rolloutfrommodel": 626, "tokenizeddatasetload": 626, "create_infinite_iter": 626, "constantklcontrol": 626, "adaptiveklcontrol": 626, "densifyreward": 626, "h5combin": 626, "h5split": 626, "nested2t": 626, "check_no_exclusive_kei": 626, "consolidate_spec": 626, "contains_lazy_spec": 626, "envmetadata": 626, "chessenv": 626, "tictactoeenv": 626, "llmhashingenv": 626, "check_marl_group": 626, "get_available_librari": 626, "terminated_or_trunc": 626, "dreamerdecod": 626, "braxwrapp": 626, "dmcontrolwrapp": 626, "isaaclabwrapp": 626, "jumanjiwrapp": 626, "meltingpotwrapp": 626, "multithreadedenvwrapp": 626, "openspielwrapp": 626, "smacv2wrapp": 626, "unitymlagentswrapp": 626, "vmaswrapp": 626, "register_gym_spec_convers": 626, "qvaluehook": 626, "distributionalqvaluehook": 626, "reset_nois": 626, "cemplann": 626, "mpcplannerbas": 626, "mppiplann": 626, "independentnorm": 626, "truncatednorm": 626, "maskedonehotcategor": 626, "onehotordin": 626, "inv_softplu": 626, "vmapmodul": 626, "distributionaldqnloss": [626, 635], "discretesacloss": 626, "crossqloss": 626, "iqlloss": 626, "discreteiqlloss": 626, "cqlloss": 626, "discretecqlloss": 626, "gailloss": 626, "dtloss": 626, "onlinedtloss": 626, "td3bcloss": 626, "ppoloss": [626, 628], "a2closs": 626, "reinforceloss": 626, "dreameractorloss": 626, "dreamermodelloss": 626, "dreamervalueloss": 626, "td0estim": [626, 634], "td1estim": [626, 634], "td0_return_estim": 626, "td0_advantage_estim": 626, "td1_return_estim": 626, "vec_td1_return_estim": 626, "td1_advantage_estim": 626, "vec_td1_advantage_estim": 626, "td_lambda_return_estim": 626, "vec_td_lambda_return_estim": 626, "td_lambda_advantage_estim": 626, "vec_td_lambda_advantage_estim": 626, "generalized_advantage_estim": 626, "vec_generalized_advantage_estim": 626, "hardupd": [626, 634, 641], "distance_loss": [626, 634], "group_optim": 626, "hold_out_net": 626, "hold_out_param": [626, 634], "batchsubsampl": [626, 631], "clearcudacach": 626, "countframeslog": 626, "logscalar": [626, 631, 635], "optimizerhook": [626, 635], "logvalidationreward": [626, 631, 634, 635], "replaybuffertrain": [626, 631, 635], "rewardnorm": 626, "selectkei": [626, 631], "trainerhookbas": [626, 631, 635], "updateweight": [626, 631, 635], "targetnetupdaterhook": 626, "utdrhook": 626, "ppotrain": [626, 631], "sactrain": [626, 631], "make_collector_offpolici": 626, "make_collector_onpolici": 626, "make_dqn_loss": 626, "make_replay_buff": [626, 634], "make_target_updat": 626, "parallel_env_constructor": [626, 634], "sync_async_collector": 626, "sync_sync_collector": 626, "correct_for_frame_skip": 626, "get_stats_random_rollout": 626, "mlflowlogg": 626, "get_logg": 626, "generate_exp_nam": 626, "sweep": 626, "journei": 627, "textbook": 627, "highlight": [627, 649], "ever": [627, 650], "bump": 627, "pr": [627, 628], "five": [628, 635], "orchestr": [628, 635, 641, 643], "grpoloss": 628, "sftloss": 628, "mcadvantag": 628, "5b": [628, 647], "microsoft": 628, "medium": [628, 653], "tiiuae": 628, "coder": 628, "mistral": 628, "gpt": 628, "mpt": 628, "bloom": 628, "pythia": 628, "phi": 628, "add_chat_templ": 628, "llama_templ": 628, "inst": 628, "elif": [628, 634, 635, 646], "endgener": 628, "endif": 628, "endfor": 628, "parse_llama_text": 628, "findal": 628, "dotal": 628, "user_cont": 628, "assistant_cont": 628, "strip": [628, 635], "template_nam": 628, "inverse_pars": 628, "model_family_keyword": 628, "pytest": 628, "test_my_model_assistant_mask": 628, "my_model": 628, "your_template_her": 628, "assistant_token_count": 628, "test_my_model_template_equival": 628, "default_out": 628, "custom_out": 628, "whitespac": 628, "ncustom": 628, "test_my_model_inverse_pars": 628, "aspect": [628, 635, 641], "inject": 628, "ref_env_llm_step": 628, "annot": [628, 631, 646], "llm_output": 628, "attention_mask_al": 628, "assistant_mask_al": 628, "unpad": 628, "cohes": 628, "superior": 628, "horizont": 628, "handler": 628, "shared_async_engin": 628, "wrapper1": [628, 656], "wrapper2": [628, 656], "collector1": 628, "collector2": 628, "remotevllmwrapp": 628, "remotetransformerswrapp": 628, "remote_transform": 628, "text_input": 628, "ref_collector": 628, "budget": [628, 635], "weight_upd": 628, "make_polici": 628, "policy_version_track": 628, "mcptooltransform": 628, "step_data": 628, "s_": [628, 646], "gsm8krewardpars": 628, "ifevalscor": 628, "excel": 628, "bsz": 628, "num_token": 628, "predetermin": 628, "text_complet": 628, "sophist": [628, 631, 636, 650], "format_compon": 628, "structure_scor": 628, "think_scor": 628, "answer_scor": 628, "completion_bonu": 628, "potential_answ": 628, "compl": 628, "parseerror": 628, "regex": 628, "unnecessari": 628, "characterist": [628, 630, 634, 651], "ground": [629, 634, 651], "recycl": [629, 653], "noisier": 629, "Their": [629, 649, 650], "sd": [629, 656], "prob_modul": 629, "uncertainti": 629, "soften": 629, "backbon": [629, 637, 640, 648, 655], "make_actor": 629, "make_valu": 629, "shared_param": 629, "make_common": 629, "reusabl": [630, 634, 653], "swappabl": [630, 634], "trainabl": [630, 634, 641, 652], "smth": [630, 634], "plenti": [630, 638], "amort": [630, 635, 636], "told": [630, 636], "pseudo": [630, 642, 651], "buri": 630, "str_valu": 630, "nutshel": [630, 634], "barto": [630, 649, 650], "chapter": [630, 643], "value_net_loss": 630, "pow": [630, 634], "room": 630, "signifi": [630, 649, 650], "underperform": 630, "intric": [630, 640], "action_td": 630, "action0": 630, "f0": 630, "action1": 630, "f1": 630, "f2": 630, "f3": 630, "action0_log_prob": 630, "action1_log_prob": 630, "inferior": 630, "multivari": 630, "dirichlet": 630, "prev_log_prob": 630, "new_log_prob": 630, "log_weight": 630, "appreci": [630, 639], "multihead": 630, "believ": 631, "_pre_steps_log_hook": 631, "_pre_optim_hook": 631, "sub_batch": 631, "_post_loss_hook": 631, "_post_optim_hook": 631, "_post_optim_log": 631, "post_optim_log": 631, "_post_steps_hook": 631, "_post_steps_log_hook": 631, "post_steps_log": 631, "logginghook": 631, "logging_hook": 631, "save_dict": 631, "some_valu": 631, "torchsnapshot": 631, "ckpt_backend": 631, "filepath": 631, "save_train": 631, "sac_train": 631, "2000000": 631, "0003": 631, "walker2d": 631, "sac_walker2d": 631, "config_path": 631, "config_nam": 631, "version_bas": 631, "modern": 631, "tensordictreplaybufferconfig": 631, "multiasyncdatacollectorconfig": 631, "ppolossconfig": 631, "saclossconfig": 631, "adamconfig": 631, "adamwconfig": 631, "wandbloggerconfig": 631, "tensorboardloggerconfig": 631, "000": [633, 637, 654], "galleri": [633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "mem": [633, 654], "mb": [633, 654], "coding_ddpg": [633, 634, 654], "coding_dqn": [633, 635, 654], "coding_ppo": [633, 636, 654], "dqn_with_rnn": [633, 637, 654], "llm_browser": [633, 646, 654], "llm_wrapper": [633, 647, 654], "multi_task": [633, 648, 654], "multiagent_competitive_ddpg": [633, 649, 654], "multiagent_ppo": [633, 650, 654], "pretrained_model": [633, 652, 654], "rb_tutori": [633, 653, 654], "torchrl_demo": [633, 654, 655], "torchrl_env": [633, 654, 656], "author": [634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 649, 650, 651, 653, 656], "vincent": [634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 651, 653, 656], "moen": [634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 651, 653, 656], "assembl": 634, "transpar": [634, 637], "bash": 634, "is_fork": [634, 635, 636, 637, 649, 650, 652], "get_start_method": [634, 635, 636, 637, 649, 650, 652], "collector_devic": 634, "loss_dict": 634, "oblivi": [634, 636, 653], "elementari": 634, "didact": [634, 638], "dilut": 634, "pessimist": [634, 635, 636], "target_actor_network_param": 634, "actor_in_kei": 634, "actor_crit": 634, "compromis": 634, "hp": 634, "_value_estim": 634, "unknown": 634, "_loss_actor": 634, "td_copi": 634, "actor_network_param": [634, 649], "value_network_param": [634, 649], "_loss_valu": 634, "pred_val": 634, "target_value_network_param": 634, "glue": 634, "_forward": 634, "remaind": 634, "env_librari": 634, "env_task": 634, "env_arg": [634, 635], "torchr": 634, "rescal": 634, "presum": 634, "make_transformed_env": 634, "reward_sc": 634, "env_per_collector": 634, "transform_state_dict": 634, "make_t_env": 634, "cheat": 634, "10m": 634, "cautiou": 634, "thousand": [634, 637], "get_env_stat": 634, "proof_env": 634, "5000": [634, 638, 644], "recal": [634, 636, 646, 653], "ddpgmlpactor": 634, "ddpgmlpqnet": 634, "materi": 634, "ornsteinuhlenbeckprocessmodul": [634, 640], "make_ddpg_actor": 634, "q_net": 634, "tight": 634, "10_000": [634, 636], "traj_len": [634, 637], "make_record": 634, "recorder_obj": 634, "pick": [634, 635, 640, 646], "buffer_s": [634, 635, 637], "random_crop_len": 634, "prb": 634, "buffer_scratch_dir": [634, 635, 637, 642, 652], "dataflow": 634, "ceil_div": 634, "update_to_data": 634, "realiz": 634, "_must_": 634, "outdat": 634, "trick": [634, 635], "despit": 634, "optimizer_actor": 634, "optimizer_valu": 634, "total_collection_step": 634, "rewards_ev": 634, "collected_fram": 634, "numel": [634, 636, 638, 644, 649, 652, 653], "current_fram": [634, 649], "sampled_tensordict": 634, "gn1": 634, "clip_grad_norm_": [634, 636, 649, 650, 651], "gn2": 634, "gn": [634, 651], "td_record": 634, "rn": 634, "2f": 634, "mention": [634, 637, 653, 656], "matplotlib": [634, 636, 637, 638, 649, 650, 651, 653, 656], "pyplot": [634, 636, 637, 638, 649, 650, 651, 653, 656], "plt": [634, 636, 637, 638, 649, 650, 651, 653, 656], "legend": [634, 649], "xlabel": [634, 637, 650, 651], "ylabel": [634, 650], "tight_layout": 634, "takeawai": [634, 635, 638, 646], "distpatch": 634, "jupyt": [634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "ipynb": [634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "sphinx": [634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656], "road": 635, "highest": [635, 640], "prerequisit": [635, 637, 646], "lookup": 635, "cart": 635, "pole": 635, "un": 635, "actuat": 635, "frictionless": 635, "duelingcnndqnet": 635, "egreedymodul": [635, 637, 638, 640, 644], "is_notebook": 635, "shell": 635, "get_ipython": 635, "__class__": [635, 647], "zmqinteractiveshel": 635, "qtconsol": 635, "terminalinteractiveshel": 635, "ipython": [635, 650, 651], "nameerror": [635, 647, 649], "umbrella": 635, "misplac": 635, "misus": 635, "64x64": 635, "motion": [635, 651], "obs_norm_sd": 635, "mp_context": 635, "get_norm_stat": 635, "test_env": 635, "mathbb": 635, "rightarrow": 635, "make_model": 635, "dummy_env": 635, "init_bia": 635, "exploration_modul": [635, 637, 638, 640, 644], "eps_greedy_v": 635, "eps_greedy_val_env": 635, "actor_explor": 635, "get_replay_buff": 635, "n_optim": [635, 641, 642], "parametriz": 635, "get_collector": 635, "bunch": 635, "ubiquit": [635, 639], "get_loss_modul": 635, "target_updat": [635, 649], "995": 635, "hopefulli": 635, "variat": 635, "2e": [635, 651], "wd": 635, "upd": 635, "harder": [635, 655], "5_000": 635, "500000": 635, "005": [635, 649], "mandatori": [635, 636, 650, 651], "fairer": 635, "dqn_exp_": 635, "uuid1": [635, 656], "cumbersom": 635, "buffer_hook": 635, "aliv": 635, "total_reward": 635, "print_csv_files_in_fold": 635, "folder_path": 635, "csv_file": 635, "output_str": 635, "dirpath": 635, "endswith": 635, "qvaluenetwork": 635, "accuraci": 635, "fanci": [635, 642], "talk": 636, "six": 636, "invent": 636, "theta_k": 636, "pi_": 636, "exceed": 636, "indispens": 636, "analyz": 636, "lingua": 636, "franca": 636, "defaultdict": [636, 651], "max_grad_norm": [636, 649, 650], "sub_batch_s": 636, "entropy_ep": [636, 650], "inverteddoublependulum": 636, "transmit": 636, "stai": 636, "confid": [636, 649, 650], "ran": 636, "f_": 636, "mu_": 636, "difficulti": [636, 656], "d_ob": 636, "d_action": 636, "policy_modul": [636, 649, 650], "briefli": [636, 649, 650], "refil": [636, 650], "easiest": [636, 641, 649, 650], "mathemat": [636, 649, 650], "tradeoff": [636, 650], "advantage_modul": 636, "entropy_coef": [636, 650], "critic_coef": 636, "lr_schedul": [636, 651], "cosineannealinglr": [636, 651], "eval_str": 636, "tensordict_data": [636, 650], "data_view": [636, 650], "subdata": [636, 649, 650], "cum_reward_str": 636, "stepcount_str": 636, "param_group": [636, 649], "lr_str": 636, "eval_rollout": 636, "figsiz": [636, 651], "subplot": [636, 649, 651, 656], "titl": [636, 637, 638, 650, 651], "84x84": [637, 638], "accessori": 637, "stamp": 637, "n_cell": 637, "customiz": 637, "wouldn": 637, "qval": 637, "stoch_polici": 637, "opportun": [637, 649], "uniniti": 637, "again": [637, 638, 639, 640, 642, 650, 652, 653, 656], "strongli": 637, "sake": [637, 652, 653], "longest": 637, "strong": 638, "impress": 638, "arduino": 638, "raspberri": 638, "pi": [638, 649, 650, 651], "alon": 638, "examplifi": 638, "ship": 638, "stick": 638, "nearest": 638, "value_mlp": [638, 644], "init_rand_step": [638, 644], "total_count": [638, 644], "total_episod": [638, 644], "screen": [638, 649], "color": [638, 649], "unblock": 638, "policy_transform": 638, "fake_td": 638, "exported_polici": 638, "div": 638, "graph_modul": 638, "print_read": 638, "group0": 638, "group0_agent0_ob": 638, "collid": [638, 650], "group0_agent0": 638, "agent0_ob": 638, "digress": 638, "exported_stochastic_polici": 638, "trace": 638, "hidden0": 638, "hidden1": 638, "recurrent_polici": 638, "fake_ob": 638, "fake_hidden0": 638, "fake_hidden1": 638, "fake_is_init": 638, "exported_recurrent_polici": 638, "platform": [638, 655], "aoti": 638, "_inductor": 638, "aoti_compile_and_packag": 638, "aoti_load_packag": 638, "pt2": 638, "pkg_path": 638, "package_path": 638, "compiled_modul": 638, "onnxruntim": 638, "showcas": [638, 651], "tensorrt": 638, "android": 638, "aleinterfac": 638, "rom": 638, "loadrom": 638, "reset_gam": 638, "screen_ob": 638, "getscreenrgb": 638, "tick_param": 638, "bottom": 638, "labelleft": 638, "labelbottom": 638, "imshow": [638, 656], "dynamo_export": 638, "onnx_policy_export": 638, "onnx_file_path": 638, "ort_sess": 638, "inferencesess": 638, "cpuexecutionprovid": 638, "onnxruntime_input": 638, "get_input": 638, "onnx_polici": 638, "f811": 638, "onnxruntime_output": 638, "topic": [639, 640, 641], "straight": 639, "backtrack": 639, "reset_with_act": 639, "stepped_data": 639, "spatial": 639, "useless": 639, "policyless": 639, "examin": [639, 649], "tackl": 640, "delv": 640, "extractor": 640, "additivegaussianmodul": [640, 649], "exploration_polici": [640, 649], "2d": [640, 649, 650], "innov": [640, 641], "rollout_explor": 640, "sole": 641, "n_collect": 641, "get_next_batch": 641, "ddpg_loss": 641, "total_loss": 641, "prove": 641, "reliev": 641, "accustom": 642, "surprisingli": 642, "art": [642, 649, 650], "countless": 642, "yourself": [642, 649, 650], "everywher": 643, "log_scalar": 643, "my_scalar": 643, "excess": 643, "lesson": 644, "voluntarili": 644, "training_loop": 644, "video_record": 644, "arbitrarili": 644, "t1": 644, "conclud": [644, 652], "tutorials_python": 645, "tutorials_jupyt": 645, "playwright": 646, "autom": 646, "__future__": 646, "browsertransform": 646, "filterwarn": [646, 647], "browser_transform": 646, "rewardtransform": 646, "last_item": 646, "agnost": 646, "execute_tool_act": 646, "current_st": 646, "nllm": 646, "nenviron": 646, "button": 646, "css": 646, "btnk": 646, "extract_typ": 646, "ref_llm": 646, "suppress": 647, "vllm_use_v1": 647, "canada": 647, "vllm_wrapper": 647, "return_text": 647, "return_token": 647, "return_mask": 647, "data_histori": 647, "nload": 647, "transformers_token": 647, "transformers_wrapp": 647, "result_tf": 647, "data_text": 647, "vllm_text_wrapp": 647, "result_vllm_text": 647, "nvllm": 647, "transformers_text_wrapp": 647, "result_tf_text": 647, "vllm_logprobs_wrapp": 647, "result_vllm_lp": 647, "transformers_logprobs_wrapp": 647, "result_tf_lp": 647, "ntensorclass": 647, "analysi": 647, "ntext": 647, "__annotations__": 647, "ntoken": 647, "nlogprob": 647, "nmask": 647, "nerror": 647, "invalid_mod": 647, "nrl": 647, "env_stat": 647, "action_output": 647, "60": [647, 655], "env1_obs_kei": 648, "observation_stand": 648, "env2_obs_kei": 648, "observation_walk": 648, "tdreset1": 648, "tdreset2": 648, "policy_common": 648, "policy_stand": 648, "policy_walk": 648, "env1_mak": 648, "env2_mak": 648, "_single_task": 648, "td_rollout": 648, "matteo": [649, 650], "bettini": [649, 650], "benchmarl": [649, 650], "simple_tag": 649, "maddpg": [649, 650], "multiagentparticleenviron": 649, "mpe": 649, "centralis": [649, 650], "tie": [649, 650], "iddpg": [649, 650], "richard": 649, "andrew": 649, "mit": 649, "press": 649, "2018": 649, "mathbf": [649, 650], "decentralis": [649, 650], "literatur": [649, 650], "overcom": [649, 650], "stationari": [649, 650], "establish": 649, "gui": [649, 650], "is_sphinx": 649, "__sphinx_build__": 649, "n_iter": [649, 650, 651], "evad": 649, "iteration_when_stop_training_evad": 649, "memory_s": 649, "n_optimiser_step": 649, "train_batch_s": 649, "polyak_tau": 649, "chaser": 649, "red": 649, "circl": [649, 650], "touch": [649, 651], "penal": [649, 650], "obstacl": 649, "drag": [649, 650], "elast": [649, 650], "collis": [649, 650], "imped": 649, "n_chaser": 649, "n_evad": 649, "n_obstacl": 649, "use_vma": 649, "simple_tag_v3": 649, "num_good": 649, "num_adversari": 649, "num_obstacl": 649, "max_cycl": 649, "num_vmas_env": [649, 650], "num_good_ag": 649, "num_landmark": 649, "four": [649, 650, 651], "n_agents_in_that_group": 649, "stress": [649, 650], "paramount": [649, 650], "n_rollout_step": [649, 650], "evolut": [649, 650], "group_nam": 649, "n_agents_in_group": 649, "agents_exploration_polici": 649, "utilis": [649, 650], "n_obs_per_ag": [649, 650], "n_actions_per_ag": [649, 650], "share_parameters_polici": [649, 650], "policy_net": [649, 650], "_agent": 649, "grant": [649, 650], "converg": [649, 650], "share_parameters_crit": [649, 650], "obs_act": 649, "cat_modul": 649, "critic_modul": 649, "fantast": [649, 650], "reset_td": 649, "interfer": 649, "subject": [649, 651], "flatten_kei": 649, "process_batch": 649, "group_shap": 649, "get_item_shap": [649, 650], "nested_done_kei": 649, "nested_terminated_kei": 649, "desc": [649, 650], "episode_reward_mean_": 649, "episode_reward_mean_map": 649, "train_group_map": 649, "group_batch": 649, "_group": 649, "loss_nam": 649, "episode_reward_mean": [649, 650], "fig": [649, 653], "set_ylabel": 649, "axvlin": 649, "orang": 649, "set_xlabel": 649, "video_logg": 649, "vmas_log": 649, "env_with_rend": 649, "vmas_rend": 649, "print_log_dir": 649, "profici": [649, 650], "lidar": 650, "sensor": 650, "mappo": 650, "ippo": 650, "analys": 650, "visualis": 650, "vmas_devic": 650, "6_000": 650, "minibatch_s": 650, "generalis": 650, "simd": 650, "warp": 650, "todai": 650, "surround": 650, "dot": [650, 651], "scenario_nam": 650, "critic_net": 650, "minibatch": 650, "episode_reward_mean_list": 650, "critic_network_param": 650, "target_critic_network_param": 650, "xvfb": 650, "pyvirtualdisplai": 650, "1400": 650, "900": 650, "pil": 650, "rendering_callback": 650, "fromarrai": 650, "gif": 650, "save_al": 650, "append_imag": 650, "freeli": 651, "broader": 651, "wider": 651, "acquaint": 651, "avenu": 651, "_apply_to_composit": 651, "default_x": 651, "default_i": 651, "upward": 651, "angular": 651, "sin": 651, "rad": 651, "angl": 651, "new_th": 651, "new_thdot": 651, "g_forc": 651, "angle_norm": 651, "albeit": 651, "high_th": 651, "high_thdot": 651, "low_th": 651, "low_thdot": 651, "trivial": 651, "irrelev": 651, "_make_spec": 651, "td_param": 651, "render_fp": 651, "random_": 651, "_make_step": 651, "staticmethod": 651, "skeleton": 651, "sine": 651, "cosin": 651, "sintransform": 651, "costransform": 651, "t_sin": 651, "t_co": 651, "cat_transform": 651, "simple_rollout": 651, "unexplor": 651, "20_000": 651, "init_td": 651, "traj_return": 651, "last_reward": 651, "is_ipython": 651, "inlin": 651, "get_backend": 651, "ion": 651, "gcf": 651, "clear_output": 651, "env_transform": [652, 656], "wiser": 652, "batteri": 653, "gc": 653, "buffer_list": 653, "lowest": 653, "buffer_lazytensor": 653, "tempdir": 653, "buffer_lazymemmap": 653, "fullest": 653, "mydata": 653, "buffer_lazi": 653, "_i": 653, "artifici": 653, "hamper": 653, "reappear": 653, "unfold": 653, "problemat": 653, "4th": 653, "prioritizedslicesampl": 653, "tensordictmaxvaluewrit": 653, "demo": 655, "icml": 655, "vmoen": 655, "fb": 655, "invest": 655, "media": 655, "predominantli": 655, "data2": 655, "sub_key1": 655, "scturctur": 655, "data_stack": 655, "data_sampl": 655, "_sampler": 655, "_sum_tre": 655, "modulenotfounderror": 655, "backbone_modul": 655, "params_expand": 655, "exec_sequ": 655, "tensordict_exp": 655, "base_modul": 655, "tensordicts_prealloc": 655, "tensordicts_stack": 655, "tensordict_rollout": [655, 656], "automatical": 655, "particularili": 655, "concatmodul": 655, "loss_td": 655, "contributor": 655, "curiou": 655, "nascent": 655, "unsupervis": 656, "_build_env": 656, "deserv": 656, "__episode__": 656, "__trajectory__": 656, "void": 656, "reproduct": 656, "tensordict_tprim": 656, "obviou": 656, "truth": 656, "env_transformed_bi": 656, "stanc": 656, "transformeddistribut": 656, "base_dist": 656, "concat": 656, "mofidi": 656, "transformedenviron": 656, "moderet": 656, "computation": 656, "incom": 656, "amongst": 656, "has_cuda": 656, "convention": 656, "markovian": 656, "bar_": 656, "get_someth": 656, "aargh": 656, "is_clos": 656, "foo_list": 656, "121": 656, "evolv": 656, "steadi": 656, "approx": 656, "absor": 656, "_extra_st": 656}, "objects": {"torchrl": [[13, 0, 1, "", "auto_unwrap_transformed_env"], [297, 0, 1, "", "implement_for"], [462, 0, 1, "", "set_auto_unwrap_transformed_env"]], "torchrl.collectors": [[14, 0, 1, "", "DataCollectorBase"], [15, 0, 1, "", "MultiProcessedWeightUpdater"], [16, 0, 1, "", "MultiSyncDataCollector"], [17, 0, 1, "", "MultiaSyncDataCollector"], [18, 0, 1, "", "RayWeightUpdater"], [19, 0, 1, "", "SyncDataCollector"], [20, 0, 1, "", "VanillaWeightUpdater"], [21, 0, 1, "", "WeightUpdaterBase"], [22, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[14, 1, 1, "", "async_shutdown"], [14, 1, 1, "", "init_updater"], [14, 1, 1, "", "pause"], [14, 1, 1, "", "start"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiProcessedWeightUpdater": [[15, 1, 1, "", "all_worker_ids"], [15, 2, 1, "", "collector"], [15, 2, 1, "", "collectors"], [15, 1, 1, "", "from_policy"], [15, 1, 1, "", "increment_version"], [15, 1, 1, "", "init"], [15, 2, 1, "", "post_hooks"], [15, 1, 1, "", "push_weights"], [15, 1, 1, "", "register_collector"], [15, 1, 1, "", "register_post_hook"]], "torchrl.collectors.MultiSyncDataCollector": [[16, 1, 1, "", "async_shutdown"], [16, 1, 1, "", "get_policy_version"], [16, 1, 1, "", "getattr_env"], [16, 1, 1, "", "getattr_policy"], [16, 1, 1, "", "getattr_rb"], [16, 1, 1, "", "increment_version"], [16, 1, 1, "", "init_updater"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "pause"], [16, 2, 1, "", "policy_version"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "start"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[17, 1, 1, "", "async_shutdown"], [17, 1, 1, "", "get_policy_version"], [17, 1, 1, "", "getattr_env"], [17, 1, 1, "", "getattr_policy"], [17, 1, 1, "", "getattr_rb"], [17, 1, 1, "", "increment_version"], [17, 1, 1, "", "init_updater"], [17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "pause"], [17, 2, 1, "", "policy_version"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "start"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.RayWeightUpdater": [[18, 1, 1, "", "_get_server_weights"], [18, 1, 1, "", "_maybe_map_weights"], [18, 1, 1, "", "_skip_update"], [18, 1, 1, "", "_sync_weights_with_worker"], [18, 1, 1, "id0", "all_worker_ids"], [18, 2, 1, "", "collector"], [18, 2, 1, "", "collectors"], [18, 1, 1, "", "from_policy"], [18, 1, 1, "", "increment_version"], [18, 1, 1, "", "init"], [18, 2, 1, "", "post_hooks"], [18, 1, 1, "", "push_weights"], [18, 1, 1, "", "register_collector"], [18, 1, 1, "", "register_post_hook"]], "torchrl.collectors.SyncDataCollector": [[19, 1, 1, "", "async_shutdown"], [19, 1, 1, "", "get_policy_version"], [19, 1, 1, "", "getattr_env"], [19, 1, 1, "", "getattr_policy"], [19, 1, 1, "", "getattr_rb"], [19, 1, 1, "", "increment_version"], [19, 1, 1, "", "init_updater"], [19, 1, 1, "", "iterator"], [19, 1, 1, "", "load_state_dict"], [19, 1, 1, "", "pause"], [19, 2, 1, "", "policy_version"], [19, 1, 1, "", "reset"], [19, 1, 1, "", "rollout"], [19, 1, 1, "", "set_seed"], [19, 1, 1, "", "shutdown"], [19, 1, 1, "", "start"], [19, 1, 1, "", "state_dict"], [19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.VanillaWeightUpdater": [[20, 1, 1, "", "all_worker_ids"], [20, 2, 1, "", "collector"], [20, 2, 1, "", "collectors"], [20, 1, 1, "", "from_policy"], [20, 1, 1, "", "increment_version"], [20, 1, 1, "", "init"], [20, 2, 1, "", "post_hooks"], [20, 1, 1, "", "push_weights"], [20, 1, 1, "", "register_collector"], [20, 1, 1, "", "register_post_hook"]], "torchrl.collectors.WeightUpdaterBase": [[21, 1, 1, "", "all_worker_ids"], [21, 2, 1, "", "collector"], [21, 2, 1, "", "collectors"], [21, 1, 1, "id0", "from_policy"], [21, 1, 1, "", "increment_version"], [21, 1, 1, "", "init"], [21, 2, 1, "", "post_hooks"], [21, 1, 1, "id1", "push_weights"], [21, 1, 1, "id2", "register_collector"], [21, 1, 1, "", "register_post_hook"]], "torchrl.collectors.aSyncDataCollector": [[22, 1, 1, "", "async_shutdown"], [22, 1, 1, "", "get_policy_version"], [22, 1, 1, "", "getattr_env"], [22, 1, 1, "", "getattr_policy"], [22, 1, 1, "", "getattr_rb"], [22, 1, 1, "", "increment_version"], [22, 1, 1, "", "init_updater"], [22, 1, 1, "", "load_state_dict"], [22, 1, 1, "", "pause"], [22, 2, 1, "", "policy_version"], [22, 1, 1, "", "reset"], [22, 1, 1, "", "set_seed"], [22, 1, 1, "", "shutdown"], [22, 1, 1, "", "start"], [22, 1, 1, "", "state_dict"], [22, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[23, 0, 1, "", "DistributedDataCollector"], [24, 0, 1, "", "DistributedSyncDataCollector"], [25, 0, 1, "", "DistributedWeightUpdater"], [26, 0, 1, "", "RPCDataCollector"], [27, 0, 1, "", "RPCWeightUpdater"], [28, 0, 1, "", "RayCollector"], [29, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[23, 1, 1, "", "async_shutdown"], [23, 1, 1, "", "init_updater"], [23, 1, 1, "", "pause"], [23, 1, 1, "", "start"], [23, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[24, 1, 1, "", "async_shutdown"], [24, 1, 1, "", "init_updater"], [24, 1, 1, "", "pause"], [24, 1, 1, "", "start"], [24, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedWeightUpdater": [[25, 1, 1, "", "_get_server_weights"], [25, 1, 1, "", "_maybe_map_weights"], [25, 1, 1, "", "_sync_weights_with_worker"], [25, 1, 1, "id0", "all_worker_ids"], [25, 2, 1, "", "collector"], [25, 2, 1, "", "collectors"], [25, 1, 1, "", "from_policy"], [25, 1, 1, "", "increment_version"], [25, 1, 1, "", "init"], [25, 2, 1, "", "post_hooks"], [25, 1, 1, "", "push_weights"], [25, 1, 1, "", "register_collector"], [25, 1, 1, "", "register_post_hook"], [25, 1, 1, "", "update_weights"]], "torchrl.collectors.distributed.RPCDataCollector": [[26, 1, 1, "", "async_shutdown"], [26, 1, 1, "", "init_updater"], [26, 1, 1, "", "pause"], [26, 1, 1, "", "start"], [26, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCWeightUpdater": [[27, 1, 1, "", "_get_server_weights"], [27, 1, 1, "", "_maybe_map_weights"], [27, 1, 1, "", "_sync_weights_with_worker"], [27, 1, 1, "id0", "all_worker_ids"], [27, 2, 1, "", "collector"], [27, 2, 1, "", "collectors"], [27, 1, 1, "", "from_policy"], [27, 1, 1, "", "increment_version"], [27, 1, 1, "", "init"], [27, 2, 1, "", "post_hooks"], [27, 1, 1, "", "push_weights"], [27, 1, 1, "", "register_collector"], [27, 1, 1, "", "register_post_hook"], [27, 1, 1, "", "update_weights"]], "torchrl.collectors.distributed.RayCollector": [[28, 1, 1, "", "add_collectors"], [28, 1, 1, "", "async_shutdown"], [28, 1, 1, "", "init_updater"], [28, 1, 1, "", "load_state_dict"], [28, 1, 1, "", "local_policy"], [28, 1, 1, "", "pause"], [28, 2, 1, "", "remote_collectors"], [28, 1, 1, "", "set_seed"], [28, 1, 1, "", "shutdown"], [28, 1, 1, "", "start"], [28, 1, 1, "", "state_dict"], [28, 1, 1, "", "stop_remote_collectors"], [28, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.llm": [[30, 0, 1, "", "LLMCollector"], [31, 0, 1, "", "RayLLMCollector"], [32, 0, 1, "", "vLLMUpdater"], [33, 0, 1, "", "vLLMUpdaterV2"]], "torchrl.collectors.llm.LLMCollector": [[30, 1, 1, "", "as_remote"], [30, 1, 1, "", "async_shutdown"], [30, 2, 1, "", "dialog_turns_per_batch"], [30, 1, 1, "", "get_policy_model"], [30, 1, 1, "", "get_policy_version"], [30, 1, 1, "", "getattr_env"], [30, 1, 1, "", "getattr_policy"], [30, 1, 1, "", "getattr_rb"], [30, 1, 1, "", "increment_version"], [30, 1, 1, "", "init_updater"], [30, 1, 1, "", "is_initialized"], [30, 1, 1, "", "iterator"], [30, 1, 1, "", "load_state_dict"], [30, 1, 1, "", "pause"], [30, 2, 1, "", "policy_version"], [30, 1, 1, "", "reset"], [30, 2, 1, "", "rollout"], [30, 1, 1, "", "set_seed"], [30, 1, 1, "", "shutdown"], [30, 1, 1, "", "start"], [30, 1, 1, "", "state_dict"], [30, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.llm.RayLLMCollector": [[31, 1, 1, "", "as_remote"], [31, 1, 1, "", "async_shutdown"], [31, 2, 1, "", "dialog_turns_per_batch"], [31, 1, 1, "", "get_policy_model"], [31, 1, 1, "", "get_policy_version"], [31, 1, 1, "", "getattr_env"], [31, 1, 1, "", "getattr_policy"], [31, 1, 1, "", "getattr_rb"], [31, 1, 1, "", "increment_version"], [31, 1, 1, "", "init_updater"], [31, 1, 1, "", "is_initialized"], [31, 1, 1, "", "iterator"], [31, 1, 1, "", "load_state_dict"], [31, 1, 1, "", "next"], [31, 1, 1, "", "pause"], [31, 2, 1, "", "policy_version"], [31, 1, 1, "", "reset"], [31, 2, 1, "", "rollout"], [31, 1, 1, "", "set_seed"], [31, 1, 1, "", "shutdown"], [31, 1, 1, "", "start"], [31, 1, 1, "", "state_dict"], [31, 2, 1, "", "total_dialog_turns"], [31, 1, 1, "", "update_policy_weights_"], [31, 2, 1, "", "weight_updater"]], "torchrl.collectors.llm.vLLMUpdater": [[32, 1, 1, "", "_get_server_weights"], [32, 1, 1, "", "_maybe_map_weights"], [32, 1, 1, "", "_sync_weights_with_worker"], [32, 1, 1, "id0", "all_worker_ids"], [32, 2, 1, "", "collector"], [32, 2, 1, "", "collectors"], [32, 1, 1, "", "from_policy"], [32, 1, 1, "", "get_model_metadata"], [32, 1, 1, "", "increment_version"], [32, 1, 1, "id1", "init"], [32, 2, 1, "", "post_hooks"], [32, 1, 1, "", "push_weights"], [32, 1, 1, "", "register_collector"], [32, 1, 1, "", "register_post_hook"]], "torchrl.collectors.llm.vLLMUpdaterV2": [[33, 1, 1, "", "all_worker_ids"], [33, 2, 1, "", "collector"], [33, 2, 1, "", "collectors"], [33, 1, 1, "", "from_policy"], [33, 1, 1, "", "get_model_metadata"], [33, 1, 1, "", "get_tp_size"], [33, 1, 1, "", "increment_version"], [33, 1, 1, "", "init"], [33, 2, 1, "", "post_hooks"], [33, 1, 1, "", "push_weights"], [33, 1, 1, "", "push_weights_from_transformers"], [33, 1, 1, "", "push_weights_from_transformers_optimized"], [33, 1, 1, "", "register_collector"], [33, 1, 1, "", "register_post_hook"]], "torchrl.collectors.utils": [[34, 3, 1, "", "split_trajectories"]], "torchrl.data": [[35, 0, 1, "", "AdaptiveKLController"], [36, 0, 1, "", "Binary"], [37, 0, 1, "", "BinaryDiscreteTensorSpec"], [38, 0, 1, "", "BinaryToDecimal"], [39, 0, 1, "", "Bounded"], [40, 0, 1, "", "BoundedTensorSpec"], [41, 0, 1, "", "Categorical"], [42, 0, 1, "", "Composite"], [43, 0, 1, "", "CompositeSpec"], [44, 0, 1, "", "ConstantKLController"], [45, 0, 1, "", "DensifyReward"], [46, 0, 1, "", "DiscreteTensorSpec"], [47, 0, 1, "", "Flat2TED"], [48, 0, 1, "", "H5Combine"], [49, 0, 1, "", "H5Split"], [50, 0, 1, "", "HashToInt"], [51, 0, 1, "", "LazyStackedCompositeSpec"], [52, 0, 1, "", "LazyStackedTensorSpec"], [53, 0, 1, "", "MCTSForest"], [54, 0, 1, "", "MultiCategorical"], [55, 0, 1, "", "MultiDiscreteTensorSpec"], [56, 0, 1, "", "MultiOneHot"], [57, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [58, 0, 1, "", "MultiStep"], [59, 0, 1, "", "Nested2TED"], [60, 0, 1, "", "NonTensor"], [61, 0, 1, "", "NonTensorSpec"], [62, 0, 1, "", "OneHot"], [63, 0, 1, "", "OneHotDiscreteTensorSpec"], [64, 0, 1, "", "PairwiseDataset"], [65, 0, 1, "", "PrioritizedReplayBuffer"], [66, 0, 1, "", "PromptData"], [67, 0, 1, "", "PromptTensorDictTokenizer"], [68, 0, 1, "", "QueryModule"], [69, 0, 1, "", "RandomProjectionHash"], [70, 0, 1, "", "RayReplayBuffer"], [71, 0, 1, "", "RemoteTensorDictReplayBuffer"], [72, 0, 1, "", "ReplayBuffer"], [73, 0, 1, "", "RewardData"], [74, 0, 1, "", "RolloutFromModel"], [75, 0, 1, "", "SipHash"], [76, 0, 1, "", "Stacked"], [77, 0, 1, "", "StackedComposite"], [78, 0, 1, "", "TED2Flat"], [79, 0, 1, "", "TED2Nested"], [80, 0, 1, "", "TensorDictMap"], [81, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [82, 0, 1, "", "TensorDictReplayBuffer"], [83, 0, 1, "", "TensorDictTokenizer"], [84, 0, 1, "", "TensorMap"], [85, 0, 1, "", "TensorSpec"], [86, 0, 1, "", "TokenizedDatasetLoader"], [87, 0, 1, "", "Tree"], [88, 0, 1, "", "Unbounded"], [89, 0, 1, "", "UnboundedContinuous"], [90, 0, 1, "", "UnboundedContinuousTensorSpec"], [91, 0, 1, "", "UnboundedDiscrete"], [92, 0, 1, "", "UnboundedDiscreteTensorSpec"], [93, 0, 1, "", "check_no_exclusive_keys"], [94, 0, 1, "", "consolidate_spec"], [95, 0, 1, "", "contains_lazy_spec"], [96, 0, 1, "", "create_infinite_iterator"], [106, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[35, 1, 1, "", "update"]], "torchrl.data.Binary": [[36, 1, 1, "", "assert_is_in"], [36, 1, 1, "", "cardinality"], [36, 1, 1, "", "clear_device_"], [36, 1, 1, "", "clone"], [36, 1, 1, "", "contains"], [36, 1, 1, "", "cpu"], [36, 1, 1, "", "cuda"], [36, 4, 1, "", "device"], [36, 1, 1, "", "encode"], [36, 1, 1, "", "enumerate"], [36, 1, 1, "", "erase_memoize_cache"], [36, 1, 1, "", "expand"], [36, 1, 1, "", "flatten"], [36, 1, 1, "", "implements_for_spec"], [36, 1, 1, "", "index"], [36, 1, 1, "", "is_in"], [36, 1, 1, "", "make_neg_dim"], [36, 1, 1, "", "memoize_encode"], [36, 2, 1, "", "ndim"], [36, 1, 1, "", "ndimension"], [36, 1, 1, "", "one"], [36, 1, 1, "", "ones"], [36, 1, 1, "", "project"], [36, 1, 1, "", "rand"], [36, 1, 1, "", "reshape"], [36, 1, 1, "", "sample"], [36, 1, 1, "", "set_provisional_n"], [36, 1, 1, "", "squeeze"], [36, 1, 1, "", "to"], [36, 1, 1, "", "to_categorical"], [36, 1, 1, "", "to_categorical_spec"], [36, 1, 1, "", "to_numpy"], [36, 1, 1, "", "to_one_hot"], [36, 1, 1, "", "to_one_hot_spec"], [36, 1, 1, "", "type_check"], [36, 1, 1, "", "unflatten"], [36, 1, 1, "", "unsqueeze"], [36, 1, 1, "", "update_mask"], [36, 1, 1, "", "view"], [36, 1, 1, "", "zero"], [36, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[37, 1, 1, "", "assert_is_in"], [37, 1, 1, "", "cardinality"], [37, 1, 1, "", "clear_device_"], [37, 1, 1, "", "clone"], [37, 1, 1, "", "contains"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 4, 1, "", "device"], [37, 1, 1, "", "encode"], [37, 1, 1, "", "enumerate"], [37, 1, 1, "", "erase_memoize_cache"], [37, 1, 1, "", "expand"], [37, 1, 1, "", "flatten"], [37, 1, 1, "", "implements_for_spec"], [37, 1, 1, "", "index"], [37, 1, 1, "", "is_in"], [37, 1, 1, "", "make_neg_dim"], [37, 1, 1, "", "memoize_encode"], [37, 2, 1, "", "ndim"], [37, 1, 1, "", "ndimension"], [37, 1, 1, "", "one"], [37, 1, 1, "", "ones"], [37, 1, 1, "", "project"], [37, 1, 1, "", "rand"], [37, 1, 1, "", "reshape"], [37, 1, 1, "", "sample"], [37, 1, 1, "", "set_provisional_n"], [37, 1, 1, "", "squeeze"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_categorical"], [37, 1, 1, "", "to_categorical_spec"], [37, 1, 1, "", "to_numpy"], [37, 1, 1, "", "to_one_hot"], [37, 1, 1, "", "to_one_hot_spec"], [37, 1, 1, "", "type_check"], [37, 1, 1, "", "unflatten"], [37, 1, 1, "", "unsqueeze"], [37, 1, 1, "", "update_mask"], [37, 1, 1, "", "view"], [37, 1, 1, "", "zero"], [37, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[38, 1, 1, "", "add_module"], [38, 1, 1, "", "apply"], [38, 1, 1, "", "bfloat16"], [38, 1, 1, "", "buffers"], [38, 1, 1, "", "children"], [38, 1, 1, "", "compile"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 1, 1, "", "double"], [38, 1, 1, "", "eval"], [38, 1, 1, "", "extra_repr"], [38, 1, 1, "", "float"], [38, 1, 1, "", "forward"], [38, 1, 1, "", "get_buffer"], [38, 1, 1, "", "get_extra_state"], [38, 1, 1, "", "get_parameter"], [38, 1, 1, "", "get_submodule"], [38, 1, 1, "", "half"], [38, 1, 1, "", "ipu"], [38, 1, 1, "", "load_state_dict"], [38, 1, 1, "", "modules"], [38, 1, 1, "", "mtia"], [38, 1, 1, "", "named_buffers"], [38, 1, 1, "", "named_children"], [38, 1, 1, "", "named_modules"], [38, 1, 1, "", "named_parameters"], [38, 1, 1, "", "parameters"], [38, 1, 1, "", "register_backward_hook"], [38, 1, 1, "", "register_buffer"], [38, 1, 1, "", "register_forward_hook"], [38, 1, 1, "", "register_forward_pre_hook"], [38, 1, 1, "", "register_full_backward_hook"], [38, 1, 1, "", "register_full_backward_pre_hook"], [38, 1, 1, "", "register_load_state_dict_post_hook"], [38, 1, 1, "", "register_load_state_dict_pre_hook"], [38, 1, 1, "", "register_module"], [38, 1, 1, "", "register_parameter"], [38, 1, 1, "", "register_state_dict_post_hook"], [38, 1, 1, "", "register_state_dict_pre_hook"], [38, 1, 1, "", "requires_grad_"], [38, 1, 1, "", "set_extra_state"], [38, 1, 1, "", "set_submodule"], [38, 1, 1, "", "share_memory"], [38, 1, 1, "", "state_dict"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_empty"], [38, 1, 1, "", "train"], [38, 1, 1, "", "type"], [38, 1, 1, "", "xpu"], [38, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "cardinality"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "clone"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 2, 1, "", "device"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "enumerate"], [39, 1, 1, "", "erase_memoize_cache"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "make_neg_dim"], [39, 1, 1, "", "memoize_encode"], [39, 2, 1, "", "ndim"], [39, 1, 1, "", "ndimension"], [39, 1, 1, "", "one"], [39, 1, 1, "", "ones"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 1, 1, "", "sample"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "unsqueeze"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"], [39, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "cardinality"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 2, 1, "", "device"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "enumerate"], [40, 1, 1, "", "erase_memoize_cache"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "make_neg_dim"], [40, 1, 1, "", "memoize_encode"], [40, 2, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[41, 1, 1, "", "assert_is_in"], [41, 1, 1, "", "cardinality"], [41, 1, 1, "", "clear_device_"], [41, 1, 1, "", "clone"], [41, 1, 1, "", "contains"], [41, 1, 1, "", "cpu"], [41, 1, 1, "", "cuda"], [41, 4, 1, "", "device"], [41, 1, 1, "", "encode"], [41, 1, 1, "", "enumerate"], [41, 1, 1, "", "erase_memoize_cache"], [41, 1, 1, "", "expand"], [41, 1, 1, "", "flatten"], [41, 1, 1, "", "implements_for_spec"], [41, 1, 1, "", "index"], [41, 1, 1, "", "is_in"], [41, 1, 1, "", "make_neg_dim"], [41, 1, 1, "", "memoize_encode"], [41, 2, 1, "", "ndim"], [41, 1, 1, "", "ndimension"], [41, 1, 1, "", "one"], [41, 1, 1, "", "ones"], [41, 1, 1, "", "project"], [41, 1, 1, "", "rand"], [41, 1, 1, "", "reshape"], [41, 1, 1, "", "sample"], [41, 1, 1, "", "set_provisional_n"], [41, 1, 1, "", "squeeze"], [41, 1, 1, "", "to"], [41, 1, 1, "", "to_categorical"], [41, 1, 1, "", "to_categorical_spec"], [41, 1, 1, "", "to_numpy"], [41, 1, 1, "", "to_one_hot"], [41, 1, 1, "", "to_one_hot_spec"], [41, 1, 1, "", "type_check"], [41, 1, 1, "", "unflatten"], [41, 1, 1, "", "unsqueeze"], [41, 1, 1, "", "update_mask"], [41, 1, 1, "", "view"], [41, 1, 1, "", "zero"], [41, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[42, 1, 1, "", "assert_is_in"], [42, 1, 1, "", "cardinality"], [42, 1, 1, "", "clear_device_"], [42, 1, 1, "", "clone"], [42, 1, 1, "", "contains"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 2, 1, "", "device"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "encode"], [42, 1, 1, "", "enumerate"], [42, 1, 1, "", "erase_memoize_cache"], [42, 1, 1, "", "expand"], [42, 1, 1, "", "flatten"], [42, 1, 1, "", "get"], [42, 1, 1, "", "implements_for_spec"], [42, 1, 1, "", "index"], [42, 1, 1, "", "is_empty"], [42, 1, 1, "", "is_in"], [42, 1, 1, "", "items"], [42, 1, 1, "", "keys"], [42, 1, 1, "", "lock_"], [42, 1, 1, "", "make_neg_dim"], [42, 1, 1, "", "memoize_encode"], [42, 2, 1, "", "names"], [42, 2, 1, "", "ndim"], [42, 1, 1, "", "ndimension"], [42, 1, 1, "", "one"], [42, 1, 1, "", "ones"], [42, 1, 1, "", "pop"], [42, 1, 1, "", "project"], [42, 1, 1, "", "rand"], [42, 1, 1, "", "refine_names"], [42, 1, 1, "", "reshape"], [42, 1, 1, "", "sample"], [42, 1, 1, "", "separates"], [42, 1, 1, "", "set"], [42, 1, 1, "", "squeeze"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_numpy"], [42, 1, 1, "", "type_check"], [42, 1, 1, "", "unflatten"], [42, 1, 1, "", "unlock_"], [42, 1, 1, "", "unsqueeze"], [42, 1, 1, "", "values"], [42, 1, 1, "", "view"], [42, 1, 1, "", "zero"], [42, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "cardinality"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "clone"], [43, 1, 1, "", "contains"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 2, 1, "", "device"], [43, 1, 1, "", "empty"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "enumerate"], [43, 1, 1, "", "erase_memoize_cache"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "flatten"], [43, 1, 1, "", "get"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_empty"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "items"], [43, 1, 1, "", "keys"], [43, 1, 1, "", "lock_"], [43, 1, 1, "", "make_neg_dim"], [43, 1, 1, "", "memoize_encode"], [43, 2, 1, "", "names"], [43, 2, 1, "", "ndim"], [43, 1, 1, "", "ndimension"], [43, 1, 1, "", "one"], [43, 1, 1, "", "ones"], [43, 1, 1, "", "pop"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "refine_names"], [43, 1, 1, "", "reshape"], [43, 1, 1, "", "sample"], [43, 1, 1, "", "separates"], [43, 1, 1, "", "set"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "unflatten"], [43, 1, 1, "", "unlock_"], [43, 1, 1, "", "unsqueeze"], [43, 1, 1, "", "values"], [43, 1, 1, "", "view"], [43, 1, 1, "", "zero"], [43, 1, 1, "", "zeros"]], "torchrl.data.DensifyReward": [[45, 1, 1, "", "add_module"], [45, 1, 1, "", "apply"], [45, 1, 1, "", "bfloat16"], [45, 1, 1, "", "buffers"], [45, 1, 1, "", "children"], [45, 1, 1, "", "compile"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 1, 1, "", "double"], [45, 1, 1, "", "eval"], [45, 1, 1, "", "extra_repr"], [45, 1, 1, "", "float"], [45, 1, 1, "", "forward"], [45, 1, 1, "", "get_buffer"], [45, 1, 1, "", "get_extra_state"], [45, 1, 1, "", "get_parameter"], [45, 1, 1, "", "get_submodule"], [45, 1, 1, "", "half"], [45, 1, 1, "", "ipu"], [45, 1, 1, "", "is_tdmodule_compatible"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "modules"], [45, 1, 1, "", "mtia"], [45, 1, 1, "", "named_buffers"], [45, 1, 1, "", "named_children"], [45, 1, 1, "", "named_modules"], [45, 1, 1, "", "named_parameters"], [45, 1, 1, "", "parameters"], [45, 1, 1, "", "register_backward_hook"], [45, 1, 1, "", "register_buffer"], [45, 1, 1, "", "register_forward_hook"], [45, 1, 1, "", "register_forward_pre_hook"], [45, 1, 1, "", "register_full_backward_hook"], [45, 1, 1, "", "register_full_backward_pre_hook"], [45, 1, 1, "", "register_load_state_dict_post_hook"], [45, 1, 1, "", "register_load_state_dict_pre_hook"], [45, 1, 1, "", "register_module"], [45, 1, 1, "", "register_parameter"], [45, 1, 1, "", "register_state_dict_post_hook"], [45, 1, 1, "", "register_state_dict_pre_hook"], [45, 1, 1, "", "requires_grad_"], [45, 1, 1, "", "reset_out_keys"], [45, 1, 1, "", "reset_parameters_recursive"], [45, 1, 1, "", "select_out_keys"], [45, 1, 1, "", "set_extra_state"], [45, 1, 1, "", "set_submodule"], [45, 1, 1, "", "share_memory"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_empty"], [45, 1, 1, "", "train"], [45, 1, 1, "", "type"], [45, 1, 1, "", "xpu"], [45, 1, 1, "", "zero_grad"]], "torchrl.data.DiscreteTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "cardinality"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "clone"], [46, 1, 1, "", "contains"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 4, 1, "", "device"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "enumerate"], [46, 1, 1, "", "erase_memoize_cache"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "flatten"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "make_neg_dim"], [46, 1, 1, "", "memoize_encode"], [46, 2, 1, "", "ndim"], [46, 1, 1, "", "ndimension"], [46, 1, 1, "", "one"], [46, 1, 1, "", "ones"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "reshape"], [46, 1, 1, "", "sample"], [46, 1, 1, "", "set_provisional_n"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_categorical"], [46, 1, 1, "", "to_categorical_spec"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "to_one_hot"], [46, 1, 1, "", "to_one_hot_spec"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "unflatten"], [46, 1, 1, "", "unsqueeze"], [46, 1, 1, "", "update_mask"], [46, 1, 1, "", "view"], [46, 1, 1, "", "zero"], [46, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[50, 1, 1, "", "add_module"], [50, 1, 1, "", "apply"], [50, 1, 1, "", "bfloat16"], [50, 1, 1, "", "buffers"], [50, 1, 1, "", "children"], [50, 1, 1, "", "compile"], [50, 1, 1, "", "cpu"], [50, 1, 1, "", "cuda"], [50, 1, 1, "", "double"], [50, 1, 1, "", "eval"], [50, 1, 1, "", "extra_repr"], [50, 1, 1, "", "float"], [50, 1, 1, "", "forward"], [50, 1, 1, "", "get_buffer"], [50, 1, 1, "", "get_extra_state"], [50, 1, 1, "", "get_parameter"], [50, 1, 1, "", "get_submodule"], [50, 1, 1, "", "half"], [50, 1, 1, "", "ipu"], [50, 1, 1, "", "load_state_dict"], [50, 1, 1, "", "modules"], [50, 1, 1, "", "mtia"], [50, 1, 1, "", "named_buffers"], [50, 1, 1, "", "named_children"], [50, 1, 1, "", "named_modules"], [50, 1, 1, "", "named_parameters"], [50, 1, 1, "", "parameters"], [50, 1, 1, "", "register_backward_hook"], [50, 1, 1, "", "register_buffer"], [50, 1, 1, "", "register_forward_hook"], [50, 1, 1, "", "register_forward_pre_hook"], [50, 1, 1, "", "register_full_backward_hook"], [50, 1, 1, "", "register_full_backward_pre_hook"], [50, 1, 1, "", "register_load_state_dict_post_hook"], [50, 1, 1, "", "register_load_state_dict_pre_hook"], [50, 1, 1, "", "register_module"], [50, 1, 1, "", "register_parameter"], [50, 1, 1, "", "register_state_dict_post_hook"], [50, 1, 1, "", "register_state_dict_pre_hook"], [50, 1, 1, "", "requires_grad_"], [50, 1, 1, "", "set_extra_state"], [50, 1, 1, "", "set_submodule"], [50, 1, 1, "", "share_memory"], [50, 1, 1, "", "state_dict"], [50, 1, 1, "", "to"], [50, 1, 1, "", "to_empty"], [50, 1, 1, "", "train"], [50, 1, 1, "", "type"], [50, 1, 1, "", "xpu"], [50, 1, 1, "", "zero_grad"]], "torchrl.data.LazyStackedCompositeSpec": [[51, 1, 1, "", "assert_is_in"], [51, 1, 1, "", "cardinality"], [51, 1, 1, "", "clear_device_"], [51, 1, 1, "", "clone"], [51, 1, 1, "", "contains"], [51, 1, 1, "", "cpu"], [51, 1, 1, "", "cuda"], [51, 2, 1, "", "device"], [51, 1, 1, "", "empty"], [51, 1, 1, "", "encode"], [51, 1, 1, "", "enumerate"], [51, 1, 1, "", "erase_memoize_cache"], [51, 1, 1, "", "expand"], [51, 1, 1, "", "flatten"], [51, 1, 1, "", "get"], [51, 1, 1, "", "implements_for_spec"], [51, 1, 1, "", "index"], [51, 1, 1, "", "is_empty"], [51, 1, 1, "", "is_in"], [51, 1, 1, "", "items"], [51, 1, 1, "", "keys"], [51, 1, 1, "", "lock_"], [51, 1, 1, "", "make_neg_dim"], [51, 1, 1, "", "memoize_encode"], [51, 2, 1, "", "names"], [51, 2, 1, "", "ndim"], [51, 1, 1, "", "ndimension"], [51, 1, 1, "", "one"], [51, 1, 1, "", "ones"], [51, 1, 1, "", "pop"], [51, 1, 1, "", "project"], [51, 1, 1, "", "rand"], [51, 1, 1, "", "refine_names"], [51, 1, 1, "", "reshape"], [51, 1, 1, "", "sample"], [51, 1, 1, "", "separates"], [51, 1, 1, "", "set"], [51, 1, 1, "", "squeeze"], [51, 1, 1, "", "to"], [51, 1, 1, "", "to_numpy"], [51, 1, 1, "", "type_check"], [51, 1, 1, "", "unflatten"], [51, 1, 1, "", "unlock_"], [51, 1, 1, "", "unsqueeze"], [51, 1, 1, "", "values"], [51, 1, 1, "", "view"], [51, 1, 1, "", "zero"], [51, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[52, 1, 1, "", "assert_is_in"], [52, 1, 1, "", "cardinality"], [52, 1, 1, "", "clear_device_"], [52, 1, 1, "", "clone"], [52, 1, 1, "", "contains"], [52, 1, 1, "", "cpu"], [52, 1, 1, "", "cuda"], [52, 2, 1, "", "device"], [52, 1, 1, "", "encode"], [52, 1, 1, "", "enumerate"], [52, 1, 1, "", "erase_memoize_cache"], [52, 1, 1, "", "expand"], [52, 1, 1, "", "flatten"], [52, 1, 1, "", "implements_for_spec"], [52, 1, 1, "", "index"], [52, 1, 1, "", "is_in"], [52, 1, 1, "", "make_neg_dim"], [52, 1, 1, "", "memoize_encode"], [52, 2, 1, "", "ndim"], [52, 1, 1, "", "ndimension"], [52, 1, 1, "", "one"], [52, 1, 1, "", "ones"], [52, 1, 1, "", "project"], [52, 1, 1, "", "rand"], [52, 1, 1, "", "reshape"], [52, 1, 1, "", "sample"], [52, 1, 1, "", "squeeze"], [52, 1, 1, "", "to"], [52, 1, 1, "", "to_numpy"], [52, 1, 1, "", "type_check"], [52, 1, 1, "", "unflatten"], [52, 1, 1, "", "unsqueeze"], [52, 1, 1, "", "view"], [52, 1, 1, "", "zero"], [52, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[53, 2, 1, "", "action_keys"], [53, 2, 1, "", "done_keys"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "get_keys_from_env"], [53, 2, 1, "", "observation_keys"], [53, 2, 1, "", "reward_keys"], [53, 1, 1, "", "to_string"]], "torchrl.data.MultiCategorical": [[54, 1, 1, "", "assert_is_in"], [54, 1, 1, "", "cardinality"], [54, 1, 1, "", "clear_device_"], [54, 1, 1, "", "clone"], [54, 1, 1, "", "contains"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 4, 1, "", "device"], [54, 1, 1, "", "encode"], [54, 1, 1, "", "enumerate"], [54, 1, 1, "", "erase_memoize_cache"], [54, 1, 1, "", "expand"], [54, 1, 1, "", "flatten"], [54, 1, 1, "", "implements_for_spec"], [54, 1, 1, "", "index"], [54, 1, 1, "", "is_in"], [54, 1, 1, "", "make_neg_dim"], [54, 1, 1, "", "memoize_encode"], [54, 2, 1, "", "ndim"], [54, 1, 1, "", "ndimension"], [54, 1, 1, "", "one"], [54, 1, 1, "", "ones"], [54, 1, 1, "", "project"], [54, 1, 1, "", "rand"], [54, 1, 1, "", "reshape"], [54, 1, 1, "", "sample"], [54, 1, 1, "", "set_provisional_n"], [54, 1, 1, "", "squeeze"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_categorical"], [54, 1, 1, "", "to_categorical_spec"], [54, 1, 1, "", "to_numpy"], [54, 1, 1, "", "to_one_hot"], [54, 1, 1, "", "to_one_hot_spec"], [54, 1, 1, "", "type_check"], [54, 1, 1, "", "unflatten"], [54, 1, 1, "", "unsqueeze"], [54, 1, 1, "", "update_mask"], [54, 1, 1, "", "view"], [54, 1, 1, "", "zero"], [54, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "cardinality"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "clone"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 4, 1, "", "device"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "enumerate"], [55, 1, 1, "", "erase_memoize_cache"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "make_neg_dim"], [55, 1, 1, "", "memoize_encode"], [55, 2, 1, "", "ndim"], [55, 1, 1, "", "ndimension"], [55, 1, 1, "", "one"], [55, 1, 1, "", "ones"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 1, 1, "", "sample"], [55, 1, 1, "", "set_provisional_n"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_categorical"], [55, 1, 1, "", "to_categorical_spec"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "to_one_hot"], [55, 1, 1, "", "to_one_hot_spec"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "unsqueeze"], [55, 1, 1, "", "update_mask"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"], [55, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[56, 1, 1, "", "assert_is_in"], [56, 1, 1, "", "cardinality"], [56, 1, 1, "", "clear_device_"], [56, 1, 1, "", "clone"], [56, 1, 1, "", "contains"], [56, 1, 1, "", "cpu"], [56, 1, 1, "", "cuda"], [56, 4, 1, "", "device"], [56, 1, 1, "", "encode"], [56, 1, 1, "", "enumerate"], [56, 1, 1, "", "erase_memoize_cache"], [56, 1, 1, "", "expand"], [56, 1, 1, "", "flatten"], [56, 1, 1, "", "implements_for_spec"], [56, 1, 1, "", "index"], [56, 1, 1, "", "is_in"], [56, 1, 1, "", "make_neg_dim"], [56, 1, 1, "", "memoize_encode"], [56, 2, 1, "", "ndim"], [56, 1, 1, "", "ndimension"], [56, 1, 1, "", "one"], [56, 1, 1, "", "ones"], [56, 1, 1, "", "project"], [56, 1, 1, "", "rand"], [56, 1, 1, "", "reshape"], [56, 1, 1, "", "sample"], [56, 1, 1, "", "squeeze"], [56, 1, 1, "", "to"], [56, 1, 1, "", "to_categorical"], [56, 1, 1, "", "to_categorical_spec"], [56, 1, 1, "", "to_numpy"], [56, 1, 1, "", "to_one_hot"], [56, 1, 1, "", "to_one_hot_spec"], [56, 1, 1, "", "type_check"], [56, 1, 1, "", "unflatten"], [56, 1, 1, "", "unsqueeze"], [56, 1, 1, "", "update_mask"], [56, 1, 1, "", "view"], [56, 1, 1, "", "zero"], [56, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[57, 1, 1, "", "assert_is_in"], [57, 1, 1, "", "cardinality"], [57, 1, 1, "", "clear_device_"], [57, 1, 1, "", "clone"], [57, 1, 1, "", "contains"], [57, 1, 1, "", "cpu"], [57, 1, 1, "", "cuda"], [57, 4, 1, "", "device"], [57, 1, 1, "", "encode"], [57, 1, 1, "", "enumerate"], [57, 1, 1, "", "erase_memoize_cache"], [57, 1, 1, "", "expand"], [57, 1, 1, "", "flatten"], [57, 1, 1, "", "implements_for_spec"], [57, 1, 1, "", "index"], [57, 1, 1, "", "is_in"], [57, 1, 1, "", "make_neg_dim"], [57, 1, 1, "", "memoize_encode"], [57, 2, 1, "", "ndim"], [57, 1, 1, "", "ndimension"], [57, 1, 1, "", "one"], [57, 1, 1, "", "ones"], [57, 1, 1, "", "project"], [57, 1, 1, "", "rand"], [57, 1, 1, "", "reshape"], [57, 1, 1, "", "sample"], [57, 1, 1, "", "squeeze"], [57, 1, 1, "", "to"], [57, 1, 1, "", "to_categorical"], [57, 1, 1, "", "to_categorical_spec"], [57, 1, 1, "", "to_numpy"], [57, 1, 1, "", "to_one_hot"], [57, 1, 1, "", "to_one_hot_spec"], [57, 1, 1, "", "type_check"], [57, 1, 1, "", "unflatten"], [57, 1, 1, "", "unsqueeze"], [57, 1, 1, "", "update_mask"], [57, 1, 1, "", "view"], [57, 1, 1, "", "zero"], [57, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[58, 1, 1, "", "add_module"], [58, 1, 1, "", "apply"], [58, 1, 1, "", "bfloat16"], [58, 1, 1, "", "buffers"], [58, 1, 1, "", "children"], [58, 1, 1, "", "compile"], [58, 1, 1, "", "cpu"], [58, 1, 1, "", "cuda"], [58, 1, 1, "", "double"], [58, 1, 1, "", "eval"], [58, 1, 1, "", "extra_repr"], [58, 1, 1, "", "float"], [58, 1, 1, "", "forward"], [58, 1, 1, "", "get_buffer"], [58, 1, 1, "", "get_extra_state"], [58, 1, 1, "", "get_parameter"], [58, 1, 1, "", "get_submodule"], [58, 1, 1, "", "half"], [58, 1, 1, "", "ipu"], [58, 1, 1, "", "load_state_dict"], [58, 1, 1, "", "modules"], [58, 1, 1, "", "mtia"], [58, 1, 1, "", "named_buffers"], [58, 1, 1, "", "named_children"], [58, 1, 1, "", "named_modules"], [58, 1, 1, "", "named_parameters"], [58, 1, 1, "", "parameters"], [58, 1, 1, "", "register_backward_hook"], [58, 1, 1, "", "register_buffer"], [58, 1, 1, "", "register_forward_hook"], [58, 1, 1, "", "register_forward_pre_hook"], [58, 1, 1, "", "register_full_backward_hook"], [58, 1, 1, "", "register_full_backward_pre_hook"], [58, 1, 1, "", "register_load_state_dict_post_hook"], [58, 1, 1, "", "register_load_state_dict_pre_hook"], [58, 1, 1, "", "register_module"], [58, 1, 1, "", "register_parameter"], [58, 1, 1, "", "register_state_dict_post_hook"], [58, 1, 1, "", "register_state_dict_pre_hook"], [58, 1, 1, "", "requires_grad_"], [58, 1, 1, "", "set_extra_state"], [58, 1, 1, "", "set_submodule"], [58, 1, 1, "", "share_memory"], [58, 1, 1, "", "state_dict"], [58, 1, 1, "", "to"], [58, 1, 1, "", "to_empty"], [58, 1, 1, "", "train"], [58, 1, 1, "", "type"], [58, 1, 1, "", "xpu"], [58, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[60, 1, 1, "", "assert_is_in"], [60, 1, 1, "", "cardinality"], [60, 1, 1, "", "clear_device_"], [60, 1, 1, "", "clone"], [60, 1, 1, "", "contains"], [60, 1, 1, "", "cpu"], [60, 1, 1, "", "cuda"], [60, 2, 1, "", "device"], [60, 1, 1, "", "encode"], [60, 1, 1, "", "enumerate"], [60, 1, 1, "", "erase_memoize_cache"], [60, 1, 1, "", "expand"], [60, 1, 1, "", "flatten"], [60, 1, 1, "", "implements_for_spec"], [60, 1, 1, "", "index"], [60, 1, 1, "", "is_in"], [60, 1, 1, "", "make_neg_dim"], [60, 1, 1, "", "memoize_encode"], [60, 2, 1, "", "ndim"], [60, 1, 1, "", "ndimension"], [60, 1, 1, "", "one"], [60, 1, 1, "", "ones"], [60, 1, 1, "", "project"], [60, 1, 1, "", "rand"], [60, 1, 1, "", "reshape"], [60, 1, 1, "", "sample"], [60, 1, 1, "", "squeeze"], [60, 1, 1, "", "to"], [60, 1, 1, "", "to_numpy"], [60, 1, 1, "", "type_check"], [60, 1, 1, "", "unflatten"], [60, 1, 1, "", "unsqueeze"], [60, 1, 1, "", "view"], [60, 1, 1, "", "zero"], [60, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[61, 1, 1, "", "assert_is_in"], [61, 1, 1, "", "cardinality"], [61, 1, 1, "", "clear_device_"], [61, 1, 1, "", "clone"], [61, 1, 1, "", "contains"], [61, 1, 1, "", "cpu"], [61, 1, 1, "", "cuda"], [61, 2, 1, "", "device"], [61, 1, 1, "", "encode"], [61, 1, 1, "", "enumerate"], [61, 1, 1, "", "erase_memoize_cache"], [61, 1, 1, "", "expand"], [61, 1, 1, "", "flatten"], [61, 1, 1, "", "implements_for_spec"], [61, 1, 1, "", "index"], [61, 1, 1, "", "is_in"], [61, 1, 1, "", "make_neg_dim"], [61, 1, 1, "", "memoize_encode"], [61, 2, 1, "", "ndim"], [61, 1, 1, "", "ndimension"], [61, 1, 1, "", "one"], [61, 1, 1, "", "ones"], [61, 1, 1, "", "project"], [61, 1, 1, "", "rand"], [61, 1, 1, "", "reshape"], [61, 1, 1, "", "sample"], [61, 1, 1, "", "squeeze"], [61, 1, 1, "", "to"], [61, 1, 1, "", "to_numpy"], [61, 1, 1, "", "type_check"], [61, 1, 1, "", "unflatten"], [61, 1, 1, "", "unsqueeze"], [61, 1, 1, "", "view"], [61, 1, 1, "", "zero"], [61, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[62, 1, 1, "", "assert_is_in"], [62, 1, 1, "", "cardinality"], [62, 1, 1, "", "clear_device_"], [62, 1, 1, "", "clone"], [62, 1, 1, "", "contains"], [62, 1, 1, "", "cpu"], [62, 1, 1, "", "cuda"], [62, 4, 1, "", "device"], [62, 1, 1, "", "encode"], [62, 1, 1, "", "enumerate"], [62, 1, 1, "", "erase_memoize_cache"], [62, 1, 1, "", "expand"], [62, 1, 1, "", "flatten"], [62, 1, 1, "", "implements_for_spec"], [62, 1, 1, "", "index"], [62, 1, 1, "", "is_in"], [62, 1, 1, "", "make_neg_dim"], [62, 1, 1, "", "memoize_encode"], [62, 2, 1, "", "ndim"], [62, 1, 1, "", "ndimension"], [62, 1, 1, "", "one"], [62, 1, 1, "", "ones"], [62, 1, 1, "", "project"], [62, 1, 1, "", "rand"], [62, 1, 1, "", "reshape"], [62, 1, 1, "", "sample"], [62, 1, 1, "", "squeeze"], [62, 1, 1, "", "to"], [62, 1, 1, "", "to_categorical"], [62, 1, 1, "", "to_categorical_spec"], [62, 1, 1, "", "to_numpy"], [62, 1, 1, "", "to_one_hot"], [62, 1, 1, "", "to_one_hot_spec"], [62, 1, 1, "", "type_check"], [62, 1, 1, "", "unflatten"], [62, 1, 1, "", "unsqueeze"], [62, 1, 1, "", "update_mask"], [62, 1, 1, "", "view"], [62, 1, 1, "", "zero"], [62, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[63, 1, 1, "", "assert_is_in"], [63, 1, 1, "", "cardinality"], [63, 1, 1, "", "clear_device_"], [63, 1, 1, "", "clone"], [63, 1, 1, "", "contains"], [63, 1, 1, "", "cpu"], [63, 1, 1, "", "cuda"], [63, 4, 1, "", "device"], [63, 1, 1, "", "encode"], [63, 1, 1, "", "enumerate"], [63, 1, 1, "", "erase_memoize_cache"], [63, 1, 1, "", "expand"], [63, 1, 1, "", "flatten"], [63, 1, 1, "", "implements_for_spec"], [63, 1, 1, "", "index"], [63, 1, 1, "", "is_in"], [63, 1, 1, "", "make_neg_dim"], [63, 1, 1, "", "memoize_encode"], [63, 2, 1, "", "ndim"], [63, 1, 1, "", "ndimension"], [63, 1, 1, "", "one"], [63, 1, 1, "", "ones"], [63, 1, 1, "", "project"], [63, 1, 1, "", "rand"], [63, 1, 1, "", "reshape"], [63, 1, 1, "", "sample"], [63, 1, 1, "", "squeeze"], [63, 1, 1, "", "to"], [63, 1, 1, "", "to_categorical"], [63, 1, 1, "", "to_categorical_spec"], [63, 1, 1, "", "to_numpy"], [63, 1, 1, "", "to_one_hot"], [63, 1, 1, "", "to_one_hot_spec"], [63, 1, 1, "", "type_check"], [63, 1, 1, "", "unflatten"], [63, 1, 1, "", "unsqueeze"], [63, 1, 1, "", "update_mask"], [63, 1, 1, "", "view"], [63, 1, 1, "", "zero"], [63, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[64, 2, 1, "", "device"], [64, 1, 1, "", "dumps"], [64, 1, 1, "", "fields"], [64, 1, 1, "", "from_dataset"], [64, 1, 1, "", "from_tensordict"], [64, 1, 1, "", "get"], [64, 1, 1, "", "load"], [64, 1, 1, "", "load_"], [64, 1, 1, "", "load_memmap"], [64, 1, 1, "", "load_state_dict"], [64, 1, 1, "", "memmap"], [64, 1, 1, "", "memmap_"], [64, 1, 1, "", "memmap_like"], [64, 1, 1, "", "memmap_refresh_"], [64, 1, 1, "", "save"], [64, 1, 1, "", "set"], [64, 1, 1, "", "state_dict"], [64, 1, 1, "", "to_tensordict"], [64, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[65, 1, 1, "", "add"], [65, 1, 1, "", "append_transform"], [65, 1, 1, "", "as_remote"], [65, 2, 1, "", "batch_size"], [65, 1, 1, "", "dump"], [65, 1, 1, "", "dumps"], [65, 1, 1, "", "empty"], [65, 1, 1, "", "extend"], [65, 2, 1, "", "initialized"], [65, 1, 1, "", "insert_transform"], [65, 1, 1, "", "load"], [65, 1, 1, "", "loads"], [65, 1, 1, "", "next"], [65, 1, 1, "", "register_load_hook"], [65, 1, 1, "", "register_save_hook"], [65, 1, 1, "", "sample"], [65, 2, 1, "", "sampler"], [65, 1, 1, "", "save"], [65, 1, 1, "", "set_sampler"], [65, 1, 1, "", "set_storage"], [65, 1, 1, "", "set_writer"], [65, 2, 1, "", "storage"], [65, 2, 1, "", "transform"], [65, 2, 1, "", "write_count"], [65, 2, 1, "", "writer"]], "torchrl.data.PromptData": [[66, 2, 1, "", "device"], [66, 1, 1, "", "dumps"], [66, 1, 1, "", "fields"], [66, 1, 1, "", "from_dataset"], [66, 1, 1, "", "from_tensordict"], [66, 1, 1, "", "get"], [66, 1, 1, "", "load"], [66, 1, 1, "", "load_"], [66, 1, 1, "", "load_memmap"], [66, 1, 1, "", "load_state_dict"], [66, 1, 1, "", "memmap"], [66, 1, 1, "", "memmap_"], [66, 1, 1, "", "memmap_like"], [66, 1, 1, "", "memmap_refresh_"], [66, 1, 1, "", "save"], [66, 1, 1, "", "set"], [66, 1, 1, "", "state_dict"], [66, 1, 1, "", "to_tensordict"], [66, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[68, 1, 1, "", "add_module"], [68, 1, 1, "", "apply"], [68, 1, 1, "", "bfloat16"], [68, 1, 1, "", "buffers"], [68, 1, 1, "", "children"], [68, 1, 1, "", "compile"], [68, 1, 1, "", "cpu"], [68, 1, 1, "", "cuda"], [68, 1, 1, "", "double"], [68, 1, 1, "", "eval"], [68, 1, 1, "", "extra_repr"], [68, 1, 1, "", "float"], [68, 1, 1, "", "forward"], [68, 1, 1, "", "get_buffer"], [68, 1, 1, "", "get_extra_state"], [68, 1, 1, "", "get_parameter"], [68, 1, 1, "", "get_submodule"], [68, 1, 1, "", "half"], [68, 1, 1, "", "ipu"], [68, 1, 1, "", "is_tdmodule_compatible"], [68, 1, 1, "", "load_state_dict"], [68, 1, 1, "", "modules"], [68, 1, 1, "", "mtia"], [68, 1, 1, "", "named_buffers"], [68, 1, 1, "", "named_children"], [68, 1, 1, "", "named_modules"], [68, 1, 1, "", "named_parameters"], [68, 1, 1, "", "parameters"], [68, 1, 1, "", "register_backward_hook"], [68, 1, 1, "", "register_buffer"], [68, 1, 1, "", "register_forward_hook"], [68, 1, 1, "", "register_forward_pre_hook"], [68, 1, 1, "", "register_full_backward_hook"], [68, 1, 1, "", "register_full_backward_pre_hook"], [68, 1, 1, "", "register_load_state_dict_post_hook"], [68, 1, 1, "", "register_load_state_dict_pre_hook"], [68, 1, 1, "", "register_module"], [68, 1, 1, "", "register_parameter"], [68, 1, 1, "", "register_state_dict_post_hook"], [68, 1, 1, "", "register_state_dict_pre_hook"], [68, 1, 1, "", "requires_grad_"], [68, 1, 1, "", "reset_out_keys"], [68, 1, 1, "", "reset_parameters_recursive"], [68, 1, 1, "", "select_out_keys"], [68, 1, 1, "", "set_extra_state"], [68, 1, 1, "", "set_submodule"], [68, 1, 1, "", "share_memory"], [68, 1, 1, "", "state_dict"], [68, 1, 1, "", "to"], [68, 1, 1, "", "to_empty"], [68, 1, 1, "", "train"], [68, 1, 1, "", "type"], [68, 1, 1, "", "xpu"], [68, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[69, 1, 1, "", "add_module"], [69, 1, 1, "", "apply"], [69, 1, 1, "", "bfloat16"], [69, 1, 1, "", "buffers"], [69, 1, 1, "", "children"], [69, 1, 1, "", "compile"], [69, 1, 1, "", "cpu"], [69, 1, 1, "", "cuda"], [69, 1, 1, "", "double"], [69, 1, 1, "", "eval"], [69, 1, 1, "", "extra_repr"], [69, 1, 1, "", "fit"], [69, 1, 1, "", "float"], [69, 1, 1, "", "forward"], [69, 1, 1, "", "get_buffer"], [69, 1, 1, "", "get_extra_state"], [69, 1, 1, "", "get_parameter"], [69, 1, 1, "", "get_submodule"], [69, 1, 1, "", "half"], [69, 1, 1, "", "ipu"], [69, 1, 1, "", "load_state_dict"], [69, 1, 1, "", "modules"], [69, 1, 1, "", "mtia"], [69, 1, 1, "", "named_buffers"], [69, 1, 1, "", "named_children"], [69, 1, 1, "", "named_modules"], [69, 1, 1, "", "named_parameters"], [69, 1, 1, "", "parameters"], [69, 1, 1, "", "register_backward_hook"], [69, 1, 1, "", "register_buffer"], [69, 1, 1, "", "register_forward_hook"], [69, 1, 1, "", "register_forward_pre_hook"], [69, 1, 1, "", "register_full_backward_hook"], [69, 1, 1, "", "register_full_backward_pre_hook"], [69, 1, 1, "", "register_load_state_dict_post_hook"], [69, 1, 1, "", "register_load_state_dict_pre_hook"], [69, 1, 1, "", "register_module"], [69, 1, 1, "", "register_parameter"], [69, 1, 1, "", "register_state_dict_post_hook"], [69, 1, 1, "", "register_state_dict_pre_hook"], [69, 1, 1, "", "requires_grad_"], [69, 1, 1, "", "set_extra_state"], [69, 1, 1, "", "set_submodule"], [69, 1, 1, "", "share_memory"], [69, 1, 1, "", "state_dict"], [69, 1, 1, "", "to"], [69, 1, 1, "", "to_empty"], [69, 1, 1, "", "train"], [69, 1, 1, "", "type"], [69, 1, 1, "", "xpu"], [69, 1, 1, "", "zero_grad"]], "torchrl.data.RayReplayBuffer": [[70, 1, 1, "", "add"], [70, 1, 1, "", "append_transform"], [70, 1, 1, "", "as_remote"], [70, 2, 1, "", "batch_size"], [70, 1, 1, "", "close"], [70, 1, 1, "", "dump"], [70, 1, 1, "", "dumps"], [70, 1, 1, "", "empty"], [70, 1, 1, "", "extend"], [70, 2, 1, "", "initialized"], [70, 1, 1, "", "insert_transform"], [70, 1, 1, "", "load"], [70, 1, 1, "", "loads"], [70, 1, 1, "", "next"], [70, 1, 1, "", "register_load_hook"], [70, 1, 1, "", "register_save_hook"], [70, 1, 1, "", "sample"], [70, 2, 1, "", "sampler"], [70, 1, 1, "", "save"], [70, 1, 1, "", "set_sampler"], [70, 1, 1, "", "set_storage"], [70, 1, 1, "", "set_writer"], [70, 2, 1, "", "storage"], [70, 2, 1, "", "transform"], [70, 2, 1, "", "write_count"], [70, 2, 1, "", "writer"]], "torchrl.data.RemoteTensorDictReplayBuffer": [[71, 1, 1, "", "add"], [71, 1, 1, "", "append_transform"], [71, 1, 1, "", "as_remote"], [71, 2, 1, "", "batch_size"], [71, 1, 1, "", "dump"], [71, 1, 1, "", "dumps"], [71, 1, 1, "", "empty"], [71, 1, 1, "", "extend"], [71, 2, 1, "", "initialized"], [71, 1, 1, "", "insert_transform"], [71, 1, 1, "", "load"], [71, 1, 1, "", "loads"], [71, 1, 1, "", "next"], [71, 1, 1, "", "register_load_hook"], [71, 1, 1, "", "register_save_hook"], [71, 1, 1, "", "sample"], [71, 2, 1, "", "sampler"], [71, 1, 1, "", "save"], [71, 1, 1, "", "set_sampler"], [71, 1, 1, "", "set_storage"], [71, 1, 1, "", "set_writer"], [71, 2, 1, "", "storage"], [71, 2, 1, "", "transform"], [71, 2, 1, "", "write_count"], [71, 2, 1, "", "writer"]], "torchrl.data.ReplayBuffer": [[72, 1, 1, "", "add"], [72, 1, 1, "", "append_transform"], [72, 1, 1, "", "as_remote"], [72, 2, 1, "", "batch_size"], [72, 1, 1, "", "dump"], [72, 1, 1, "", "dumps"], [72, 1, 1, "", "empty"], [72, 1, 1, "", "extend"], [72, 2, 1, "", "initialized"], [72, 1, 1, "", "insert_transform"], [72, 1, 1, "", "load"], [72, 1, 1, "", "loads"], [72, 1, 1, "", "next"], [72, 1, 1, "", "register_load_hook"], [72, 1, 1, "", "register_save_hook"], [72, 1, 1, "", "sample"], [72, 2, 1, "", "sampler"], [72, 1, 1, "", "save"], [72, 1, 1, "", "set_sampler"], [72, 1, 1, "", "set_storage"], [72, 1, 1, "", "set_writer"], [72, 2, 1, "", "storage"], [72, 2, 1, "", "transform"], [72, 2, 1, "", "write_count"], [72, 2, 1, "", "writer"]], "torchrl.data.RewardData": [[73, 2, 1, "", "device"], [73, 1, 1, "", "dumps"], [73, 1, 1, "", "fields"], [73, 1, 1, "", "from_tensordict"], [73, 1, 1, "", "get"], [73, 1, 1, "", "load"], [73, 1, 1, "", "load_"], [73, 1, 1, "", "load_memmap"], [73, 1, 1, "", "load_state_dict"], [73, 1, 1, "", "memmap"], [73, 1, 1, "", "memmap_"], [73, 1, 1, "", "memmap_like"], [73, 1, 1, "", "memmap_refresh_"], [73, 1, 1, "", "save"], [73, 1, 1, "", "set"], [73, 1, 1, "", "state_dict"], [73, 1, 1, "", "to_tensordict"], [73, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[74, 1, 1, "", "create_rollout_td"], [74, 1, 1, "", "generate"], [74, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[75, 1, 1, "", "add_module"], [75, 1, 1, "", "apply"], [75, 1, 1, "", "bfloat16"], [75, 1, 1, "", "buffers"], [75, 1, 1, "", "children"], [75, 1, 1, "", "compile"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 1, 1, "", "double"], [75, 1, 1, "", "eval"], [75, 1, 1, "", "extra_repr"], [75, 1, 1, "", "float"], [75, 1, 1, "", "forward"], [75, 1, 1, "", "get_buffer"], [75, 1, 1, "", "get_extra_state"], [75, 1, 1, "", "get_parameter"], [75, 1, 1, "", "get_submodule"], [75, 1, 1, "", "half"], [75, 1, 1, "", "ipu"], [75, 1, 1, "", "load_state_dict"], [75, 1, 1, "", "modules"], [75, 1, 1, "", "mtia"], [75, 1, 1, "", "named_buffers"], [75, 1, 1, "", "named_children"], [75, 1, 1, "", "named_modules"], [75, 1, 1, "", "named_parameters"], [75, 1, 1, "", "parameters"], [75, 1, 1, "", "register_backward_hook"], [75, 1, 1, "", "register_buffer"], [75, 1, 1, "", "register_forward_hook"], [75, 1, 1, "", "register_forward_pre_hook"], [75, 1, 1, "", "register_full_backward_hook"], [75, 1, 1, "", "register_full_backward_pre_hook"], [75, 1, 1, "", "register_load_state_dict_post_hook"], [75, 1, 1, "", "register_load_state_dict_pre_hook"], [75, 1, 1, "", "register_module"], [75, 1, 1, "", "register_parameter"], [75, 1, 1, "", "register_state_dict_post_hook"], [75, 1, 1, "", "register_state_dict_pre_hook"], [75, 1, 1, "", "requires_grad_"], [75, 1, 1, "", "set_extra_state"], [75, 1, 1, "", "set_submodule"], [75, 1, 1, "", "share_memory"], [75, 1, 1, "", "state_dict"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_empty"], [75, 1, 1, "", "train"], [75, 1, 1, "", "type"], [75, 1, 1, "", "xpu"], [75, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[76, 1, 1, "", "assert_is_in"], [76, 1, 1, "", "cardinality"], [76, 1, 1, "", "clear_device_"], [76, 1, 1, "", "clone"], [76, 1, 1, "", "contains"], [76, 1, 1, "", "cpu"], [76, 1, 1, "", "cuda"], [76, 2, 1, "", "device"], [76, 1, 1, "", "encode"], [76, 1, 1, "", "enumerate"], [76, 1, 1, "", "erase_memoize_cache"], [76, 1, 1, "", "expand"], [76, 1, 1, "", "flatten"], [76, 1, 1, "", "implements_for_spec"], [76, 1, 1, "", "index"], [76, 1, 1, "", "is_in"], [76, 1, 1, "", "make_neg_dim"], [76, 1, 1, "", "memoize_encode"], [76, 2, 1, "", "ndim"], [76, 1, 1, "", "ndimension"], [76, 1, 1, "", "one"], [76, 1, 1, "", "ones"], [76, 1, 1, "", "project"], [76, 1, 1, "", "rand"], [76, 1, 1, "", "reshape"], [76, 1, 1, "", "sample"], [76, 1, 1, "", "squeeze"], [76, 1, 1, "", "to"], [76, 1, 1, "", "to_numpy"], [76, 1, 1, "", "type_check"], [76, 1, 1, "", "unflatten"], [76, 1, 1, "", "unsqueeze"], [76, 1, 1, "", "view"], [76, 1, 1, "", "zero"], [76, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[77, 1, 1, "", "assert_is_in"], [77, 1, 1, "", "cardinality"], [77, 1, 1, "", "clear_device_"], [77, 1, 1, "", "clone"], [77, 1, 1, "", "contains"], [77, 1, 1, "", "cpu"], [77, 1, 1, "", "cuda"], [77, 2, 1, "", "device"], [77, 1, 1, "", "empty"], [77, 1, 1, "", "encode"], [77, 1, 1, "", "enumerate"], [77, 1, 1, "", "erase_memoize_cache"], [77, 1, 1, "", "expand"], [77, 1, 1, "", "flatten"], [77, 1, 1, "", "get"], [77, 1, 1, "", "implements_for_spec"], [77, 1, 1, "", "index"], [77, 1, 1, "", "is_empty"], [77, 1, 1, "", "is_in"], [77, 1, 1, "", "items"], [77, 1, 1, "", "keys"], [77, 1, 1, "", "lock_"], [77, 1, 1, "", "make_neg_dim"], [77, 1, 1, "", "memoize_encode"], [77, 2, 1, "", "names"], [77, 2, 1, "", "ndim"], [77, 1, 1, "", "ndimension"], [77, 1, 1, "", "one"], [77, 1, 1, "", "ones"], [77, 1, 1, "", "pop"], [77, 1, 1, "", "project"], [77, 1, 1, "", "rand"], [77, 1, 1, "", "refine_names"], [77, 1, 1, "", "reshape"], [77, 1, 1, "", "sample"], [77, 1, 1, "", "separates"], [77, 1, 1, "", "set"], [77, 1, 1, "", "squeeze"], [77, 1, 1, "", "to"], [77, 1, 1, "", "to_numpy"], [77, 1, 1, "", "type_check"], [77, 1, 1, "", "unflatten"], [77, 1, 1, "", "unlock_"], [77, 1, 1, "", "unsqueeze"], [77, 1, 1, "", "values"], [77, 1, 1, "", "view"], [77, 1, 1, "", "zero"], [77, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[80, 1, 1, "", "add_module"], [80, 1, 1, "", "apply"], [80, 1, 1, "", "bfloat16"], [80, 1, 1, "", "buffers"], [80, 1, 1, "", "children"], [80, 1, 1, "", "compile"], [80, 1, 1, "", "cpu"], [80, 1, 1, "", "cuda"], [80, 1, 1, "", "double"], [80, 1, 1, "", "eval"], [80, 1, 1, "", "extra_repr"], [80, 1, 1, "", "float"], [80, 1, 1, "", "forward"], [80, 1, 1, "", "from_tensordict_pair"], [80, 1, 1, "", "get_buffer"], [80, 1, 1, "", "get_extra_state"], [80, 1, 1, "", "get_parameter"], [80, 1, 1, "", "get_submodule"], [80, 1, 1, "", "half"], [80, 1, 1, "", "ipu"], [80, 1, 1, "", "is_tdmodule_compatible"], [80, 1, 1, "", "load_state_dict"], [80, 1, 1, "", "modules"], [80, 1, 1, "", "mtia"], [80, 1, 1, "", "named_buffers"], [80, 1, 1, "", "named_children"], [80, 1, 1, "", "named_modules"], [80, 1, 1, "", "named_parameters"], [80, 1, 1, "", "parameters"], [80, 1, 1, "", "register_backward_hook"], [80, 1, 1, "", "register_buffer"], [80, 1, 1, "", "register_forward_hook"], [80, 1, 1, "", "register_forward_pre_hook"], [80, 1, 1, "", "register_full_backward_hook"], [80, 1, 1, "", "register_full_backward_pre_hook"], [80, 1, 1, "", "register_load_state_dict_post_hook"], [80, 1, 1, "", "register_load_state_dict_pre_hook"], [80, 1, 1, "", "register_module"], [80, 1, 1, "", "register_parameter"], [80, 1, 1, "", "register_state_dict_post_hook"], [80, 1, 1, "", "register_state_dict_pre_hook"], [80, 1, 1, "", "requires_grad_"], [80, 1, 1, "", "reset_out_keys"], [80, 1, 1, "", "reset_parameters_recursive"], [80, 1, 1, "", "select_out_keys"], [80, 1, 1, "", "set_extra_state"], [80, 1, 1, "", "set_submodule"], [80, 1, 1, "", "share_memory"], [80, 1, 1, "", "state_dict"], [80, 1, 1, "", "to"], [80, 1, 1, "", "to_empty"], [80, 1, 1, "", "train"], [80, 1, 1, "", "type"], [80, 1, 1, "", "xpu"], [80, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[81, 1, 1, "", "add"], [81, 1, 1, "", "append_transform"], [81, 1, 1, "", "as_remote"], [81, 2, 1, "", "batch_size"], [81, 1, 1, "", "dump"], [81, 1, 1, "", "dumps"], [81, 1, 1, "", "empty"], [81, 1, 1, "", "extend"], [81, 2, 1, "", "initialized"], [81, 1, 1, "", "insert_transform"], [81, 1, 1, "", "load"], [81, 1, 1, "", "loads"], [81, 1, 1, "", "next"], [81, 1, 1, "", "register_load_hook"], [81, 1, 1, "", "register_save_hook"], [81, 1, 1, "", "sample"], [81, 2, 1, "", "sampler"], [81, 1, 1, "", "save"], [81, 1, 1, "", "set_sampler"], [81, 1, 1, "", "set_storage"], [81, 1, 1, "", "set_writer"], [81, 2, 1, "", "storage"], [81, 2, 1, "", "transform"], [81, 2, 1, "", "write_count"], [81, 2, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[82, 1, 1, "", "add"], [82, 1, 1, "", "append_transform"], [82, 1, 1, "", "as_remote"], [82, 2, 1, "", "batch_size"], [82, 1, 1, "", "dump"], [82, 1, 1, "", "dumps"], [82, 1, 1, "", "empty"], [82, 1, 1, "", "extend"], [82, 2, 1, "", "initialized"], [82, 1, 1, "", "insert_transform"], [82, 1, 1, "", "load"], [82, 1, 1, "", "loads"], [82, 1, 1, "", "next"], [82, 1, 1, "", "register_load_hook"], [82, 1, 1, "", "register_save_hook"], [82, 1, 1, "", "sample"], [82, 2, 1, "", "sampler"], [82, 1, 1, "", "save"], [82, 1, 1, "", "set_sampler"], [82, 1, 1, "", "set_storage"], [82, 1, 1, "", "set_writer"], [82, 2, 1, "", "storage"], [82, 2, 1, "", "transform"], [82, 2, 1, "", "write_count"], [82, 2, 1, "", "writer"]], "torchrl.data.TensorSpec": [[85, 1, 1, "", "assert_is_in"], [85, 1, 1, "", "cardinality"], [85, 1, 1, "", "clear_device_"], [85, 1, 1, "", "clone"], [85, 1, 1, "", "contains"], [85, 1, 1, "", "cpu"], [85, 1, 1, "", "cuda"], [85, 2, 1, "", "device"], [85, 1, 1, "", "encode"], [85, 1, 1, "", "enumerate"], [85, 1, 1, "", "erase_memoize_cache"], [85, 1, 1, "", "expand"], [85, 1, 1, "", "flatten"], [85, 1, 1, "", "implements_for_spec"], [85, 1, 1, "", "index"], [85, 1, 1, "", "is_in"], [85, 1, 1, "", "make_neg_dim"], [85, 1, 1, "", "memoize_encode"], [85, 2, 1, "", "ndim"], [85, 1, 1, "", "ndimension"], [85, 1, 1, "", "one"], [85, 1, 1, "", "ones"], [85, 1, 1, "", "project"], [85, 1, 1, "", "rand"], [85, 1, 1, "", "reshape"], [85, 1, 1, "", "sample"], [85, 1, 1, "", "squeeze"], [85, 1, 1, "", "to"], [85, 1, 1, "", "to_numpy"], [85, 1, 1, "", "type_check"], [85, 1, 1, "", "unflatten"], [85, 1, 1, "", "unsqueeze"], [85, 1, 1, "", "view"], [85, 1, 1, "", "zero"], [85, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[86, 1, 1, "", "dataset_to_tensordict"], [86, 1, 1, "", "load"]], "torchrl.data.Tree": [[87, 2, 1, "", "branching_action"], [87, 1, 1, "", "cat"], [87, 2, 1, "", "device"], [87, 1, 1, "", "dumps"], [87, 1, 1, "", "edges"], [87, 1, 1, "", "fields"], [87, 1, 1, "", "from_any"], [87, 1, 1, "", "from_dataclass"], [87, 1, 1, "", "from_h5"], [87, 1, 1, "", "from_modules"], [87, 1, 1, "", "from_namedtuple"], [87, 1, 1, "", "from_pytree"], [87, 1, 1, "", "from_remote_init"], [87, 1, 1, "", "from_struct_array"], [87, 1, 1, "", "from_tensordict"], [87, 1, 1, "", "from_tuple"], [87, 1, 1, "", "fromkeys"], [87, 2, 1, "", "full_action_spec"], [87, 2, 1, "", "full_done_spec"], [87, 2, 1, "", "full_observation_spec"], [87, 2, 1, "", "full_reward_spec"], [87, 2, 1, "", "full_state_spec"], [87, 1, 1, "", "fully_expanded"], [87, 1, 1, "", "get"], [87, 1, 1, "", "get_vertex_by_hash"], [87, 1, 1, "", "get_vertex_by_id"], [87, 2, 1, "", "is_terminal"], [87, 1, 1, "", "lazy_stack"], [87, 1, 1, "", "load"], [87, 1, 1, "", "load_"], [87, 1, 1, "", "load_memmap"], [87, 1, 1, "", "load_state_dict"], [87, 1, 1, "", "make_node"], [87, 1, 1, "", "max_length"], [87, 1, 1, "", "maybe_dense_stack"], [87, 1, 1, "", "memmap"], [87, 1, 1, "", "memmap_"], [87, 1, 1, "", "memmap_like"], [87, 1, 1, "", "memmap_refresh_"], [87, 2, 1, "", "node_observation"], [87, 2, 1, "", "node_observations"], [87, 2, 1, "", "num_children"], [87, 1, 1, "", "num_vertices"], [87, 2, 1, "", "parent"], [87, 1, 1, "", "plot"], [87, 2, 1, "", "prev_action"], [87, 1, 1, "", "rollout_from_path"], [87, 1, 1, "", "save"], [87, 2, 1, "", "selected_actions"], [87, 1, 1, "", "set"], [87, 1, 1, "", "stack"], [87, 1, 1, "", "state_dict"], [87, 1, 1, "", "to_string"], [87, 1, 1, "", "to_tensordict"], [87, 1, 1, "", "unbind"], [87, 1, 1, "", "valid_paths"], [87, 1, 1, "", "vertices"], [87, 2, 1, "", "visits"]], "torchrl.data.Unbounded": [[88, 1, 1, "", "assert_is_in"], [88, 1, 1, "", "cardinality"], [88, 1, 1, "", "clear_device_"], [88, 1, 1, "", "clone"], [88, 1, 1, "", "contains"], [88, 1, 1, "", "cpu"], [88, 1, 1, "", "cuda"], [88, 2, 1, "", "device"], [88, 1, 1, "", "encode"], [88, 1, 1, "", "enumerate"], [88, 1, 1, "", "erase_memoize_cache"], [88, 1, 1, "", "expand"], [88, 1, 1, "", "flatten"], [88, 1, 1, "", "implements_for_spec"], [88, 1, 1, "", "index"], [88, 1, 1, "", "is_in"], [88, 1, 1, "", "make_neg_dim"], [88, 1, 1, "", "memoize_encode"], [88, 2, 1, "", "ndim"], [88, 1, 1, "", "ndimension"], [88, 1, 1, "", "one"], [88, 1, 1, "", "ones"], [88, 1, 1, "", "project"], [88, 1, 1, "", "rand"], [88, 1, 1, "", "reshape"], [88, 1, 1, "", "sample"], [88, 1, 1, "", "squeeze"], [88, 1, 1, "", "to"], [88, 1, 1, "", "to_numpy"], [88, 1, 1, "", "type_check"], [88, 1, 1, "", "unflatten"], [88, 1, 1, "", "unsqueeze"], [88, 1, 1, "", "view"], [88, 1, 1, "", "zero"], [88, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[89, 1, 1, "", "assert_is_in"], [89, 1, 1, "", "cardinality"], [89, 1, 1, "", "clear_device_"], [89, 1, 1, "", "clone"], [89, 1, 1, "", "contains"], [89, 1, 1, "", "cpu"], [89, 1, 1, "", "cuda"], [89, 2, 1, "", "device"], [89, 1, 1, "", "encode"], [89, 1, 1, "", "enumerate"], [89, 1, 1, "", "erase_memoize_cache"], [89, 1, 1, "", "expand"], [89, 1, 1, "", "flatten"], [89, 1, 1, "", "implements_for_spec"], [89, 1, 1, "", "index"], [89, 1, 1, "", "is_in"], [89, 1, 1, "", "make_neg_dim"], [89, 1, 1, "", "memoize_encode"], [89, 2, 1, "", "ndim"], [89, 1, 1, "", "ndimension"], [89, 1, 1, "", "one"], [89, 1, 1, "", "ones"], [89, 1, 1, "", "project"], [89, 1, 1, "", "rand"], [89, 1, 1, "", "reshape"], [89, 1, 1, "", "sample"], [89, 1, 1, "", "squeeze"], [89, 1, 1, "", "to"], [89, 1, 1, "", "to_numpy"], [89, 1, 1, "", "type_check"], [89, 1, 1, "", "unflatten"], [89, 1, 1, "", "unsqueeze"], [89, 1, 1, "", "view"], [89, 1, 1, "", "zero"], [89, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[90, 1, 1, "", "assert_is_in"], [90, 1, 1, "", "cardinality"], [90, 1, 1, "", "clear_device_"], [90, 1, 1, "", "clone"], [90, 1, 1, "", "contains"], [90, 1, 1, "", "cpu"], [90, 1, 1, "", "cuda"], [90, 2, 1, "", "device"], [90, 1, 1, "", "encode"], [90, 1, 1, "", "enumerate"], [90, 1, 1, "", "erase_memoize_cache"], [90, 1, 1, "", "expand"], [90, 1, 1, "", "flatten"], [90, 1, 1, "", "implements_for_spec"], [90, 1, 1, "", "index"], [90, 1, 1, "", "is_in"], [90, 1, 1, "", "make_neg_dim"], [90, 1, 1, "", "memoize_encode"], [90, 2, 1, "", "ndim"], [90, 1, 1, "", "ndimension"], [90, 1, 1, "", "one"], [90, 1, 1, "", "ones"], [90, 1, 1, "", "project"], [90, 1, 1, "", "rand"], [90, 1, 1, "", "reshape"], [90, 1, 1, "", "sample"], [90, 1, 1, "", "squeeze"], [90, 1, 1, "", "to"], [90, 1, 1, "", "to_numpy"], [90, 1, 1, "", "type_check"], [90, 1, 1, "", "unflatten"], [90, 1, 1, "", "unsqueeze"], [90, 1, 1, "", "view"], [90, 1, 1, "", "zero"], [90, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[91, 1, 1, "", "assert_is_in"], [91, 1, 1, "", "cardinality"], [91, 1, 1, "", "clear_device_"], [91, 1, 1, "", "clone"], [91, 1, 1, "", "contains"], [91, 1, 1, "", "cpu"], [91, 1, 1, "", "cuda"], [91, 2, 1, "", "device"], [91, 1, 1, "", "encode"], [91, 1, 1, "", "enumerate"], [91, 1, 1, "", "erase_memoize_cache"], [91, 1, 1, "", "expand"], [91, 1, 1, "", "flatten"], [91, 1, 1, "", "implements_for_spec"], [91, 1, 1, "", "index"], [91, 1, 1, "", "is_in"], [91, 1, 1, "", "make_neg_dim"], [91, 1, 1, "", "memoize_encode"], [91, 2, 1, "", "ndim"], [91, 1, 1, "", "ndimension"], [91, 1, 1, "", "one"], [91, 1, 1, "", "ones"], [91, 1, 1, "", "project"], [91, 1, 1, "", "rand"], [91, 1, 1, "", "reshape"], [91, 1, 1, "", "sample"], [91, 1, 1, "", "squeeze"], [91, 1, 1, "", "to"], [91, 1, 1, "", "to_numpy"], [91, 1, 1, "", "type_check"], [91, 1, 1, "", "unflatten"], [91, 1, 1, "", "unsqueeze"], [91, 1, 1, "", "view"], [91, 1, 1, "", "zero"], [91, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[92, 1, 1, "", "assert_is_in"], [92, 1, 1, "", "cardinality"], [92, 1, 1, "", "clear_device_"], [92, 1, 1, "", "clone"], [92, 1, 1, "", "contains"], [92, 1, 1, "", "cpu"], [92, 1, 1, "", "cuda"], [92, 2, 1, "", "device"], [92, 1, 1, "", "encode"], [92, 1, 1, "", "enumerate"], [92, 1, 1, "", "erase_memoize_cache"], [92, 1, 1, "", "expand"], [92, 1, 1, "", "flatten"], [92, 1, 1, "", "implements_for_spec"], [92, 1, 1, "", "index"], [92, 1, 1, "", "is_in"], [92, 1, 1, "", "make_neg_dim"], [92, 1, 1, "", "memoize_encode"], [92, 2, 1, "", "ndim"], [92, 1, 1, "", "ndimension"], [92, 1, 1, "", "one"], [92, 1, 1, "", "ones"], [92, 1, 1, "", "project"], [92, 1, 1, "", "rand"], [92, 1, 1, "", "reshape"], [92, 1, 1, "", "sample"], [92, 1, 1, "", "squeeze"], [92, 1, 1, "", "to"], [92, 1, 1, "", "to_numpy"], [92, 1, 1, "", "type_check"], [92, 1, 1, "", "unflatten"], [92, 1, 1, "", "unsqueeze"], [92, 1, 1, "", "view"], [92, 1, 1, "", "zero"], [92, 1, 1, "", "zeros"]], "torchrl.data.datasets": [[97, 0, 1, "", "AtariDQNExperienceReplay"], [98, 0, 1, "", "BaseDatasetExperienceReplay"], [99, 0, 1, "", "D4RLExperienceReplay"], [100, 0, 1, "", "GenDGRLExperienceReplay"], [101, 0, 1, "", "MinariExperienceReplay"], [102, 0, 1, "", "OpenMLExperienceReplay"], [103, 0, 1, "", "OpenXExperienceReplay"], [104, 0, 1, "", "RobosetExperienceReplay"], [105, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[97, 1, 1, "", "add"], [97, 1, 1, "", "append_transform"], [97, 1, 1, "", "as_remote"], [97, 2, 1, "", "batch_size"], [97, 2, 1, "", "data_path"], [97, 2, 1, "", "data_path_root"], [97, 1, 1, "", "delete"], [97, 1, 1, "", "dump"], [97, 1, 1, "", "dumps"], [97, 1, 1, "", "empty"], [97, 1, 1, "", "extend"], [97, 2, 1, "", "initialized"], [97, 1, 1, "", "insert_transform"], [97, 1, 1, "", "load"], [97, 1, 1, "", "loads"], [97, 1, 1, "", "next"], [97, 1, 1, "", "preprocess"], [97, 1, 1, "", "register_load_hook"], [97, 1, 1, "", "register_save_hook"], [97, 1, 1, "", "sample"], [97, 2, 1, "", "sampler"], [97, 1, 1, "", "save"], [97, 1, 1, "", "set_sampler"], [97, 1, 1, "", "set_storage"], [97, 1, 1, "", "set_writer"], [97, 2, 1, "", "storage"], [97, 2, 1, "", "transform"], [97, 2, 1, "", "write_count"], [97, 2, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[98, 1, 1, "", "add"], [98, 1, 1, "", "append_transform"], [98, 1, 1, "", "as_remote"], [98, 2, 1, "", "batch_size"], [98, 2, 1, "", "data_path"], [98, 2, 1, "", "data_path_root"], [98, 1, 1, "", "delete"], [98, 1, 1, "", "dump"], [98, 1, 1, "", "dumps"], [98, 1, 1, "", "empty"], [98, 1, 1, "", "extend"], [98, 2, 1, "", "initialized"], [98, 1, 1, "", "insert_transform"], [98, 1, 1, "", "load"], [98, 1, 1, "", "loads"], [98, 1, 1, "", "next"], [98, 1, 1, "", "preprocess"], [98, 1, 1, "", "register_load_hook"], [98, 1, 1, "", "register_save_hook"], [98, 1, 1, "", "sample"], [98, 2, 1, "", "sampler"], [98, 1, 1, "", "save"], [98, 1, 1, "", "set_sampler"], [98, 1, 1, "", "set_storage"], [98, 1, 1, "", "set_writer"], [98, 2, 1, "", "storage"], [98, 2, 1, "", "transform"], [98, 2, 1, "", "write_count"], [98, 2, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[99, 1, 1, "", "add"], [99, 1, 1, "", "append_transform"], [99, 1, 1, "", "as_remote"], [99, 2, 1, "", "batch_size"], [99, 2, 1, "", "data_path"], [99, 2, 1, "", "data_path_root"], [99, 1, 1, "", "delete"], [99, 1, 1, "", "dump"], [99, 1, 1, "", "dumps"], [99, 1, 1, "", "empty"], [99, 1, 1, "", "extend"], [99, 2, 1, "", "initialized"], [99, 1, 1, "", "insert_transform"], [99, 1, 1, "", "load"], [99, 1, 1, "", "loads"], [99, 1, 1, "", "next"], [99, 1, 1, "", "preprocess"], [99, 1, 1, "", "register_load_hook"], [99, 1, 1, "", "register_save_hook"], [99, 1, 1, "", "sample"], [99, 2, 1, "", "sampler"], [99, 1, 1, "", "save"], [99, 1, 1, "", "set_sampler"], [99, 1, 1, "", "set_storage"], [99, 1, 1, "", "set_writer"], [99, 2, 1, "", "storage"], [99, 2, 1, "", "transform"], [99, 2, 1, "", "write_count"], [99, 2, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[100, 1, 1, "", "add"], [100, 1, 1, "", "append_transform"], [100, 1, 1, "", "as_remote"], [100, 2, 1, "", "batch_size"], [100, 2, 1, "", "data_path"], [100, 2, 1, "", "data_path_root"], [100, 1, 1, "", "delete"], [100, 1, 1, "", "dump"], [100, 1, 1, "", "dumps"], [100, 1, 1, "", "empty"], [100, 1, 1, "", "extend"], [100, 2, 1, "", "initialized"], [100, 1, 1, "", "insert_transform"], [100, 1, 1, "", "load"], [100, 1, 1, "", "loads"], [100, 1, 1, "", "next"], [100, 1, 1, "", "preprocess"], [100, 1, 1, "", "register_load_hook"], [100, 1, 1, "", "register_save_hook"], [100, 1, 1, "", "sample"], [100, 2, 1, "", "sampler"], [100, 1, 1, "", "save"], [100, 1, 1, "", "set_sampler"], [100, 1, 1, "", "set_storage"], [100, 1, 1, "", "set_writer"], [100, 2, 1, "", "storage"], [100, 2, 1, "", "transform"], [100, 2, 1, "", "write_count"], [100, 2, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[101, 1, 1, "", "add"], [101, 1, 1, "", "append_transform"], [101, 1, 1, "", "as_remote"], [101, 2, 1, "", "batch_size"], [101, 2, 1, "", "data_path"], [101, 2, 1, "", "data_path_root"], [101, 1, 1, "", "delete"], [101, 1, 1, "", "dump"], [101, 1, 1, "", "dumps"], [101, 1, 1, "", "empty"], [101, 1, 1, "", "extend"], [101, 2, 1, "", "initialized"], [101, 1, 1, "", "insert_transform"], [101, 1, 1, "", "load"], [101, 1, 1, "", "loads"], [101, 1, 1, "", "next"], [101, 1, 1, "", "preprocess"], [101, 1, 1, "", "register_load_hook"], [101, 1, 1, "", "register_save_hook"], [101, 1, 1, "", "sample"], [101, 2, 1, "", "sampler"], [101, 1, 1, "", "save"], [101, 1, 1, "", "set_sampler"], [101, 1, 1, "", "set_storage"], [101, 1, 1, "", "set_writer"], [101, 2, 1, "", "storage"], [101, 2, 1, "", "transform"], [101, 2, 1, "", "write_count"], [101, 2, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[102, 1, 1, "", "add"], [102, 1, 1, "", "append_transform"], [102, 1, 1, "", "as_remote"], [102, 2, 1, "", "batch_size"], [102, 2, 1, "", "data_path"], [102, 2, 1, "", "data_path_root"], [102, 1, 1, "", "delete"], [102, 1, 1, "", "dump"], [102, 1, 1, "", "dumps"], [102, 1, 1, "", "empty"], [102, 1, 1, "", "extend"], [102, 2, 1, "", "initialized"], [102, 1, 1, "", "insert_transform"], [102, 1, 1, "", "load"], [102, 1, 1, "", "loads"], [102, 1, 1, "", "next"], [102, 1, 1, "", "preprocess"], [102, 1, 1, "", "register_load_hook"], [102, 1, 1, "", "register_save_hook"], [102, 1, 1, "", "sample"], [102, 2, 1, "", "sampler"], [102, 1, 1, "", "save"], [102, 1, 1, "", "set_sampler"], [102, 1, 1, "", "set_storage"], [102, 1, 1, "", "set_writer"], [102, 2, 1, "", "storage"], [102, 2, 1, "", "transform"], [102, 2, 1, "", "write_count"], [102, 2, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[103, 1, 1, "", "add"], [103, 1, 1, "", "append_transform"], [103, 1, 1, "", "as_remote"], [103, 2, 1, "", "batch_size"], [103, 2, 1, "", "data_path"], [103, 2, 1, "", "data_path_root"], [103, 1, 1, "", "delete"], [103, 1, 1, "", "dump"], [103, 1, 1, "", "dumps"], [103, 1, 1, "", "empty"], [103, 1, 1, "", "extend"], [103, 2, 1, "", "initialized"], [103, 1, 1, "", "insert_transform"], [103, 1, 1, "", "load"], [103, 1, 1, "", "loads"], [103, 1, 1, "", "next"], [103, 1, 1, "", "preprocess"], [103, 1, 1, "", "register_load_hook"], [103, 1, 1, "", "register_save_hook"], [103, 1, 1, "", "sample"], [103, 2, 1, "", "sampler"], [103, 1, 1, "", "save"], [103, 1, 1, "", "set_sampler"], [103, 1, 1, "", "set_storage"], [103, 1, 1, "", "set_writer"], [103, 2, 1, "", "storage"], [103, 2, 1, "", "transform"], [103, 2, 1, "", "write_count"], [103, 2, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[104, 1, 1, "", "add"], [104, 1, 1, "", "append_transform"], [104, 1, 1, "", "as_remote"], [104, 2, 1, "", "batch_size"], [104, 2, 1, "", "data_path"], [104, 2, 1, "", "data_path_root"], [104, 1, 1, "", "delete"], [104, 1, 1, "", "dump"], [104, 1, 1, "", "dumps"], [104, 1, 1, "", "empty"], [104, 1, 1, "", "extend"], [104, 2, 1, "", "initialized"], [104, 1, 1, "", "insert_transform"], [104, 1, 1, "", "load"], [104, 1, 1, "", "loads"], [104, 1, 1, "", "next"], [104, 1, 1, "", "preprocess"], [104, 1, 1, "", "register_load_hook"], [104, 1, 1, "", "register_save_hook"], [104, 1, 1, "", "sample"], [104, 2, 1, "", "sampler"], [104, 1, 1, "", "save"], [104, 1, 1, "", "set_sampler"], [104, 1, 1, "", "set_storage"], [104, 1, 1, "", "set_writer"], [104, 2, 1, "", "storage"], [104, 2, 1, "", "transform"], [104, 2, 1, "", "write_count"], [104, 2, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[105, 1, 1, "", "add"], [105, 1, 1, "", "append_transform"], [105, 1, 1, "", "as_remote"], [105, 2, 1, "", "batch_size"], [105, 2, 1, "", "data_path"], [105, 2, 1, "", "data_path_root"], [105, 1, 1, "", "delete"], [105, 1, 1, "", "dump"], [105, 1, 1, "", "dumps"], [105, 1, 1, "", "empty"], [105, 1, 1, "", "extend"], [105, 2, 1, "", "initialized"], [105, 1, 1, "", "insert_transform"], [105, 1, 1, "", "load"], [105, 1, 1, "", "loads"], [105, 1, 1, "", "next"], [105, 1, 1, "", "preprocess"], [105, 1, 1, "", "register_load_hook"], [105, 1, 1, "", "register_save_hook"], [105, 1, 1, "", "sample"], [105, 2, 1, "", "sampler"], [105, 1, 1, "", "save"], [105, 1, 1, "", "set_sampler"], [105, 1, 1, "", "set_storage"], [105, 1, 1, "", "set_writer"], [105, 2, 1, "", "storage"], [105, 2, 1, "", "transform"], [105, 2, 1, "", "write_count"], [105, 2, 1, "", "writer"]], "torchrl.data.llm": [[107, 0, 1, "", "ContentBase"], [108, 0, 1, "", "History"], [109, 0, 1, "", "TopKRewardSelector"]], "torchrl.data.llm.ContentBase": [[107, 1, 1, "", "cat"], [107, 2, 1, "", "device"], [107, 1, 1, "", "dumps"], [107, 1, 1, "", "fields"], [107, 1, 1, "", "from_any"], [107, 1, 1, "", "from_dataclass"], [107, 1, 1, "", "from_h5"], [107, 1, 1, "", "from_modules"], [107, 1, 1, "", "from_namedtuple"], [107, 1, 1, "", "from_pytree"], [107, 1, 1, "", "from_remote_init"], [107, 1, 1, "", "from_struct_array"], [107, 1, 1, "", "from_tensordict"], [107, 1, 1, "", "from_tuple"], [107, 1, 1, "", "fromkeys"], [107, 1, 1, "", "get"], [107, 1, 1, "", "lazy_stack"], [107, 1, 1, "", "load"], [107, 1, 1, "", "load_"], [107, 1, 1, "", "load_memmap"], [107, 1, 1, "", "load_state_dict"], [107, 1, 1, "", "maybe_dense_stack"], [107, 1, 1, "", "memmap"], [107, 1, 1, "", "memmap_"], [107, 1, 1, "", "memmap_like"], [107, 1, 1, "", "memmap_refresh_"], [107, 1, 1, "", "save"], [107, 1, 1, "", "set"], [107, 1, 1, "", "stack"], [107, 1, 1, "", "state_dict"], [107, 1, 1, "", "to_tensordict"], [107, 1, 1, "", "unbind"]], "torchrl.data.llm.History": [[108, 1, 1, "", "append"], [108, 1, 1, "", "apply_chat_template"], [108, 1, 1, "", "cat"], [108, 1, 1, "", "default_spec"], [108, 2, 1, "", "device"], [108, 1, 1, "", "dumps"], [108, 1, 1, "", "fields"], [108, 1, 1, "", "from_any"], [108, 1, 1, "", "from_chats"], [108, 1, 1, "", "from_dataclass"], [108, 1, 1, "", "from_h5"], [108, 1, 1, "", "from_modules"], [108, 1, 1, "", "from_namedtuple"], [108, 1, 1, "", "from_pytree"], [108, 1, 1, "", "from_remote_init"], [108, 1, 1, "", "from_struct_array"], [108, 1, 1, "", "from_tensordict"], [108, 1, 1, "", "from_text"], [108, 1, 1, "", "from_tuple"], [108, 1, 1, "", "fromkeys"], [108, 1, 1, "", "get"], [108, 1, 1, "", "lazy_stack"], [108, 1, 1, "", "load"], [108, 1, 1, "", "load_"], [108, 1, 1, "", "load_memmap"], [108, 1, 1, "", "load_state_dict"], [108, 1, 1, "", "maybe_dense_stack"], [108, 1, 1, "", "memmap"], [108, 1, 1, "", "memmap_"], [108, 1, 1, "", "memmap_like"], [108, 1, 1, "", "memmap_refresh_"], [108, 1, 1, "", "save"], [108, 1, 1, "", "set"], [108, 1, 1, "", "stack"], [108, 1, 1, "", "state_dict"], [108, 1, 1, "", "to_tensordict"], [108, 1, 1, "", "unbind"]], "torchrl.data.llm.TopKRewardSelector": [[109, 1, 1, "", "add_module"], [109, 1, 1, "", "apply"], [109, 1, 1, "", "bfloat16"], [109, 1, 1, "", "buffers"], [109, 1, 1, "", "children"], [109, 1, 1, "", "close"], [109, 2, 1, "", "collector"], [109, 1, 1, "", "compile"], [109, 2, 1, "", "container"], [109, 1, 1, "", "cpu"], [109, 1, 1, "", "cuda"], [109, 1, 1, "", "double"], [109, 1, 1, "", "eval"], [109, 1, 1, "", "extra_repr"], [109, 1, 1, "", "float"], [109, 1, 1, "", "forward"], [109, 1, 1, "", "get_buffer"], [109, 1, 1, "", "get_extra_state"], [109, 1, 1, "", "get_parameter"], [109, 1, 1, "", "get_submodule"], [109, 1, 1, "", "half"], [109, 1, 1, "", "init"], [109, 1, 1, "", "inv"], [109, 1, 1, "", "ipu"], [109, 1, 1, "", "load_state_dict"], [109, 1, 1, "", "modules"], [109, 1, 1, "", "mtia"], [109, 1, 1, "", "named_buffers"], [109, 1, 1, "", "named_children"], [109, 1, 1, "", "named_modules"], [109, 1, 1, "", "named_parameters"], [109, 1, 1, "", "parameters"], [109, 2, 1, "", "parent"], [109, 1, 1, "", "register_backward_hook"], [109, 1, 1, "", "register_buffer"], [109, 1, 1, "", "register_forward_hook"], [109, 1, 1, "", "register_forward_pre_hook"], [109, 1, 1, "", "register_full_backward_hook"], [109, 1, 1, "", "register_full_backward_pre_hook"], [109, 1, 1, "", "register_load_state_dict_post_hook"], [109, 1, 1, "", "register_load_state_dict_pre_hook"], [109, 1, 1, "", "register_module"], [109, 1, 1, "", "register_parameter"], [109, 1, 1, "", "register_state_dict_post_hook"], [109, 1, 1, "", "register_state_dict_pre_hook"], [109, 1, 1, "", "requires_grad_"], [109, 1, 1, "", "set_extra_state"], [109, 1, 1, "", "set_submodule"], [109, 1, 1, "", "share_memory"], [109, 1, 1, "", "state_dict"], [109, 1, 1, "", "to"], [109, 1, 1, "", "to_empty"], [109, 1, 1, "", "train"], [109, 1, 1, "", "transform_action_spec"], [109, 1, 1, "", "transform_done_spec"], [109, 1, 1, "", "transform_env_batch_size"], [109, 1, 1, "", "transform_env_device"], [109, 1, 1, "", "transform_input_spec"], [109, 1, 1, "", "transform_observation_spec"], [109, 1, 1, "", "transform_output_spec"], [109, 1, 1, "", "transform_reward_spec"], [109, 1, 1, "", "transform_state_spec"], [109, 1, 1, "", "type"], [109, 1, 1, "", "xpu"], [109, 1, 1, "", "zero_grad"]], "torchrl.data.replay_buffers": [[110, 0, 1, "", "CompressedListStorage"], [111, 0, 1, "", "CompressedListStorageCheckpointer"], [112, 0, 1, "", "FlatStorageCheckpointer"], [113, 0, 1, "", "H5StorageCheckpointer"], [114, 0, 1, "", "ImmutableDatasetWriter"], [115, 0, 1, "", "LazyMemmapStorage"], [116, 0, 1, "", "LazyStackStorage"], [117, 0, 1, "", "LazyTensorStorage"], [118, 0, 1, "", "ListStorage"], [119, 0, 1, "", "ListStorageCheckpointer"], [120, 0, 1, "", "NestedStorageCheckpointer"], [121, 0, 1, "", "PrioritizedSampler"], [122, 0, 1, "", "PrioritizedSliceSampler"], [123, 0, 1, "", "RandomSampler"], [124, 0, 1, "", "ReplayBufferEnsemble"], [125, 0, 1, "", "RoundRobinWriter"], [126, 0, 1, "", "Sampler"], [127, 0, 1, "", "SamplerEnsemble"], [128, 0, 1, "", "SamplerWithoutReplacement"], [129, 0, 1, "", "SliceSampler"], [130, 0, 1, "", "SliceSamplerWithoutReplacement"], [131, 0, 1, "", "Storage"], [132, 0, 1, "", "StorageCheckpointerBase"], [133, 0, 1, "", "StorageEnsemble"], [134, 0, 1, "", "StorageEnsembleCheckpointer"], [135, 0, 1, "", "TensorDictMaxValueWriter"], [136, 0, 1, "", "TensorDictRoundRobinWriter"], [137, 0, 1, "", "TensorStorage"], [138, 0, 1, "", "TensorStorageCheckpointer"], [139, 0, 1, "", "Writer"], [140, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.CompressedListStorage": [[110, 1, 1, "", "attach"], [110, 1, 1, "", "bytes"], [110, 1, 1, "", "dump"], [110, 1, 1, "", "load"], [110, 1, 1, "", "load_state_dict"], [110, 1, 1, "", "save"], [110, 1, 1, "", "state_dict"], [110, 1, 1, "", "to_bytestream"]], "torchrl.data.replay_buffers.CompressedListStorageCheckpointer": [[111, 1, 1, "", "dumps"], [111, 1, 1, "", "loads"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[114, 1, 1, "", "add"], [114, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[115, 1, 1, "", "attach"], [115, 1, 1, "", "dump"], [115, 1, 1, "", "load"], [115, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyStackStorage": [[116, 1, 1, "", "attach"], [116, 1, 1, "", "dump"], [116, 1, 1, "", "load"], [116, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[117, 1, 1, "", "attach"], [117, 1, 1, "", "dump"], [117, 1, 1, "", "load"], [117, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[118, 1, 1, "", "attach"], [118, 1, 1, "", "dump"], [118, 1, 1, "", "load"], [118, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[121, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[122, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[124, 1, 1, "", "add"], [124, 1, 1, "", "append_transform"], [124, 1, 1, "", "as_remote"], [124, 2, 1, "", "batch_size"], [124, 1, 1, "", "dump"], [124, 1, 1, "", "dumps"], [124, 1, 1, "", "empty"], [124, 1, 1, "", "extend"], [124, 2, 1, "", "initialized"], [124, 1, 1, "", "insert_transform"], [124, 1, 1, "", "load"], [124, 1, 1, "", "loads"], [124, 1, 1, "", "next"], [124, 1, 1, "", "register_load_hook"], [124, 1, 1, "", "register_save_hook"], [124, 1, 1, "", "sample"], [124, 2, 1, "", "sampler"], [124, 1, 1, "", "save"], [124, 1, 1, "", "set_sampler"], [124, 1, 1, "", "set_storage"], [124, 1, 1, "", "set_writer"], [124, 2, 1, "", "storage"], [124, 2, 1, "", "transform"], [124, 2, 1, "", "write_count"], [124, 2, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[125, 1, 1, "", "add"], [125, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[131, 1, 1, "", "attach"], [131, 1, 1, "", "dump"], [131, 1, 1, "", "load"], [131, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[133, 1, 1, "", "attach"], [133, 1, 1, "", "dump"], [133, 1, 1, "", "load"], [133, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[135, 1, 1, "", "add"], [135, 1, 1, "", "extend"], [135, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[136, 1, 1, "", "add"], [136, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[137, 1, 1, "", "attach"], [137, 1, 1, "", "dump"], [137, 1, 1, "", "load"], [137, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[139, 1, 1, "", "add"], [139, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[140, 1, 1, "", "add"], [140, 1, 1, "", "extend"]], "torchrl.envs": [[141, 0, 1, "", "AsyncEnvPool"], [142, 3, 1, "", "BraxEnv"], [143, 3, 1, "", "BraxWrapper"], [144, 0, 1, "", "ChessEnv"], [145, 3, 1, "", "DMControlEnv"], [146, 3, 1, "", "DMControlWrapper"], [147, 0, 1, "", "EnvBase"], [148, 0, 1, "", "EnvCreator"], [149, 0, 1, "", "EnvMetaData"], [150, 3, 1, "", "GymEnv"], [151, 0, 1, "", "GymLikeEnv"], [152, 3, 1, "", "GymWrapper"], [153, 3, 1, "", "HabitatEnv"], [154, 3, 1, "", "IsaacGymEnv"], [155, 3, 1, "", "IsaacGymWrapper"], [156, 3, 1, "", "IsaacLabWrapper"], [157, 3, 1, "", "JumanjiEnv"], [158, 3, 1, "", "JumanjiWrapper"], [159, 0, 1, "", "LLMHashingEnv"], [160, 3, 1, "", "MOGymEnv"], [161, 3, 1, "", "MOGymWrapper"], [162, 3, 1, "", "MarlGroupMapType"], [163, 3, 1, "", "MeltingpotEnv"], [164, 3, 1, "", "MeltingpotWrapper"], [165, 3, 1, "", "ModelBasedEnvBase"], [166, 3, 1, "", "MultiThreadedEnv"], [167, 3, 1, "", "MultiThreadedEnvWrapper"], [168, 3, 1, "", "OpenMLEnv"], [169, 3, 1, "", "OpenSpielEnv"], [170, 3, 1, "", "OpenSpielWrapper"], [171, 0, 1, "", "ParallelEnv"], [172, 0, 1, "", "PendulumEnv"], [173, 3, 1, "", "PettingZooEnv"], [174, 3, 1, "", "PettingZooWrapper"], [175, 0, 1, "", "ProcessorAsyncEnvPool"], [176, 3, 1, "", "RandomPolicy"], [177, 3, 1, "", "RoboHiveEnv"], [178, 3, 1, "", "SMACv2Env"], [179, 3, 1, "", "SMACv2Wrapper"], [180, 0, 1, "", "SerialEnv"], [181, 0, 1, "", "ThreadingAsyncEnvPool"], [182, 0, 1, "", "TicTacToeEnv"], [183, 3, 1, "", "UnityMLAgentsEnv"], [184, 3, 1, "", "UnityMLAgentsWrapper"], [185, 3, 1, "", "VmasEnv"], [186, 3, 1, "", "VmasWrapper"], [187, 3, 1, "", "check_env_specs"], [188, 3, 1, "", "check_marl_grouping"], [189, 3, 1, "", "exploration_type"], [190, 3, 1, "", "get_available_libraries"], [191, 3, 1, "", "gym_backend"], [220, 3, 1, "", "make_composite_from_td"], [165, 1, 1, "", "rand_step"], [223, 3, 1, "", "register_gym_spec_conversion"], [165, 1, 1, "", "reset"], [165, 1, 1, "", "rollout"], [224, 3, 1, "", "set_exploration_type"], [225, 3, 1, "", "set_gym_backend"], [165, 1, 1, "", "set_seed"], [165, 1, 1, "", "step"], [226, 3, 1, "", "step_mdp"], [227, 3, 1, "", "terminated_or_truncated"]], "torchrl.envs.AsyncEnvPool": [[141, 2, 1, "", "action_key"], [141, 2, 1, "", "action_keys"], [141, 2, 1, "", "action_spec"], [141, 2, 1, "", "action_spec_unbatched"], [141, 1, 1, "", "add_module"], [141, 1, 1, "", "add_truncated_keys"], [141, 1, 1, "", "all_actions"], [141, 1, 1, "", "any_done"], [141, 1, 1, "", "append_transform"], [141, 1, 1, "", "apply"], [141, 1, 1, "", "auto_specs_"], [141, 2, 1, "", "batch_dims"], [141, 2, 1, "", "batch_locked"], [141, 2, 1, "", "batch_size"], [141, 1, 1, "", "bfloat16"], [141, 1, 1, "", "buffers"], [141, 1, 1, "", "cardinality"], [141, 1, 1, "", "check_env_specs"], [141, 1, 1, "", "children"], [141, 2, 1, "", "collector"], [141, 1, 1, "", "compile"], [141, 1, 1, "", "cpu"], [141, 1, 1, "", "cuda"], [141, 2, 1, "", "done_key"], [141, 2, 1, "", "done_keys"], [141, 2, 1, "", "done_keys_groups"], [141, 2, 1, "", "done_spec"], [141, 2, 1, "", "done_spec_unbatched"], [141, 1, 1, "", "double"], [141, 1, 1, "", "empty_cache"], [141, 2, 1, "", "env_batch_sizes"], [141, 1, 1, "", "eval"], [141, 1, 1, "", "extra_repr"], [141, 1, 1, "", "fake_tensordict"], [141, 1, 1, "", "float"], [141, 1, 1, "", "forward"], [141, 2, 1, "", "full_action_spec"], [141, 2, 1, "", "full_action_spec_unbatched"], [141, 2, 1, "", "full_done_spec"], [141, 2, 1, "", "full_done_spec_unbatched"], [141, 2, 1, "", "full_observation_spec_unbatched"], [141, 2, 1, "", "full_reward_spec"], [141, 2, 1, "", "full_reward_spec_unbatched"], [141, 2, 1, "", "full_state_spec"], [141, 2, 1, "", "full_state_spec_unbatched"], [141, 1, 1, "", "get_buffer"], [141, 1, 1, "", "get_extra_state"], [141, 1, 1, "", "get_parameter"], [141, 1, 1, "", "get_submodule"], [141, 1, 1, "", "half"], [141, 2, 1, "", "input_spec"], [141, 2, 1, "", "input_spec_unbatched"], [141, 1, 1, "", "ipu"], [141, 2, 1, "", "is_spec_locked"], [141, 1, 1, "", "load_state_dict"], [141, 1, 1, "", "maybe_reset"], [141, 1, 1, "", "modules"], [141, 1, 1, "", "mtia"], [141, 1, 1, "", "named_buffers"], [141, 1, 1, "", "named_children"], [141, 1, 1, "", "named_modules"], [141, 1, 1, "", "named_parameters"], [141, 2, 1, "", "observation_keys"], [141, 2, 1, "", "observation_spec"], [141, 2, 1, "", "observation_spec_unbatched"], [141, 2, 1, "", "output_spec"], [141, 2, 1, "", "output_spec_unbatched"], [141, 1, 1, "", "parameters"], [141, 1, 1, "", "rand_action"], [141, 1, 1, "", "rand_step"], [141, 1, 1, "", "register_backward_hook"], [141, 1, 1, "", "register_buffer"], [141, 1, 1, "", "register_collector"], [141, 1, 1, "", "register_forward_hook"], [141, 1, 1, "", "register_forward_pre_hook"], [141, 1, 1, "", "register_full_backward_hook"], [141, 1, 1, "", "register_full_backward_pre_hook"], [141, 1, 1, "", "register_gym"], [141, 1, 1, "", "register_load_state_dict_post_hook"], [141, 1, 1, "", "register_load_state_dict_pre_hook"], [141, 1, 1, "", "register_module"], [141, 1, 1, "", "register_parameter"], [141, 1, 1, "", "register_state_dict_post_hook"], [141, 1, 1, "", "register_state_dict_pre_hook"], [141, 1, 1, "", "requires_grad_"], [141, 1, 1, "", "reset"], [141, 2, 1, "", "reset_keys"], [141, 2, 1, "", "reward_key"], [141, 2, 1, "", "reward_keys"], [141, 2, 1, "", "reward_spec"], [141, 2, 1, "", "reward_spec_unbatched"], [141, 1, 1, "", "rollout"], [141, 1, 1, "", "set_extra_state"], [141, 1, 1, "", "set_seed"], [141, 1, 1, "", "set_spec_lock_"], [141, 1, 1, "", "set_submodule"], [141, 2, 1, "", "shape"], [141, 1, 1, "", "share_memory"], [141, 2, 1, "", "specs"], [141, 1, 1, "", "state_dict"], [141, 2, 1, "", "state_keys"], [141, 2, 1, "", "state_spec"], [141, 2, 1, "", "state_spec_unbatched"], [141, 1, 1, "", "step"], [141, 1, 1, "", "step_and_maybe_reset"], [141, 1, 1, "", "step_mdp"], [141, 1, 1, "", "to"], [141, 1, 1, "", "to_empty"], [141, 1, 1, "", "train"], [141, 1, 1, "", "type"], [141, 1, 1, "", "xpu"], [141, 1, 1, "", "zero_grad"]], "torchrl.envs.ChessEnv": [[144, 2, 1, "", "action_key"], [144, 2, 1, "", "action_keys"], [144, 2, 1, "", "action_spec"], [144, 2, 1, "", "action_spec_unbatched"], [144, 1, 1, "", "add_module"], [144, 1, 1, "", "add_truncated_keys"], [144, 1, 1, "", "all_actions"], [144, 1, 1, "", "any_done"], [144, 1, 1, "", "append_transform"], [144, 1, 1, "", "apply"], [144, 1, 1, "", "auto_specs_"], [144, 2, 1, "", "batch_dims"], [144, 2, 1, "", "batch_locked"], [144, 2, 1, "", "batch_size"], [144, 1, 1, "", "bfloat16"], [144, 1, 1, "", "buffers"], [144, 1, 1, "", "cardinality"], [144, 1, 1, "", "check_env_specs"], [144, 1, 1, "", "children"], [144, 2, 1, "", "collector"], [144, 1, 1, "", "compile"], [144, 1, 1, "", "cpu"], [144, 1, 1, "", "cuda"], [144, 2, 1, "", "done_key"], [144, 2, 1, "", "done_keys"], [144, 2, 1, "", "done_keys_groups"], [144, 2, 1, "", "done_spec"], [144, 2, 1, "", "done_spec_unbatched"], [144, 1, 1, "", "double"], [144, 1, 1, "", "empty_cache"], [144, 1, 1, "", "eval"], [144, 1, 1, "", "extra_repr"], [144, 1, 1, "", "fake_tensordict"], [144, 1, 1, "", "float"], [144, 1, 1, "", "forward"], [144, 2, 1, "", "full_action_spec"], [144, 2, 1, "", "full_action_spec_unbatched"], [144, 2, 1, "", "full_done_spec"], [144, 2, 1, "", "full_done_spec_unbatched"], [144, 2, 1, "", "full_observation_spec_unbatched"], [144, 2, 1, "", "full_reward_spec"], [144, 2, 1, "", "full_reward_spec_unbatched"], [144, 2, 1, "", "full_state_spec"], [144, 2, 1, "", "full_state_spec_unbatched"], [144, 1, 1, "", "get_buffer"], [144, 1, 1, "", "get_extra_state"], [144, 1, 1, "", "get_legal_moves"], [144, 1, 1, "", "get_parameter"], [144, 1, 1, "", "get_submodule"], [144, 1, 1, "", "half"], [144, 2, 1, "", "input_spec"], [144, 2, 1, "", "input_spec_unbatched"], [144, 1, 1, "", "ipu"], [144, 2, 1, "", "is_spec_locked"], [144, 1, 1, "", "load_state_dict"], [144, 1, 1, "", "maybe_reset"], [144, 1, 1, "", "modules"], [144, 1, 1, "", "mtia"], [144, 1, 1, "", "named_buffers"], [144, 1, 1, "", "named_children"], [144, 1, 1, "", "named_modules"], [144, 1, 1, "", "named_parameters"], [144, 2, 1, "", "observation_keys"], [144, 2, 1, "", "observation_spec"], [144, 2, 1, "", "observation_spec_unbatched"], [144, 2, 1, "", "output_spec"], [144, 2, 1, "", "output_spec_unbatched"], [144, 1, 1, "", "parameters"], [144, 1, 1, "", "rand_action"], [144, 1, 1, "", "rand_step"], [144, 1, 1, "", "register_backward_hook"], [144, 1, 1, "", "register_buffer"], [144, 1, 1, "", "register_collector"], [144, 1, 1, "", "register_forward_hook"], [144, 1, 1, "", "register_forward_pre_hook"], [144, 1, 1, "", "register_full_backward_hook"], [144, 1, 1, "", "register_full_backward_pre_hook"], [144, 1, 1, "", "register_gym"], [144, 1, 1, "", "register_load_state_dict_post_hook"], [144, 1, 1, "", "register_load_state_dict_pre_hook"], [144, 1, 1, "", "register_module"], [144, 1, 1, "", "register_parameter"], [144, 1, 1, "", "register_state_dict_post_hook"], [144, 1, 1, "", "register_state_dict_pre_hook"], [144, 1, 1, "", "requires_grad_"], [144, 1, 1, "", "reset"], [144, 2, 1, "", "reset_keys"], [144, 2, 1, "", "reward_key"], [144, 2, 1, "", "reward_keys"], [144, 2, 1, "", "reward_spec"], [144, 2, 1, "", "reward_spec_unbatched"], [144, 1, 1, "", "rollout"], [144, 1, 1, "", "set_extra_state"], [144, 1, 1, "", "set_seed"], [144, 1, 1, "", "set_spec_lock_"], [144, 1, 1, "", "set_submodule"], [144, 2, 1, "", "shape"], [144, 1, 1, "", "share_memory"], [144, 2, 1, "", "specs"], [144, 1, 1, "", "state_dict"], [144, 2, 1, "", "state_keys"], [144, 2, 1, "", "state_spec"], [144, 2, 1, "", "state_spec_unbatched"], [144, 1, 1, "", "step"], [144, 1, 1, "", "step_and_maybe_reset"], [144, 1, 1, "", "step_mdp"], [144, 1, 1, "", "to"], [144, 1, 1, "", "to_empty"], [144, 1, 1, "", "train"], [144, 1, 1, "", "type"], [144, 1, 1, "", "xpu"], [144, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvBase": [[147, 2, 1, "", "action_key"], [147, 2, 1, "", "action_keys"], [147, 2, 1, "", "action_spec"], [147, 2, 1, "", "action_spec_unbatched"], [147, 1, 1, "", "add_module"], [147, 1, 1, "", "add_truncated_keys"], [147, 1, 1, "", "all_actions"], [147, 1, 1, "", "any_done"], [147, 1, 1, "", "append_transform"], [147, 1, 1, "", "apply"], [147, 1, 1, "", "auto_specs_"], [147, 2, 1, "", "batch_dims"], [147, 2, 1, "", "batch_locked"], [147, 2, 1, "", "batch_size"], [147, 1, 1, "", "bfloat16"], [147, 1, 1, "", "buffers"], [147, 1, 1, "", "cardinality"], [147, 1, 1, "", "check_env_specs"], [147, 1, 1, "", "children"], [147, 2, 1, "", "collector"], [147, 1, 1, "", "compile"], [147, 1, 1, "", "cpu"], [147, 1, 1, "", "cuda"], [147, 2, 1, "", "done_key"], [147, 2, 1, "", "done_keys"], [147, 2, 1, "", "done_keys_groups"], [147, 2, 1, "", "done_spec"], [147, 2, 1, "", "done_spec_unbatched"], [147, 1, 1, "", "double"], [147, 1, 1, "", "empty_cache"], [147, 1, 1, "", "eval"], [147, 1, 1, "", "extra_repr"], [147, 1, 1, "", "fake_tensordict"], [147, 1, 1, "", "float"], [147, 1, 1, "", "forward"], [147, 2, 1, "", "full_action_spec"], [147, 2, 1, "", "full_action_spec_unbatched"], [147, 2, 1, "", "full_done_spec"], [147, 2, 1, "", "full_done_spec_unbatched"], [147, 2, 1, "", "full_observation_spec_unbatched"], [147, 2, 1, "", "full_reward_spec"], [147, 2, 1, "", "full_reward_spec_unbatched"], [147, 2, 1, "", "full_state_spec"], [147, 2, 1, "", "full_state_spec_unbatched"], [147, 1, 1, "", "get_buffer"], [147, 1, 1, "", "get_extra_state"], [147, 1, 1, "", "get_parameter"], [147, 1, 1, "", "get_submodule"], [147, 1, 1, "", "half"], [147, 2, 1, "", "input_spec"], [147, 2, 1, "", "input_spec_unbatched"], [147, 1, 1, "", "ipu"], [147, 2, 1, "", "is_spec_locked"], [147, 1, 1, "", "load_state_dict"], [147, 1, 1, "", "maybe_reset"], [147, 1, 1, "", "modules"], [147, 1, 1, "", "mtia"], [147, 1, 1, "", "named_buffers"], [147, 1, 1, "", "named_children"], [147, 1, 1, "", "named_modules"], [147, 1, 1, "", "named_parameters"], [147, 2, 1, "", "observation_keys"], [147, 2, 1, "", "observation_spec"], [147, 2, 1, "", "observation_spec_unbatched"], [147, 2, 1, "", "output_spec"], [147, 2, 1, "", "output_spec_unbatched"], [147, 1, 1, "", "parameters"], [147, 1, 1, "", "rand_action"], [147, 1, 1, "id0", "rand_step"], [147, 1, 1, "", "register_backward_hook"], [147, 1, 1, "", "register_buffer"], [147, 1, 1, "", "register_collector"], [147, 1, 1, "", "register_forward_hook"], [147, 1, 1, "", "register_forward_pre_hook"], [147, 1, 1, "", "register_full_backward_hook"], [147, 1, 1, "", "register_full_backward_pre_hook"], [147, 1, 1, "", "register_gym"], [147, 1, 1, "", "register_load_state_dict_post_hook"], [147, 1, 1, "", "register_load_state_dict_pre_hook"], [147, 1, 1, "", "register_module"], [147, 1, 1, "", "register_parameter"], [147, 1, 1, "", "register_state_dict_post_hook"], [147, 1, 1, "", "register_state_dict_pre_hook"], [147, 1, 1, "", "requires_grad_"], [147, 1, 1, "id1", "reset"], [147, 2, 1, "", "reset_keys"], [147, 2, 1, "", "reward_key"], [147, 2, 1, "", "reward_keys"], [147, 2, 1, "", "reward_spec"], [147, 2, 1, "", "reward_spec_unbatched"], [147, 1, 1, "id2", "rollout"], [147, 1, 1, "", "set_extra_state"], [147, 1, 1, "id3", "set_seed"], [147, 1, 1, "", "set_spec_lock_"], [147, 1, 1, "", "set_submodule"], [147, 2, 1, "", "shape"], [147, 1, 1, "", "share_memory"], [147, 2, 1, "", "specs"], [147, 1, 1, "", "state_dict"], [147, 2, 1, "", "state_keys"], [147, 2, 1, "", "state_spec"], [147, 2, 1, "", "state_spec_unbatched"], [147, 1, 1, "id4", "step"], [147, 1, 1, "", "step_and_maybe_reset"], [147, 1, 1, "", "step_mdp"], [147, 1, 1, "", "to"], [147, 1, 1, "", "to_empty"], [147, 1, 1, "", "train"], [147, 1, 1, "", "type"], [147, 1, 1, "", "xpu"], [147, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[148, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[151, 2, 1, "", "action_key"], [151, 2, 1, "", "action_keys"], [151, 2, 1, "", "action_spec"], [151, 2, 1, "", "action_spec_unbatched"], [151, 1, 1, "", "add_module"], [151, 1, 1, "", "add_truncated_keys"], [151, 1, 1, "", "all_actions"], [151, 1, 1, "", "any_done"], [151, 1, 1, "", "append_transform"], [151, 1, 1, "", "apply"], [151, 1, 1, "", "auto_register_info_dict"], [151, 1, 1, "", "auto_specs_"], [151, 2, 1, "", "batch_dims"], [151, 2, 1, "", "batch_locked"], [151, 2, 1, "", "batch_size"], [151, 1, 1, "", "bfloat16"], [151, 1, 1, "", "buffers"], [151, 1, 1, "", "cardinality"], [151, 1, 1, "", "check_env_specs"], [151, 1, 1, "", "children"], [151, 1, 1, "", "close"], [151, 2, 1, "", "collector"], [151, 1, 1, "", "compile"], [151, 1, 1, "", "cpu"], [151, 1, 1, "", "cuda"], [151, 2, 1, "", "done_key"], [151, 2, 1, "", "done_keys"], [151, 2, 1, "", "done_keys_groups"], [151, 2, 1, "", "done_spec"], [151, 2, 1, "", "done_spec_unbatched"], [151, 1, 1, "", "double"], [151, 1, 1, "", "empty_cache"], [151, 1, 1, "", "eval"], [151, 1, 1, "", "extra_repr"], [151, 1, 1, "", "fake_tensordict"], [151, 1, 1, "", "fast_encoding"], [151, 1, 1, "", "float"], [151, 1, 1, "", "forward"], [151, 2, 1, "", "full_action_spec"], [151, 2, 1, "", "full_action_spec_unbatched"], [151, 2, 1, "", "full_done_spec"], [151, 2, 1, "", "full_done_spec_unbatched"], [151, 2, 1, "", "full_observation_spec_unbatched"], [151, 2, 1, "", "full_reward_spec"], [151, 2, 1, "", "full_reward_spec_unbatched"], [151, 2, 1, "", "full_state_spec"], [151, 2, 1, "", "full_state_spec_unbatched"], [151, 1, 1, "", "get_buffer"], [151, 1, 1, "", "get_extra_state"], [151, 1, 1, "", "get_parameter"], [151, 1, 1, "", "get_submodule"], [151, 1, 1, "", "half"], [151, 2, 1, "", "input_spec"], [151, 2, 1, "", "input_spec_unbatched"], [151, 1, 1, "", "ipu"], [151, 2, 1, "", "is_spec_locked"], [151, 1, 1, "", "load_state_dict"], [151, 1, 1, "", "maybe_reset"], [151, 1, 1, "", "modules"], [151, 1, 1, "", "mtia"], [151, 1, 1, "", "named_buffers"], [151, 1, 1, "", "named_children"], [151, 1, 1, "", "named_modules"], [151, 1, 1, "", "named_parameters"], [151, 2, 1, "", "observation_keys"], [151, 2, 1, "", "observation_spec"], [151, 2, 1, "", "observation_spec_unbatched"], [151, 2, 1, "", "output_spec"], [151, 2, 1, "", "output_spec_unbatched"], [151, 1, 1, "", "parameters"], [151, 1, 1, "", "rand_action"], [151, 1, 1, "", "rand_step"], [151, 1, 1, "", "read_action"], [151, 1, 1, "", "read_done"], [151, 1, 1, "", "read_obs"], [151, 1, 1, "", "read_reward"], [151, 1, 1, "", "register_backward_hook"], [151, 1, 1, "", "register_buffer"], [151, 1, 1, "", "register_collector"], [151, 1, 1, "", "register_forward_hook"], [151, 1, 1, "", "register_forward_pre_hook"], [151, 1, 1, "", "register_full_backward_hook"], [151, 1, 1, "", "register_full_backward_pre_hook"], [151, 1, 1, "", "register_gym"], [151, 1, 1, "", "register_load_state_dict_post_hook"], [151, 1, 1, "", "register_load_state_dict_pre_hook"], [151, 1, 1, "", "register_module"], [151, 1, 1, "", "register_parameter"], [151, 1, 1, "", "register_state_dict_post_hook"], [151, 1, 1, "", "register_state_dict_pre_hook"], [151, 1, 1, "", "requires_grad_"], [151, 1, 1, "", "reset"], [151, 2, 1, "", "reset_keys"], [151, 2, 1, "", "reward_key"], [151, 2, 1, "", "reward_keys"], [151, 2, 1, "", "reward_spec"], [151, 2, 1, "", "reward_spec_unbatched"], [151, 1, 1, "", "rollout"], [151, 1, 1, "", "set_extra_state"], [151, 1, 1, "", "set_info_dict_reader"], [151, 1, 1, "", "set_seed"], [151, 1, 1, "", "set_spec_lock_"], [151, 1, 1, "", "set_submodule"], [151, 2, 1, "", "shape"], [151, 1, 1, "", "share_memory"], [151, 2, 1, "", "specs"], [151, 1, 1, "", "state_dict"], [151, 2, 1, "", "state_keys"], [151, 2, 1, "", "state_spec"], [151, 2, 1, "", "state_spec_unbatched"], [151, 1, 1, "", "step"], [151, 1, 1, "", "step_and_maybe_reset"], [151, 1, 1, "", "step_mdp"], [151, 1, 1, "", "to"], [151, 1, 1, "", "to_empty"], [151, 1, 1, "", "train"], [151, 1, 1, "", "type"], [151, 1, 1, "", "xpu"], [151, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMHashingEnv": [[159, 2, 1, "", "action_key"], [159, 2, 1, "", "action_keys"], [159, 2, 1, "", "action_spec"], [159, 2, 1, "", "action_spec_unbatched"], [159, 1, 1, "", "add_module"], [159, 1, 1, "", "add_truncated_keys"], [159, 1, 1, "", "all_actions"], [159, 1, 1, "", "any_done"], [159, 1, 1, "", "append_transform"], [159, 1, 1, "", "apply"], [159, 1, 1, "", "auto_specs_"], [159, 2, 1, "", "batch_dims"], [159, 2, 1, "", "batch_locked"], [159, 2, 1, "", "batch_size"], [159, 1, 1, "", "bfloat16"], [159, 1, 1, "", "buffers"], [159, 1, 1, "", "cardinality"], [159, 1, 1, "", "check_env_specs"], [159, 1, 1, "", "children"], [159, 2, 1, "", "collector"], [159, 1, 1, "", "compile"], [159, 1, 1, "", "cpu"], [159, 1, 1, "", "cuda"], [159, 2, 1, "", "done_key"], [159, 2, 1, "", "done_keys"], [159, 2, 1, "", "done_keys_groups"], [159, 2, 1, "", "done_spec"], [159, 2, 1, "", "done_spec_unbatched"], [159, 1, 1, "", "double"], [159, 1, 1, "", "empty_cache"], [159, 1, 1, "", "eval"], [159, 1, 1, "", "extra_repr"], [159, 1, 1, "", "fake_tensordict"], [159, 1, 1, "", "float"], [159, 1, 1, "", "forward"], [159, 2, 1, "", "full_action_spec"], [159, 2, 1, "", "full_action_spec_unbatched"], [159, 2, 1, "", "full_done_spec"], [159, 2, 1, "", "full_done_spec_unbatched"], [159, 2, 1, "", "full_observation_spec_unbatched"], [159, 2, 1, "", "full_reward_spec"], [159, 2, 1, "", "full_reward_spec_unbatched"], [159, 2, 1, "", "full_state_spec"], [159, 2, 1, "", "full_state_spec_unbatched"], [159, 1, 1, "", "get_buffer"], [159, 1, 1, "", "get_extra_state"], [159, 1, 1, "", "get_parameter"], [159, 1, 1, "", "get_submodule"], [159, 1, 1, "", "half"], [159, 2, 1, "", "input_spec"], [159, 2, 1, "", "input_spec_unbatched"], [159, 1, 1, "", "ipu"], [159, 2, 1, "", "is_spec_locked"], [159, 1, 1, "", "load_state_dict"], [159, 1, 1, "", "make_tensordict"], [159, 1, 1, "", "maybe_reset"], [159, 1, 1, "", "modules"], [159, 1, 1, "", "mtia"], [159, 1, 1, "", "named_buffers"], [159, 1, 1, "", "named_children"], [159, 1, 1, "", "named_modules"], [159, 1, 1, "", "named_parameters"], [159, 2, 1, "", "observation_keys"], [159, 2, 1, "", "observation_spec"], [159, 2, 1, "", "observation_spec_unbatched"], [159, 2, 1, "", "output_spec"], [159, 2, 1, "", "output_spec_unbatched"], [159, 1, 1, "", "parameters"], [159, 1, 1, "", "rand_action"], [159, 1, 1, "", "rand_step"], [159, 1, 1, "", "register_backward_hook"], [159, 1, 1, "", "register_buffer"], [159, 1, 1, "", "register_collector"], [159, 1, 1, "", "register_forward_hook"], [159, 1, 1, "", "register_forward_pre_hook"], [159, 1, 1, "", "register_full_backward_hook"], [159, 1, 1, "", "register_full_backward_pre_hook"], [159, 1, 1, "", "register_gym"], [159, 1, 1, "", "register_load_state_dict_post_hook"], [159, 1, 1, "", "register_load_state_dict_pre_hook"], [159, 1, 1, "", "register_module"], [159, 1, 1, "", "register_parameter"], [159, 1, 1, "", "register_state_dict_post_hook"], [159, 1, 1, "", "register_state_dict_pre_hook"], [159, 1, 1, "", "requires_grad_"], [159, 1, 1, "", "reset"], [159, 2, 1, "", "reset_keys"], [159, 2, 1, "", "reward_key"], [159, 2, 1, "", "reward_keys"], [159, 2, 1, "", "reward_spec"], [159, 2, 1, "", "reward_spec_unbatched"], [159, 1, 1, "", "rollout"], [159, 1, 1, "", "set_extra_state"], [159, 1, 1, "", "set_seed"], [159, 1, 1, "", "set_spec_lock_"], [159, 1, 1, "", "set_submodule"], [159, 2, 1, "", "shape"], [159, 1, 1, "", "share_memory"], [159, 2, 1, "", "specs"], [159, 1, 1, "", "state_dict"], [159, 2, 1, "", "state_keys"], [159, 2, 1, "", "state_spec"], [159, 2, 1, "", "state_spec_unbatched"], [159, 1, 1, "", "step"], [159, 1, 1, "", "step_and_maybe_reset"], [159, 1, 1, "", "step_mdp"], [159, 1, 1, "", "to"], [159, 1, 1, "", "to_empty"], [159, 1, 1, "", "train"], [159, 1, 1, "", "type"], [159, 1, 1, "", "xpu"], [159, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[171, 2, 1, "", "action_key"], [171, 2, 1, "", "action_keys"], [171, 2, 1, "", "action_spec"], [171, 2, 1, "", "action_spec_unbatched"], [171, 1, 1, "", "add_module"], [171, 1, 1, "", "add_truncated_keys"], [171, 1, 1, "", "all_actions"], [171, 1, 1, "", "any_done"], [171, 1, 1, "", "append_transform"], [171, 1, 1, "", "apply"], [171, 1, 1, "", "auto_specs_"], [171, 2, 1, "", "batch_dims"], [171, 2, 1, "", "batch_locked"], [171, 2, 1, "", "batch_size"], [171, 1, 1, "", "bfloat16"], [171, 1, 1, "", "buffers"], [171, 1, 1, "", "cardinality"], [171, 1, 1, "", "check_env_specs"], [171, 1, 1, "", "children"], [171, 2, 1, "", "collector"], [171, 1, 1, "", "compile"], [171, 1, 1, "", "cpu"], [171, 1, 1, "", "cuda"], [171, 2, 1, "", "done_key"], [171, 2, 1, "", "done_keys"], [171, 2, 1, "", "done_keys_groups"], [171, 2, 1, "", "done_spec"], [171, 2, 1, "", "done_spec_unbatched"], [171, 1, 1, "", "double"], [171, 1, 1, "", "empty_cache"], [171, 1, 1, "", "eval"], [171, 1, 1, "", "extra_repr"], [171, 1, 1, "", "fake_tensordict"], [171, 1, 1, "", "float"], [171, 1, 1, "", "forward"], [171, 2, 1, "", "full_action_spec"], [171, 2, 1, "", "full_action_spec_unbatched"], [171, 2, 1, "", "full_done_spec"], [171, 2, 1, "", "full_done_spec_unbatched"], [171, 2, 1, "", "full_observation_spec_unbatched"], [171, 2, 1, "", "full_reward_spec"], [171, 2, 1, "", "full_reward_spec_unbatched"], [171, 2, 1, "", "full_state_spec"], [171, 2, 1, "", "full_state_spec_unbatched"], [171, 1, 1, "", "get_buffer"], [171, 1, 1, "", "get_extra_state"], [171, 1, 1, "", "get_parameter"], [171, 1, 1, "", "get_submodule"], [171, 1, 1, "", "half"], [171, 2, 1, "", "input_spec"], [171, 2, 1, "", "input_spec_unbatched"], [171, 1, 1, "", "ipu"], [171, 2, 1, "", "is_spec_locked"], [171, 1, 1, "", "load_state_dict"], [171, 1, 1, "", "maybe_reset"], [171, 1, 1, "", "modules"], [171, 1, 1, "", "mtia"], [171, 1, 1, "", "named_buffers"], [171, 1, 1, "", "named_children"], [171, 1, 1, "", "named_modules"], [171, 1, 1, "", "named_parameters"], [171, 2, 1, "", "observation_keys"], [171, 2, 1, "", "observation_spec"], [171, 2, 1, "", "observation_spec_unbatched"], [171, 2, 1, "", "output_spec"], [171, 2, 1, "", "output_spec_unbatched"], [171, 1, 1, "", "parameters"], [171, 1, 1, "", "rand_action"], [171, 1, 1, "", "rand_step"], [171, 1, 1, "", "register_backward_hook"], [171, 1, 1, "", "register_buffer"], [171, 1, 1, "", "register_collector"], [171, 1, 1, "", "register_forward_hook"], [171, 1, 1, "", "register_forward_pre_hook"], [171, 1, 1, "", "register_full_backward_hook"], [171, 1, 1, "", "register_full_backward_pre_hook"], [171, 1, 1, "", "register_gym"], [171, 1, 1, "", "register_load_state_dict_post_hook"], [171, 1, 1, "", "register_load_state_dict_pre_hook"], [171, 1, 1, "", "register_module"], [171, 1, 1, "", "register_parameter"], [171, 1, 1, "", "register_state_dict_post_hook"], [171, 1, 1, "", "register_state_dict_pre_hook"], [171, 1, 1, "", "requires_grad_"], [171, 1, 1, "", "reset"], [171, 2, 1, "", "reset_keys"], [171, 2, 1, "", "reward_key"], [171, 2, 1, "", "reward_keys"], [171, 2, 1, "", "reward_spec"], [171, 2, 1, "", "reward_spec_unbatched"], [171, 1, 1, "", "rollout"], [171, 1, 1, "", "set_extra_state"], [171, 1, 1, "", "set_seed"], [171, 1, 1, "", "set_spec_lock_"], [171, 1, 1, "", "set_submodule"], [171, 2, 1, "", "shape"], [171, 1, 1, "", "share_memory"], [171, 2, 1, "", "specs"], [171, 1, 1, "", "state_dict"], [171, 2, 1, "", "state_keys"], [171, 2, 1, "", "state_spec"], [171, 2, 1, "", "state_spec_unbatched"], [171, 1, 1, "", "step"], [171, 1, 1, "", "step_and_maybe_reset"], [171, 1, 1, "", "step_mdp"], [171, 1, 1, "", "to"], [171, 1, 1, "", "to_empty"], [171, 1, 1, "", "train"], [171, 1, 1, "", "type"], [171, 1, 1, "", "update_kwargs"], [171, 1, 1, "", "xpu"], [171, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[172, 2, 1, "", "action_key"], [172, 2, 1, "", "action_keys"], [172, 2, 1, "", "action_spec"], [172, 2, 1, "", "action_spec_unbatched"], [172, 1, 1, "", "add_module"], [172, 1, 1, "", "add_truncated_keys"], [172, 1, 1, "", "all_actions"], [172, 1, 1, "", "any_done"], [172, 1, 1, "", "append_transform"], [172, 1, 1, "", "apply"], [172, 1, 1, "", "auto_specs_"], [172, 2, 1, "", "batch_dims"], [172, 2, 1, "", "batch_size"], [172, 1, 1, "", "bfloat16"], [172, 1, 1, "", "buffers"], [172, 1, 1, "", "cardinality"], [172, 1, 1, "", "check_env_specs"], [172, 1, 1, "", "children"], [172, 2, 1, "", "collector"], [172, 1, 1, "", "compile"], [172, 1, 1, "", "cpu"], [172, 1, 1, "", "cuda"], [172, 2, 1, "", "done_key"], [172, 2, 1, "", "done_keys"], [172, 2, 1, "", "done_keys_groups"], [172, 2, 1, "", "done_spec"], [172, 2, 1, "", "done_spec_unbatched"], [172, 1, 1, "", "double"], [172, 1, 1, "", "empty_cache"], [172, 1, 1, "", "eval"], [172, 1, 1, "", "extra_repr"], [172, 1, 1, "", "fake_tensordict"], [172, 1, 1, "", "float"], [172, 1, 1, "", "forward"], [172, 2, 1, "", "full_action_spec"], [172, 2, 1, "", "full_action_spec_unbatched"], [172, 2, 1, "", "full_done_spec"], [172, 2, 1, "", "full_done_spec_unbatched"], [172, 2, 1, "", "full_observation_spec_unbatched"], [172, 2, 1, "", "full_reward_spec"], [172, 2, 1, "", "full_reward_spec_unbatched"], [172, 2, 1, "", "full_state_spec"], [172, 2, 1, "", "full_state_spec_unbatched"], [172, 1, 1, "", "gen_params"], [172, 1, 1, "", "get_buffer"], [172, 1, 1, "", "get_extra_state"], [172, 1, 1, "", "get_parameter"], [172, 1, 1, "", "get_submodule"], [172, 1, 1, "", "half"], [172, 2, 1, "", "input_spec"], [172, 2, 1, "", "input_spec_unbatched"], [172, 1, 1, "", "ipu"], [172, 2, 1, "", "is_spec_locked"], [172, 1, 1, "", "load_state_dict"], [172, 1, 1, "", "maybe_reset"], [172, 1, 1, "", "modules"], [172, 1, 1, "", "mtia"], [172, 1, 1, "", "named_buffers"], [172, 1, 1, "", "named_children"], [172, 1, 1, "", "named_modules"], [172, 1, 1, "", "named_parameters"], [172, 2, 1, "", "observation_keys"], [172, 2, 1, "", "observation_spec"], [172, 2, 1, "", "observation_spec_unbatched"], [172, 2, 1, "", "output_spec"], [172, 2, 1, "", "output_spec_unbatched"], [172, 1, 1, "", "parameters"], [172, 1, 1, "", "rand_action"], [172, 1, 1, "", "rand_step"], [172, 1, 1, "", "register_backward_hook"], [172, 1, 1, "", "register_buffer"], [172, 1, 1, "", "register_collector"], [172, 1, 1, "", "register_forward_hook"], [172, 1, 1, "", "register_forward_pre_hook"], [172, 1, 1, "", "register_full_backward_hook"], [172, 1, 1, "", "register_full_backward_pre_hook"], [172, 1, 1, "", "register_gym"], [172, 1, 1, "", "register_load_state_dict_post_hook"], [172, 1, 1, "", "register_load_state_dict_pre_hook"], [172, 1, 1, "", "register_module"], [172, 1, 1, "", "register_parameter"], [172, 1, 1, "", "register_state_dict_post_hook"], [172, 1, 1, "", "register_state_dict_pre_hook"], [172, 1, 1, "", "requires_grad_"], [172, 1, 1, "", "reset"], [172, 2, 1, "", "reset_keys"], [172, 2, 1, "", "reward_key"], [172, 2, 1, "", "reward_keys"], [172, 2, 1, "", "reward_spec"], [172, 2, 1, "", "reward_spec_unbatched"], [172, 1, 1, "", "rollout"], [172, 1, 1, "", "set_extra_state"], [172, 1, 1, "", "set_seed"], [172, 1, 1, "", "set_spec_lock_"], [172, 1, 1, "", "set_submodule"], [172, 2, 1, "", "shape"], [172, 1, 1, "", "share_memory"], [172, 2, 1, "", "specs"], [172, 1, 1, "", "state_dict"], [172, 2, 1, "", "state_keys"], [172, 2, 1, "", "state_spec"], [172, 2, 1, "", "state_spec_unbatched"], [172, 1, 1, "", "step"], [172, 1, 1, "", "step_and_maybe_reset"], [172, 1, 1, "", "step_mdp"], [172, 1, 1, "", "to"], [172, 1, 1, "", "to_empty"], [172, 1, 1, "", "train"], [172, 1, 1, "", "type"], [172, 1, 1, "", "xpu"], [172, 1, 1, "", "zero_grad"]], "torchrl.envs.ProcessorAsyncEnvPool": [[175, 1, 1, "", "_setup"], [175, 2, 1, "", "action_key"], [175, 2, 1, "", "action_keys"], [175, 2, 1, "", "action_spec"], [175, 2, 1, "", "action_spec_unbatched"], [175, 1, 1, "", "add_module"], [175, 1, 1, "", "add_truncated_keys"], [175, 1, 1, "", "all_actions"], [175, 1, 1, "", "any_done"], [175, 1, 1, "", "append_transform"], [175, 1, 1, "", "apply"], [175, 1, 1, "", "async_reset_recv"], [175, 1, 1, "", "async_reset_send"], [175, 1, 1, "", "async_step_recv"], [175, 1, 1, "", "async_step_send"], [175, 1, 1, "", "auto_specs_"], [175, 2, 1, "", "batch_dims"], [175, 2, 1, "", "batch_locked"], [175, 2, 1, "", "batch_size"], [175, 1, 1, "", "bfloat16"], [175, 1, 1, "", "buffers"], [175, 1, 1, "", "cardinality"], [175, 1, 1, "", "check_env_specs"], [175, 1, 1, "", "children"], [175, 2, 1, "", "collector"], [175, 1, 1, "", "compile"], [175, 1, 1, "", "cpu"], [175, 1, 1, "", "cuda"], [175, 2, 1, "", "done_key"], [175, 2, 1, "", "done_keys"], [175, 2, 1, "", "done_keys_groups"], [175, 2, 1, "", "done_spec"], [175, 2, 1, "", "done_spec_unbatched"], [175, 1, 1, "", "double"], [175, 1, 1, "", "empty_cache"], [175, 2, 1, "", "env_batch_sizes"], [175, 1, 1, "", "eval"], [175, 1, 1, "", "extra_repr"], [175, 1, 1, "", "fake_tensordict"], [175, 1, 1, "", "float"], [175, 1, 1, "", "forward"], [175, 2, 1, "", "full_action_spec"], [175, 2, 1, "", "full_action_spec_unbatched"], [175, 2, 1, "", "full_done_spec"], [175, 2, 1, "", "full_done_spec_unbatched"], [175, 2, 1, "", "full_observation_spec_unbatched"], [175, 2, 1, "", "full_reward_spec"], [175, 2, 1, "", "full_reward_spec_unbatched"], [175, 2, 1, "", "full_state_spec"], [175, 2, 1, "", "full_state_spec_unbatched"], [175, 1, 1, "", "get_buffer"], [175, 1, 1, "", "get_extra_state"], [175, 1, 1, "", "get_parameter"], [175, 1, 1, "", "get_submodule"], [175, 1, 1, "", "half"], [175, 2, 1, "", "input_spec"], [175, 2, 1, "", "input_spec_unbatched"], [175, 1, 1, "", "ipu"], [175, 2, 1, "", "is_spec_locked"], [175, 1, 1, "", "load_state_dict"], [175, 1, 1, "", "maybe_reset"], [175, 1, 1, "", "modules"], [175, 1, 1, "", "mtia"], [175, 1, 1, "", "named_buffers"], [175, 1, 1, "", "named_children"], [175, 1, 1, "", "named_modules"], [175, 1, 1, "", "named_parameters"], [175, 2, 1, "", "observation_keys"], [175, 2, 1, "", "observation_spec"], [175, 2, 1, "", "observation_spec_unbatched"], [175, 2, 1, "", "output_spec"], [175, 2, 1, "", "output_spec_unbatched"], [175, 1, 1, "", "parameters"], [175, 1, 1, "", "rand_action"], [175, 1, 1, "", "rand_step"], [175, 1, 1, "", "register_backward_hook"], [175, 1, 1, "", "register_buffer"], [175, 1, 1, "", "register_collector"], [175, 1, 1, "", "register_forward_hook"], [175, 1, 1, "", "register_forward_pre_hook"], [175, 1, 1, "", "register_full_backward_hook"], [175, 1, 1, "", "register_full_backward_pre_hook"], [175, 1, 1, "", "register_gym"], [175, 1, 1, "", "register_load_state_dict_post_hook"], [175, 1, 1, "", "register_load_state_dict_pre_hook"], [175, 1, 1, "", "register_module"], [175, 1, 1, "", "register_parameter"], [175, 1, 1, "", "register_state_dict_post_hook"], [175, 1, 1, "", "register_state_dict_pre_hook"], [175, 1, 1, "", "requires_grad_"], [175, 1, 1, "", "reset"], [175, 2, 1, "", "reset_keys"], [175, 2, 1, "", "reward_key"], [175, 2, 1, "", "reward_keys"], [175, 2, 1, "", "reward_spec"], [175, 2, 1, "", "reward_spec_unbatched"], [175, 1, 1, "", "rollout"], [175, 1, 1, "", "set_extra_state"], [175, 1, 1, "", "set_seed"], [175, 1, 1, "", "set_spec_lock_"], [175, 1, 1, "", "set_submodule"], [175, 2, 1, "", "shape"], [175, 1, 1, "", "share_memory"], [175, 1, 1, "", "shutdown"], [175, 2, 1, "", "specs"], [175, 1, 1, "", "state_dict"], [175, 2, 1, "", "state_keys"], [175, 2, 1, "", "state_spec"], [175, 2, 1, "", "state_spec_unbatched"], [175, 1, 1, "", "step"], [175, 1, 1, "", "step_and_maybe_reset"], [175, 1, 1, "", "step_mdp"], [175, 1, 1, "", "to"], [175, 1, 1, "", "to_empty"], [175, 1, 1, "", "train"], [175, 1, 1, "", "type"], [175, 1, 1, "", "xpu"], [175, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[180, 2, 1, "", "action_key"], [180, 2, 1, "", "action_keys"], [180, 2, 1, "", "action_spec"], [180, 2, 1, "", "action_spec_unbatched"], [180, 1, 1, "", "add_module"], [180, 1, 1, "", "add_truncated_keys"], [180, 1, 1, "", "all_actions"], [180, 1, 1, "", "any_done"], [180, 1, 1, "", "append_transform"], [180, 1, 1, "", "apply"], [180, 1, 1, "", "auto_specs_"], [180, 2, 1, "", "batch_dims"], [180, 2, 1, "", "batch_locked"], [180, 2, 1, "", "batch_size"], [180, 1, 1, "", "bfloat16"], [180, 1, 1, "", "buffers"], [180, 1, 1, "", "cardinality"], [180, 1, 1, "", "check_env_specs"], [180, 1, 1, "", "children"], [180, 2, 1, "", "collector"], [180, 1, 1, "", "compile"], [180, 1, 1, "", "cpu"], [180, 1, 1, "", "cuda"], [180, 2, 1, "", "done_key"], [180, 2, 1, "", "done_keys"], [180, 2, 1, "", "done_keys_groups"], [180, 2, 1, "", "done_spec"], [180, 2, 1, "", "done_spec_unbatched"], [180, 1, 1, "", "double"], [180, 1, 1, "", "empty_cache"], [180, 1, 1, "", "eval"], [180, 1, 1, "", "extra_repr"], [180, 1, 1, "", "fake_tensordict"], [180, 1, 1, "", "float"], [180, 1, 1, "", "forward"], [180, 2, 1, "", "full_action_spec"], [180, 2, 1, "", "full_action_spec_unbatched"], [180, 2, 1, "", "full_done_spec"], [180, 2, 1, "", "full_done_spec_unbatched"], [180, 2, 1, "", "full_observation_spec_unbatched"], [180, 2, 1, "", "full_reward_spec"], [180, 2, 1, "", "full_reward_spec_unbatched"], [180, 2, 1, "", "full_state_spec"], [180, 2, 1, "", "full_state_spec_unbatched"], [180, 1, 1, "", "get_buffer"], [180, 1, 1, "", "get_extra_state"], [180, 1, 1, "", "get_parameter"], [180, 1, 1, "", "get_submodule"], [180, 1, 1, "", "half"], [180, 2, 1, "", "input_spec"], [180, 2, 1, "", "input_spec_unbatched"], [180, 1, 1, "", "ipu"], [180, 2, 1, "", "is_spec_locked"], [180, 1, 1, "", "load_state_dict"], [180, 1, 1, "", "maybe_reset"], [180, 1, 1, "", "modules"], [180, 1, 1, "", "mtia"], [180, 1, 1, "", "named_buffers"], [180, 1, 1, "", "named_children"], [180, 1, 1, "", "named_modules"], [180, 1, 1, "", "named_parameters"], [180, 2, 1, "", "observation_keys"], [180, 2, 1, "", "observation_spec"], [180, 2, 1, "", "observation_spec_unbatched"], [180, 2, 1, "", "output_spec"], [180, 2, 1, "", "output_spec_unbatched"], [180, 1, 1, "", "parameters"], [180, 1, 1, "", "rand_action"], [180, 1, 1, "", "rand_step"], [180, 1, 1, "", "register_backward_hook"], [180, 1, 1, "", "register_buffer"], [180, 1, 1, "", "register_collector"], [180, 1, 1, "", "register_forward_hook"], [180, 1, 1, "", "register_forward_pre_hook"], [180, 1, 1, "", "register_full_backward_hook"], [180, 1, 1, "", "register_full_backward_pre_hook"], [180, 1, 1, "", "register_gym"], [180, 1, 1, "", "register_load_state_dict_post_hook"], [180, 1, 1, "", "register_load_state_dict_pre_hook"], [180, 1, 1, "", "register_module"], [180, 1, 1, "", "register_parameter"], [180, 1, 1, "", "register_state_dict_post_hook"], [180, 1, 1, "", "register_state_dict_pre_hook"], [180, 1, 1, "", "requires_grad_"], [180, 1, 1, "", "reset"], [180, 2, 1, "", "reset_keys"], [180, 2, 1, "", "reward_key"], [180, 2, 1, "", "reward_keys"], [180, 2, 1, "", "reward_spec"], [180, 2, 1, "", "reward_spec_unbatched"], [180, 1, 1, "", "rollout"], [180, 1, 1, "", "set_extra_state"], [180, 1, 1, "", "set_seed"], [180, 1, 1, "", "set_spec_lock_"], [180, 1, 1, "", "set_submodule"], [180, 2, 1, "", "shape"], [180, 1, 1, "", "share_memory"], [180, 2, 1, "", "specs"], [180, 1, 1, "", "state_dict"], [180, 2, 1, "", "state_keys"], [180, 2, 1, "", "state_spec"], [180, 2, 1, "", "state_spec_unbatched"], [180, 1, 1, "", "step"], [180, 1, 1, "", "step_and_maybe_reset"], [180, 1, 1, "", "step_mdp"], [180, 1, 1, "", "to"], [180, 1, 1, "", "to_empty"], [180, 1, 1, "", "train"], [180, 1, 1, "", "type"], [180, 1, 1, "", "update_kwargs"], [180, 1, 1, "", "xpu"], [180, 1, 1, "", "zero_grad"]], "torchrl.envs.ThreadingAsyncEnvPool": [[181, 1, 1, "", "_setup"], [181, 2, 1, "", "action_key"], [181, 2, 1, "", "action_keys"], [181, 2, 1, "", "action_spec"], [181, 2, 1, "", "action_spec_unbatched"], [181, 1, 1, "", "add_module"], [181, 1, 1, "", "add_truncated_keys"], [181, 1, 1, "", "all_actions"], [181, 1, 1, "", "any_done"], [181, 1, 1, "", "append_transform"], [181, 1, 1, "", "apply"], [181, 1, 1, "", "async_reset_recv"], [181, 1, 1, "", "async_reset_send"], [181, 1, 1, "", "async_step_recv"], [181, 1, 1, "", "async_step_send"], [181, 1, 1, "", "auto_specs_"], [181, 2, 1, "", "batch_dims"], [181, 2, 1, "", "batch_locked"], [181, 2, 1, "", "batch_size"], [181, 1, 1, "", "bfloat16"], [181, 1, 1, "", "buffers"], [181, 1, 1, "", "cardinality"], [181, 1, 1, "", "check_env_specs"], [181, 1, 1, "", "children"], [181, 2, 1, "", "collector"], [181, 1, 1, "", "compile"], [181, 1, 1, "", "cpu"], [181, 1, 1, "", "cuda"], [181, 2, 1, "", "done_key"], [181, 2, 1, "", "done_keys"], [181, 2, 1, "", "done_keys_groups"], [181, 2, 1, "", "done_spec"], [181, 2, 1, "", "done_spec_unbatched"], [181, 1, 1, "", "double"], [181, 1, 1, "", "empty_cache"], [181, 2, 1, "", "env_batch_sizes"], [181, 1, 1, "", "eval"], [181, 1, 1, "", "extra_repr"], [181, 1, 1, "", "fake_tensordict"], [181, 1, 1, "", "float"], [181, 1, 1, "", "forward"], [181, 2, 1, "", "full_action_spec"], [181, 2, 1, "", "full_action_spec_unbatched"], [181, 2, 1, "", "full_done_spec"], [181, 2, 1, "", "full_done_spec_unbatched"], [181, 2, 1, "", "full_observation_spec_unbatched"], [181, 2, 1, "", "full_reward_spec"], [181, 2, 1, "", "full_reward_spec_unbatched"], [181, 2, 1, "", "full_state_spec"], [181, 2, 1, "", "full_state_spec_unbatched"], [181, 1, 1, "", "get_buffer"], [181, 1, 1, "", "get_extra_state"], [181, 1, 1, "", "get_parameter"], [181, 1, 1, "", "get_submodule"], [181, 1, 1, "", "half"], [181, 2, 1, "", "input_spec"], [181, 2, 1, "", "input_spec_unbatched"], [181, 1, 1, "", "ipu"], [181, 2, 1, "", "is_spec_locked"], [181, 1, 1, "", "load_state_dict"], [181, 1, 1, "", "maybe_reset"], [181, 1, 1, "", "modules"], [181, 1, 1, "", "mtia"], [181, 1, 1, "", "named_buffers"], [181, 1, 1, "", "named_children"], [181, 1, 1, "", "named_modules"], [181, 1, 1, "", "named_parameters"], [181, 2, 1, "", "observation_keys"], [181, 2, 1, "", "observation_spec"], [181, 2, 1, "", "observation_spec_unbatched"], [181, 2, 1, "", "output_spec"], [181, 2, 1, "", "output_spec_unbatched"], [181, 1, 1, "", "parameters"], [181, 1, 1, "", "rand_action"], [181, 1, 1, "", "rand_step"], [181, 1, 1, "", "register_backward_hook"], [181, 1, 1, "", "register_buffer"], [181, 1, 1, "", "register_collector"], [181, 1, 1, "", "register_forward_hook"], [181, 1, 1, "", "register_forward_pre_hook"], [181, 1, 1, "", "register_full_backward_hook"], [181, 1, 1, "", "register_full_backward_pre_hook"], [181, 1, 1, "", "register_gym"], [181, 1, 1, "", "register_load_state_dict_post_hook"], [181, 1, 1, "", "register_load_state_dict_pre_hook"], [181, 1, 1, "", "register_module"], [181, 1, 1, "", "register_parameter"], [181, 1, 1, "", "register_state_dict_post_hook"], [181, 1, 1, "", "register_state_dict_pre_hook"], [181, 1, 1, "", "requires_grad_"], [181, 1, 1, "", "reset"], [181, 2, 1, "", "reset_keys"], [181, 2, 1, "", "reward_key"], [181, 2, 1, "", "reward_keys"], [181, 2, 1, "", "reward_spec"], [181, 2, 1, "", "reward_spec_unbatched"], [181, 1, 1, "", "rollout"], [181, 1, 1, "", "set_extra_state"], [181, 1, 1, "", "set_seed"], [181, 1, 1, "", "set_spec_lock_"], [181, 1, 1, "", "set_submodule"], [181, 2, 1, "", "shape"], [181, 1, 1, "", "share_memory"], [181, 1, 1, "", "shutdown"], [181, 2, 1, "", "specs"], [181, 1, 1, "", "state_dict"], [181, 2, 1, "", "state_keys"], [181, 2, 1, "", "state_spec"], [181, 2, 1, "", "state_spec_unbatched"], [181, 1, 1, "", "step"], [181, 1, 1, "", "step_and_maybe_reset"], [181, 1, 1, "", "step_mdp"], [181, 1, 1, "", "to"], [181, 1, 1, "", "to_empty"], [181, 1, 1, "", "train"], [181, 1, 1, "", "type"], [181, 1, 1, "", "xpu"], [181, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[182, 2, 1, "", "action_key"], [182, 2, 1, "", "action_keys"], [182, 2, 1, "", "action_spec"], [182, 2, 1, "", "action_spec_unbatched"], [182, 1, 1, "", "add_module"], [182, 1, 1, "", "add_truncated_keys"], [182, 1, 1, "", "all_actions"], [182, 1, 1, "", "any_done"], [182, 1, 1, "", "append_transform"], [182, 1, 1, "", "apply"], [182, 1, 1, "", "auto_specs_"], [182, 2, 1, "", "batch_dims"], [182, 2, 1, "", "batch_size"], [182, 1, 1, "", "bfloat16"], [182, 1, 1, "", "buffers"], [182, 1, 1, "", "cardinality"], [182, 1, 1, "", "check_env_specs"], [182, 1, 1, "", "children"], [182, 2, 1, "", "collector"], [182, 1, 1, "", "compile"], [182, 1, 1, "", "cpu"], [182, 1, 1, "", "cuda"], [182, 2, 1, "", "done_key"], [182, 2, 1, "", "done_keys"], [182, 2, 1, "", "done_keys_groups"], [182, 2, 1, "", "done_spec"], [182, 2, 1, "", "done_spec_unbatched"], [182, 1, 1, "", "double"], [182, 1, 1, "", "empty_cache"], [182, 1, 1, "", "eval"], [182, 1, 1, "", "extra_repr"], [182, 1, 1, "", "fake_tensordict"], [182, 1, 1, "", "float"], [182, 1, 1, "", "forward"], [182, 2, 1, "", "full_action_spec"], [182, 2, 1, "", "full_action_spec_unbatched"], [182, 2, 1, "", "full_done_spec"], [182, 2, 1, "", "full_done_spec_unbatched"], [182, 2, 1, "", "full_observation_spec_unbatched"], [182, 2, 1, "", "full_reward_spec"], [182, 2, 1, "", "full_reward_spec_unbatched"], [182, 2, 1, "", "full_state_spec"], [182, 2, 1, "", "full_state_spec_unbatched"], [182, 1, 1, "", "get_buffer"], [182, 1, 1, "", "get_extra_state"], [182, 1, 1, "", "get_parameter"], [182, 1, 1, "", "get_submodule"], [182, 1, 1, "", "half"], [182, 2, 1, "", "input_spec"], [182, 2, 1, "", "input_spec_unbatched"], [182, 1, 1, "", "ipu"], [182, 2, 1, "", "is_spec_locked"], [182, 1, 1, "", "load_state_dict"], [182, 1, 1, "", "maybe_reset"], [182, 1, 1, "", "modules"], [182, 1, 1, "", "mtia"], [182, 1, 1, "", "named_buffers"], [182, 1, 1, "", "named_children"], [182, 1, 1, "", "named_modules"], [182, 1, 1, "", "named_parameters"], [182, 2, 1, "", "observation_keys"], [182, 2, 1, "", "observation_spec"], [182, 2, 1, "", "observation_spec_unbatched"], [182, 2, 1, "", "output_spec"], [182, 2, 1, "", "output_spec_unbatched"], [182, 1, 1, "", "parameters"], [182, 1, 1, "", "rand_action"], [182, 1, 1, "", "rand_step"], [182, 1, 1, "", "register_backward_hook"], [182, 1, 1, "", "register_buffer"], [182, 1, 1, "", "register_collector"], [182, 1, 1, "", "register_forward_hook"], [182, 1, 1, "", "register_forward_pre_hook"], [182, 1, 1, "", "register_full_backward_hook"], [182, 1, 1, "", "register_full_backward_pre_hook"], [182, 1, 1, "", "register_gym"], [182, 1, 1, "", "register_load_state_dict_post_hook"], [182, 1, 1, "", "register_load_state_dict_pre_hook"], [182, 1, 1, "", "register_module"], [182, 1, 1, "", "register_parameter"], [182, 1, 1, "", "register_state_dict_post_hook"], [182, 1, 1, "", "register_state_dict_pre_hook"], [182, 1, 1, "", "requires_grad_"], [182, 1, 1, "", "reset"], [182, 2, 1, "", "reset_keys"], [182, 2, 1, "", "reward_key"], [182, 2, 1, "", "reward_keys"], [182, 2, 1, "", "reward_spec"], [182, 2, 1, "", "reward_spec_unbatched"], [182, 1, 1, "", "rollout"], [182, 1, 1, "", "set_extra_state"], [182, 1, 1, "", "set_seed"], [182, 1, 1, "", "set_spec_lock_"], [182, 1, 1, "", "set_submodule"], [182, 2, 1, "", "shape"], [182, 1, 1, "", "share_memory"], [182, 2, 1, "", "specs"], [182, 1, 1, "", "state_dict"], [182, 2, 1, "", "state_keys"], [182, 2, 1, "", "state_spec"], [182, 2, 1, "", "state_spec_unbatched"], [182, 1, 1, "", "step"], [182, 1, 1, "", "step_and_maybe_reset"], [182, 1, 1, "", "step_mdp"], [182, 1, 1, "", "to"], [182, 1, 1, "", "to_empty"], [182, 1, 1, "", "train"], [182, 1, 1, "", "type"], [182, 1, 1, "", "xpu"], [182, 1, 1, "", "zero_grad"]], "torchrl.envs.llm": [[192, 0, 1, "", "ChatEnv"], [193, 0, 1, "", "DatasetChatEnv"], [194, 0, 1, "", "GSM8KEnv"], [195, 0, 1, "", "GSM8KPrepareQuestion"], [196, 0, 1, "", "GSM8KRewardParser"], [197, 0, 1, "", "IFEvalEnv"], [198, 0, 1, "", "IFEvalScoreData"], [199, 0, 1, "", "IfEvalScorer"], [200, 0, 1, "", "LLMEnv"], [201, 0, 1, "", "LLMHashingEnv"], [202, 0, 1, "", "MLGymWrapper"], [203, 0, 1, "", "make_gsm8k_env"], [204, 0, 1, "", "make_mlgym"]], "torchrl.envs.llm.ChatEnv": [[192, 2, 1, "", "action_key"], [192, 2, 1, "", "action_keys"], [192, 2, 1, "", "action_spec"], [192, 2, 1, "", "action_spec_unbatched"], [192, 1, 1, "", "add_module"], [192, 1, 1, "", "add_truncated_keys"], [192, 1, 1, "", "all_actions"], [192, 1, 1, "", "any_done"], [192, 1, 1, "", "append_transform"], [192, 1, 1, "", "apply"], [192, 1, 1, "", "auto_specs_"], [192, 2, 1, "", "batch_dims"], [192, 2, 1, "", "batch_locked"], [192, 2, 1, "", "batch_size"], [192, 1, 1, "", "bfloat16"], [192, 1, 1, "", "buffers"], [192, 1, 1, "", "cardinality"], [192, 1, 1, "", "check_env_specs"], [192, 1, 1, "", "children"], [192, 2, 1, "", "collector"], [192, 1, 1, "", "compile"], [192, 1, 1, "", "cpu"], [192, 1, 1, "", "cuda"], [192, 2, 1, "", "done_key"], [192, 2, 1, "", "done_keys"], [192, 2, 1, "", "done_keys_groups"], [192, 2, 1, "", "done_spec"], [192, 2, 1, "", "done_spec_unbatched"], [192, 1, 1, "", "double"], [192, 1, 1, "", "empty_cache"], [192, 1, 1, "", "eval"], [192, 1, 1, "", "extra_repr"], [192, 1, 1, "", "fake_tensordict"], [192, 1, 1, "", "float"], [192, 1, 1, "", "forward"], [192, 1, 1, "", "from_dataloader"], [192, 2, 1, "", "full_action_spec"], [192, 2, 1, "", "full_action_spec_unbatched"], [192, 2, 1, "", "full_done_spec"], [192, 2, 1, "", "full_done_spec_unbatched"], [192, 2, 1, "", "full_observation_spec_unbatched"], [192, 2, 1, "", "full_reward_spec"], [192, 2, 1, "", "full_reward_spec_unbatched"], [192, 2, 1, "", "full_state_spec"], [192, 2, 1, "", "full_state_spec_unbatched"], [192, 1, 1, "", "get_buffer"], [192, 1, 1, "", "get_extra_state"], [192, 1, 1, "", "get_parameter"], [192, 1, 1, "", "get_submodule"], [192, 1, 1, "", "half"], [192, 2, 1, "", "input_spec"], [192, 2, 1, "", "input_spec_unbatched"], [192, 1, 1, "", "ipu"], [192, 2, 1, "", "is_spec_locked"], [192, 1, 1, "", "load_state_dict"], [192, 1, 1, "", "maybe_reset"], [192, 1, 1, "", "modules"], [192, 1, 1, "", "mtia"], [192, 1, 1, "", "named_buffers"], [192, 1, 1, "", "named_children"], [192, 1, 1, "", "named_modules"], [192, 1, 1, "", "named_parameters"], [192, 2, 1, "", "observation_keys"], [192, 2, 1, "", "observation_spec"], [192, 2, 1, "", "observation_spec_unbatched"], [192, 2, 1, "", "output_spec"], [192, 2, 1, "", "output_spec_unbatched"], [192, 1, 1, "", "parameters"], [192, 1, 1, "", "rand_action"], [192, 1, 1, "", "rand_step"], [192, 1, 1, "", "register_backward_hook"], [192, 1, 1, "", "register_buffer"], [192, 1, 1, "", "register_collector"], [192, 1, 1, "", "register_forward_hook"], [192, 1, 1, "", "register_forward_pre_hook"], [192, 1, 1, "", "register_full_backward_hook"], [192, 1, 1, "", "register_full_backward_pre_hook"], [192, 1, 1, "", "register_gym"], [192, 1, 1, "", "register_load_state_dict_post_hook"], [192, 1, 1, "", "register_load_state_dict_pre_hook"], [192, 1, 1, "", "register_module"], [192, 1, 1, "", "register_parameter"], [192, 1, 1, "", "register_state_dict_post_hook"], [192, 1, 1, "", "register_state_dict_pre_hook"], [192, 1, 1, "", "requires_grad_"], [192, 1, 1, "id0", "reset"], [192, 2, 1, "", "reset_keys"], [192, 2, 1, "", "reward_key"], [192, 2, 1, "", "reward_keys"], [192, 2, 1, "", "reward_spec"], [192, 2, 1, "", "reward_spec_unbatched"], [192, 1, 1, "", "rollout"], [192, 1, 1, "", "set_extra_state"], [192, 1, 1, "", "set_seed"], [192, 1, 1, "", "set_spec_lock_"], [192, 1, 1, "", "set_submodule"], [192, 2, 1, "", "shape"], [192, 1, 1, "", "share_memory"], [192, 2, 1, "", "specs"], [192, 1, 1, "", "state_dict"], [192, 2, 1, "", "state_keys"], [192, 2, 1, "", "state_spec"], [192, 2, 1, "", "state_spec_unbatched"], [192, 1, 1, "id1", "step"], [192, 1, 1, "", "step_and_maybe_reset"], [192, 1, 1, "", "step_mdp"], [192, 1, 1, "", "to"], [192, 1, 1, "", "to_empty"], [192, 1, 1, "", "train"], [192, 1, 1, "", "type"], [192, 1, 1, "", "xpu"], [192, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.DatasetChatEnv": [[193, 2, 1, "", "action_key"], [193, 2, 1, "", "action_keys"], [193, 2, 1, "", "action_spec"], [193, 2, 1, "", "action_spec_unbatched"], [193, 1, 1, "", "add_module"], [193, 1, 1, "", "add_truncated_keys"], [193, 1, 1, "", "all_actions"], [193, 1, 1, "", "any_done"], [193, 1, 1, "", "append_transform"], [193, 1, 1, "", "apply"], [193, 1, 1, "", "auto_specs_"], [193, 2, 1, "", "batch_dims"], [193, 2, 1, "", "batch_locked"], [193, 2, 1, "", "batch_size"], [193, 1, 1, "", "bfloat16"], [193, 1, 1, "", "buffers"], [193, 1, 1, "", "cardinality"], [193, 1, 1, "", "check_env_specs"], [193, 1, 1, "", "children"], [193, 2, 1, "", "collector"], [193, 1, 1, "", "compile"], [193, 1, 1, "", "cpu"], [193, 1, 1, "", "cuda"], [193, 2, 1, "", "done_key"], [193, 2, 1, "", "done_keys"], [193, 2, 1, "", "done_keys_groups"], [193, 2, 1, "", "done_spec"], [193, 2, 1, "", "done_spec_unbatched"], [193, 1, 1, "", "double"], [193, 1, 1, "", "empty_cache"], [193, 1, 1, "", "eval"], [193, 1, 1, "", "extra_repr"], [193, 1, 1, "", "fake_tensordict"], [193, 1, 1, "", "float"], [193, 1, 1, "", "forward"], [193, 1, 1, "", "from_dataloader"], [193, 2, 1, "", "full_action_spec"], [193, 2, 1, "", "full_action_spec_unbatched"], [193, 2, 1, "", "full_done_spec"], [193, 2, 1, "", "full_done_spec_unbatched"], [193, 2, 1, "", "full_observation_spec_unbatched"], [193, 2, 1, "", "full_reward_spec"], [193, 2, 1, "", "full_reward_spec_unbatched"], [193, 2, 1, "", "full_state_spec"], [193, 2, 1, "", "full_state_spec_unbatched"], [193, 1, 1, "", "get_buffer"], [193, 1, 1, "", "get_extra_state"], [193, 1, 1, "", "get_parameter"], [193, 1, 1, "", "get_submodule"], [193, 1, 1, "", "half"], [193, 2, 1, "", "input_spec"], [193, 2, 1, "", "input_spec_unbatched"], [193, 1, 1, "", "insert_transform"], [193, 1, 1, "", "ipu"], [193, 2, 1, "", "is_spec_locked"], [193, 1, 1, "", "load_state_dict"], [193, 1, 1, "", "maybe_reset"], [193, 1, 1, "", "modules"], [193, 1, 1, "", "mtia"], [193, 1, 1, "", "named_buffers"], [193, 1, 1, "", "named_children"], [193, 1, 1, "", "named_modules"], [193, 1, 1, "", "named_parameters"], [193, 2, 1, "", "observation_keys"], [193, 2, 1, "", "observation_spec"], [193, 2, 1, "", "observation_spec_unbatched"], [193, 2, 1, "", "output_spec"], [193, 2, 1, "", "output_spec_unbatched"], [193, 1, 1, "", "parameters"], [193, 1, 1, "", "rand_action"], [193, 1, 1, "", "rand_step"], [193, 1, 1, "", "register_backward_hook"], [193, 1, 1, "", "register_buffer"], [193, 1, 1, "", "register_collector"], [193, 1, 1, "", "register_forward_hook"], [193, 1, 1, "", "register_forward_pre_hook"], [193, 1, 1, "", "register_full_backward_hook"], [193, 1, 1, "", "register_full_backward_pre_hook"], [193, 1, 1, "", "register_gym"], [193, 1, 1, "", "register_load_state_dict_post_hook"], [193, 1, 1, "", "register_load_state_dict_pre_hook"], [193, 1, 1, "", "register_module"], [193, 1, 1, "", "register_parameter"], [193, 1, 1, "", "register_state_dict_post_hook"], [193, 1, 1, "", "register_state_dict_pre_hook"], [193, 1, 1, "", "requires_grad_"], [193, 1, 1, "", "reset"], [193, 1, 1, "", "reset_dataloader"], [193, 2, 1, "", "reset_keys"], [193, 2, 1, "", "reward_key"], [193, 2, 1, "", "reward_keys"], [193, 2, 1, "", "reward_spec"], [193, 2, 1, "", "reward_spec_unbatched"], [193, 1, 1, "", "rollout"], [193, 1, 1, "", "set_extra_state"], [193, 1, 1, "", "set_missing_tolerance"], [193, 1, 1, "", "set_seed"], [193, 1, 1, "", "set_spec_lock_"], [193, 1, 1, "", "set_submodule"], [193, 2, 1, "", "shape"], [193, 1, 1, "", "share_memory"], [193, 2, 1, "", "specs"], [193, 1, 1, "", "state_dict"], [193, 2, 1, "", "state_keys"], [193, 2, 1, "", "state_spec"], [193, 2, 1, "", "state_spec_unbatched"], [193, 1, 1, "", "step"], [193, 1, 1, "", "step_and_maybe_reset"], [193, 1, 1, "", "step_mdp"], [193, 1, 1, "", "to"], [193, 1, 1, "", "to_empty"], [193, 1, 1, "", "train"], [193, 1, 1, "", "type"], [193, 1, 1, "", "xpu"], [193, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KEnv": [[194, 2, 1, "", "action_key"], [194, 2, 1, "", "action_keys"], [194, 2, 1, "", "action_spec"], [194, 2, 1, "", "action_spec_unbatched"], [194, 1, 1, "", "add_module"], [194, 1, 1, "", "add_truncated_keys"], [194, 1, 1, "", "all_actions"], [194, 1, 1, "", "any_done"], [194, 1, 1, "", "append_transform"], [194, 1, 1, "", "apply"], [194, 1, 1, "", "auto_specs_"], [194, 2, 1, "", "batch_dims"], [194, 2, 1, "", "batch_locked"], [194, 2, 1, "", "batch_size"], [194, 1, 1, "", "bfloat16"], [194, 1, 1, "", "buffers"], [194, 1, 1, "", "cardinality"], [194, 1, 1, "", "check_env_specs"], [194, 1, 1, "", "children"], [194, 2, 1, "", "collector"], [194, 1, 1, "", "compile"], [194, 1, 1, "", "cpu"], [194, 1, 1, "", "cuda"], [194, 2, 1, "", "done_key"], [194, 2, 1, "", "done_keys"], [194, 2, 1, "", "done_keys_groups"], [194, 2, 1, "", "done_spec"], [194, 2, 1, "", "done_spec_unbatched"], [194, 1, 1, "", "double"], [194, 1, 1, "", "empty_cache"], [194, 1, 1, "", "eval"], [194, 1, 1, "", "extra_repr"], [194, 1, 1, "", "fake_tensordict"], [194, 1, 1, "", "float"], [194, 1, 1, "", "forward"], [194, 1, 1, "", "from_dataloader"], [194, 2, 1, "", "full_action_spec"], [194, 2, 1, "", "full_action_spec_unbatched"], [194, 2, 1, "", "full_done_spec"], [194, 2, 1, "", "full_done_spec_unbatched"], [194, 2, 1, "", "full_observation_spec_unbatched"], [194, 2, 1, "", "full_reward_spec"], [194, 2, 1, "", "full_reward_spec_unbatched"], [194, 2, 1, "", "full_state_spec"], [194, 2, 1, "", "full_state_spec_unbatched"], [194, 1, 1, "", "get_buffer"], [194, 1, 1, "", "get_extra_state"], [194, 1, 1, "", "get_parameter"], [194, 1, 1, "", "get_submodule"], [194, 1, 1, "", "half"], [194, 2, 1, "", "input_spec"], [194, 2, 1, "", "input_spec_unbatched"], [194, 1, 1, "", "insert_transform"], [194, 1, 1, "", "ipu"], [194, 2, 1, "", "is_spec_locked"], [194, 1, 1, "", "load_state_dict"], [194, 1, 1, "", "maybe_reset"], [194, 1, 1, "", "modules"], [194, 1, 1, "", "mtia"], [194, 1, 1, "", "named_buffers"], [194, 1, 1, "", "named_children"], [194, 1, 1, "", "named_modules"], [194, 1, 1, "", "named_parameters"], [194, 2, 1, "", "observation_keys"], [194, 2, 1, "", "observation_spec"], [194, 2, 1, "", "observation_spec_unbatched"], [194, 2, 1, "", "output_spec"], [194, 2, 1, "", "output_spec_unbatched"], [194, 1, 1, "", "parameters"], [194, 1, 1, "", "rand_action"], [194, 1, 1, "", "rand_step"], [194, 1, 1, "", "register_backward_hook"], [194, 1, 1, "", "register_buffer"], [194, 1, 1, "", "register_collector"], [194, 1, 1, "", "register_forward_hook"], [194, 1, 1, "", "register_forward_pre_hook"], [194, 1, 1, "", "register_full_backward_hook"], [194, 1, 1, "", "register_full_backward_pre_hook"], [194, 1, 1, "", "register_gym"], [194, 1, 1, "", "register_load_state_dict_post_hook"], [194, 1, 1, "", "register_load_state_dict_pre_hook"], [194, 1, 1, "", "register_module"], [194, 1, 1, "", "register_parameter"], [194, 1, 1, "", "register_state_dict_post_hook"], [194, 1, 1, "", "register_state_dict_pre_hook"], [194, 1, 1, "", "requires_grad_"], [194, 1, 1, "", "reset"], [194, 1, 1, "", "reset_dataloader"], [194, 2, 1, "", "reset_keys"], [194, 2, 1, "", "reward_key"], [194, 2, 1, "", "reward_keys"], [194, 2, 1, "", "reward_spec"], [194, 2, 1, "", "reward_spec_unbatched"], [194, 1, 1, "", "rollout"], [194, 1, 1, "", "set_extra_state"], [194, 1, 1, "", "set_missing_tolerance"], [194, 1, 1, "", "set_seed"], [194, 1, 1, "", "set_spec_lock_"], [194, 1, 1, "", "set_submodule"], [194, 2, 1, "", "shape"], [194, 1, 1, "", "share_memory"], [194, 2, 1, "", "specs"], [194, 1, 1, "", "state_dict"], [194, 2, 1, "", "state_keys"], [194, 2, 1, "", "state_spec"], [194, 2, 1, "", "state_spec_unbatched"], [194, 1, 1, "", "step"], [194, 1, 1, "", "step_and_maybe_reset"], [194, 1, 1, "", "step_mdp"], [194, 1, 1, "", "to"], [194, 1, 1, "", "to_empty"], [194, 1, 1, "", "train"], [194, 1, 1, "", "type"], [194, 1, 1, "", "xpu"], [194, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KPrepareQuestion": [[195, 1, 1, "", "add_module"], [195, 1, 1, "", "apply"], [195, 1, 1, "", "bfloat16"], [195, 1, 1, "", "buffers"], [195, 1, 1, "", "children"], [195, 1, 1, "", "close"], [195, 2, 1, "", "collector"], [195, 1, 1, "", "compile"], [195, 2, 1, "", "container"], [195, 1, 1, "", "cpu"], [195, 1, 1, "", "cuda"], [195, 1, 1, "", "double"], [195, 1, 1, "", "eval"], [195, 1, 1, "", "extra_repr"], [195, 1, 1, "", "float"], [195, 1, 1, "", "forward"], [195, 1, 1, "", "get_buffer"], [195, 1, 1, "", "get_extra_state"], [195, 1, 1, "", "get_parameter"], [195, 1, 1, "", "get_submodule"], [195, 1, 1, "", "half"], [195, 1, 1, "", "init"], [195, 1, 1, "", "inv"], [195, 1, 1, "", "ipu"], [195, 1, 1, "", "load_state_dict"], [195, 1, 1, "", "modules"], [195, 1, 1, "", "mtia"], [195, 1, 1, "", "named_buffers"], [195, 1, 1, "", "named_children"], [195, 1, 1, "", "named_modules"], [195, 1, 1, "", "named_parameters"], [195, 1, 1, "", "parameters"], [195, 2, 1, "", "parent"], [195, 1, 1, "", "register_backward_hook"], [195, 1, 1, "", "register_buffer"], [195, 1, 1, "", "register_forward_hook"], [195, 1, 1, "", "register_forward_pre_hook"], [195, 1, 1, "", "register_full_backward_hook"], [195, 1, 1, "", "register_full_backward_pre_hook"], [195, 1, 1, "", "register_load_state_dict_post_hook"], [195, 1, 1, "", "register_load_state_dict_pre_hook"], [195, 1, 1, "", "register_module"], [195, 1, 1, "", "register_parameter"], [195, 1, 1, "", "register_state_dict_post_hook"], [195, 1, 1, "", "register_state_dict_pre_hook"], [195, 1, 1, "", "requires_grad_"], [195, 1, 1, "", "set_extra_state"], [195, 1, 1, "", "set_submodule"], [195, 1, 1, "", "share_memory"], [195, 1, 1, "", "state_dict"], [195, 1, 1, "", "to"], [195, 1, 1, "", "to_empty"], [195, 1, 1, "", "train"], [195, 1, 1, "", "transform_action_spec"], [195, 1, 1, "", "transform_done_spec"], [195, 1, 1, "", "transform_env_batch_size"], [195, 1, 1, "", "transform_env_device"], [195, 1, 1, "", "transform_input_spec"], [195, 1, 1, "", "transform_observation_spec"], [195, 1, 1, "", "transform_output_spec"], [195, 1, 1, "", "transform_reward_spec"], [195, 1, 1, "", "transform_state_spec"], [195, 1, 1, "", "type"], [195, 1, 1, "", "xpu"], [195, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KRewardParser": [[196, 1, 1, "", "add_module"], [196, 1, 1, "", "apply"], [196, 1, 1, "", "bfloat16"], [196, 1, 1, "", "buffers"], [196, 1, 1, "", "children"], [196, 1, 1, "", "close"], [196, 2, 1, "", "collector"], [196, 1, 1, "", "compile"], [196, 2, 1, "", "container"], [196, 1, 1, "", "cpu"], [196, 1, 1, "", "cuda"], [196, 1, 1, "", "double"], [196, 1, 1, "", "eval"], [196, 1, 1, "", "extra_repr"], [196, 1, 1, "", "extract_tags"], [196, 1, 1, "", "float"], [196, 1, 1, "", "forward"], [196, 1, 1, "", "get_buffer"], [196, 1, 1, "", "get_extra_state"], [196, 1, 1, "", "get_parameter"], [196, 1, 1, "", "get_submodule"], [196, 1, 1, "", "half"], [196, 1, 1, "", "init"], [196, 1, 1, "", "inv"], [196, 1, 1, "", "ipu"], [196, 1, 1, "", "load_state_dict"], [196, 1, 1, "", "modules"], [196, 1, 1, "", "mtia"], [196, 1, 1, "", "named_buffers"], [196, 1, 1, "", "named_children"], [196, 1, 1, "", "named_modules"], [196, 1, 1, "", "named_parameters"], [196, 1, 1, "", "parameters"], [196, 2, 1, "", "parent"], [196, 1, 1, "", "register_backward_hook"], [196, 1, 1, "", "register_buffer"], [196, 1, 1, "", "register_forward_hook"], [196, 1, 1, "", "register_forward_pre_hook"], [196, 1, 1, "", "register_full_backward_hook"], [196, 1, 1, "", "register_full_backward_pre_hook"], [196, 1, 1, "", "register_load_state_dict_post_hook"], [196, 1, 1, "", "register_load_state_dict_pre_hook"], [196, 1, 1, "", "register_module"], [196, 1, 1, "", "register_parameter"], [196, 1, 1, "", "register_state_dict_post_hook"], [196, 1, 1, "", "register_state_dict_pre_hook"], [196, 1, 1, "", "requires_grad_"], [196, 1, 1, "", "set_extra_state"], [196, 1, 1, "", "set_submodule"], [196, 1, 1, "", "share_memory"], [196, 1, 1, "", "state_dict"], [196, 1, 1, "", "to"], [196, 1, 1, "", "to_empty"], [196, 1, 1, "", "train"], [196, 1, 1, "", "transform_action_spec"], [196, 1, 1, "", "transform_done_spec"], [196, 1, 1, "", "transform_env_batch_size"], [196, 1, 1, "", "transform_env_device"], [196, 1, 1, "", "transform_input_spec"], [196, 1, 1, "", "transform_observation_spec"], [196, 1, 1, "", "transform_output_spec"], [196, 1, 1, "", "transform_reward_spec"], [196, 1, 1, "", "transform_state_spec"], [196, 1, 1, "", "type"], [196, 1, 1, "", "xpu"], [196, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.IFEvalEnv": [[197, 2, 1, "", "action_key"], [197, 2, 1, "", "action_keys"], [197, 2, 1, "", "action_spec"], [197, 2, 1, "", "action_spec_unbatched"], [197, 1, 1, "", "add_module"], [197, 1, 1, "", "add_truncated_keys"], [197, 1, 1, "", "all_actions"], [197, 1, 1, "", "any_done"], [197, 1, 1, "", "append_transform"], [197, 1, 1, "", "apply"], [197, 1, 1, "", "auto_specs_"], [197, 2, 1, "", "batch_dims"], [197, 2, 1, "", "batch_locked"], [197, 2, 1, "", "batch_size"], [197, 1, 1, "", "bfloat16"], [197, 1, 1, "", "buffers"], [197, 1, 1, "", "cardinality"], [197, 1, 1, "", "check_env_specs"], [197, 1, 1, "", "children"], [197, 2, 1, "", "collector"], [197, 1, 1, "", "compile"], [197, 1, 1, "", "cpu"], [197, 1, 1, "", "cuda"], [197, 2, 1, "", "done_key"], [197, 2, 1, "", "done_keys"], [197, 2, 1, "", "done_keys_groups"], [197, 2, 1, "", "done_spec"], [197, 2, 1, "", "done_spec_unbatched"], [197, 1, 1, "", "double"], [197, 1, 1, "", "empty_cache"], [197, 1, 1, "", "eval"], [197, 1, 1, "", "extra_repr"], [197, 1, 1, "", "fake_tensordict"], [197, 1, 1, "", "float"], [197, 1, 1, "", "forward"], [197, 1, 1, "", "from_dataloader"], [197, 2, 1, "", "full_action_spec"], [197, 2, 1, "", "full_action_spec_unbatched"], [197, 2, 1, "", "full_done_spec"], [197, 2, 1, "", "full_done_spec_unbatched"], [197, 2, 1, "", "full_observation_spec_unbatched"], [197, 2, 1, "", "full_reward_spec"], [197, 2, 1, "", "full_reward_spec_unbatched"], [197, 2, 1, "", "full_state_spec"], [197, 2, 1, "", "full_state_spec_unbatched"], [197, 1, 1, "", "get_buffer"], [197, 1, 1, "", "get_extra_state"], [197, 1, 1, "", "get_parameter"], [197, 1, 1, "", "get_submodule"], [197, 1, 1, "", "half"], [197, 2, 1, "", "input_spec"], [197, 2, 1, "", "input_spec_unbatched"], [197, 1, 1, "", "insert_transform"], [197, 1, 1, "", "ipu"], [197, 2, 1, "", "is_spec_locked"], [197, 1, 1, "", "load_state_dict"], [197, 1, 1, "", "maybe_reset"], [197, 1, 1, "", "modules"], [197, 1, 1, "", "mtia"], [197, 1, 1, "", "named_buffers"], [197, 1, 1, "", "named_children"], [197, 1, 1, "", "named_modules"], [197, 1, 1, "", "named_parameters"], [197, 2, 1, "", "observation_keys"], [197, 2, 1, "", "observation_spec"], [197, 2, 1, "", "observation_spec_unbatched"], [197, 2, 1, "", "output_spec"], [197, 2, 1, "", "output_spec_unbatched"], [197, 1, 1, "", "parameters"], [197, 1, 1, "", "rand_action"], [197, 1, 1, "", "rand_step"], [197, 1, 1, "", "register_backward_hook"], [197, 1, 1, "", "register_buffer"], [197, 1, 1, "", "register_collector"], [197, 1, 1, "", "register_forward_hook"], [197, 1, 1, "", "register_forward_pre_hook"], [197, 1, 1, "", "register_full_backward_hook"], [197, 1, 1, "", "register_full_backward_pre_hook"], [197, 1, 1, "", "register_gym"], [197, 1, 1, "", "register_load_state_dict_post_hook"], [197, 1, 1, "", "register_load_state_dict_pre_hook"], [197, 1, 1, "", "register_module"], [197, 1, 1, "", "register_parameter"], [197, 1, 1, "", "register_state_dict_post_hook"], [197, 1, 1, "", "register_state_dict_pre_hook"], [197, 1, 1, "", "requires_grad_"], [197, 1, 1, "", "reset"], [197, 1, 1, "", "reset_dataloader"], [197, 2, 1, "", "reset_keys"], [197, 2, 1, "", "reward_key"], [197, 2, 1, "", "reward_keys"], [197, 2, 1, "", "reward_spec"], [197, 2, 1, "", "reward_spec_unbatched"], [197, 1, 1, "", "rollout"], [197, 1, 1, "", "set_extra_state"], [197, 1, 1, "", "set_missing_tolerance"], [197, 1, 1, "", "set_seed"], [197, 1, 1, "", "set_spec_lock_"], [197, 1, 1, "", "set_submodule"], [197, 2, 1, "", "shape"], [197, 1, 1, "", "share_memory"], [197, 2, 1, "", "specs"], [197, 1, 1, "", "state_dict"], [197, 2, 1, "", "state_keys"], [197, 2, 1, "", "state_spec"], [197, 2, 1, "", "state_spec_unbatched"], [197, 1, 1, "", "step"], [197, 1, 1, "", "step_and_maybe_reset"], [197, 1, 1, "", "step_mdp"], [197, 1, 1, "", "to"], [197, 1, 1, "", "to_empty"], [197, 1, 1, "", "train"], [197, 1, 1, "", "type"], [197, 1, 1, "", "xpu"], [197, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.IFEvalScoreData": [[198, 1, 1, "", "cat"], [198, 2, 1, "", "device"], [198, 1, 1, "", "dumps"], [198, 1, 1, "", "fields"], [198, 1, 1, "", "from_any"], [198, 1, 1, "", "from_dataclass"], [198, 1, 1, "", "from_h5"], [198, 1, 1, "", "from_modules"], [198, 1, 1, "", "from_namedtuple"], [198, 1, 1, "", "from_pytree"], [198, 1, 1, "", "from_remote_init"], [198, 1, 1, "", "from_struct_array"], [198, 1, 1, "", "from_tensordict"], [198, 1, 1, "", "from_tuple"], [198, 1, 1, "", "fromkeys"], [198, 1, 1, "", "get"], [198, 1, 1, "", "lazy_stack"], [198, 1, 1, "", "load"], [198, 1, 1, "", "load_"], [198, 1, 1, "", "load_memmap"], [198, 1, 1, "", "load_state_dict"], [198, 1, 1, "", "maybe_dense_stack"], [198, 1, 1, "", "memmap"], [198, 1, 1, "", "memmap_"], [198, 1, 1, "", "memmap_like"], [198, 1, 1, "", "memmap_refresh_"], [198, 1, 1, "", "save"], [198, 1, 1, "", "set"], [198, 1, 1, "", "stack"], [198, 1, 1, "", "state_dict"], [198, 1, 1, "", "to_tensordict"], [198, 1, 1, "", "unbind"]], "torchrl.envs.llm.IfEvalScorer": [[199, 1, 1, "", "add_module"], [199, 1, 1, "", "apply"], [199, 1, 1, "", "bfloat16"], [199, 1, 1, "", "buffers"], [199, 1, 1, "", "children"], [199, 1, 1, "", "close"], [199, 2, 1, "", "collector"], [199, 1, 1, "", "compile"], [199, 2, 1, "", "container"], [199, 1, 1, "", "cpu"], [199, 1, 1, "", "cuda"], [199, 1, 1, "", "default_reward_aggregator"], [199, 1, 1, "", "double"], [199, 1, 1, "", "eval"], [199, 1, 1, "", "extra_repr"], [199, 1, 1, "", "float"], [199, 1, 1, "", "forward"], [199, 1, 1, "", "get_buffer"], [199, 1, 1, "", "get_extra_state"], [199, 1, 1, "", "get_parameter"], [199, 1, 1, "", "get_submodule"], [199, 1, 1, "", "half"], [199, 1, 1, "", "init"], [199, 1, 1, "", "inv"], [199, 1, 1, "", "ipu"], [199, 1, 1, "", "load_state_dict"], [199, 1, 1, "", "modules"], [199, 1, 1, "", "mtia"], [199, 1, 1, "", "named_buffers"], [199, 1, 1, "", "named_children"], [199, 1, 1, "", "named_modules"], [199, 1, 1, "", "named_parameters"], [199, 1, 1, "", "parameters"], [199, 2, 1, "", "parent"], [199, 1, 1, "", "register_backward_hook"], [199, 1, 1, "", "register_buffer"], [199, 1, 1, "", "register_forward_hook"], [199, 1, 1, "", "register_forward_pre_hook"], [199, 1, 1, "", "register_full_backward_hook"], [199, 1, 1, "", "register_full_backward_pre_hook"], [199, 1, 1, "", "register_load_state_dict_post_hook"], [199, 1, 1, "", "register_load_state_dict_pre_hook"], [199, 1, 1, "", "register_module"], [199, 1, 1, "", "register_parameter"], [199, 1, 1, "", "register_state_dict_post_hook"], [199, 1, 1, "", "register_state_dict_pre_hook"], [199, 1, 1, "", "requires_grad_"], [199, 1, 1, "", "set_extra_state"], [199, 1, 1, "", "set_submodule"], [199, 1, 1, "", "share_memory"], [199, 1, 1, "", "state_dict"], [199, 1, 1, "", "to"], [199, 1, 1, "", "to_empty"], [199, 1, 1, "", "train"], [199, 1, 1, "", "transform_action_spec"], [199, 1, 1, "", "transform_done_spec"], [199, 1, 1, "", "transform_env_batch_size"], [199, 1, 1, "", "transform_env_device"], [199, 1, 1, "", "transform_input_spec"], [199, 1, 1, "", "transform_observation_spec"], [199, 1, 1, "", "transform_output_spec"], [199, 1, 1, "", "transform_reward_spec"], [199, 1, 1, "", "transform_state_spec"], [199, 1, 1, "", "type"], [199, 1, 1, "", "xpu"], [199, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.LLMEnv": [[200, 2, 1, "", "action_key"], [200, 2, 1, "", "action_keys"], [200, 2, 1, "", "action_spec"], [200, 2, 1, "", "action_spec_unbatched"], [200, 1, 1, "", "add_module"], [200, 1, 1, "", "add_truncated_keys"], [200, 1, 1, "", "all_actions"], [200, 1, 1, "", "any_done"], [200, 1, 1, "", "append_transform"], [200, 1, 1, "", "apply"], [200, 1, 1, "", "auto_specs_"], [200, 2, 1, "", "batch_dims"], [200, 2, 1, "", "batch_locked"], [200, 2, 1, "", "batch_size"], [200, 1, 1, "", "bfloat16"], [200, 1, 1, "", "buffers"], [200, 1, 1, "", "cardinality"], [200, 1, 1, "", "check_env_specs"], [200, 1, 1, "", "children"], [200, 2, 1, "", "collector"], [200, 1, 1, "", "compile"], [200, 1, 1, "", "cpu"], [200, 1, 1, "", "cuda"], [200, 2, 1, "", "done_key"], [200, 2, 1, "", "done_keys"], [200, 2, 1, "", "done_keys_groups"], [200, 2, 1, "", "done_spec"], [200, 2, 1, "", "done_spec_unbatched"], [200, 1, 1, "", "double"], [200, 1, 1, "", "empty_cache"], [200, 1, 1, "", "eval"], [200, 1, 1, "", "extra_repr"], [200, 1, 1, "", "fake_tensordict"], [200, 1, 1, "", "float"], [200, 1, 1, "", "forward"], [200, 1, 1, "id0", "from_dataloader"], [200, 2, 1, "", "full_action_spec"], [200, 2, 1, "", "full_action_spec_unbatched"], [200, 2, 1, "", "full_done_spec"], [200, 2, 1, "", "full_done_spec_unbatched"], [200, 2, 1, "", "full_observation_spec_unbatched"], [200, 2, 1, "", "full_reward_spec"], [200, 2, 1, "", "full_reward_spec_unbatched"], [200, 2, 1, "", "full_state_spec"], [200, 2, 1, "", "full_state_spec_unbatched"], [200, 1, 1, "", "get_buffer"], [200, 1, 1, "", "get_extra_state"], [200, 1, 1, "", "get_parameter"], [200, 1, 1, "", "get_submodule"], [200, 1, 1, "", "half"], [200, 2, 1, "", "input_spec"], [200, 2, 1, "", "input_spec_unbatched"], [200, 1, 1, "", "ipu"], [200, 2, 1, "", "is_spec_locked"], [200, 1, 1, "", "load_state_dict"], [200, 1, 1, "", "maybe_reset"], [200, 1, 1, "", "modules"], [200, 1, 1, "", "mtia"], [200, 1, 1, "", "named_buffers"], [200, 1, 1, "", "named_children"], [200, 1, 1, "", "named_modules"], [200, 1, 1, "", "named_parameters"], [200, 2, 1, "", "observation_keys"], [200, 2, 1, "", "observation_spec"], [200, 2, 1, "", "observation_spec_unbatched"], [200, 2, 1, "", "output_spec"], [200, 2, 1, "", "output_spec_unbatched"], [200, 1, 1, "", "parameters"], [200, 1, 1, "", "rand_action"], [200, 1, 1, "", "rand_step"], [200, 1, 1, "", "register_backward_hook"], [200, 1, 1, "", "register_buffer"], [200, 1, 1, "", "register_collector"], [200, 1, 1, "", "register_forward_hook"], [200, 1, 1, "", "register_forward_pre_hook"], [200, 1, 1, "", "register_full_backward_hook"], [200, 1, 1, "", "register_full_backward_pre_hook"], [200, 1, 1, "", "register_gym"], [200, 1, 1, "", "register_load_state_dict_post_hook"], [200, 1, 1, "", "register_load_state_dict_pre_hook"], [200, 1, 1, "", "register_module"], [200, 1, 1, "", "register_parameter"], [200, 1, 1, "", "register_state_dict_post_hook"], [200, 1, 1, "", "register_state_dict_pre_hook"], [200, 1, 1, "", "requires_grad_"], [200, 1, 1, "", "reset"], [200, 2, 1, "", "reset_keys"], [200, 2, 1, "", "reward_key"], [200, 2, 1, "", "reward_keys"], [200, 2, 1, "", "reward_spec"], [200, 2, 1, "", "reward_spec_unbatched"], [200, 1, 1, "", "rollout"], [200, 1, 1, "", "set_extra_state"], [200, 1, 1, "", "set_seed"], [200, 1, 1, "", "set_spec_lock_"], [200, 1, 1, "", "set_submodule"], [200, 2, 1, "", "shape"], [200, 1, 1, "", "share_memory"], [200, 2, 1, "", "specs"], [200, 1, 1, "", "state_dict"], [200, 2, 1, "", "state_keys"], [200, 2, 1, "", "state_spec"], [200, 2, 1, "", "state_spec_unbatched"], [200, 1, 1, "", "step"], [200, 1, 1, "", "step_and_maybe_reset"], [200, 1, 1, "", "step_mdp"], [200, 1, 1, "", "to"], [200, 1, 1, "", "to_empty"], [200, 1, 1, "", "train"], [200, 1, 1, "", "type"], [200, 1, 1, "", "xpu"], [200, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.LLMHashingEnv": [[201, 2, 1, "", "action_key"], [201, 2, 1, "", "action_keys"], [201, 2, 1, "", "action_spec"], [201, 2, 1, "", "action_spec_unbatched"], [201, 1, 1, "", "add_module"], [201, 1, 1, "", "add_truncated_keys"], [201, 1, 1, "", "all_actions"], [201, 1, 1, "", "any_done"], [201, 1, 1, "", "append_transform"], [201, 1, 1, "", "apply"], [201, 1, 1, "", "auto_specs_"], [201, 2, 1, "", "batch_dims"], [201, 2, 1, "", "batch_locked"], [201, 2, 1, "", "batch_size"], [201, 1, 1, "", "bfloat16"], [201, 1, 1, "", "buffers"], [201, 1, 1, "", "cardinality"], [201, 1, 1, "", "check_env_specs"], [201, 1, 1, "", "children"], [201, 2, 1, "", "collector"], [201, 1, 1, "", "compile"], [201, 1, 1, "", "cpu"], [201, 1, 1, "", "cuda"], [201, 2, 1, "", "done_key"], [201, 2, 1, "", "done_keys"], [201, 2, 1, "", "done_keys_groups"], [201, 2, 1, "", "done_spec"], [201, 2, 1, "", "done_spec_unbatched"], [201, 1, 1, "", "double"], [201, 1, 1, "", "empty_cache"], [201, 1, 1, "", "eval"], [201, 1, 1, "", "extra_repr"], [201, 1, 1, "", "fake_tensordict"], [201, 1, 1, "", "float"], [201, 1, 1, "", "forward"], [201, 2, 1, "", "full_action_spec"], [201, 2, 1, "", "full_action_spec_unbatched"], [201, 2, 1, "", "full_done_spec"], [201, 2, 1, "", "full_done_spec_unbatched"], [201, 2, 1, "", "full_observation_spec_unbatched"], [201, 2, 1, "", "full_reward_spec"], [201, 2, 1, "", "full_reward_spec_unbatched"], [201, 2, 1, "", "full_state_spec"], [201, 2, 1, "", "full_state_spec_unbatched"], [201, 1, 1, "", "get_buffer"], [201, 1, 1, "", "get_extra_state"], [201, 1, 1, "", "get_parameter"], [201, 1, 1, "", "get_submodule"], [201, 1, 1, "", "half"], [201, 2, 1, "", "input_spec"], [201, 2, 1, "", "input_spec_unbatched"], [201, 1, 1, "", "ipu"], [201, 2, 1, "", "is_spec_locked"], [201, 1, 1, "", "load_state_dict"], [201, 1, 1, "", "make_tensordict"], [201, 1, 1, "", "maybe_reset"], [201, 1, 1, "", "modules"], [201, 1, 1, "", "mtia"], [201, 1, 1, "", "named_buffers"], [201, 1, 1, "", "named_children"], [201, 1, 1, "", "named_modules"], [201, 1, 1, "", "named_parameters"], [201, 2, 1, "", "observation_keys"], [201, 2, 1, "", "observation_spec"], [201, 2, 1, "", "observation_spec_unbatched"], [201, 2, 1, "", "output_spec"], [201, 2, 1, "", "output_spec_unbatched"], [201, 1, 1, "", "parameters"], [201, 1, 1, "", "rand_action"], [201, 1, 1, "", "rand_step"], [201, 1, 1, "", "register_backward_hook"], [201, 1, 1, "", "register_buffer"], [201, 1, 1, "", "register_collector"], [201, 1, 1, "", "register_forward_hook"], [201, 1, 1, "", "register_forward_pre_hook"], [201, 1, 1, "", "register_full_backward_hook"], [201, 1, 1, "", "register_full_backward_pre_hook"], [201, 1, 1, "", "register_gym"], [201, 1, 1, "", "register_load_state_dict_post_hook"], [201, 1, 1, "", "register_load_state_dict_pre_hook"], [201, 1, 1, "", "register_module"], [201, 1, 1, "", "register_parameter"], [201, 1, 1, "", "register_state_dict_post_hook"], [201, 1, 1, "", "register_state_dict_pre_hook"], [201, 1, 1, "", "requires_grad_"], [201, 1, 1, "", "reset"], [201, 2, 1, "", "reset_keys"], [201, 2, 1, "", "reward_key"], [201, 2, 1, "", "reward_keys"], [201, 2, 1, "", "reward_spec"], [201, 2, 1, "", "reward_spec_unbatched"], [201, 1, 1, "", "rollout"], [201, 1, 1, "", "set_extra_state"], [201, 1, 1, "", "set_seed"], [201, 1, 1, "", "set_spec_lock_"], [201, 1, 1, "", "set_submodule"], [201, 2, 1, "", "shape"], [201, 1, 1, "", "share_memory"], [201, 2, 1, "", "specs"], [201, 1, 1, "", "state_dict"], [201, 2, 1, "", "state_keys"], [201, 2, 1, "", "state_spec"], [201, 2, 1, "", "state_spec_unbatched"], [201, 1, 1, "", "step"], [201, 1, 1, "", "step_and_maybe_reset"], [201, 1, 1, "", "step_mdp"], [201, 1, 1, "", "to"], [201, 1, 1, "", "to_empty"], [201, 1, 1, "", "train"], [201, 1, 1, "", "type"], [201, 1, 1, "", "xpu"], [201, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.MLGymWrapper": [[202, 2, 1, "", "action_key"], [202, 2, 1, "", "action_keys"], [202, 2, 1, "", "action_spec"], [202, 2, 1, "", "action_spec_unbatched"], [202, 1, 1, "", "add_module"], [202, 1, 1, "", "add_truncated_keys"], [202, 1, 1, "", "all_actions"], [202, 1, 1, "", "any_done"], [202, 1, 1, "", "append_transform"], [202, 1, 1, "", "apply"], [202, 1, 1, "", "auto_register_info_dict"], [202, 1, 1, "", "auto_specs_"], [202, 2, 1, "", "batch_dims"], [202, 2, 1, "", "batch_locked"], [202, 2, 1, "", "batch_size"], [202, 1, 1, "", "bfloat16"], [202, 1, 1, "", "buffers"], [202, 1, 1, "", "cardinality"], [202, 1, 1, "", "check_env_specs"], [202, 1, 1, "", "children"], [202, 1, 1, "", "close"], [202, 2, 1, "", "collector"], [202, 1, 1, "", "compile"], [202, 1, 1, "", "cpu"], [202, 1, 1, "", "cuda"], [202, 2, 1, "", "done_key"], [202, 2, 1, "", "done_keys"], [202, 2, 1, "", "done_keys_groups"], [202, 2, 1, "", "done_spec"], [202, 2, 1, "", "done_spec_unbatched"], [202, 1, 1, "", "double"], [202, 1, 1, "", "empty_cache"], [202, 1, 1, "", "eval"], [202, 1, 1, "", "extra_repr"], [202, 1, 1, "", "fake_tensordict"], [202, 1, 1, "", "fast_encoding"], [202, 1, 1, "", "float"], [202, 1, 1, "", "forward"], [202, 2, 1, "", "full_action_spec"], [202, 2, 1, "", "full_action_spec_unbatched"], [202, 2, 1, "", "full_done_spec"], [202, 2, 1, "", "full_done_spec_unbatched"], [202, 2, 1, "", "full_observation_spec_unbatched"], [202, 2, 1, "", "full_reward_spec"], [202, 2, 1, "", "full_reward_spec_unbatched"], [202, 2, 1, "", "full_state_spec"], [202, 2, 1, "", "full_state_spec_unbatched"], [202, 1, 1, "", "get_buffer"], [202, 1, 1, "", "get_extra_state"], [202, 1, 1, "", "get_library_name"], [202, 1, 1, "", "get_parameter"], [202, 1, 1, "", "get_submodule"], [202, 1, 1, "", "half"], [202, 2, 1, "", "input_spec"], [202, 2, 1, "", "input_spec_unbatched"], [202, 1, 1, "", "ipu"], [202, 2, 1, "", "is_spec_locked"], [202, 1, 1, "", "load_state_dict"], [202, 1, 1, "", "maybe_reset"], [202, 1, 1, "", "modules"], [202, 1, 1, "", "mtia"], [202, 1, 1, "", "named_buffers"], [202, 1, 1, "", "named_children"], [202, 1, 1, "", "named_modules"], [202, 1, 1, "", "named_parameters"], [202, 2, 1, "", "observation_keys"], [202, 2, 1, "", "observation_spec"], [202, 2, 1, "", "observation_spec_unbatched"], [202, 2, 1, "", "output_spec"], [202, 2, 1, "", "output_spec_unbatched"], [202, 1, 1, "", "parameters"], [202, 1, 1, "", "rand_action"], [202, 1, 1, "", "rand_step"], [202, 1, 1, "", "read_action"], [202, 1, 1, "", "read_done"], [202, 1, 1, "", "read_obs"], [202, 1, 1, "", "read_reward"], [202, 1, 1, "", "register_backward_hook"], [202, 1, 1, "", "register_buffer"], [202, 1, 1, "", "register_collector"], [202, 1, 1, "", "register_forward_hook"], [202, 1, 1, "", "register_forward_pre_hook"], [202, 1, 1, "", "register_full_backward_hook"], [202, 1, 1, "", "register_full_backward_pre_hook"], [202, 1, 1, "", "register_gym"], [202, 1, 1, "", "register_load_state_dict_post_hook"], [202, 1, 1, "", "register_load_state_dict_pre_hook"], [202, 1, 1, "", "register_module"], [202, 1, 1, "", "register_parameter"], [202, 1, 1, "", "register_state_dict_post_hook"], [202, 1, 1, "", "register_state_dict_pre_hook"], [202, 1, 1, "", "requires_grad_"], [202, 1, 1, "", "reset"], [202, 2, 1, "", "reset_keys"], [202, 2, 1, "", "reward_key"], [202, 2, 1, "", "reward_keys"], [202, 2, 1, "", "reward_spec"], [202, 2, 1, "", "reward_spec_unbatched"], [202, 1, 1, "", "rollout"], [202, 1, 1, "", "set_extra_state"], [202, 1, 1, "", "set_info_dict_reader"], [202, 1, 1, "", "set_seed"], [202, 1, 1, "", "set_spec_lock_"], [202, 1, 1, "", "set_submodule"], [202, 2, 1, "", "shape"], [202, 1, 1, "", "share_memory"], [202, 2, 1, "", "specs"], [202, 1, 1, "", "state_dict"], [202, 2, 1, "", "state_keys"], [202, 2, 1, "", "state_spec"], [202, 2, 1, "", "state_spec_unbatched"], [202, 1, 1, "", "step"], [202, 1, 1, "", "step_and_maybe_reset"], [202, 1, 1, "", "step_mdp"], [202, 1, 1, "", "to"], [202, 1, 1, "", "to_empty"], [202, 1, 1, "", "train"], [202, 1, 1, "", "type"], [202, 1, 1, "", "xpu"], [202, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms": [[205, 0, 1, "", "AddThinkingPrompt"], [206, 0, 1, "", "BrowserTransform"], [207, 0, 1, "", "DataLoadingPrimer"], [208, 0, 1, "", "KLComputation"], [209, 0, 1, "", "KLRewardTransform"], [210, 0, 1, "", "MCPToolTransform"], [211, 0, 1, "", "PolicyVersion"], [212, 0, 1, "", "PythonInterpreter"], [213, 0, 1, "", "RayDataLoadingPrimer"], [214, 0, 1, "", "RetrieveKL"], [215, 0, 1, "", "RetrieveLogProb"], [216, 0, 1, "", "TemplateTransform"], [217, 0, 1, "", "Tokenizer"], [218, 0, 1, "", "as_nested_tensor"], [219, 0, 1, "", "as_padded_tensor"]], "torchrl.envs.llm.transforms.AddThinkingPrompt": [[205, 1, 1, "", "add_module"], [205, 1, 1, "", "apply"], [205, 1, 1, "", "bfloat16"], [205, 1, 1, "", "buffers"], [205, 1, 1, "", "children"], [205, 1, 1, "", "close"], [205, 2, 1, "", "collector"], [205, 1, 1, "", "compile"], [205, 2, 1, "", "container"], [205, 1, 1, "", "cpu"], [205, 1, 1, "", "cuda"], [205, 1, 1, "", "double"], [205, 1, 1, "", "eval"], [205, 1, 1, "", "extra_repr"], [205, 1, 1, "", "float"], [205, 1, 1, "", "forward"], [205, 1, 1, "", "get_buffer"], [205, 1, 1, "", "get_extra_state"], [205, 1, 1, "", "get_parameter"], [205, 1, 1, "", "get_submodule"], [205, 1, 1, "", "half"], [205, 1, 1, "", "init"], [205, 1, 1, "", "inv"], [205, 1, 1, "", "ipu"], [205, 1, 1, "", "load_state_dict"], [205, 1, 1, "", "modules"], [205, 1, 1, "", "mtia"], [205, 1, 1, "", "named_buffers"], [205, 1, 1, "", "named_children"], [205, 1, 1, "", "named_modules"], [205, 1, 1, "", "named_parameters"], [205, 1, 1, "", "parameters"], [205, 2, 1, "", "parent"], [205, 1, 1, "", "register_backward_hook"], [205, 1, 1, "", "register_buffer"], [205, 1, 1, "", "register_forward_hook"], [205, 1, 1, "", "register_forward_pre_hook"], [205, 1, 1, "", "register_full_backward_hook"], [205, 1, 1, "", "register_full_backward_pre_hook"], [205, 1, 1, "", "register_load_state_dict_post_hook"], [205, 1, 1, "", "register_load_state_dict_pre_hook"], [205, 1, 1, "", "register_module"], [205, 1, 1, "", "register_parameter"], [205, 1, 1, "", "register_state_dict_post_hook"], [205, 1, 1, "", "register_state_dict_pre_hook"], [205, 1, 1, "", "requires_grad_"], [205, 1, 1, "", "set_extra_state"], [205, 1, 1, "", "set_submodule"], [205, 1, 1, "", "share_memory"], [205, 1, 1, "", "state_dict"], [205, 1, 1, "", "to"], [205, 1, 1, "", "to_empty"], [205, 1, 1, "", "train"], [205, 1, 1, "", "transform_action_spec"], [205, 1, 1, "", "transform_done_spec"], [205, 1, 1, "", "transform_env_batch_size"], [205, 1, 1, "", "transform_env_device"], [205, 1, 1, "", "transform_input_spec"], [205, 1, 1, "", "transform_observation_spec"], [205, 1, 1, "", "transform_output_spec"], [205, 1, 1, "", "transform_reward_spec"], [205, 1, 1, "", "transform_state_spec"], [205, 1, 1, "", "type"], [205, 1, 1, "", "xpu"], [205, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.BrowserTransform": [[206, 1, 1, "", "add_module"], [206, 1, 1, "", "apply"], [206, 1, 1, "", "bfloat16"], [206, 1, 1, "", "buffers"], [206, 1, 1, "", "children"], [206, 1, 1, "", "clone"], [206, 1, 1, "", "close"], [206, 2, 1, "", "collector"], [206, 1, 1, "", "compile"], [206, 2, 1, "", "container"], [206, 1, 1, "", "cpu"], [206, 1, 1, "", "cuda"], [206, 1, 1, "", "double"], [206, 1, 1, "", "eval"], [206, 1, 1, "", "extra_repr"], [206, 1, 1, "", "float"], [206, 1, 1, "", "forward"], [206, 1, 1, "", "get_buffer"], [206, 1, 1, "", "get_extra_state"], [206, 1, 1, "", "get_parameter"], [206, 1, 1, "", "get_submodule"], [206, 1, 1, "", "half"], [206, 1, 1, "", "init"], [206, 1, 1, "", "inv"], [206, 1, 1, "", "ipu"], [206, 1, 1, "", "load_state_dict"], [206, 1, 1, "", "modules"], [206, 1, 1, "", "mtia"], [206, 1, 1, "", "named_buffers"], [206, 1, 1, "", "named_children"], [206, 1, 1, "", "named_modules"], [206, 1, 1, "", "named_parameters"], [206, 1, 1, "", "parameters"], [206, 2, 1, "", "parent"], [206, 1, 1, "", "register_backward_hook"], [206, 1, 1, "", "register_buffer"], [206, 1, 1, "", "register_forward_hook"], [206, 1, 1, "", "register_forward_pre_hook"], [206, 1, 1, "", "register_full_backward_hook"], [206, 1, 1, "", "register_full_backward_pre_hook"], [206, 1, 1, "", "register_load_state_dict_post_hook"], [206, 1, 1, "", "register_load_state_dict_pre_hook"], [206, 1, 1, "", "register_module"], [206, 1, 1, "", "register_parameter"], [206, 1, 1, "", "register_state_dict_post_hook"], [206, 1, 1, "", "register_state_dict_pre_hook"], [206, 1, 1, "", "requires_grad_"], [206, 1, 1, "", "set_extra_state"], [206, 1, 1, "", "set_submodule"], [206, 1, 1, "", "share_memory"], [206, 1, 1, "", "state_dict"], [206, 1, 1, "", "to"], [206, 1, 1, "", "to_empty"], [206, 1, 1, "", "train"], [206, 1, 1, "", "transform_action_spec"], [206, 1, 1, "", "transform_done_spec"], [206, 1, 1, "", "transform_env_batch_size"], [206, 1, 1, "", "transform_env_device"], [206, 1, 1, "", "transform_input_spec"], [206, 1, 1, "", "transform_observation_spec"], [206, 1, 1, "", "transform_output_spec"], [206, 1, 1, "", "transform_reward_spec"], [206, 1, 1, "", "transform_state_spec"], [206, 1, 1, "", "type"], [206, 1, 1, "", "xpu"], [206, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.DataLoadingPrimer": [[207, 1, 1, "", "add_module"], [207, 1, 1, "", "apply"], [207, 1, 1, "", "bfloat16"], [207, 1, 1, "", "buffers"], [207, 1, 1, "", "children"], [207, 1, 1, "", "close"], [207, 2, 1, "", "collector"], [207, 1, 1, "", "compile"], [207, 2, 1, "", "container"], [207, 1, 1, "", "cpu"], [207, 1, 1, "", "cuda"], [207, 1, 1, "", "double"], [207, 1, 1, "", "eval"], [207, 1, 1, "", "extra_repr"], [207, 1, 1, "", "float"], [207, 1, 1, "", "forward"], [207, 1, 1, "", "get_buffer"], [207, 1, 1, "", "get_extra_state"], [207, 1, 1, "", "get_parameter"], [207, 1, 1, "", "get_submodule"], [207, 1, 1, "", "half"], [207, 1, 1, "", "init"], [207, 1, 1, "", "inv"], [207, 1, 1, "", "ipu"], [207, 1, 1, "", "load_state_dict"], [207, 1, 1, "", "modules"], [207, 1, 1, "", "mtia"], [207, 1, 1, "", "named_buffers"], [207, 1, 1, "", "named_children"], [207, 1, 1, "", "named_modules"], [207, 1, 1, "", "named_parameters"], [207, 1, 1, "", "parameters"], [207, 2, 1, "", "parent"], [207, 1, 1, "", "register_backward_hook"], [207, 1, 1, "", "register_buffer"], [207, 1, 1, "", "register_forward_hook"], [207, 1, 1, "", "register_forward_pre_hook"], [207, 1, 1, "", "register_full_backward_hook"], [207, 1, 1, "", "register_full_backward_pre_hook"], [207, 1, 1, "", "register_load_state_dict_post_hook"], [207, 1, 1, "", "register_load_state_dict_pre_hook"], [207, 1, 1, "", "register_module"], [207, 1, 1, "", "register_parameter"], [207, 1, 1, "", "register_state_dict_post_hook"], [207, 1, 1, "", "register_state_dict_pre_hook"], [207, 1, 1, "", "requires_grad_"], [207, 1, 1, "", "reset_dataloader"], [207, 1, 1, "", "set_extra_state"], [207, 1, 1, "", "set_submodule"], [207, 1, 1, "", "share_memory"], [207, 1, 1, "", "state_dict"], [207, 1, 1, "", "to"], [207, 1, 1, "", "to_empty"], [207, 1, 1, "", "train"], [207, 1, 1, "", "transform_action_spec"], [207, 1, 1, "", "transform_done_spec"], [207, 1, 1, "", "transform_env_batch_size"], [207, 1, 1, "", "transform_env_device"], [207, 1, 1, "", "transform_input_spec"], [207, 1, 1, "", "transform_observation_spec"], [207, 1, 1, "", "transform_output_spec"], [207, 1, 1, "", "transform_reward_spec"], [207, 1, 1, "", "transform_state_spec"], [207, 1, 1, "", "type"], [207, 1, 1, "", "xpu"], [207, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.KLComputation": [[208, 1, 1, "", "add_module"], [208, 1, 1, "", "apply"], [208, 1, 1, "", "bfloat16"], [208, 1, 1, "", "buffers"], [208, 1, 1, "", "children"], [208, 1, 1, "", "close"], [208, 2, 1, "", "collector"], [208, 1, 1, "", "compile"], [208, 2, 1, "", "container"], [208, 1, 1, "", "cpu"], [208, 1, 1, "", "cuda"], [208, 1, 1, "", "double"], [208, 1, 1, "", "eval"], [208, 1, 1, "", "extra_repr"], [208, 1, 1, "", "float"], [208, 1, 1, "", "forward"], [208, 1, 1, "", "get_buffer"], [208, 1, 1, "", "get_extra_state"], [208, 1, 1, "", "get_parameter"], [208, 1, 1, "", "get_submodule"], [208, 1, 1, "", "half"], [208, 1, 1, "", "init"], [208, 1, 1, "", "inv"], [208, 1, 1, "", "ipu"], [208, 1, 1, "", "load_state_dict"], [208, 1, 1, "", "modules"], [208, 1, 1, "", "mtia"], [208, 1, 1, "", "named_buffers"], [208, 1, 1, "", "named_children"], [208, 1, 1, "", "named_modules"], [208, 1, 1, "", "named_parameters"], [208, 1, 1, "", "parameters"], [208, 2, 1, "", "parent"], [208, 1, 1, "", "register_backward_hook"], [208, 1, 1, "", "register_buffer"], [208, 1, 1, "", "register_forward_hook"], [208, 1, 1, "", "register_forward_pre_hook"], [208, 1, 1, "", "register_full_backward_hook"], [208, 1, 1, "", "register_full_backward_pre_hook"], [208, 1, 1, "", "register_load_state_dict_post_hook"], [208, 1, 1, "", "register_load_state_dict_pre_hook"], [208, 1, 1, "", "register_module"], [208, 1, 1, "", "register_parameter"], [208, 1, 1, "", "register_state_dict_post_hook"], [208, 1, 1, "", "register_state_dict_pre_hook"], [208, 1, 1, "", "requires_grad_"], [208, 1, 1, "", "set_extra_state"], [208, 1, 1, "", "set_submodule"], [208, 1, 1, "", "share_memory"], [208, 1, 1, "", "state_dict"], [208, 1, 1, "", "to"], [208, 1, 1, "", "to_empty"], [208, 1, 1, "", "train"], [208, 1, 1, "", "transform_action_spec"], [208, 1, 1, "", "transform_done_spec"], [208, 1, 1, "", "transform_env_batch_size"], [208, 1, 1, "", "transform_env_device"], [208, 1, 1, "", "transform_input_spec"], [208, 1, 1, "", "transform_observation_spec"], [208, 1, 1, "", "transform_output_spec"], [208, 1, 1, "", "transform_reward_spec"], [208, 1, 1, "", "transform_state_spec"], [208, 1, 1, "", "type"], [208, 1, 1, "", "xpu"], [208, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.KLRewardTransform": [[209, 1, 1, "", "add_module"], [209, 1, 1, "", "apply"], [209, 1, 1, "", "bfloat16"], [209, 1, 1, "", "buffers"], [209, 1, 1, "", "children"], [209, 1, 1, "", "close"], [209, 2, 1, "", "collector"], [209, 1, 1, "", "compile"], [209, 2, 1, "", "container"], [209, 1, 1, "", "cpu"], [209, 1, 1, "", "cuda"], [209, 1, 1, "", "double"], [209, 1, 1, "", "eval"], [209, 1, 1, "", "extra_repr"], [209, 1, 1, "", "float"], [209, 1, 1, "", "forward"], [209, 1, 1, "", "get_buffer"], [209, 1, 1, "", "get_extra_state"], [209, 1, 1, "", "get_parameter"], [209, 1, 1, "", "get_submodule"], [209, 1, 1, "", "half"], [209, 1, 1, "", "init"], [209, 1, 1, "", "inv"], [209, 1, 1, "", "ipu"], [209, 1, 1, "", "load_state_dict"], [209, 1, 1, "", "modules"], [209, 1, 1, "", "mtia"], [209, 1, 1, "", "named_buffers"], [209, 1, 1, "", "named_children"], [209, 1, 1, "", "named_modules"], [209, 1, 1, "", "named_parameters"], [209, 1, 1, "", "parameters"], [209, 2, 1, "", "parent"], [209, 1, 1, "", "register_backward_hook"], [209, 1, 1, "", "register_buffer"], [209, 1, 1, "", "register_forward_hook"], [209, 1, 1, "", "register_forward_pre_hook"], [209, 1, 1, "", "register_full_backward_hook"], [209, 1, 1, "", "register_full_backward_pre_hook"], [209, 1, 1, "", "register_load_state_dict_post_hook"], [209, 1, 1, "", "register_load_state_dict_pre_hook"], [209, 1, 1, "", "register_module"], [209, 1, 1, "", "register_parameter"], [209, 1, 1, "", "register_state_dict_post_hook"], [209, 1, 1, "", "register_state_dict_pre_hook"], [209, 1, 1, "", "requires_grad_"], [209, 1, 1, "", "set_extra_state"], [209, 1, 1, "", "set_submodule"], [209, 1, 1, "", "share_memory"], [209, 1, 1, "", "state_dict"], [209, 1, 1, "", "to"], [209, 1, 1, "", "to_empty"], [209, 1, 1, "", "train"], [209, 1, 1, "", "transform_action_spec"], [209, 1, 1, "", "transform_done_spec"], [209, 1, 1, "", "transform_env_batch_size"], [209, 1, 1, "", "transform_env_device"], [209, 1, 1, "", "transform_input_spec"], [209, 1, 1, "", "transform_observation_spec"], [209, 1, 1, "", "transform_output_spec"], [209, 1, 1, "", "transform_reward_spec"], [209, 1, 1, "", "transform_state_spec"], [209, 1, 1, "", "type"], [209, 1, 1, "", "xpu"], [209, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.MCPToolTransform": [[210, 1, 1, "", "add_module"], [210, 1, 1, "", "apply"], [210, 1, 1, "", "bfloat16"], [210, 1, 1, "", "buffers"], [210, 1, 1, "", "children"], [210, 1, 1, "", "close"], [210, 2, 1, "", "collector"], [210, 1, 1, "", "compile"], [210, 2, 1, "", "container"], [210, 1, 1, "", "cpu"], [210, 1, 1, "", "cuda"], [210, 1, 1, "", "double"], [210, 1, 1, "", "eval"], [210, 1, 1, "", "extra_repr"], [210, 1, 1, "", "float"], [210, 1, 1, "", "forward"], [210, 1, 1, "", "get_buffer"], [210, 1, 1, "", "get_extra_state"], [210, 1, 1, "", "get_parameter"], [210, 1, 1, "", "get_submodule"], [210, 1, 1, "", "half"], [210, 1, 1, "", "init"], [210, 1, 1, "", "inv"], [210, 1, 1, "", "ipu"], [210, 1, 1, "", "load_state_dict"], [210, 1, 1, "", "modules"], [210, 1, 1, "", "mtia"], [210, 1, 1, "", "named_buffers"], [210, 1, 1, "", "named_children"], [210, 1, 1, "", "named_modules"], [210, 1, 1, "", "named_parameters"], [210, 1, 1, "", "parameters"], [210, 2, 1, "", "parent"], [210, 1, 1, "", "register_backward_hook"], [210, 1, 1, "", "register_buffer"], [210, 1, 1, "", "register_forward_hook"], [210, 1, 1, "", "register_forward_pre_hook"], [210, 1, 1, "", "register_full_backward_hook"], [210, 1, 1, "", "register_full_backward_pre_hook"], [210, 1, 1, "", "register_load_state_dict_post_hook"], [210, 1, 1, "", "register_load_state_dict_pre_hook"], [210, 1, 1, "", "register_module"], [210, 1, 1, "", "register_parameter"], [210, 1, 1, "", "register_state_dict_post_hook"], [210, 1, 1, "", "register_state_dict_pre_hook"], [210, 1, 1, "", "requires_grad_"], [210, 1, 1, "", "set_extra_state"], [210, 1, 1, "", "set_submodule"], [210, 1, 1, "", "share_memory"], [210, 1, 1, "", "state_dict"], [210, 1, 1, "", "to"], [210, 1, 1, "", "to_empty"], [210, 1, 1, "", "train"], [210, 1, 1, "", "transform_action_spec"], [210, 1, 1, "", "transform_done_spec"], [210, 1, 1, "", "transform_env_batch_size"], [210, 1, 1, "", "transform_env_device"], [210, 1, 1, "", "transform_input_spec"], [210, 1, 1, "", "transform_observation_spec"], [210, 1, 1, "", "transform_output_spec"], [210, 1, 1, "", "transform_reward_spec"], [210, 1, 1, "", "transform_state_spec"], [210, 1, 1, "", "type"], [210, 1, 1, "", "xpu"], [210, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.PolicyVersion": [[211, 1, 1, "", "add_module"], [211, 1, 1, "", "apply"], [211, 1, 1, "", "bfloat16"], [211, 1, 1, "", "buffers"], [211, 1, 1, "", "children"], [211, 1, 1, "", "close"], [211, 2, 1, "", "collector"], [211, 1, 1, "", "compile"], [211, 2, 1, "", "container"], [211, 1, 1, "", "cpu"], [211, 1, 1, "", "cuda"], [211, 1, 1, "", "double"], [211, 1, 1, "", "eval"], [211, 1, 1, "", "extra_repr"], [211, 1, 1, "", "float"], [211, 1, 1, "", "forward"], [211, 1, 1, "", "get_buffer"], [211, 1, 1, "", "get_extra_state"], [211, 1, 1, "", "get_parameter"], [211, 1, 1, "", "get_submodule"], [211, 1, 1, "", "half"], [211, 1, 1, "", "increment_version"], [211, 1, 1, "", "init"], [211, 1, 1, "", "inv"], [211, 1, 1, "", "ipu"], [211, 1, 1, "", "load_state_dict"], [211, 1, 1, "", "modules"], [211, 1, 1, "", "mtia"], [211, 1, 1, "", "named_buffers"], [211, 1, 1, "", "named_children"], [211, 1, 1, "", "named_modules"], [211, 1, 1, "", "named_parameters"], [211, 1, 1, "", "parameters"], [211, 2, 1, "", "parent"], [211, 1, 1, "", "register_backward_hook"], [211, 1, 1, "", "register_buffer"], [211, 1, 1, "", "register_forward_hook"], [211, 1, 1, "", "register_forward_pre_hook"], [211, 1, 1, "", "register_full_backward_hook"], [211, 1, 1, "", "register_full_backward_pre_hook"], [211, 1, 1, "", "register_load_state_dict_post_hook"], [211, 1, 1, "", "register_load_state_dict_pre_hook"], [211, 1, 1, "", "register_module"], [211, 1, 1, "", "register_parameter"], [211, 1, 1, "", "register_state_dict_post_hook"], [211, 1, 1, "", "register_state_dict_pre_hook"], [211, 1, 1, "", "requires_grad_"], [211, 1, 1, "", "set_extra_state"], [211, 1, 1, "", "set_submodule"], [211, 1, 1, "", "share_memory"], [211, 1, 1, "", "state_dict"], [211, 1, 1, "", "to"], [211, 1, 1, "", "to_empty"], [211, 1, 1, "", "train"], [211, 1, 1, "", "transform_action_spec"], [211, 1, 1, "", "transform_done_spec"], [211, 1, 1, "", "transform_env_batch_size"], [211, 1, 1, "", "transform_env_device"], [211, 1, 1, "", "transform_input_spec"], [211, 1, 1, "", "transform_observation_spec"], [211, 1, 1, "", "transform_output_spec"], [211, 1, 1, "", "transform_reward_spec"], [211, 1, 1, "", "transform_state_spec"], [211, 1, 1, "", "type"], [211, 2, 1, "", "version"], [211, 1, 1, "", "xpu"], [211, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.PythonInterpreter": [[212, 1, 1, "", "add_module"], [212, 1, 1, "", "apply"], [212, 1, 1, "", "bfloat16"], [212, 1, 1, "", "buffers"], [212, 1, 1, "", "children"], [212, 1, 1, "", "clone"], [212, 1, 1, "", "close"], [212, 2, 1, "", "collector"], [212, 1, 1, "", "compile"], [212, 2, 1, "", "container"], [212, 1, 1, "", "cpu"], [212, 1, 1, "", "cuda"], [212, 1, 1, "", "double"], [212, 1, 1, "", "eval"], [212, 1, 1, "", "extra_repr"], [212, 1, 1, "", "float"], [212, 1, 1, "", "forward"], [212, 1, 1, "", "get_buffer"], [212, 1, 1, "", "get_extra_state"], [212, 1, 1, "", "get_parameter"], [212, 1, 1, "", "get_submodule"], [212, 1, 1, "", "half"], [212, 1, 1, "", "init"], [212, 1, 1, "", "inv"], [212, 1, 1, "", "ipu"], [212, 1, 1, "", "load_state_dict"], [212, 1, 1, "", "modules"], [212, 1, 1, "", "mtia"], [212, 1, 1, "", "named_buffers"], [212, 1, 1, "", "named_children"], [212, 1, 1, "", "named_modules"], [212, 1, 1, "", "named_parameters"], [212, 1, 1, "", "parameters"], [212, 2, 1, "", "parent"], [212, 1, 1, "", "register_backward_hook"], [212, 1, 1, "", "register_buffer"], [212, 1, 1, "", "register_forward_hook"], [212, 1, 1, "", "register_forward_pre_hook"], [212, 1, 1, "", "register_full_backward_hook"], [212, 1, 1, "", "register_full_backward_pre_hook"], [212, 1, 1, "", "register_load_state_dict_post_hook"], [212, 1, 1, "", "register_load_state_dict_pre_hook"], [212, 1, 1, "", "register_module"], [212, 1, 1, "", "register_parameter"], [212, 1, 1, "", "register_state_dict_post_hook"], [212, 1, 1, "", "register_state_dict_pre_hook"], [212, 1, 1, "", "requires_grad_"], [212, 1, 1, "", "set_extra_state"], [212, 1, 1, "", "set_submodule"], [212, 1, 1, "", "share_memory"], [212, 1, 1, "", "state_dict"], [212, 1, 1, "", "to"], [212, 1, 1, "", "to_empty"], [212, 1, 1, "", "train"], [212, 1, 1, "", "transform_action_spec"], [212, 1, 1, "", "transform_done_spec"], [212, 1, 1, "", "transform_env_batch_size"], [212, 1, 1, "", "transform_env_device"], [212, 1, 1, "", "transform_input_spec"], [212, 1, 1, "", "transform_observation_spec"], [212, 1, 1, "", "transform_output_spec"], [212, 1, 1, "", "transform_reward_spec"], [212, 1, 1, "", "transform_state_spec"], [212, 1, 1, "", "type"], [212, 1, 1, "", "xpu"], [212, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.RayDataLoadingPrimer": [[213, 1, 1, "", "add_module"], [213, 1, 1, "", "apply"], [213, 2, 1, "", "base_env"], [213, 1, 1, "", "bfloat16"], [213, 1, 1, "", "buffers"], [213, 1, 1, "", "children"], [213, 1, 1, "", "clone"], [213, 1, 1, "", "close"], [213, 2, 1, "", "collector"], [213, 1, 1, "", "compile"], [213, 2, 1, "", "container"], [213, 1, 1, "", "cpu"], [213, 1, 1, "", "cuda"], [213, 2, 1, "", "data_keys"], [213, 2, 1, "", "dataloader"], [213, 2, 1, "", "device"], [213, 1, 1, "", "double"], [213, 1, 1, "", "dump"], [213, 1, 1, "", "empty_cache"], [213, 2, 1, "", "endless_dataloader"], [213, 1, 1, "", "eval"], [213, 1, 1, "", "extra_repr"], [213, 1, 1, "", "float"], [213, 1, 1, "", "forward"], [213, 1, 1, "", "get_buffer"], [213, 1, 1, "", "get_extra_state"], [213, 1, 1, "", "get_parameter"], [213, 1, 1, "", "get_submodule"], [213, 1, 1, "", "half"], [213, 2, 1, "", "in_keys"], [213, 2, 1, "", "in_keys_inv"], [213, 1, 1, "", "init"], [213, 1, 1, "", "inv"], [213, 1, 1, "", "ipu"], [213, 1, 1, "", "load_state_dict"], [213, 2, 1, "", "missing_tolerance"], [213, 1, 1, "", "modules"], [213, 1, 1, "", "mtia"], [213, 1, 1, "", "named_buffers"], [213, 1, 1, "", "named_children"], [213, 1, 1, "", "named_modules"], [213, 1, 1, "", "named_parameters"], [213, 2, 1, "", "out_keys"], [213, 2, 1, "", "out_keys_inv"], [213, 1, 1, "", "parameters"], [213, 2, 1, "", "parent"], [213, 2, 1, "", "primers"], [213, 1, 1, "", "register_backward_hook"], [213, 1, 1, "", "register_buffer"], [213, 1, 1, "", "register_forward_hook"], [213, 1, 1, "", "register_forward_pre_hook"], [213, 1, 1, "", "register_full_backward_hook"], [213, 1, 1, "", "register_full_backward_pre_hook"], [213, 1, 1, "", "register_load_state_dict_post_hook"], [213, 1, 1, "", "register_load_state_dict_pre_hook"], [213, 1, 1, "", "register_module"], [213, 1, 1, "", "register_parameter"], [213, 1, 1, "", "register_state_dict_post_hook"], [213, 1, 1, "", "register_state_dict_pre_hook"], [213, 2, 1, "", "repeats"], [213, 1, 1, "", "requires_grad_"], [213, 1, 1, "", "reset_dataloader"], [213, 1, 1, "", "reset_parent"], [213, 1, 1, "", "set_container"], [213, 1, 1, "", "set_extra_state"], [213, 1, 1, "", "set_missing_tolerance"], [213, 1, 1, "", "set_submodule"], [213, 1, 1, "", "share_memory"], [213, 2, 1, "", "stack_method"], [213, 1, 1, "", "state_dict"], [213, 1, 1, "", "to"], [213, 1, 1, "", "to_empty"], [213, 1, 1, "", "train"], [213, 1, 1, "", "transform_action_spec"], [213, 1, 1, "", "transform_done_spec"], [213, 1, 1, "", "transform_env_batch_size"], [213, 1, 1, "", "transform_env_device"], [213, 1, 1, "", "transform_input_spec"], [213, 1, 1, "", "transform_observation_spec"], [213, 1, 1, "", "transform_output_spec"], [213, 1, 1, "", "transform_reward_spec"], [213, 1, 1, "", "transform_state_spec"], [213, 1, 1, "", "type"], [213, 1, 1, "", "xpu"], [213, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.RetrieveKL": [[214, 1, 1, "", "add_module"], [214, 1, 1, "", "append"], [214, 1, 1, "", "apply"], [214, 1, 1, "", "bfloat16"], [214, 1, 1, "", "buffers"], [214, 1, 1, "", "children"], [214, 1, 1, "", "close"], [214, 2, 1, "", "collector"], [214, 1, 1, "", "compile"], [214, 2, 1, "", "container"], [214, 1, 1, "", "cpu"], [214, 1, 1, "", "cuda"], [214, 1, 1, "", "double"], [214, 1, 1, "", "eval"], [214, 1, 1, "", "extra_repr"], [214, 1, 1, "", "float"], [214, 1, 1, "", "forward"], [214, 1, 1, "", "get_buffer"], [214, 1, 1, "", "get_extra_state"], [214, 1, 1, "", "get_parameter"], [214, 1, 1, "", "get_submodule"], [214, 1, 1, "", "half"], [214, 1, 1, "", "init"], [214, 1, 1, "", "insert"], [214, 1, 1, "", "inv"], [214, 1, 1, "", "ipu"], [214, 1, 1, "", "load_state_dict"], [214, 1, 1, "", "modules"], [214, 1, 1, "", "mtia"], [214, 1, 1, "", "named_buffers"], [214, 1, 1, "", "named_children"], [214, 1, 1, "", "named_modules"], [214, 1, 1, "", "named_parameters"], [214, 1, 1, "", "parameters"], [214, 2, 1, "", "parent"], [214, 1, 1, "", "pop"], [214, 1, 1, "", "register_backward_hook"], [214, 1, 1, "", "register_buffer"], [214, 1, 1, "", "register_forward_hook"], [214, 1, 1, "", "register_forward_pre_hook"], [214, 1, 1, "", "register_full_backward_hook"], [214, 1, 1, "", "register_full_backward_pre_hook"], [214, 1, 1, "", "register_load_state_dict_post_hook"], [214, 1, 1, "", "register_load_state_dict_pre_hook"], [214, 1, 1, "", "register_module"], [214, 1, 1, "", "register_parameter"], [214, 1, 1, "", "register_state_dict_post_hook"], [214, 1, 1, "", "register_state_dict_pre_hook"], [214, 1, 1, "", "requires_grad_"], [214, 1, 1, "", "set_extra_state"], [214, 1, 1, "", "set_submodule"], [214, 1, 1, "", "share_memory"], [214, 1, 1, "", "state_dict"], [214, 1, 1, "", "to"], [214, 1, 1, "", "to_empty"], [214, 1, 1, "", "train"], [214, 1, 1, "", "transform_action_spec"], [214, 1, 1, "", "transform_done_spec"], [214, 1, 1, "", "transform_env_batch_size"], [214, 1, 1, "", "transform_env_device"], [214, 1, 1, "", "transform_input_spec"], [214, 1, 1, "", "transform_observation_spec"], [214, 1, 1, "", "transform_output_spec"], [214, 1, 1, "", "transform_reward_spec"], [214, 1, 1, "", "transform_state_spec"], [214, 1, 1, "", "type"], [214, 1, 1, "", "xpu"], [214, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.RetrieveLogProb": [[215, 1, 1, "", "add_module"], [215, 1, 1, "", "apply"], [215, 1, 1, "", "bfloat16"], [215, 1, 1, "", "buffers"], [215, 1, 1, "", "children"], [215, 1, 1, "", "close"], [215, 2, 1, "", "collector"], [215, 1, 1, "", "compile"], [215, 2, 1, "", "container"], [215, 1, 1, "", "cpu"], [215, 1, 1, "", "cuda"], [215, 1, 1, "", "double"], [215, 1, 1, "", "eval"], [215, 1, 1, "", "extra_repr"], [215, 1, 1, "", "float"], [215, 1, 1, "", "forward"], [215, 1, 1, "", "get_buffer"], [215, 1, 1, "", "get_extra_state"], [215, 1, 1, "", "get_parameter"], [215, 1, 1, "", "get_submodule"], [215, 1, 1, "", "half"], [215, 1, 1, "", "init"], [215, 1, 1, "", "inv"], [215, 1, 1, "", "ipu"], [215, 1, 1, "", "load_state_dict"], [215, 1, 1, "", "modules"], [215, 1, 1, "", "mtia"], [215, 1, 1, "", "named_buffers"], [215, 1, 1, "", "named_children"], [215, 1, 1, "", "named_modules"], [215, 1, 1, "", "named_parameters"], [215, 1, 1, "", "parameters"], [215, 2, 1, "", "parent"], [215, 1, 1, "", "register_backward_hook"], [215, 1, 1, "", "register_buffer"], [215, 1, 1, "", "register_forward_hook"], [215, 1, 1, "", "register_forward_pre_hook"], [215, 1, 1, "", "register_full_backward_hook"], [215, 1, 1, "", "register_full_backward_pre_hook"], [215, 1, 1, "", "register_load_state_dict_post_hook"], [215, 1, 1, "", "register_load_state_dict_pre_hook"], [215, 1, 1, "", "register_module"], [215, 1, 1, "", "register_parameter"], [215, 1, 1, "", "register_state_dict_post_hook"], [215, 1, 1, "", "register_state_dict_pre_hook"], [215, 1, 1, "", "requires_grad_"], [215, 1, 1, "", "set_extra_state"], [215, 1, 1, "", "set_submodule"], [215, 1, 1, "", "share_memory"], [215, 1, 1, "", "state_dict"], [215, 1, 1, "", "to"], [215, 1, 1, "", "to_empty"], [215, 1, 1, "", "train"], [215, 1, 1, "", "transform_action_spec"], [215, 1, 1, "", "transform_done_spec"], [215, 1, 1, "", "transform_env_batch_size"], [215, 1, 1, "", "transform_env_device"], [215, 1, 1, "", "transform_input_spec"], [215, 1, 1, "", "transform_observation_spec"], [215, 1, 1, "", "transform_output_spec"], [215, 1, 1, "", "transform_reward_spec"], [215, 1, 1, "", "transform_state_spec"], [215, 1, 1, "", "type"], [215, 1, 1, "", "xpu"], [215, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.TemplateTransform": [[216, 1, 1, "", "add_module"], [216, 1, 1, "", "apply"], [216, 1, 1, "", "bfloat16"], [216, 1, 1, "", "buffers"], [216, 1, 1, "", "children"], [216, 1, 1, "", "close"], [216, 2, 1, "", "collector"], [216, 1, 1, "", "compile"], [216, 2, 1, "", "container"], [216, 1, 1, "", "cpu"], [216, 1, 1, "", "cuda"], [216, 1, 1, "", "double"], [216, 1, 1, "", "eval"], [216, 1, 1, "", "extra_repr"], [216, 1, 1, "", "float"], [216, 1, 1, "", "forward"], [216, 1, 1, "", "get_buffer"], [216, 1, 1, "", "get_extra_state"], [216, 1, 1, "", "get_parameter"], [216, 1, 1, "", "get_submodule"], [216, 1, 1, "", "half"], [216, 1, 1, "", "init"], [216, 1, 1, "", "inv"], [216, 1, 1, "", "ipu"], [216, 1, 1, "", "load_state_dict"], [216, 1, 1, "", "modules"], [216, 1, 1, "", "mtia"], [216, 1, 1, "", "named_buffers"], [216, 1, 1, "", "named_children"], [216, 1, 1, "", "named_modules"], [216, 1, 1, "", "named_parameters"], [216, 1, 1, "", "parameters"], [216, 2, 1, "", "parent"], [216, 1, 1, "", "register_backward_hook"], [216, 1, 1, "", "register_buffer"], [216, 1, 1, "", "register_forward_hook"], [216, 1, 1, "", "register_forward_pre_hook"], [216, 1, 1, "", "register_full_backward_hook"], [216, 1, 1, "", "register_full_backward_pre_hook"], [216, 1, 1, "", "register_load_state_dict_post_hook"], [216, 1, 1, "", "register_load_state_dict_pre_hook"], [216, 1, 1, "", "register_module"], [216, 1, 1, "", "register_parameter"], [216, 1, 1, "", "register_state_dict_post_hook"], [216, 1, 1, "", "register_state_dict_pre_hook"], [216, 1, 1, "", "requires_grad_"], [216, 1, 1, "", "set_extra_state"], [216, 1, 1, "", "set_submodule"], [216, 1, 1, "", "share_memory"], [216, 1, 1, "", "state_dict"], [216, 1, 1, "", "to"], [216, 1, 1, "", "to_empty"], [216, 1, 1, "", "train"], [216, 1, 1, "", "transform_action_spec"], [216, 1, 1, "", "transform_done_spec"], [216, 1, 1, "", "transform_env_batch_size"], [216, 1, 1, "", "transform_env_device"], [216, 1, 1, "", "transform_input_spec"], [216, 1, 1, "", "transform_observation_spec"], [216, 1, 1, "", "transform_output_spec"], [216, 1, 1, "", "transform_reward_spec"], [216, 1, 1, "", "transform_state_spec"], [216, 1, 1, "", "type"], [216, 1, 1, "", "xpu"], [216, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.Tokenizer": [[217, 1, 1, "", "add_module"], [217, 1, 1, "", "apply"], [217, 1, 1, "", "bfloat16"], [217, 1, 1, "", "buffers"], [217, 1, 1, "", "children"], [217, 1, 1, "", "close"], [217, 2, 1, "", "collector"], [217, 1, 1, "", "compile"], [217, 2, 1, "", "container"], [217, 1, 1, "", "cpu"], [217, 1, 1, "", "cuda"], [217, 1, 1, "", "double"], [217, 1, 1, "", "eval"], [217, 1, 1, "", "extra_repr"], [217, 1, 1, "", "float"], [217, 1, 1, "", "forward"], [217, 1, 1, "", "get_buffer"], [217, 1, 1, "", "get_extra_state"], [217, 1, 1, "", "get_parameter"], [217, 1, 1, "", "get_submodule"], [217, 1, 1, "", "half"], [217, 1, 1, "", "init"], [217, 1, 1, "", "inv"], [217, 1, 1, "", "ipu"], [217, 1, 1, "", "load_state_dict"], [217, 1, 1, "", "modules"], [217, 1, 1, "", "mtia"], [217, 1, 1, "", "named_buffers"], [217, 1, 1, "", "named_children"], [217, 1, 1, "", "named_modules"], [217, 1, 1, "", "named_parameters"], [217, 1, 1, "", "parameters"], [217, 2, 1, "", "parent"], [217, 1, 1, "", "register_backward_hook"], [217, 1, 1, "", "register_buffer"], [217, 1, 1, "", "register_forward_hook"], [217, 1, 1, "", "register_forward_pre_hook"], [217, 1, 1, "", "register_full_backward_hook"], [217, 1, 1, "", "register_full_backward_pre_hook"], [217, 1, 1, "", "register_load_state_dict_post_hook"], [217, 1, 1, "", "register_load_state_dict_pre_hook"], [217, 1, 1, "", "register_module"], [217, 1, 1, "", "register_parameter"], [217, 1, 1, "", "register_state_dict_post_hook"], [217, 1, 1, "", "register_state_dict_pre_hook"], [217, 1, 1, "", "requires_grad_"], [217, 1, 1, "", "set_extra_state"], [217, 1, 1, "", "set_submodule"], [217, 1, 1, "", "share_memory"], [217, 1, 1, "", "state_dict"], [217, 1, 1, "", "to"], [217, 1, 1, "", "to_empty"], [217, 1, 1, "", "train"], [217, 1, 1, "", "transform_action_spec"], [217, 1, 1, "", "transform_done_spec"], [217, 1, 1, "", "transform_env_batch_size"], [217, 1, 1, "", "transform_env_device"], [217, 1, 1, "", "transform_input_spec"], [217, 1, 1, "", "transform_observation_spec"], [217, 1, 1, "", "transform_output_spec"], [217, 1, 1, "", "transform_reward_spec"], [217, 1, 1, "", "transform_state_spec"], [217, 1, 1, "", "type"], [217, 1, 1, "", "xpu"], [217, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[221, 3, 1, "", "DreamerDecoder"], [222, 3, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[228, 0, 1, "", "ActionDiscretizer"], [229, 0, 1, "", "ActionMask"], [230, 0, 1, "", "AutoResetEnv"], [231, 0, 1, "", "AutoResetTransform"], [232, 0, 1, "", "BatchSizeTransform"], [233, 0, 1, "", "BinarizeReward"], [234, 0, 1, "", "BurnInTransform"], [235, 0, 1, "", "CatFrames"], [236, 0, 1, "", "CatTensors"], [237, 0, 1, "", "CenterCrop"], [238, 0, 1, "", "ClipTransform"], [239, 0, 1, "", "Compose"], [240, 0, 1, "", "ConditionalPolicySwitch"], [241, 0, 1, "", "ConditionalSkip"], [242, 0, 1, "", "Crop"], [243, 0, 1, "", "DTypeCastTransform"], [244, 0, 1, "", "DeviceCastTransform"], [245, 0, 1, "", "DiscreteActionProjection"], [246, 0, 1, "", "DoubleToFloat"], [247, 0, 1, "", "EndOfLifeTransform"], [248, 0, 1, "", "ExcludeTransform"], [249, 0, 1, "", "FiniteTensorDictCheck"], [250, 0, 1, "", "FlattenObservation"], [251, 0, 1, "", "FrameSkipTransform"], [252, 0, 1, "", "GrayScale"], [253, 0, 1, "", "Hash"], [254, 0, 1, "", "InitTracker"], [255, 0, 1, "", "KLRewardTransform"], [256, 0, 1, "", "LineariseRewards"], [257, 0, 1, "", "ModuleTransform"], [258, 0, 1, "", "MultiAction"], [259, 0, 1, "", "NoopResetEnv"], [260, 0, 1, "", "ObservationNorm"], [261, 0, 1, "", "ObservationTransform"], [262, 0, 1, "", "PermuteTransform"], [263, 0, 1, "", "PinMemoryTransform"], [264, 0, 1, "", "R3MTransform"], [265, 0, 1, "", "RandomCropTensorDict"], [266, 0, 1, "", "RemoveEmptySpecs"], [267, 0, 1, "", "RenameTransform"], [268, 0, 1, "", "Resize"], [269, 0, 1, "", "Reward2GoTransform"], [270, 0, 1, "", "RewardClipping"], [271, 0, 1, "", "RewardScaling"], [272, 0, 1, "", "RewardSum"], [273, 0, 1, "", "SelectTransform"], [274, 0, 1, "", "SignTransform"], [275, 0, 1, "", "SqueezeTransform"], [276, 0, 1, "", "Stack"], [277, 0, 1, "", "StepCounter"], [278, 0, 1, "", "TargetReturn"], [279, 0, 1, "", "TensorDictPrimer"], [280, 0, 1, "", "TimeMaxPool"], [281, 0, 1, "", "Timer"], [282, 0, 1, "", "ToTensorImage"], [283, 0, 1, "", "Tokenizer"], [284, 0, 1, "", "TrajCounter"], [285, 0, 1, "", "Transform"], [286, 0, 1, "", "TransformedEnv"], [287, 0, 1, "", "UnaryTransform"], [288, 0, 1, "", "UnsqueezeTransform"], [289, 0, 1, "", "VC1Transform"], [290, 0, 1, "", "VIPRewardTransform"], [291, 0, 1, "", "VIPTransform"], [292, 0, 1, "", "VecGymEnvTransform"], [293, 0, 1, "", "VecNorm"], [294, 0, 1, "", "VecNormV2"], [295, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[228, 0, 1, "", "SamplingStrategy"], [228, 1, 1, "", "inv"], [228, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[229, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[230, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[231, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "transform_env_batch_size"], [232, 1, 1, "", "transform_input_spec"], [232, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[233, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[234, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "make_rb_transform_and_sampler"], [235, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[236, 1, 1, "", "forward"], [236, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[237, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[238, 1, 1, "", "transform_observation_spec"], [238, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[239, 1, 1, "", "append"], [239, 1, 1, "", "close"], [239, 1, 1, "", "forward"], [239, 1, 1, "", "init"], [239, 1, 1, "", "insert"], [239, 1, 1, "", "pop"], [239, 1, 1, "", "to"], [239, 1, 1, "", "transform_action_spec"], [239, 1, 1, "", "transform_env_batch_size"], [239, 1, 1, "", "transform_env_device"], [239, 1, 1, "", "transform_input_spec"], [239, 1, 1, "", "transform_observation_spec"], [239, 1, 1, "", "transform_output_spec"], [239, 1, 1, "", "transform_reward_spec"], [239, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.ConditionalPolicySwitch": [[240, 1, 1, "", "forward"]], "torchrl.envs.transforms.ConditionalSkip": [[241, 1, 1, "", "forward"]], "torchrl.envs.transforms.Crop": [[242, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[243, 1, 1, "", "forward"], [243, 1, 1, "", "transform_input_spec"], [243, 1, 1, "", "transform_observation_spec"], [243, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[244, 1, 1, "", "forward"], [244, 1, 1, "", "transform_action_spec"], [244, 1, 1, "", "transform_done_spec"], [244, 1, 1, "", "transform_env_device"], [244, 1, 1, "", "transform_input_spec"], [244, 1, 1, "", "transform_observation_spec"], [244, 1, 1, "", "transform_output_spec"], [244, 1, 1, "", "transform_reward_spec"], [244, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[245, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[247, 1, 1, "", "forward"], [247, 1, 1, "", "register_keys"], [247, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[248, 1, 1, "", "forward"], [248, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[249, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[250, 1, 1, "", "forward"], [250, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[251, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[252, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Hash": [[253, 1, 1, "", "get_input_from_hash"], [253, 1, 1, "", "reproducible_hash"], [253, 1, 1, "", "state_dict"]], "torchrl.envs.transforms.InitTracker": [[254, 1, 1, "", "forward"], [254, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[255, 1, 1, "", "forward"], [255, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.LineariseRewards": [[256, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.ModuleTransform": [[257, 1, 1, "", "forward"], [257, 1, 1, "", "transform_action_spec"], [257, 1, 1, "", "transform_done_spec"], [257, 1, 1, "", "transform_observation_spec"], [257, 1, 1, "", "transform_reward_spec"], [257, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.MultiAction": [[258, 1, 1, "", "transform_input_spec"], [258, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[260, 1, 1, "", "init_stats"], [260, 1, 1, "", "transform_action_spec"], [260, 1, 1, "", "transform_observation_spec"], [260, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.PermuteTransform": [[262, 1, 1, "", "transform_input_spec"], [262, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[263, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[264, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[265, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[266, 1, 1, "", "forward"], [266, 1, 1, "", "transform_input_spec"], [266, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[267, 1, 1, "", "forward"], [267, 1, 1, "", "transform_input_spec"], [267, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[268, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[269, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[270, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[271, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[272, 1, 1, "", "forward"], [272, 1, 1, "", "transform_input_spec"], [272, 1, 1, "", "transform_observation_spec"], [272, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[273, 1, 1, "", "forward"], [273, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[274, 1, 1, "", "transform_observation_spec"], [274, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Stack": [[276, 1, 1, "", "forward"], [276, 1, 1, "", "transform_done_spec"], [276, 1, 1, "", "transform_input_spec"], [276, 1, 1, "", "transform_observation_spec"], [276, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[277, 1, 1, "", "forward"], [277, 1, 1, "", "transform_input_spec"], [277, 1, 1, "", "transform_observation_spec"], [277, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[278, 1, 1, "", "forward"], [278, 1, 1, "", "transform_input_spec"], [278, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[279, 1, 1, "", "forward"], [279, 1, 1, "", "to"], [279, 1, 1, "", "transform_input_spec"], [279, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[280, 1, 1, "", "forward"], [280, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Timer": [[281, 1, 1, "", "forward"], [281, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[282, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Tokenizer": [[283, 1, 1, "", "forward"], [283, 1, 1, "", "transform_done_spec"], [283, 1, 1, "", "transform_input_spec"], [283, 1, 1, "", "transform_observation_spec"], [283, 1, 1, "", "transform_output_spec"], [283, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TrajCounter": [[284, 1, 1, "", "forward"], [284, 1, 1, "", "load_state_dict"], [284, 1, 1, "", "state_dict"], [284, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[285, 1, 1, "", "clone"], [285, 1, 1, "", "close"], [285, 2, 1, "", "collector"], [285, 2, 1, "", "container"], [285, 1, 1, "", "forward"], [285, 1, 1, "", "init"], [285, 1, 1, "", "inv"], [285, 2, 1, "", "parent"], [285, 1, 1, "", "reset_parent"], [285, 1, 1, "", "set_container"], [285, 1, 1, "", "to"], [285, 1, 1, "", "transform_action_spec"], [285, 1, 1, "", "transform_done_spec"], [285, 1, 1, "", "transform_env_batch_size"], [285, 1, 1, "", "transform_env_device"], [285, 1, 1, "", "transform_input_spec"], [285, 1, 1, "", "transform_observation_spec"], [285, 1, 1, "", "transform_output_spec"], [285, 1, 1, "", "transform_reward_spec"], [285, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.TransformedEnv": [[286, 1, 1, "", "add_truncated_keys"], [286, 1, 1, "", "append_transform"], [286, 2, 1, "", "batch_locked"], [286, 2, 1, "", "batch_size"], [286, 1, 1, "", "empty_cache"], [286, 1, 1, "", "eval"], [286, 2, 1, "", "input_spec"], [286, 1, 1, "", "insert_transform"], [286, 1, 1, "", "load_state_dict"], [286, 2, 1, "", "output_spec"], [286, 1, 1, "", "rand_action"], [286, 1, 1, "", "set_missing_tolerance"], [286, 1, 1, "", "set_seed"], [286, 1, 1, "", "state_dict"], [286, 1, 1, "", "to"], [286, 1, 1, "", "train"]], "torchrl.envs.transforms.UnaryTransform": [[287, 1, 1, "", "transform_action_spec"], [287, 1, 1, "", "transform_done_spec"], [287, 1, 1, "", "transform_input_spec"], [287, 1, 1, "", "transform_observation_spec"], [287, 1, 1, "", "transform_output_spec"], [287, 1, 1, "", "transform_reward_spec"], [287, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.UnsqueezeTransform": [[288, 1, 1, "", "transform_action_spec"], [288, 1, 1, "", "transform_observation_spec"], [288, 1, 1, "", "transform_reward_spec"], [288, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.VC1Transform": [[289, 1, 1, "", "forward"], [289, 1, 1, "", "make_noload_model"], [289, 1, 1, "", "to"], [289, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[290, 1, 1, "", "forward"], [290, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[291, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[292, 1, 1, "", "forward"], [292, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[293, 1, 1, "", "build_td_for_shared_vecnorm"], [293, 1, 1, "", "forward"], [293, 1, 1, "", "freeze"], [293, 1, 1, "", "frozen_copy"], [293, 1, 1, "", "get_extra_state"], [293, 2, 1, "", "loc"], [293, 2, 1, "", "scale"], [293, 1, 1, "", "set_extra_state"], [293, 2, 1, "", "standard_normal"], [293, 1, 1, "", "to_observation_norm"], [293, 1, 1, "", "transform_observation_spec"], [293, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.VecNormV2": [[294, 1, 1, "", "clone"], [294, 1, 1, "id0", "freeze"], [294, 1, 1, "id1", "frozen_copy"], [294, 1, 1, "id2", "get_extra_state"], [294, 2, 1, "id3", "loc"], [294, 2, 1, "id4", "scale"], [294, 1, 1, "id5", "set_extra_state"], [294, 2, 1, "id6", "standard_normal"], [294, 1, 1, "", "to_observation_norm"], [294, 1, 1, "id7", "transform_observation_spec"], [294, 1, 1, "id8", "transform_output_spec"], [294, 1, 1, "id9", "transform_reward_spec"], [294, 1, 1, "id10", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[296, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[296, 1, 1, "", "add_module"], [296, 1, 1, "", "apply"], [296, 1, 1, "", "bfloat16"], [296, 1, 1, "", "buffers"], [296, 1, 1, "", "children"], [296, 1, 1, "", "close"], [296, 2, 1, "", "collector"], [296, 1, 1, "", "compile"], [296, 2, 1, "", "container"], [296, 1, 1, "", "cpu"], [296, 1, 1, "", "cuda"], [296, 1, 1, "", "double"], [296, 1, 1, "", "eval"], [296, 1, 1, "", "extra_repr"], [296, 1, 1, "", "float"], [296, 1, 1, "", "forward"], [296, 1, 1, "", "get_buffer"], [296, 1, 1, "", "get_extra_state"], [296, 1, 1, "", "get_parameter"], [296, 1, 1, "", "get_submodule"], [296, 1, 1, "", "half"], [296, 1, 1, "", "init"], [296, 1, 1, "", "inv"], [296, 1, 1, "", "ipu"], [296, 1, 1, "", "load_state_dict"], [296, 1, 1, "", "modules"], [296, 1, 1, "", "mtia"], [296, 2, 1, "", "n_steps"], [296, 1, 1, "", "named_buffers"], [296, 1, 1, "", "named_children"], [296, 1, 1, "", "named_modules"], [296, 1, 1, "", "named_parameters"], [296, 1, 1, "", "parameters"], [296, 2, 1, "", "parent"], [296, 1, 1, "", "register_backward_hook"], [296, 1, 1, "", "register_buffer"], [296, 1, 1, "", "register_forward_hook"], [296, 1, 1, "", "register_forward_pre_hook"], [296, 1, 1, "", "register_full_backward_hook"], [296, 1, 1, "", "register_full_backward_pre_hook"], [296, 1, 1, "", "register_load_state_dict_post_hook"], [296, 1, 1, "", "register_load_state_dict_pre_hook"], [296, 1, 1, "", "register_module"], [296, 1, 1, "", "register_parameter"], [296, 1, 1, "", "register_state_dict_post_hook"], [296, 1, 1, "", "register_state_dict_pre_hook"], [296, 1, 1, "", "requires_grad_"], [296, 1, 1, "", "set_extra_state"], [296, 1, 1, "", "set_submodule"], [296, 1, 1, "", "share_memory"], [296, 1, 1, "", "state_dict"], [296, 1, 1, "", "to"], [296, 1, 1, "", "to_empty"], [296, 1, 1, "", "train"], [296, 1, 1, "", "transform_action_spec"], [296, 1, 1, "", "transform_done_spec"], [296, 1, 1, "", "transform_env_batch_size"], [296, 1, 1, "", "transform_env_device"], [296, 1, 1, "", "transform_input_spec"], [296, 1, 1, "", "transform_observation_spec"], [296, 1, 1, "", "transform_output_spec"], [296, 1, 1, "", "transform_reward_spec"], [296, 1, 1, "", "transform_state_spec"], [296, 1, 1, "", "type"], [296, 1, 1, "", "xpu"], [296, 1, 1, "", "zero_grad"]], "torchrl.implement_for": [[297, 1, 1, "", "get_class_that_defined_method"], [297, 1, 1, "", "import_module"], [297, 1, 1, "", "module_set"], [297, 1, 1, "", "reset"]], "torchrl.modules": [[298, 0, 1, "", "AdditiveGaussianModule"], [299, 0, 1, "", "BatchRenorm1d"], [300, 0, 1, "", "CEMPlanner"], [301, 0, 1, "", "ConsistentDropout"], [302, 0, 1, "", "ConsistentDropoutModule"], [303, 0, 1, "", "Conv3dNet"], [304, 0, 1, "", "ConvNet"], [305, 0, 1, "", "DTActor"], [306, 0, 1, "", "DdpgCnnActor"], [307, 0, 1, "", "DdpgCnnQNet"], [308, 0, 1, "", "DdpgMlpActor"], [309, 0, 1, "", "DdpgMlpQNet"], [310, 0, 1, "", "DecisionTransformer"], [311, 0, 1, "", "Delta"], [312, 0, 1, "", "DistributionalDQNnet"], [313, 0, 1, "", "DistributionalQValueHook"], [314, 0, 1, "", "DreamerActor"], [315, 0, 1, "", "DuelingCnnDQNet"], [316, 0, 1, "", "EGreedyModule"], [317, 0, 1, "", "GRU"], [318, 0, 1, "", "GRUCell"], [319, 0, 1, "", "GRUModule"], [320, 0, 1, "", "IndependentNormal"], [321, 0, 1, "", "LLMMaskedCategorical"], [322, 0, 1, "", "LSTM"], [323, 0, 1, "", "LSTMCell"], [324, 0, 1, "", "LSTMModule"], [325, 0, 1, "", "MLP"], [326, 0, 1, "", "MPCPlannerBase"], [327, 0, 1, "", "MPPIPlanner"], [328, 0, 1, "", "MaskedCategorical"], [329, 0, 1, "", "MaskedOneHotCategorical"], [330, 0, 1, "", "MultiAgentConvNet"], [331, 0, 1, "", "MultiAgentMLP"], [332, 0, 1, "", "MultiAgentNetBase"], [333, 0, 1, "", "NoisyLazyLinear"], [334, 0, 1, "", "NoisyLinear"], [335, 0, 1, "", "ObsDecoder"], [336, 0, 1, "", "ObsEncoder"], [337, 0, 1, "", "OneHotCategorical"], [338, 0, 1, "", "OneHotOrdinal"], [339, 0, 1, "", "OnlineDTActor"], [340, 0, 1, "", "Ordinal"], [341, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [342, 0, 1, "", "QMixer"], [343, 0, 1, "", "QValueHook"], [344, 0, 1, "", "RSSMPosterior"], [345, 0, 1, "", "RSSMPrior"], [346, 0, 1, "", "Squeeze2dLayer"], [347, 0, 1, "", "SqueezeLayer"], [348, 0, 1, "", "TanhDelta"], [349, 0, 1, "", "TanhNormal"], [350, 0, 1, "", "TruncatedNormal"], [351, 0, 1, "", "VDNMixer"], [352, 0, 1, "", "VmapModule"], [367, 0, 1, "", "recurrent_mode"], [368, 0, 1, "", "reset_noise"], [369, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[298, 1, 1, "", "forward"], [298, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[299, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[300, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[301, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[302, 1, 1, "", "forward"], [302, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[303, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[304, 1, 1, "", "default_atari_dqn"], [304, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[305, 1, 1, "", "default_config"], [305, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[306, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[307, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[308, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[309, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[310, 0, 1, "", "DTConfig"], [310, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[311, 1, 1, "", "expand"], [311, 1, 1, "", "log_prob"], [311, 2, 1, "", "mean"], [311, 2, 1, "", "mode"], [311, 1, 1, "", "rsample"], [311, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[312, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[314, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[315, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[316, 1, 1, "", "forward"], [316, 1, 1, "", "step"]], "torchrl.modules.GRU": [[317, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[318, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[319, 1, 1, "", "forward"], [319, 1, 1, "", "make_cudnn_based"], [319, 1, 1, "", "make_python_based"], [319, 1, 1, "id0", "make_tensordict_primer"], [319, 1, 1, "", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[320, 2, 1, "", "mode"]], "torchrl.modules.LLMMaskedCategorical": [[321, 1, 1, "", "clear_cache"], [321, 1, 1, "", "entropy"], [321, 1, 1, "", "log_prob"], [321, 2, 1, "", "logits"], [321, 2, 1, "", "mask"], [321, 2, 1, "", "masked_dist"], [321, 2, 1, "", "masked_logits"], [321, 2, 1, "", "mode"], [321, 2, 1, "", "position_level_masking"], [321, 2, 1, "", "probs"], [321, 1, 1, "", "rsample"], [321, 1, 1, "", "sample"]], "torchrl.modules.LSTM": [[322, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[323, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[324, 1, 1, "", "forward"], [324, 1, 1, "", "make_cudnn_based"], [324, 1, 1, "", "make_python_based"], [324, 1, 1, "id0", "make_tensordict_primer"], [324, 1, 1, "", "set_recurrent_mode"]], "torchrl.modules.MLP": [[325, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[326, 1, 1, "", "forward"], [326, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[327, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[328, 1, 1, "", "entropy"], [328, 1, 1, "", "log_prob"], [328, 2, 1, "", "padding_value"], [328, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[329, 1, 1, "", "log_prob"], [329, 2, 1, "", "mode"], [329, 1, 1, "", "rsample"], [329, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[332, 1, 1, "", "forward"], [332, 1, 1, "", "from_stateful_net"], [332, 1, 1, "", "get_stateful_net"], [332, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[333, 1, 1, "", "initialize_parameters"], [333, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLinear": [[334, 1, 1, "", "reset_parameters"]], "torchrl.modules.ObsDecoder": [[335, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[336, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[337, 1, 1, "", "entropy"], [337, 1, 1, "", "log_prob"], [337, 2, 1, "", "mode"], [337, 1, 1, "", "rsample"], [337, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[339, 1, 1, "", "default_config"], [339, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[341, 1, 1, "", "forward"], [341, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[342, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[344, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[345, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[347, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[348, 2, 1, "", "mean"], [348, 2, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[349, 1, 1, "", "get_mode"], [349, 2, 1, "", "mean"], [349, 2, 1, "", "mode"], [349, 2, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[350, 1, 1, "", "log_prob"], [350, 2, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[351, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[352, 1, 1, "", "forward"]], "torchrl.modules.llm": [[353, 0, 1, "", "AsyncVLLM"], [354, 0, 1, "", "ChatHistory"], [355, 0, 1, "", "LLMWrapperBase"], [356, 0, 1, "", "LogProbs"], [357, 0, 1, "", "Masks"], [358, 0, 1, "", "RemoteTransformersWrapper"], [359, 0, 1, "", "Text"], [360, 0, 1, "", "Tokens"], [361, 0, 1, "", "TransformersWrapper"], [362, 0, 1, "", "make_async_vllm_engine"], [363, 0, 1, "", "make_vllm_worker"], [364, 0, 1, "", "stateless_init_process_group"], [365, 0, 1, "", "stateless_init_process_group_async"], [366, 0, 1, "", "vLLMWrapper"]], "torchrl.modules.llm.AsyncVLLM": [[353, 1, 1, "", "collective_rpc"], [353, 1, 1, "", "create_load_balancer"], [353, 1, 1, "", "from_pretrained"], [353, 1, 1, "", "generate"], [353, 1, 1, "", "get_cache_usage"], [353, 1, 1, "", "get_master_address"], [353, 1, 1, "", "get_master_port"], [353, 1, 1, "", "get_model_metadata"], [353, 1, 1, "", "get_num_unfinished_requests"], [353, 1, 1, "", "get_random_actor_index"], [353, 1, 1, "", "get_tp_size"], [353, 1, 1, "", "init_weight_update_group"], [353, 1, 1, "", "launch"], [353, 1, 1, "", "shutdown"], [353, 1, 1, "", "update_weights"]], "torchrl.modules.llm.ChatHistory": [[354, 1, 1, "", "cat"], [354, 1, 1, "", "default_spec"], [354, 2, 1, "", "device"], [354, 1, 1, "", "dumps"], [354, 1, 1, "", "fields"], [354, 1, 1, "", "from_any"], [354, 1, 1, "", "from_dataclass"], [354, 1, 1, "", "from_h5"], [354, 1, 1, "", "from_modules"], [354, 1, 1, "", "from_namedtuple"], [354, 1, 1, "", "from_pytree"], [354, 1, 1, "", "from_remote_init"], [354, 1, 1, "", "from_struct_array"], [354, 1, 1, "", "from_tensordict"], [354, 1, 1, "", "from_tuple"], [354, 1, 1, "", "fromkeys"], [354, 1, 1, "", "get"], [354, 1, 1, "", "lazy_stack"], [354, 1, 1, "", "load"], [354, 1, 1, "", "load_"], [354, 1, 1, "", "load_memmap"], [354, 1, 1, "", "load_state_dict"], [354, 1, 1, "", "maybe_dense_stack"], [354, 1, 1, "", "memmap"], [354, 1, 1, "", "memmap_"], [354, 1, 1, "", "memmap_like"], [354, 1, 1, "", "memmap_refresh_"], [354, 1, 1, "", "save"], [354, 1, 1, "", "set"], [354, 1, 1, "", "stack"], [354, 1, 1, "", "state_dict"], [354, 1, 1, "", "to_tensordict"], [354, 1, 1, "", "unbind"]], "torchrl.modules.llm.LLMWrapperBase": [[355, 1, 1, "", "add_module"], [355, 1, 1, "", "apply"], [355, 2, 1, "", "batching"], [355, 1, 1, "", "bfloat16"], [355, 1, 1, "", "buffers"], [355, 1, 1, "", "children"], [355, 1, 1, "", "cleanup_batching"], [355, 2, 1, "", "collector"], [355, 1, 1, "", "compile"], [355, 1, 1, "", "cpu"], [355, 1, 1, "", "cuda"], [355, 1, 1, "", "double"], [355, 1, 1, "", "eval"], [355, 1, 1, "", "extra_repr"], [355, 1, 1, "", "float"], [355, 1, 1, "", "forward"], [355, 1, 1, "", "get_batching_state"], [355, 1, 1, "", "get_buffer"], [355, 1, 1, "", "get_dist"], [355, 1, 1, "", "get_extra_state"], [355, 1, 1, "", "get_new_version"], [355, 1, 1, "", "get_parameter"], [355, 1, 1, "", "get_submodule"], [355, 1, 1, "", "half"], [355, 1, 1, "", "ipu"], [355, 1, 1, "", "is_tdmodule_compatible"], [355, 1, 1, "", "load_state_dict"], [355, 1, 1, "", "modules"], [355, 1, 1, "", "mtia"], [355, 1, 1, "", "named_buffers"], [355, 1, 1, "", "named_children"], [355, 1, 1, "", "named_modules"], [355, 1, 1, "", "named_parameters"], [355, 1, 1, "", "parameters"], [355, 1, 1, "", "register_backward_hook"], [355, 1, 1, "", "register_buffer"], [355, 1, 1, "", "register_collector"], [355, 1, 1, "", "register_forward_hook"], [355, 1, 1, "", "register_forward_pre_hook"], [355, 1, 1, "", "register_full_backward_hook"], [355, 1, 1, "", "register_full_backward_pre_hook"], [355, 1, 1, "", "register_load_state_dict_post_hook"], [355, 1, 1, "", "register_load_state_dict_pre_hook"], [355, 1, 1, "", "register_module"], [355, 1, 1, "", "register_parameter"], [355, 1, 1, "", "register_state_dict_post_hook"], [355, 1, 1, "", "register_state_dict_pre_hook"], [355, 1, 1, "", "requires_grad_"], [355, 1, 1, "", "reset_out_keys"], [355, 1, 1, "", "reset_parameters_recursive"], [355, 1, 1, "", "select_out_keys"], [355, 1, 1, "", "set_extra_state"], [355, 1, 1, "", "set_submodule"], [355, 1, 1, "", "share_memory"], [355, 1, 1, "", "state_dict"], [355, 1, 1, "", "to"], [355, 1, 1, "", "to_empty"], [355, 1, 1, "", "train"], [355, 1, 1, "", "type"], [355, 1, 1, "", "xpu"], [355, 1, 1, "", "zero_grad"]], "torchrl.modules.llm.LogProbs": [[356, 1, 1, "", "cat"], [356, 1, 1, "", "default_spec"], [356, 2, 1, "", "device"], [356, 1, 1, "", "dumps"], [356, 1, 1, "", "fields"], [356, 1, 1, "", "from_any"], [356, 1, 1, "", "from_dataclass"], [356, 1, 1, "", "from_h5"], [356, 1, 1, "", "from_modules"], [356, 1, 1, "", "from_namedtuple"], [356, 1, 1, "", "from_pytree"], [356, 1, 1, "", "from_remote_init"], [356, 1, 1, "", "from_struct_array"], [356, 1, 1, "", "from_tensordict"], [356, 1, 1, "", "from_tuple"], [356, 1, 1, "", "fromkeys"], [356, 1, 1, "", "get"], [356, 1, 1, "", "lazy_stack"], [356, 1, 1, "", "load"], [356, 1, 1, "", "load_"], [356, 1, 1, "", "load_memmap"], [356, 1, 1, "", "load_state_dict"], [356, 1, 1, "", "maybe_dense_stack"], [356, 1, 1, "", "memmap"], [356, 1, 1, "", "memmap_"], [356, 1, 1, "", "memmap_like"], [356, 1, 1, "", "memmap_refresh_"], [356, 1, 1, "", "save"], [356, 1, 1, "", "set"], [356, 1, 1, "", "stack"], [356, 1, 1, "", "state_dict"], [356, 1, 1, "", "to_tensordict"], [356, 1, 1, "", "unbind"]], "torchrl.modules.llm.Masks": [[357, 1, 1, "", "cat"], [357, 1, 1, "", "default_spec"], [357, 2, 1, "", "device"], [357, 1, 1, "", "dumps"], [357, 1, 1, "", "fields"], [357, 1, 1, "", "from_any"], [357, 1, 1, "", "from_dataclass"], [357, 1, 1, "", "from_h5"], [357, 1, 1, "", "from_modules"], [357, 1, 1, "", "from_namedtuple"], [357, 1, 1, "", "from_pytree"], [357, 1, 1, "", "from_remote_init"], [357, 1, 1, "", "from_struct_array"], [357, 1, 1, "", "from_tensordict"], [357, 1, 1, "", "from_tuple"], [357, 1, 1, "", "fromkeys"], [357, 1, 1, "", "get"], [357, 1, 1, "", "lazy_stack"], [357, 1, 1, "", "load"], [357, 1, 1, "", "load_"], [357, 1, 1, "", "load_memmap"], [357, 1, 1, "", "load_state_dict"], [357, 1, 1, "", "maybe_dense_stack"], [357, 1, 1, "", "memmap"], [357, 1, 1, "", "memmap_"], [357, 1, 1, "", "memmap_like"], [357, 1, 1, "", "memmap_refresh_"], [357, 1, 1, "", "save"], [357, 1, 1, "", "set"], [357, 1, 1, "", "stack"], [357, 1, 1, "", "state_dict"], [357, 1, 1, "", "to_tensordict"], [357, 1, 1, "", "unbind"]], "torchrl.modules.llm.RemoteTransformersWrapper": [[358, 2, 1, "", "batching"], [358, 1, 1, "", "cleanup_batching"], [358, 2, 1, "", "collector"], [358, 2, 1, "", "device"], [358, 2, 1, "", "dist_params_keys"], [358, 2, 1, "", "dist_sample_keys"], [358, 2, 1, "", "generate"], [358, 1, 1, "", "get_batching_state"], [358, 1, 1, "", "get_dist"], [358, 1, 1, "", "get_dist_with_prompt_mask"], [358, 1, 1, "", "get_new_version"], [358, 2, 1, "", "in_keys"], [358, 2, 1, "", "inplace"], [358, 2, 1, "", "layout"], [358, 1, 1, "", "log_prob"], [358, 2, 1, "", "log_prob_keys"], [358, 2, 1, "", "log_probs_key"], [358, 2, 1, "", "masks_key"], [358, 2, 1, "", "num_samples"], [358, 2, 1, "", "out_keys"], [358, 2, 1, "", "pad_output"], [358, 2, 1, "", "text_key"], [358, 2, 1, "", "tokens_key"]], "torchrl.modules.llm.Text": [[359, 1, 1, "", "cat"], [359, 1, 1, "", "default_spec"], [359, 2, 1, "", "device"], [359, 1, 1, "", "dumps"], [359, 1, 1, "", "fields"], [359, 1, 1, "", "from_any"], [359, 1, 1, "", "from_dataclass"], [359, 1, 1, "", "from_h5"], [359, 1, 1, "", "from_modules"], [359, 1, 1, "", "from_namedtuple"], [359, 1, 1, "", "from_pytree"], [359, 1, 1, "", "from_remote_init"], [359, 1, 1, "", "from_struct_array"], [359, 1, 1, "", "from_tensordict"], [359, 1, 1, "", "from_tuple"], [359, 1, 1, "", "fromkeys"], [359, 1, 1, "", "get"], [359, 1, 1, "", "lazy_stack"], [359, 1, 1, "", "load"], [359, 1, 1, "", "load_"], [359, 1, 1, "", "load_memmap"], [359, 1, 1, "", "load_state_dict"], [359, 1, 1, "", "maybe_dense_stack"], [359, 1, 1, "", "memmap"], [359, 1, 1, "", "memmap_"], [359, 1, 1, "", "memmap_like"], [359, 1, 1, "", "memmap_refresh_"], [359, 1, 1, "", "save"], [359, 1, 1, "", "set"], [359, 1, 1, "", "stack"], [359, 1, 1, "", "state_dict"], [359, 1, 1, "", "to_tensordict"], [359, 1, 1, "", "unbind"]], "torchrl.modules.llm.Tokens": [[360, 1, 1, "", "cat"], [360, 1, 1, "", "default_spec"], [360, 2, 1, "", "device"], [360, 1, 1, "", "dumps"], [360, 1, 1, "", "fields"], [360, 1, 1, "", "from_any"], [360, 1, 1, "", "from_dataclass"], [360, 1, 1, "", "from_h5"], [360, 1, 1, "", "from_modules"], [360, 1, 1, "", "from_namedtuple"], [360, 1, 1, "", "from_pytree"], [360, 1, 1, "", "from_remote_init"], [360, 1, 1, "", "from_struct_array"], [360, 1, 1, "", "from_tensordict"], [360, 1, 1, "", "from_tuple"], [360, 1, 1, "", "fromkeys"], [360, 1, 1, "", "get"], [360, 1, 1, "", "lazy_stack"], [360, 1, 1, "", "load"], [360, 1, 1, "", "load_"], [360, 1, 1, "", "load_memmap"], [360, 1, 1, "", "load_state_dict"], [360, 1, 1, "", "maybe_dense_stack"], [360, 1, 1, "", "memmap"], [360, 1, 1, "", "memmap_"], [360, 1, 1, "", "memmap_like"], [360, 1, 1, "", "memmap_refresh_"], [360, 1, 1, "", "save"], [360, 1, 1, "", "set"], [360, 1, 1, "", "stack"], [360, 1, 1, "", "state_dict"], [360, 1, 1, "", "to_tensordict"], [360, 1, 1, "", "unbind"]], "torchrl.modules.llm.TransformersWrapper": [[361, 1, 1, "", "add_module"], [361, 1, 1, "", "apply"], [361, 2, 1, "", "batching"], [361, 1, 1, "", "bfloat16"], [361, 1, 1, "", "buffers"], [361, 1, 1, "", "children"], [361, 1, 1, "", "cleanup_batching"], [361, 2, 1, "", "collector"], [361, 1, 1, "", "compile"], [361, 1, 1, "", "cpu"], [361, 1, 1, "", "cuda"], [361, 1, 1, "", "double"], [361, 1, 1, "", "eval"], [361, 1, 1, "", "extra_repr"], [361, 1, 1, "", "float"], [361, 1, 1, "", "forward"], [361, 1, 1, "", "get_batching_state"], [361, 1, 1, "", "get_buffer"], [361, 1, 1, "", "get_dist"], [361, 1, 1, "", "get_extra_state"], [361, 1, 1, "", "get_new_version"], [361, 1, 1, "", "get_parameter"], [361, 1, 1, "", "get_submodule"], [361, 1, 1, "", "half"], [361, 1, 1, "", "ipu"], [361, 1, 1, "", "is_tdmodule_compatible"], [361, 1, 1, "", "load_state_dict"], [361, 1, 1, "", "modules"], [361, 1, 1, "", "mtia"], [361, 1, 1, "", "named_buffers"], [361, 1, 1, "", "named_children"], [361, 1, 1, "", "named_modules"], [361, 1, 1, "", "named_parameters"], [361, 1, 1, "", "parameters"], [361, 1, 1, "", "register_backward_hook"], [361, 1, 1, "", "register_buffer"], [361, 1, 1, "", "register_collector"], [361, 1, 1, "", "register_forward_hook"], [361, 1, 1, "", "register_forward_pre_hook"], [361, 1, 1, "", "register_full_backward_hook"], [361, 1, 1, "", "register_full_backward_pre_hook"], [361, 1, 1, "", "register_load_state_dict_post_hook"], [361, 1, 1, "", "register_load_state_dict_pre_hook"], [361, 1, 1, "", "register_module"], [361, 1, 1, "", "register_parameter"], [361, 1, 1, "", "register_state_dict_post_hook"], [361, 1, 1, "", "register_state_dict_pre_hook"], [361, 1, 1, "", "repeat_interleave_causal"], [361, 1, 1, "", "requires_grad_"], [361, 1, 1, "", "reset_out_keys"], [361, 1, 1, "", "reset_parameters_recursive"], [361, 1, 1, "", "select_out_keys"], [361, 1, 1, "", "set_extra_state"], [361, 1, 1, "", "set_submodule"], [361, 1, 1, "", "share_memory"], [361, 1, 1, "", "state_dict"], [361, 1, 1, "", "to"], [361, 1, 1, "", "to_empty"], [361, 1, 1, "", "train"], [361, 1, 1, "", "type"], [361, 1, 1, "", "xpu"], [361, 1, 1, "", "zero_grad"]], "torchrl.modules.llm.vLLMWrapper": [[366, 1, 1, "", "add_module"], [366, 1, 1, "", "apply"], [366, 2, 1, "", "batching"], [366, 1, 1, "", "bfloat16"], [366, 1, 1, "", "buffers"], [366, 1, 1, "", "children"], [366, 1, 1, "", "cleanup_batching"], [366, 2, 1, "", "collector"], [366, 1, 1, "", "compile"], [366, 1, 1, "", "cpu"], [366, 1, 1, "", "cuda"], [366, 1, 1, "", "double"], [366, 1, 1, "", "eval"], [366, 1, 1, "", "extra_repr"], [366, 1, 1, "", "float"], [366, 1, 1, "", "forward"], [366, 1, 1, "", "get_batching_state"], [366, 1, 1, "", "get_buffer"], [366, 1, 1, "", "get_dist"], [366, 1, 1, "", "get_dist_with_prompt_mask"], [366, 1, 1, "", "get_extra_state"], [366, 1, 1, "", "get_new_version"], [366, 1, 1, "", "get_parameter"], [366, 1, 1, "", "get_submodule"], [366, 1, 1, "", "half"], [366, 1, 1, "", "ipu"], [366, 1, 1, "", "is_tdmodule_compatible"], [366, 1, 1, "", "load_state_dict"], [366, 1, 1, "", "modules"], [366, 1, 1, "", "mtia"], [366, 1, 1, "", "named_buffers"], [366, 1, 1, "", "named_children"], [366, 1, 1, "", "named_modules"], [366, 1, 1, "", "named_parameters"], [366, 1, 1, "", "parameters"], [366, 1, 1, "", "register_backward_hook"], [366, 1, 1, "", "register_buffer"], [366, 1, 1, "", "register_collector"], [366, 1, 1, "", "register_forward_hook"], [366, 1, 1, "", "register_forward_pre_hook"], [366, 1, 1, "", "register_full_backward_hook"], [366, 1, 1, "", "register_full_backward_pre_hook"], [366, 1, 1, "", "register_load_state_dict_post_hook"], [366, 1, 1, "", "register_load_state_dict_pre_hook"], [366, 1, 1, "", "register_module"], [366, 1, 1, "", "register_parameter"], [366, 1, 1, "", "register_state_dict_post_hook"], [366, 1, 1, "", "register_state_dict_pre_hook"], [366, 1, 1, "", "requires_grad_"], [366, 1, 1, "", "reset_out_keys"], [366, 1, 1, "", "reset_parameters_recursive"], [366, 1, 1, "", "select_out_keys"], [366, 1, 1, "", "set_extra_state"], [366, 1, 1, "", "set_submodule"], [366, 1, 1, "", "set_tokenizer"], [366, 1, 1, "", "share_memory"], [366, 1, 1, "", "state_dict"], [366, 1, 1, "", "to"], [366, 1, 1, "", "to_empty"], [366, 1, 1, "", "train"], [366, 1, 1, "", "type"], [366, 1, 1, "", "xpu"], [366, 1, 1, "", "zero_grad"]], "torchrl.modules.tensordict_module": [[370, 0, 1, "", "Actor"], [371, 0, 1, "", "ActorCriticOperator"], [372, 0, 1, "", "ActorCriticWrapper"], [373, 0, 1, "", "ActorValueOperator"], [374, 0, 1, "", "DecisionTransformerInferenceWrapper"], [375, 0, 1, "", "DistributionalQValueActor"], [376, 0, 1, "", "DistributionalQValueModule"], [377, 0, 1, "", "LMHeadActorValueOperator"], [378, 0, 1, "", "MultiStepActorWrapper"], [379, 0, 1, "", "ProbabilisticActor"], [380, 0, 1, "", "QValueActor"], [381, 0, 1, "", "QValueModule"], [382, 0, 1, "", "SafeModule"], [383, 0, 1, "", "SafeProbabilisticModule"], [384, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [385, 0, 1, "", "SafeSequential"], [386, 0, 1, "", "TanhModule"], [387, 0, 1, "", "ValueOperator"], [388, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[371, 1, 1, "", "get_critic_operator"], [371, 1, 1, "", "get_policy_head"], [371, 1, 1, "", "get_value_head"], [371, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[372, 1, 1, "", "get_policy_head"], [372, 1, 1, "", "get_policy_operator"], [372, 1, 1, "", "get_value_head"], [372, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[373, 1, 1, "", "get_policy_head"], [373, 1, 1, "", "get_policy_operator"], [373, 1, 1, "", "get_value_head"], [373, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[374, 1, 1, "", "forward"], [374, 1, 1, "", "mask_context"], [374, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[376, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[378, 1, 1, "", "forward"], [378, 2, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[381, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[382, 1, 1, "", "random"], [382, 1, 1, "", "random_sample"], [382, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[383, 1, 1, "", "random"], [383, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[386, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[388, 1, 1, "", "get_reward_operator"], [388, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[389, 0, 1, "", "biased_softplus"], [390, 0, 1, "", "get_primers_from_module"], [391, 0, 1, "", "inv_softplus"], [392, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[389, 1, 1, "", "forward"]], "torchrl.objectives": [[393, 0, 1, "", "A2CLoss"], [394, 0, 1, "", "CQLLoss"], [395, 0, 1, "", "ClipPPOLoss"], [396, 0, 1, "", "CrossQLoss"], [397, 0, 1, "", "DDPGLoss"], [398, 0, 1, "", "DQNLoss"], [399, 0, 1, "", "DTLoss"], [400, 0, 1, "", "DiscreteCQLLoss"], [401, 0, 1, "", "DiscreteIQLLoss"], [402, 0, 1, "", "DiscreteSACLoss"], [403, 0, 1, "", "DistributionalDQNLoss"], [404, 0, 1, "", "DreamerActorLoss"], [405, 0, 1, "", "DreamerModelLoss"], [406, 0, 1, "", "DreamerValueLoss"], [407, 0, 1, "", "GAILLoss"], [408, 0, 1, "", "HardUpdate"], [409, 0, 1, "", "IQLLoss"], [410, 0, 1, "", "KLPENPPOLoss"], [411, 0, 1, "", "LossModule"], [412, 0, 1, "", "OnlineDTLoss"], [413, 0, 1, "", "PPOLoss"], [414, 0, 1, "", "REDQLoss"], [415, 0, 1, "", "ReinforceLoss"], [416, 0, 1, "", "SACLoss"], [417, 0, 1, "", "SoftUpdate"], [418, 0, 1, "", "TD3BCLoss"], [419, 0, 1, "", "TD3Loss"], [420, 0, 1, "", "ValueEstimators"], [421, 0, 1, "", "add_random_module"], [422, 0, 1, "", "default_value_kwargs"], [423, 0, 1, "", "distance_loss"], [424, 0, 1, "", "group_optimizers"], [425, 0, 1, "", "hold_out_net"], [426, 0, 1, "", "hold_out_params"], [433, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[393, 4, 1, "", "default_keys"], [393, 1, 1, "", "forward"], [393, 2, 1, "", "functional"], [393, 1, 1, "", "loss_critic"], [393, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[394, 4, 1, "", "default_keys"], [394, 1, 1, "", "forward"], [394, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[395, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[396, 1, 1, "", "actor_loss"], [396, 1, 1, "", "alpha_loss"], [396, 4, 1, "", "default_keys"], [396, 1, 1, "", "forward"], [396, 1, 1, "", "load_state_dict"], [396, 1, 1, "", "make_value_estimator"], [396, 1, 1, "", "maybe_init_target_entropy"], [396, 1, 1, "", "qvalue_loss"], [396, 1, 1, "", "set_keys"], [396, 1, 1, "", "state_dict"], [396, 2, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[397, 4, 1, "", "default_keys"], [397, 1, 1, "", "forward"], [397, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[398, 4, 1, "", "default_keys"], [398, 1, 1, "", "forward"], [398, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[399, 4, 1, "", "default_keys"], [399, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[400, 4, 1, "", "default_keys"], [400, 1, 1, "", "forward"], [400, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[401, 4, 1, "", "default_keys"], [401, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[402, 1, 1, "", "actor_loss"], [402, 1, 1, "", "alpha_loss"], [402, 4, 1, "", "default_keys"], [402, 1, 1, "", "forward"], [402, 1, 1, "", "make_value_estimator"], [402, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.DistributionalDQNLoss": [[403, 4, 1, "", "default_keys"], [403, 1, 1, "", "forward"], [403, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[404, 4, 1, "", "default_keys"], [404, 1, 1, "", "forward"], [404, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[405, 4, 1, "", "default_keys"], [405, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[406, 4, 1, "", "default_keys"], [406, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[407, 4, 1, "", "default_keys"], [407, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[409, 4, 1, "", "default_keys"], [409, 1, 1, "", "forward"], [409, 1, 1, "", "loss_value_diff"], [409, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[410, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[411, 1, 1, "", "convert_to_functional"], [411, 1, 1, "", "forward"], [411, 1, 1, "", "from_stateful_net"], [411, 2, 1, "", "functional"], [411, 1, 1, "", "get_stateful_net"], [411, 1, 1, "", "make_value_estimator"], [411, 1, 1, "", "named_parameters"], [411, 1, 1, "", "parameters"], [411, 1, 1, "", "reset_parameters_recursive"], [411, 1, 1, "", "set_keys"], [411, 2, 1, "", "value_estimator"], [411, 2, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[412, 4, 1, "", "default_keys"], [412, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[413, 4, 1, "", "default_keys"], [413, 1, 1, "", "forward"], [413, 2, 1, "", "functional"], [413, 1, 1, "", "loss_critic"], [413, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[414, 4, 1, "", "default_keys"], [414, 1, 1, "", "forward"], [414, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[415, 4, 1, "", "default_keys"], [415, 1, 1, "", "forward"], [415, 2, 1, "", "functional"], [415, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[416, 1, 1, "", "actor_loss"], [416, 1, 1, "", "alpha_loss"], [416, 4, 1, "", "default_keys"], [416, 1, 1, "", "forward"], [416, 1, 1, "", "load_state_dict"], [416, 1, 1, "", "make_value_estimator"], [416, 1, 1, "", "qvalue_loss"], [416, 1, 1, "", "state_dict"], [416, 1, 1, "", "value_loss"]], "torchrl.objectives.TD3BCLoss": [[418, 1, 1, "", "actor_loss"], [418, 4, 1, "", "default_keys"], [418, 1, 1, "", "forward"], [418, 1, 1, "", "make_value_estimator"], [418, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[419, 4, 1, "", "default_keys"], [419, 1, 1, "", "forward"], [419, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.llm": [[427, 0, 1, "", "GRPOLoss"], [428, 0, 1, "", "GRPOLossOutput"], [429, 0, 1, "", "MCAdvantage"], [430, 0, 1, "", "SFTLoss"], [431, 0, 1, "", "SFTLossOutput"]], "torchrl.objectives.llm.GRPOLoss": [[427, 1, 1, "", "add_module"], [427, 1, 1, "", "apply"], [427, 1, 1, "", "bfloat16"], [427, 1, 1, "", "buffers"], [427, 1, 1, "", "children"], [427, 1, 1, "", "compile"], [427, 1, 1, "", "convert_to_functional"], [427, 1, 1, "", "cpu"], [427, 1, 1, "", "cuda"], [427, 4, 1, "", "default_keys"], [427, 1, 1, "", "double"], [427, 1, 1, "", "eval"], [427, 1, 1, "", "extra_repr"], [427, 1, 1, "", "float"], [427, 1, 1, "", "forward"], [427, 1, 1, "", "from_stateful_net"], [427, 2, 1, "", "functional"], [427, 1, 1, "", "get_buffer"], [427, 1, 1, "", "get_extra_state"], [427, 1, 1, "", "get_parameter"], [427, 1, 1, "", "get_stateful_net"], [427, 1, 1, "", "get_submodule"], [427, 1, 1, "", "half"], [427, 1, 1, "", "ipu"], [427, 1, 1, "", "is_tdmodule_compatible"], [427, 1, 1, "", "load_state_dict"], [427, 1, 1, "", "loss_critic"], [427, 1, 1, "", "make_value_estimator"], [427, 1, 1, "", "modules"], [427, 1, 1, "", "mtia"], [427, 1, 1, "", "named_buffers"], [427, 1, 1, "", "named_children"], [427, 1, 1, "", "named_modules"], [427, 1, 1, "", "named_parameters"], [427, 1, 1, "", "parameters"], [427, 1, 1, "", "register_backward_hook"], [427, 1, 1, "", "register_buffer"], [427, 1, 1, "", "register_forward_hook"], [427, 1, 1, "", "register_forward_pre_hook"], [427, 1, 1, "", "register_full_backward_hook"], [427, 1, 1, "", "register_full_backward_pre_hook"], [427, 1, 1, "", "register_load_state_dict_post_hook"], [427, 1, 1, "", "register_load_state_dict_pre_hook"], [427, 1, 1, "", "register_module"], [427, 1, 1, "", "register_parameter"], [427, 1, 1, "", "register_state_dict_post_hook"], [427, 1, 1, "", "register_state_dict_pre_hook"], [427, 1, 1, "", "requires_grad_"], [427, 1, 1, "", "reset_out_keys"], [427, 1, 1, "", "reset_parameters_recursive"], [427, 1, 1, "", "select_out_keys"], [427, 1, 1, "", "set_extra_state"], [427, 1, 1, "", "set_keys"], [427, 1, 1, "", "set_submodule"], [427, 1, 1, "", "share_memory"], [427, 1, 1, "", "state_dict"], [427, 1, 1, "", "to"], [427, 1, 1, "", "to_empty"], [427, 1, 1, "", "train"], [427, 1, 1, "", "type"], [427, 2, 1, "", "value_estimator"], [427, 2, 1, "", "vmap_randomness"], [427, 1, 1, "", "xpu"], [427, 1, 1, "", "zero_grad"]], "torchrl.objectives.llm.GRPOLossOutput": [[428, 1, 1, "", "cat"], [428, 2, 1, "", "device"], [428, 1, 1, "", "dumps"], [428, 1, 1, "", "fields"], [428, 1, 1, "", "from_any"], [428, 1, 1, "", "from_dataclass"], [428, 1, 1, "", "from_h5"], [428, 1, 1, "", "from_modules"], [428, 1, 1, "", "from_namedtuple"], [428, 1, 1, "", "from_pytree"], [428, 1, 1, "", "from_remote_init"], [428, 1, 1, "", "from_struct_array"], [428, 1, 1, "", "from_tensordict"], [428, 1, 1, "", "from_tuple"], [428, 1, 1, "", "fromkeys"], [428, 1, 1, "", "get"], [428, 1, 1, "", "lazy_stack"], [428, 1, 1, "", "load"], [428, 1, 1, "", "load_"], [428, 1, 1, "", "load_memmap"], [428, 1, 1, "", "load_state_dict"], [428, 1, 1, "", "maybe_dense_stack"], [428, 1, 1, "", "memmap"], [428, 1, 1, "", "memmap_"], [428, 1, 1, "", "memmap_like"], [428, 1, 1, "", "memmap_refresh_"], [428, 1, 1, "", "save"], [428, 1, 1, "", "set"], [428, 1, 1, "", "stack"], [428, 1, 1, "", "state_dict"], [428, 1, 1, "", "to_tensordict"], [428, 1, 1, "", "unbind"]], "torchrl.objectives.llm.MCAdvantage": [[429, 1, 1, "", "add_module"], [429, 1, 1, "", "apply"], [429, 1, 1, "", "bfloat16"], [429, 1, 1, "", "buffers"], [429, 1, 1, "", "children"], [429, 1, 1, "", "close"], [429, 2, 1, "", "collector"], [429, 1, 1, "", "compile"], [429, 2, 1, "", "container"], [429, 1, 1, "", "cpu"], [429, 1, 1, "", "cuda"], [429, 1, 1, "", "double"], [429, 1, 1, "", "eval"], [429, 1, 1, "", "extra_repr"], [429, 1, 1, "", "float"], [429, 1, 1, "", "forward"], [429, 1, 1, "", "get_buffer"], [429, 1, 1, "", "get_extra_state"], [429, 1, 1, "", "get_parameter"], [429, 1, 1, "", "get_submodule"], [429, 1, 1, "", "half"], [429, 1, 1, "", "init"], [429, 1, 1, "", "inv"], [429, 1, 1, "", "ipu"], [429, 1, 1, "", "load_state_dict"], [429, 1, 1, "", "modules"], [429, 1, 1, "", "mtia"], [429, 1, 1, "", "named_buffers"], [429, 1, 1, "", "named_children"], [429, 1, 1, "", "named_modules"], [429, 1, 1, "", "named_parameters"], [429, 1, 1, "", "parameters"], [429, 2, 1, "", "parent"], [429, 1, 1, "", "register_backward_hook"], [429, 1, 1, "", "register_buffer"], [429, 1, 1, "", "register_forward_hook"], [429, 1, 1, "", "register_forward_pre_hook"], [429, 1, 1, "", "register_full_backward_hook"], [429, 1, 1, "", "register_full_backward_pre_hook"], [429, 1, 1, "", "register_load_state_dict_post_hook"], [429, 1, 1, "", "register_load_state_dict_pre_hook"], [429, 1, 1, "", "register_module"], [429, 1, 1, "", "register_parameter"], [429, 1, 1, "", "register_state_dict_post_hook"], [429, 1, 1, "", "register_state_dict_pre_hook"], [429, 1, 1, "", "requires_grad_"], [429, 1, 1, "", "set_extra_state"], [429, 1, 1, "", "set_submodule"], [429, 1, 1, "", "share_memory"], [429, 1, 1, "", "state_dict"], [429, 1, 1, "", "to"], [429, 1, 1, "", "to_empty"], [429, 1, 1, "", "train"], [429, 1, 1, "", "transform_action_spec"], [429, 1, 1, "", "transform_done_spec"], [429, 1, 1, "", "transform_env_batch_size"], [429, 1, 1, "", "transform_env_device"], [429, 1, 1, "", "transform_input_spec"], [429, 1, 1, "", "transform_observation_spec"], [429, 1, 1, "", "transform_output_spec"], [429, 1, 1, "", "transform_reward_spec"], [429, 1, 1, "", "transform_state_spec"], [429, 1, 1, "", "type"], [429, 1, 1, "", "xpu"], [429, 1, 1, "", "zero_grad"]], "torchrl.objectives.llm.SFTLoss": [[430, 1, 1, "", "add_module"], [430, 1, 1, "", "apply"], [430, 1, 1, "", "bfloat16"], [430, 1, 1, "", "buffers"], [430, 1, 1, "", "children"], [430, 1, 1, "", "compile"], [430, 1, 1, "", "convert_to_functional"], [430, 1, 1, "", "cpu"], [430, 1, 1, "", "cuda"], [430, 4, 1, "", "default_keys"], [430, 1, 1, "", "double"], [430, 1, 1, "", "eval"], [430, 1, 1, "", "extra_repr"], [430, 1, 1, "", "float"], [430, 1, 1, "", "forward"], [430, 1, 1, "", "from_stateful_net"], [430, 2, 1, "", "functional"], [430, 1, 1, "", "get_buffer"], [430, 1, 1, "", "get_extra_state"], [430, 1, 1, "", "get_parameter"], [430, 1, 1, "", "get_stateful_net"], [430, 1, 1, "", "get_submodule"], [430, 1, 1, "", "half"], [430, 1, 1, "", "ipu"], [430, 1, 1, "", "is_tdmodule_compatible"], [430, 1, 1, "", "load_state_dict"], [430, 1, 1, "", "make_value_estimator"], [430, 1, 1, "", "modules"], [430, 1, 1, "", "mtia"], [430, 1, 1, "", "named_buffers"], [430, 1, 1, "", "named_children"], [430, 1, 1, "", "named_modules"], [430, 1, 1, "", "named_parameters"], [430, 1, 1, "", "parameters"], [430, 1, 1, "", "register_backward_hook"], [430, 1, 1, "", "register_buffer"], [430, 1, 1, "", "register_forward_hook"], [430, 1, 1, "", "register_forward_pre_hook"], [430, 1, 1, "", "register_full_backward_hook"], [430, 1, 1, "", "register_full_backward_pre_hook"], [430, 1, 1, "", "register_load_state_dict_post_hook"], [430, 1, 1, "", "register_load_state_dict_pre_hook"], [430, 1, 1, "", "register_module"], [430, 1, 1, "", "register_parameter"], [430, 1, 1, "", "register_state_dict_post_hook"], [430, 1, 1, "", "register_state_dict_pre_hook"], [430, 1, 1, "", "requires_grad_"], [430, 1, 1, "", "reset_out_keys"], [430, 1, 1, "", "reset_parameters_recursive"], [430, 1, 1, "", "select_out_keys"], [430, 1, 1, "", "set_extra_state"], [430, 1, 1, "", "set_keys"], [430, 1, 1, "", "set_submodule"], [430, 1, 1, "", "share_memory"], [430, 1, 1, "", "state_dict"], [430, 1, 1, "", "to"], [430, 1, 1, "", "to_empty"], [430, 1, 1, "", "train"], [430, 1, 1, "", "type"], [430, 2, 1, "", "value_estimator"], [430, 2, 1, "", "vmap_randomness"], [430, 1, 1, "", "xpu"], [430, 1, 1, "", "zero_grad"]], "torchrl.objectives.llm.SFTLossOutput": [[431, 1, 1, "", "cat"], [431, 2, 1, "", "device"], [431, 1, 1, "", "dumps"], [431, 1, 1, "", "fields"], [431, 1, 1, "", "from_any"], [431, 1, 1, "", "from_dataclass"], [431, 1, 1, "", "from_h5"], [431, 1, 1, "", "from_modules"], [431, 1, 1, "", "from_namedtuple"], [431, 1, 1, "", "from_pytree"], [431, 1, 1, "", "from_remote_init"], [431, 1, 1, "", "from_struct_array"], [431, 1, 1, "", "from_tensordict"], [431, 1, 1, "", "from_tuple"], [431, 1, 1, "", "fromkeys"], [431, 1, 1, "", "get"], [431, 1, 1, "", "lazy_stack"], [431, 1, 1, "", "load"], [431, 1, 1, "", "load_"], [431, 1, 1, "", "load_memmap"], [431, 1, 1, "", "load_state_dict"], [431, 1, 1, "", "maybe_dense_stack"], [431, 1, 1, "", "memmap"], [431, 1, 1, "", "memmap_"], [431, 1, 1, "", "memmap_like"], [431, 1, 1, "", "memmap_refresh_"], [431, 1, 1, "", "save"], [431, 1, 1, "", "set"], [431, 1, 1, "", "stack"], [431, 1, 1, "", "state_dict"], [431, 1, 1, "", "to_tensordict"], [431, 1, 1, "", "unbind"]], "torchrl.objectives.multiagent": [[432, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[432, 4, 1, "", "default_keys"], [432, 1, 1, "", "forward"], [432, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[434, 0, 1, "", "GAE"], [435, 0, 1, "", "TD0Estimator"], [436, 0, 1, "", "TD1Estimator"], [437, 0, 1, "", "TDLambdaEstimator"], [438, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[434, 1, 1, "", "forward"], [434, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[435, 1, 1, "", "forward"], [435, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[436, 1, 1, "", "forward"], [436, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[437, 1, 1, "", "forward"], [437, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[438, 4, 1, "", "default_keys"], [438, 1, 1, "", "forward"], [438, 1, 1, "", "set_keys"], [438, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[439, 0, 1, "", "generalized_advantage_estimate"], [440, 0, 1, "", "reward2go"], [441, 0, 1, "", "td0_advantage_estimate"], [442, 0, 1, "", "td0_return_estimate"], [443, 0, 1, "", "td1_advantage_estimate"], [444, 0, 1, "", "td1_return_estimate"], [445, 0, 1, "", "td_lambda_advantage_estimate"], [446, 0, 1, "", "td_lambda_return_estimate"], [447, 0, 1, "", "vec_generalized_advantage_estimate"], [448, 0, 1, "", "vec_td1_advantage_estimate"], [449, 0, 1, "", "vec_td1_return_estimate"], [450, 0, 1, "", "vec_td_lambda_advantage_estimate"], [451, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[452, 3, 1, "", "PixelRenderTransform"], [453, 3, 1, "", "TensorDictRecorder"], [454, 3, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[455, 3, 1, "", "Logger"], [457, 3, 1, "", "generate_exp_name"], [458, 3, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[456, 3, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[459, 3, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[460, 3, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[461, 3, 1, "", "WandbLogger"]], "torchrl.trainers": [[463, 0, 1, "", "BatchSubSampler"], [464, 0, 1, "", "ClearCudaCache"], [465, 0, 1, "", "CountFramesLog"], [466, 0, 1, "", "LogScalar"], [467, 0, 1, "", "LogValidationReward"], [468, 0, 1, "", "OptimizerHook"], [469, 0, 1, "", "ReplayBufferTrainer"], [470, 0, 1, "", "RewardNormalizer"], [471, 0, 1, "", "SelectKeys"], [472, 0, 1, "", "TargetNetUpdaterHook"], [473, 0, 1, "", "Trainer"], [474, 0, 1, "", "TrainerHookBase"], [475, 0, 1, "", "UTDRHook"], [476, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[463, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[464, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[465, 1, 1, "", "register"]], "torchrl.trainers.LogScalar": [[466, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[467, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[468, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[469, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[470, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[471, 1, 1, "", "register"]], "torchrl.trainers.TargetNetUpdaterHook": [[472, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[473, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[474, 1, 1, "", "register"]], "torchrl.trainers.UTDRHook": [[475, 1, 1, "", "load_state_dict"], [475, 1, 1, "", "register"], [475, 1, 1, "", "state_dict"]], "torchrl.trainers.UpdateWeights": [[476, 1, 1, "", "register"]], "torchrl.trainers.algorithms": [[477, 0, 1, "", "PPOTrainer"], [478, 0, 1, "", "SACTrainer"]], "torchrl.trainers.algorithms.PPOTrainer": [[477, 1, 1, "", "load_from_file"]], "torchrl.trainers.algorithms.SACTrainer": [[478, 1, 1, "", "load_from_file"]], "torchrl.trainers.algorithms.configs.collectors": [[479, 0, 1, "", "AsyncDataCollectorConfig"], [480, 0, 1, "", "DataCollectorConfig"], [481, 0, 1, "", "MultiSyncDataCollectorConfig"], [482, 0, 1, "", "MultiaSyncDataCollectorConfig"], [483, 0, 1, "", "SyncDataCollectorConfig"]], "torchrl.trainers.algorithms.configs.common": [[484, 0, 1, "", "ConfigBase"]], "torchrl.trainers.algorithms.configs.data": [[485, 0, 1, "", "LazyMemmapStorageConfig"], [486, 0, 1, "", "LazyStackStorageConfig"], [487, 0, 1, "", "LazyTensorStorageConfig"], [488, 0, 1, "", "ListStorageConfig"], [489, 0, 1, "", "PrioritizedSamplerConfig"], [490, 0, 1, "", "RandomSamplerConfig"], [491, 0, 1, "", "ReplayBufferConfig"], [492, 0, 1, "", "RoundRobinWriterConfig"], [493, 0, 1, "", "SamplerWithoutReplacementConfig"], [494, 0, 1, "", "SliceSamplerConfig"], [495, 0, 1, "", "SliceSamplerWithoutReplacementConfig"], [496, 0, 1, "", "StorageEnsembleConfig"], [497, 0, 1, "", "StorageEnsembleWriterConfig"], [498, 0, 1, "", "TensorDictReplayBufferConfig"], [499, 0, 1, "", "TensorStorageConfig"]], "torchrl.trainers.algorithms.configs.envs": [[500, 0, 1, "", "BatchedEnvConfig"], [501, 0, 1, "", "EnvConfig"], [502, 0, 1, "", "TransformedEnvConfig"]], "torchrl.trainers.algorithms.configs.envs_libs": [[503, 0, 1, "", "BraxEnvConfig"], [504, 0, 1, "", "DMControlEnvConfig"], [505, 0, 1, "", "EnvLibsConfig"], [506, 0, 1, "", "GymEnvConfig"], [507, 0, 1, "", "HabitatEnvConfig"], [508, 0, 1, "", "IsaacGymEnvConfig"], [509, 0, 1, "", "JumanjiEnvConfig"], [510, 0, 1, "", "MOGymEnvConfig"], [511, 0, 1, "", "MeltingpotEnvConfig"], [512, 0, 1, "", "MultiThreadedEnvConfig"], [513, 0, 1, "", "OpenMLEnvConfig"], [514, 0, 1, "", "OpenSpielEnvConfig"], [515, 0, 1, "", "PettingZooEnvConfig"], [516, 0, 1, "", "RoboHiveEnvConfig"], [517, 0, 1, "", "SMACv2EnvConfig"], [518, 0, 1, "", "UnityMLAgentsEnvConfig"], [519, 0, 1, "", "VmasEnvConfig"]], "torchrl.trainers.algorithms.configs.logging": [[520, 0, 1, "", "CSVLoggerConfig"], [521, 0, 1, "", "LoggerConfig"], [522, 0, 1, "", "TensorboardLoggerConfig"], [523, 0, 1, "", "WandbLoggerConfig"]], "torchrl.trainers.algorithms.configs.modules": [[524, 0, 1, "", "ConvNetConfig"], [525, 0, 1, "", "MLPConfig"], [526, 0, 1, "", "ModelConfig"], [527, 0, 1, "", "NetworkConfig"], [528, 0, 1, "", "TanhNormalModelConfig"], [529, 0, 1, "", "TensorDictModuleConfig"], [530, 0, 1, "", "ValueModelConfig"]], "torchrl.trainers.algorithms.configs.objectives": [[531, 0, 1, "", "LossConfig"], [532, 0, 1, "", "PPOLossConfig"]], "torchrl.trainers.algorithms.configs.trainers": [[533, 0, 1, "", "PPOTrainerConfig"], [534, 0, 1, "", "TrainerConfig"]], "torchrl.trainers.algorithms.configs.transforms": [[535, 0, 1, "", "ActionDiscretizerConfig"], [536, 0, 1, "", "ActionMaskConfig"], [537, 0, 1, "", "AutoResetTransformConfig"], [538, 0, 1, "", "BatchSizeTransformConfig"], [539, 0, 1, "", "BinarizeRewardConfig"], [540, 0, 1, "", "BurnInTransformConfig"], [541, 0, 1, "", "CatFramesConfig"], [542, 0, 1, "", "CatTensorsConfig"], [543, 0, 1, "", "CenterCropConfig"], [544, 0, 1, "", "ClipTransformConfig"], [545, 0, 1, "", "ComposeConfig"], [546, 0, 1, "", "ConditionalPolicySwitchConfig"], [547, 0, 1, "", "ConditionalSkipConfig"], [548, 0, 1, "", "CropConfig"], [549, 0, 1, "", "DTypeCastTransformConfig"], [550, 0, 1, "", "DeviceCastTransformConfig"], [551, 0, 1, "", "DiscreteActionProjectionConfig"], [552, 0, 1, "", "DoubleToFloatConfig"], [553, 0, 1, "", "EndOfLifeTransformConfig"], [554, 0, 1, "", "ExcludeTransformConfig"], [555, 0, 1, "", "FiniteTensorDictCheckConfig"], [556, 0, 1, "", "FlattenObservationConfig"], [557, 0, 1, "", "FrameSkipTransformConfig"], [558, 0, 1, "", "GrayScaleConfig"], [559, 0, 1, "", "HashConfig"], [560, 0, 1, "", "InitTrackerConfig"], [561, 0, 1, "", "KLRewardTransformConfig"], [562, 0, 1, "", "LineariseRewardsConfig"], [563, 0, 1, "", "MultiActionConfig"], [564, 0, 1, "", "MultiStepTransformConfig"], [565, 0, 1, "", "NoopResetEnvConfig"], [566, 0, 1, "", "ObservationNormConfig"], [567, 0, 1, "", "PermuteTransformConfig"], [568, 0, 1, "", "PinMemoryTransformConfig"], [569, 0, 1, "", "R3MTransformConfig"], [570, 0, 1, "", "RandomCropTensorDictConfig"], [571, 0, 1, "", "RemoveEmptySpecsConfig"], [572, 0, 1, "", "RenameTransformConfig"], [573, 0, 1, "", "ResizeConfig"], [574, 0, 1, "", "Reward2GoTransformConfig"], [575, 0, 1, "", "RewardClippingConfig"], [576, 0, 1, "", "RewardScalingConfig"], [577, 0, 1, "", "RewardSumConfig"], [578, 0, 1, "", "SelectTransformConfig"], [579, 0, 1, "", "SignTransformConfig"], [580, 0, 1, "", "SqueezeTransformConfig"], [581, 0, 1, "", "StackConfig"], [582, 0, 1, "", "StepCounterConfig"], [583, 0, 1, "", "TargetReturnConfig"], [584, 0, 1, "", "TensorDictPrimerConfig"], [585, 0, 1, "", "TimeMaxPoolConfig"], [586, 0, 1, "", "TimerConfig"], [587, 0, 1, "", "ToTensorImageConfig"], [588, 0, 1, "", "TokenizerConfig"], [589, 0, 1, "", "TrajCounterConfig"], [590, 0, 1, "", "TransformConfig"], [591, 0, 1, "", "UnaryTransformConfig"], [592, 0, 1, "", "UnsqueezeTransformConfig"], [593, 0, 1, "", "VC1TransformConfig"], [594, 0, 1, "", "VIPRewardTransformConfig"], [595, 0, 1, "", "VIPTransformConfig"], [596, 0, 1, "", "VecGymEnvTransformConfig"], [597, 0, 1, "", "VecNormConfig"], [598, 0, 1, "", "VecNormV2Config"]], "torchrl.trainers.algorithms.configs.utils": [[599, 0, 1, "", "ASGDConfig"], [600, 0, 1, "", "AdadeltaConfig"], [601, 0, 1, "", "AdagradConfig"], [602, 0, 1, "", "AdamConfig"], [603, 0, 1, "", "AdamWConfig"], [604, 0, 1, "", "AdamaxConfig"], [605, 0, 1, "", "LBFGSConfig"], [606, 0, 1, "", "LionConfig"], [607, 0, 1, "", "NAdamConfig"], [608, 0, 1, "", "RAdamConfig"], [609, 0, 1, "", "RMSpropConfig"], [610, 0, 1, "", "RpropConfig"], [611, 0, 1, "", "SGDConfig"], [612, 0, 1, "", "SparseAdamConfig"]], "torchrl.trainers.helpers": [[613, 3, 1, "", "correct_for_frame_skip"], [614, 3, 1, "", "get_stats_random_rollout"], [615, 3, 1, "", "make_collector_offpolicy"], [616, 3, 1, "", "make_collector_onpolicy"], [617, 3, 1, "", "make_dqn_loss"], [618, 3, 1, "", "make_replay_buffer"], [619, 3, 1, "", "make_target_updater"], [620, 3, 1, "", "make_trainer"], [621, 3, 1, "", "parallel_env_constructor"], [622, 3, 1, "", "sync_async_collector"], [623, 3, 1, "", "sync_sync_collector"], [624, 3, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 4, 7, 10, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 629, 630, 631, 632, 634, 635, 636, 638, 640, 646, 647, 649, 650, 651, 655, 656], "instal": [0, 7, 8, 646, 655], "get": [0, 2, 639, 640, 641, 642, 643, 644], "start": [0, 2, 631, 639, 640, 641, 642, 643, 644, 646], "tutori": [0, 636, 649, 650], "basic": [0, 2, 646, 653], "intermedi": [0, 9], "advanc": 0, "refer": [0, 626], "knowledg": [0, 627], "base": [0, 2, 3, 8, 627, 628, 638], "indic": 0, "tabl": 0, "collector": [1, 479, 480, 481, 482, 483, 628, 634, 635, 636, 637, 642, 644, 649, 650, 655], "packag": [1, 3, 4, 629, 630, 631, 632], "batch": [1, 4, 634, 651, 653], "size": [1, 4, 634, 653], "polici": [1, 3, 5, 628, 630, 634, 636, 637, 638, 640, 644, 648, 649, 650, 651], "copi": 1, "weight": 1, "synchron": 1, "distribut": [1, 629], "environ": [1, 2, 4, 5, 7, 8, 628, 634, 635, 636, 637, 639, 644, 646, 647, 648, 649, 650, 651, 655, 656], "send": 1, "receiv": 1, "model": [1, 2, 3, 5, 628, 629, 634, 635, 637, 638, 641, 652, 655], "weightupdat": 1, "extend": 1, "updat": [1, 634], "class": [1, 2, 4, 628, 631, 651, 655], "replai": [1, 2, 3, 4, 634, 635, 636, 637, 642, 644, 649, 650, 653, 655], "buffer": [1, 2, 3, 4, 634, 635, 636, 637, 642, 644, 649, 650, 653, 655], "interoper": 1, "run": [1, 2, 638, 639, 656], "asynchron": 1, "singl": [1, 5], "node": 1, "data": [1, 2, 3, 5, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 628, 634, 635, 636, 642, 644, 649, 650, 655], "helper": [1, 4, 646], "function": [1, 5, 628, 630, 635, 636, 641, 649, 650, 655], "configur": [2, 631, 646], "system": [2, 631], "quick": [2, 631], "simpl": [2, 638, 651], "exampl": [2, 4, 12, 628, 631, 635, 647, 653], "categori": 2, "group": [2, 649], "more": [2, 653], "complex": [2, 653], "parallel": [2, 634, 648, 656], "transform": [2, 3, 4, 285, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 628, 634, 636, 639, 647, 649, 650, 651, 653, 655, 656], "avail": 2, "option": [2, 8], "complet": 2, "train": [2, 5, 9, 630, 634, 636, 637, 638, 641, 644, 649, 650, 651], "experi": [2, 634, 651], "usag": [2, 628], "hyperparamet": [2, 635, 636, 649, 650], "sweep": 2, "custom": [2, 4, 12, 628, 651, 653], "file": 2, "store": [2, 3, 635, 653], "implement": [2, 5], "detail": 2, "librari": [2, 4, 655], "network": [2, 634, 635, 636, 637, 640, 649, 650], "collect": [2, 635, 636, 642], "storag": [2, 3, 131, 634, 642, 653], "optim": [2, 5, 634, 635, 641, 644], "log": [2, 520, 521, 522, 523, 643, 647], "creat": [2, 639], "best": 2, "practic": 2, "futur": 2, "extens": 2, "compos": [3, 239], "support": [3, 628], "type": 3, "choos": 3, "sampl": [3, 653], "index": 3, "compress": 3, "memori": 3, "effici": 3, "share": 3, "across": 3, "process": 3, "trajectori": [3, 653], "checkpoint": [3, 631], "episod": [3, 5], "format": 3, "ted": [3, 639], "The": [3, 634], "rational": 3, "behind": 3, "structur": [3, 628, 647, 653], "A": [3, 635, 653], "note": 3, "singleton": [3, 5], "dimens": 3, "flatten": 3, "reduc": 3, "consumpt": 3, "dimension": [3, 5], "tensordict": [3, 629, 653, 655], "special": [3, 640, 655], "case": 3, "footnot": 3, "multi": [3, 4, 629, 630, 648, 649, 650], "agent": [3, 4, 5, 629, 630, 649, 650], "present": 3, "rnn": 3, "step": [3, 4, 634, 636, 639, 642, 646, 649, 650, 653, 656], "what": [3, 6], "about": 3, "requir": 3, "dataset": 3, "tensorspec": [3, 85], "numer": 3, "subclass": [3, 4], "categor": [3, 41], "tree": [3, 87], "forest": 3, "tensordictmap": [3, 80], "mctsforest": [3, 53], "larg": 3, "languag": 3, "reinforc": [3, 630, 636, 649, 650], "learn": [3, 5, 629, 636, 649, 650], "from": [3, 7, 8], "human": 3, "feedback": 3, "rlhf": 3, "util": [3, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 628, 629, 630, 631, 649], "env": [4, 500, 501, 502, 651, 655, 656], "spec": [4, 651, 656], "lock": 4, "method": [4, 634], "partial": 4, "reset": [4, 651, 656], "vector": [4, 655], "async": [4, 628, 655], "nativ": 4, "auto": 4, "dynam": [4, 5, 653], "forward": [4, 5, 634], "invers": [4, 628], "understand": 4, "kei": 4, "tensor": [4, 653], "expos": 4, "outsid": 4, "world": 4, "design": [4, 628, 644], "your": [4, 5, 7, 628, 634, 638, 644, 651], "own": [4, 644], "tip": 4, "us": [4, 5, 7, 10, 630, 637, 652, 653, 655], "clone": [4, 8], "mask": [4, 357, 628], "action": [4, 5, 630, 637, 651], "record": [4, 631, 634, 643], "video": [4, 12, 643], "domain": [4, 629], "specif": [4, 628, 629, 631, 648], "thing": [5, 634, 651], "consid": 5, "when": [5, 8], "debug": 5, "rl": [5, 10, 639, 641, 647, 655], "gener": [5, 12, 629], "have": 5, "you": 5, "valid": [5, 647], "algorithm": [5, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 629, 631], "few": 5, "small": 5, "toi": 5, "problem": 5, "known": 5, "return": [5, 630], "e": 5, "g": 5, "gridworld": 5, "mountaincar": 5, "visual": 5, "Be": 5, "veri": 5, "care": 5, "ani": 5, "augment": 5, "doe": 5, "entropi": 5, "converg": 5, "too": [5, 9], "quickli": 5, "slowli": 5, "chang": [5, 655], "drastic": 5, "reward": [5, 628], "beyond": 5, "go": 5, "up": [5, 7], "Is": 5, "favor": 5, "compon": 5, "i": 5, "veloc": 5, "vs": [5, 628], "l2": 5, "magnitud": 5, "task": [5, 628, 648], "horizon": 5, "extrem": 5, "long": 5, "ar": 5, "normal": [5, 634, 635, 636], "standard": 5, "explor": [5, 629, 634, 635, 640, 647], "valu": [5, 629, 630, 634, 636, 637, 640], "loss": [5, 634, 635, 636, 637, 644, 649, 650], "earli": 5, "roughli": 5, "uniformli": 5, "random": [5, 630, 649, 650], "intrins": 5, "decai": 5, "progress": 5, "remain": 5, "constant": [5, 635], "increas": 5, "an": [5, 636, 637, 639, 651], "can": 5, "low": 5, "also": 5, "offlin": 5, "observ": [5, 634], "space": 5, "effect": [5, 651], "dramat": 5, "dure": [5, 8], "high": 5, "work": [6, 7, 8, 638], "gym": [6, 655, 656], "openai": 6, "version": [6, 8, 11, 628], "habitat": 7, "lab": 7, "set": [7, 12], "pip": [7, 8], "common": [7, 8, 9, 484], "issu": [7, 8, 11], "mujoco": 8, "prerequisit": [8, 634], "render": [8, 12, 644, 649, 650, 656], "all": 8, "new": 8, "bindindg": 8, "2": [8, 646, 647], "1": [8, 646, 647], "old": 8, "bind": 8, "py": 8, "repo": [8, 10], "import": [8, 634, 647], "pytorch": [9, 10, 11, 638], "error": [9, 647], "solut": 9, "gradient": 9, "relat": 9, "newcom": 9, "my": 9, "slow": 9, "bug": 9, "resourc": 10, "paper": 10, "document": 10, "functorch": 10, "blog": 10, "websit": 10, "educ": 10, "forum": 10, "how": 11, "reproduc": [11, 651], "workaround": 11, "customis": 12, "tweak": 12, "principl": 12, "auto_unwrap_transformed_env": 13, "datacollectorbas": 14, "multiprocessedweightupdat": 15, "multisyncdatacollector": 16, "multiasyncdatacollector": 17, "rayweightupdat": 18, "syncdatacollector": 19, "vanillaweightupdat": 20, "weightupdaterbas": 21, "asyncdatacollector": 22, "distributeddatacollector": 23, "distributedsyncdatacollector": 24, "distributedweightupdat": 25, "rpcdatacollector": 26, "rpcweightupdat": 27, "raycollector": 28, "submitit_delayed_launch": 29, "llmcollector": 30, "rayllmcollector": 31, "vllmupdat": 32, "vllmupdaterv2": 33, "split_trajectori": 34, "adaptiveklcontrol": 35, "binari": [36, 638], "binarydiscretetensorspec": 37, "binarytodecim": 38, "bound": 39, "boundedtensorspec": 40, "composit": 42, "compositespec": 43, "constantklcontrol": 44, "densifyreward": 45, "discretetensorspec": 46, "flat2t": 47, "h5combin": 48, "h5split": 49, "hashtoint": 50, "lazystackedcompositespec": 51, "lazystackedtensorspec": 52, "multicategor": 54, "multidiscretetensorspec": 55, "multionehot": 56, "multionehotdiscretetensorspec": 57, "multistep": 58, "nested2t": 59, "nontensor": 60, "nontensorspec": 61, "onehot": 62, "onehotdiscretetensorspec": 63, "pairwisedataset": 64, "prioritizedreplaybuff": 65, "promptdata": 66, "prompttensordicttoken": 67, "querymodul": 68, "randomprojectionhash": 69, "rayreplaybuff": 70, "remotetensordictreplaybuff": 71, "replaybuff": 72, "rewarddata": 73, "rolloutfrommodel": 74, "siphash": 75, "stack": [76, 276], "stackedcomposit": 77, "ted2flat": 78, "ted2nest": 79, "tensordictprioritizedreplaybuff": 81, "tensordictreplaybuff": 82, "tensordicttoken": 83, "tensormap": 84, "tokenizeddatasetload": 86, "unbound": 88, "unboundedcontinu": 89, "unboundedcontinuoustensorspec": 90, "unboundeddiscret": 91, "unboundeddiscretetensorspec": 92, "check_no_exclusive_kei": 93, "consolidate_spec": 94, "contains_lazy_spec": 95, "create_infinite_iter": 96, "ataridqnexperiencereplai": 97, "basedatasetexperiencereplai": 98, "d4rlexperiencereplai": 99, "gendgrlexperiencereplai": 100, "minariexperiencereplai": 101, "openmlexperiencereplai": 102, "openxexperiencereplai": 103, "robosetexperiencereplai": 104, "vd4rlexperiencereplai": 105, "get_dataload": 106, "contentbas": 107, "histori": [108, 628, 647], "topkrewardselector": 109, "compressedliststorag": 110, "compressedliststoragecheckpoint": 111, "flatstoragecheckpoint": 112, "h5storagecheckpoint": 113, "immutabledatasetwrit": 114, "lazymemmapstorag": 115, "lazystackstorag": 116, "lazytensorstorag": 117, "liststorag": 118, "liststoragecheckpoint": 119, "nestedstoragecheckpoint": 120, "prioritizedsampl": 121, "prioritizedslicesampl": 122, "randomsampl": 123, "replaybufferensembl": 124, "roundrobinwrit": 125, "sampler": 126, "samplerensembl": 127, "samplerwithoutreplac": 128, "slicesampl": 129, "slicesamplerwithoutreplac": 130, "storagecheckpointerbas": 132, "storageensembl": 133, "storageensemblecheckpoint": 134, "tensordictmaxvaluewrit": 135, "tensordictroundrobinwrit": 136, "tensorstorag": 137, "tensorstoragecheckpoint": 138, "writer": 139, "writerensembl": 140, "asyncenvpool": 141, "braxenv": 142, "braxwrapp": 143, "chessenv": 144, "dmcontrolenv": 145, "dmcontrolwrapp": 146, "envbas": [147, 651], "envcreat": 148, "envmetadata": 149, "gymenv": 150, "gymlikeenv": 151, "gymwrapp": 152, "habitatenv": 153, "isaacgymenv": 154, "isaacgymwrapp": 155, "isaaclabwrapp": 156, "jumanjienv": 157, "jumanjiwrapp": 158, "llmhashingenv": [159, 201], "mogymenv": 160, "mogymwrapp": 161, "marlgroupmaptyp": 162, "meltingpotenv": 163, "meltingpotwrapp": 164, "modelbasedenvbas": 165, "multithreadedenv": 166, "multithreadedenvwrapp": 167, "openmlenv": 168, "openspielenv": 169, "openspielwrapp": 170, "parallelenv": 171, "pendulumenv": 172, "pettingzooenv": 173, "pettingzoowrapp": 174, "processorasyncenvpool": 175, "randompolici": 176, "robohiveenv": 177, "smacv2env": 178, "smacv2wrapp": 179, "serialenv": 180, "threadingasyncenvpool": 181, "tictactoeenv": 182, "unitymlagentsenv": 183, "unitymlagentswrapp": 184, "vmasenv": 185, "vmaswrapp": 186, "check_env_spec": 187, "check_marl_group": 188, "exploration_typ": 189, "get_available_librari": 190, "gym_backend": 191, "chatenv": [192, 628], "datasetchatenv": 193, "gsm8kenv": 194, "gsm8kpreparequest": 195, "gsm8krewardpars": 196, "ifevalenv": 197, "ifevalscoredata": 198, "ifevalscor": 199, "llmenv": 200, "mlgymwrapp": 202, "make_gsm8k_env": 203, "make_mlgym": 204, "addthinkingprompt": 205, "browsertransform": 206, "dataloadingprim": 207, "klcomput": 208, "klrewardtransform": [209, 255], "mcptooltransform": 210, "policyvers": 211, "pythoninterpret": 212, "raydataloadingprim": 213, "retrievekl": 214, "retrievelogprob": 215, "templatetransform": 216, "token": [217, 283, 360, 628], "as_nested_tensor": 218, "as_padded_tensor": 219, "make_composite_from_td": 220, "dreamerdecod": 221, "dreamerenv": 222, "register_gym_spec_convers": 223, "set_exploration_typ": 224, "set_gym_backend": 225, "step_mdp": 226, "terminated_or_trunc": 227, "actiondiscret": 228, "actionmask": 229, "autoresetenv": 230, "autoresettransform": 231, "batchsizetransform": 232, "binarizereward": 233, "burnintransform": 234, "catfram": [235, 653], "cattensor": 236, "centercrop": 237, "cliptransform": 238, "conditionalpolicyswitch": 240, "conditionalskip": 241, "crop": 242, "dtypecasttransform": 243, "devicecasttransform": 244, "discreteactionproject": 245, "doubletofloat": 246, "endoflifetransform": 247, "excludetransform": 248, "finitetensordictcheck": 249, "flattenobserv": 250, "frameskiptransform": 251, "grayscal": 252, "hash": 253, "inittrack": 254, "linearisereward": 256, "moduletransform": 257, "multiact": 258, "noopresetenv": 259, "observationnorm": 260, "observationtransform": 261, "permutetransform": 262, "pinmemorytransform": 263, "r3mtransform": 264, "randomcroptensordict": 265, "removeemptyspec": 266, "renametransform": 267, "resiz": 268, "reward2gotransform": 269, "rewardclip": 270, "rewardsc": 271, "rewardsum": 272, "selecttransform": 273, "signtransform": 274, "squeezetransform": 275, "stepcount": 277, "targetreturn": 278, "tensordictprim": 279, "timemaxpool": 280, "timer": 281, "totensorimag": 282, "trajcount": 284, "transformedenv": 286, "unarytransform": 287, "unsqueezetransform": 288, "vc1transform": 289, "viprewardtransform": 290, "viptransform": 291, "vecgymenvtransform": 292, "vecnorm": [293, 656], "vecnormv2": 294, "gsdenois": 295, "multisteptransform": 296, "implement_for": 297, "additivegaussianmodul": 298, "batchrenorm1d": 299, "cemplann": 300, "consistentdropout": 301, "consistentdropoutmodul": 302, "conv3dnet": 303, "convnet": 304, "dtactor": 305, "ddpgcnnactor": 306, "ddpgcnnqnet": 307, "ddpgmlpactor": 308, "ddpgmlpqnet": 309, "decisiontransform": 310, "delta": 311, "distributionaldqnnet": 312, "distributionalqvaluehook": 313, "dreameractor": 314, "duelingcnndqnet": 315, "egreedymodul": 316, "gru": 317, "grucel": 318, "grumodul": 319, "independentnorm": 320, "llmmaskedcategor": 321, "lstm": [322, 637], "lstmcell": 323, "lstmmodul": 324, "mlp": [325, 637], "mpcplannerbas": 326, "mppiplann": 327, "maskedcategor": 328, "maskedonehotcategor": 329, "multiagentconvnet": 330, "multiagentmlp": 331, "multiagentnetbas": 332, "noisylazylinear": 333, "noisylinear": 334, "obsdecod": 335, "obsencod": 336, "onehotcategor": 337, "onehotordin": 338, "onlinedtactor": 339, "ordin": 340, "ornsteinuhlenbeckprocessmodul": 341, "qmixer": [342, 630], "qvaluehook": 343, "rssmposterior": 344, "rssmprior": 345, "squeeze2dlay": 346, "squeezelay": 347, "tanhdelta": 348, "tanhnorm": 349, "truncatednorm": 350, "vdnmixer": 351, "vmapmodul": 352, "asyncvllm": 353, "chathistori": 354, "llmwrapperbas": 355, "logprob": 356, "remotetransformerswrapp": 358, "text": [359, 647], "transformerswrapp": 361, "make_async_vllm_engin": 362, "make_vllm_work": 363, "stateless_init_process_group": 364, "stateless_init_process_group_async": 365, "vllmwrapper": 366, "recurrent_mod": 367, "reset_nois": 368, "set_recurrent_mod": 369, "actor": [370, 629, 634, 640], "actorcriticoper": 371, "actorcriticwrapp": 372, "actorvalueoper": 373, "decisiontransformerinferencewrapp": 374, "distributionalqvalueactor": 375, "distributionalqvaluemodul": 376, "lmheadactorvalueoper": 377, "multistepactorwrapp": 378, "probabilisticactor": 379, "qvalueactor": [380, 629], "qvaluemodul": 381, "safemodul": [382, 629], "safeprobabilisticmodul": 383, "safeprobabilistictensordictsequenti": 384, "safesequenti": 385, "tanhmodul": 386, "valueoper": 387, "worldmodelwrapp": 388, "biased_softplu": 389, "get_primers_from_modul": 390, "inv_softplu": 391, "map": [392, 649], "a2closs": 393, "cqlloss": 394, "clipppoloss": 395, "crossqloss": 396, "ddpgloss": 397, "dqnloss": 398, "dtloss": 399, "discretecqlloss": 400, "discreteiqlloss": 401, "discretesacloss": 402, "distributionaldqnloss": 403, "dreameractorloss": 404, "dreamermodelloss": 405, "dreamervalueloss": 406, "gailloss": 407, "hardupd": 408, "iqlloss": 409, "klpenppoloss": 410, "lossmodul": [411, 634, 641], "onlinedtloss": 412, "ppoloss": 413, "redqloss": 414, "reinforceloss": 415, "sacloss": 416, "softupd": 417, "td3bcloss": 418, "td3loss": 419, "valueestim": 420, "add_random_modul": 421, "default_value_kwarg": 422, "distance_loss": 423, "group_optim": 424, "hold_out_net": 425, "hold_out_param": 426, "grpoloss": 427, "grpolossoutput": 428, "mcadvantag": 429, "sftloss": 430, "sftlossoutput": 431, "qmixerloss": 432, "next_state_valu": 433, "gae": 434, "td0estim": 435, "td1estim": 436, "tdlambdaestim": 437, "valueestimatorbas": 438, "generalized_advantage_estim": 439, "reward2go": 440, "td0_advantage_estim": 441, "td0_return_estim": 442, "td1_advantage_estim": 443, "td1_return_estim": 444, "td_lambda_advantage_estim": 445, "td_lambda_return_estim": 446, "vec_generalized_advantage_estim": 447, "vec_td1_advantage_estim": 448, "vec_td1_return_estim": 449, "vec_td_lambda_advantage_estim": 450, "vec_td_lambda_return_estim": 451, "pixelrendertransform": 452, "tensordictrecord": 453, "videorecord": 454, "logger": [455, 631, 643, 644], "csvlogger": 456, "generate_exp_nam": 457, "get_logg": 458, "mlflowlogg": 459, "tensorboardlogg": 460, "wandblogg": 461, "set_auto_unwrap_transformed_env": 462, "batchsubsampl": 463, "clearcudacach": 464, "countframeslog": 465, "logscalar": 466, "logvalidationreward": 467, "optimizerhook": 468, "replaybuffertrain": 469, "rewardnorm": 470, "selectkei": 471, "targetnetupdaterhook": 472, "trainer": [473, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 631, 635], "trainerhookbas": 474, "utdrhook": 475, "updateweight": 476, "ppotrain": 477, "sactrain": 478, "config": [479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 655], "asyncdatacollectorconfig": 479, "datacollectorconfig": 480, "multisyncdatacollectorconfig": 481, "multiasyncdatacollectorconfig": 482, "syncdatacollectorconfig": 483, "configbas": 484, "lazymemmapstorageconfig": 485, "lazystackstorageconfig": 486, "lazytensorstorageconfig": 487, "liststorageconfig": 488, "prioritizedsamplerconfig": 489, "randomsamplerconfig": 490, "replaybufferconfig": 491, "roundrobinwriterconfig": 492, "samplerwithoutreplacementconfig": 493, "slicesamplerconfig": 494, "slicesamplerwithoutreplacementconfig": 495, "storageensembleconfig": 496, "storageensemblewriterconfig": 497, "tensordictreplaybufferconfig": 498, "tensorstorageconfig": 499, "batchedenvconfig": 500, "envconfig": 501, "transformedenvconfig": 502, "envs_lib": [503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519], "braxenvconfig": 503, "dmcontrolenvconfig": 504, "envlibsconfig": 505, "gymenvconfig": 506, "habitatenvconfig": 507, "isaacgymenvconfig": 508, "jumanjienvconfig": 509, "mogymenvconfig": 510, "meltingpotenvconfig": 511, "multithreadedenvconfig": 512, "openmlenvconfig": 513, "openspielenvconfig": 514, "pettingzooenvconfig": 515, "robohiveenvconfig": 516, "smacv2envconfig": 517, "unitymlagentsenvconfig": 518, "vmasenvconfig": 519, "csvloggerconfig": 520, "loggerconfig": 521, "tensorboardloggerconfig": 522, "wandbloggerconfig": 523, "modul": [524, 525, 526, 527, 528, 529, 530, 628, 629, 634, 637, 638, 640, 644, 655], "convnetconfig": 524, "mlpconfig": 525, "modelconfig": 526, "networkconfig": 527, "tanhnormalmodelconfig": 528, "tensordictmoduleconfig": 529, "valuemodelconfig": 530, "object": [531, 532, 628, 630, 634, 641, 655], "lossconfig": 531, "ppolossconfig": 532, "ppotrainerconfig": 533, "trainerconfig": 534, "actiondiscretizerconfig": 535, "actionmaskconfig": 536, "autoresettransformconfig": 537, "batchsizetransformconfig": 538, "binarizerewardconfig": 539, "burnintransformconfig": 540, "catframesconfig": 541, "cattensorsconfig": 542, "centercropconfig": 543, "cliptransformconfig": 544, "composeconfig": 545, "conditionalpolicyswitchconfig": 546, "conditionalskipconfig": 547, "cropconfig": 548, "dtypecasttransformconfig": 549, "devicecasttransformconfig": 550, "discreteactionprojectionconfig": 551, "doubletofloatconfig": 552, "endoflifetransformconfig": 553, "excludetransformconfig": 554, "finitetensordictcheckconfig": 555, "flattenobservationconfig": 556, "frameskiptransformconfig": 557, "grayscaleconfig": 558, "hashconfig": 559, "inittrackerconfig": 560, "klrewardtransformconfig": 561, "lineariserewardsconfig": 562, "multiactionconfig": 563, "multisteptransformconfig": 564, "noopresetenvconfig": 565, "observationnormconfig": 566, "permutetransformconfig": 567, "pinmemorytransformconfig": 568, "r3mtransformconfig": 569, "randomcroptensordictconfig": 570, "removeemptyspecsconfig": 571, "renametransformconfig": 572, "resizeconfig": 573, "reward2gotransformconfig": 574, "rewardclippingconfig": 575, "rewardscalingconfig": 576, "rewardsumconfig": 577, "selecttransformconfig": 578, "signtransformconfig": 579, "squeezetransformconfig": 580, "stackconfig": 581, "stepcounterconfig": 582, "targetreturnconfig": 583, "tensordictprimerconfig": 584, "timemaxpoolconfig": 585, "timerconfig": 586, "totensorimageconfig": 587, "tokenizerconfig": 588, "trajcounterconfig": 589, "transformconfig": 590, "unarytransformconfig": 591, "unsqueezetransformconfig": 592, "vc1transformconfig": 593, "viprewardtransformconfig": 594, "viptransformconfig": 595, "vecgymenvtransformconfig": 596, "vecnormconfig": 597, "vecnormv2config": 598, "asgdconfig": 599, "adadeltaconfig": 600, "adagradconfig": 601, "adamconfig": 602, "adamwconfig": 603, "adamaxconfig": 604, "lbfgsconfig": 605, "lionconfig": 606, "nadamconfig": 607, "radamconfig": 608, "rmspropconfig": 609, "rpropconfig": 610, "sgdconfig": 611, "sparseadamconfig": 612, "correct_for_frame_skip": 613, "get_stats_random_rollout": 614, "make_collector_offpolici": 615, "make_collector_onpolici": 616, "make_dqn_loss": 617, "make_replay_buff": 618, "make_target_updat": 619, "make_train": 620, "parallel_env_constructor": 621, "sync_async_collector": 622, "sync_sync_collector": 623, "transformed_env_constructor": 624, "readm": [625, 645], "tuto": [625, 645], "api": [626, 628], "contribut": [627, 655], "content": 627, "llm": [628, 646, 647], "interfac": 628, "famili": 628, "ad": 628, "templat": 628, "llama": 628, "test": [628, 651], "assist": 628, "equival": 628, "pars": 628, "wrapper": [628, 629, 640, 647], "prompt": 628, "respons": 628, "pad": 628, "vllm": [628, 647], "engin": 628, "recommend": 628, "remot": 628, "track": 628, "core": 628, "architectur": 628, "integr": [628, 647, 653], "grpo": 628, "sft": 628, "tensordictmodul": [629, 638, 640, 655], "probabilist": [629, 640], "q": [629, 635, 637, 640], "oper": 629, "join": 629, "hook": [629, 631, 635], "regular": 629, "planner": 629, "torch": 630, "vmap": [630, 655], "dqn": [630, 635, 637], "ddpg": [630, 634, 649], "sac": 630, "redq": 630, "crossq": 630, "iql": 630, "cql": 630, "gail": 630, "dt": 630, "td3": 630, "bc": 630, "ppo": [630, 636, 650], "head": 630, "a2c": 630, "dreamer": 630, "experiment": 631, "univers": 631, "featur": 631, "builder": 631, "_util": 632, "comput": [633, 635, 651, 654], "time": [633, 634, 654], "code": [634, 651], "overview": [634, 637], "setup": [634, 637, 646, 647], "__init__": 634, "estim": 634, "put": 634, "togeth": [634, 651], "call": 634, "execut": [634, 646, 648, 651], "stat": 634, "build": [634, 635, 644, 646, 653], "evalu": 634, "construct": 634, "target": [634, 635, 641], "result": [634, 636, 646, 649, 650], "conclus": [634, 635, 636, 637, 638, 646, 647, 649, 650, 651, 653], "next": [634, 636, 639, 642, 649, 650, 653], "deep": 635, "paramet": [635, 636, 641], "regist": 635, "possibl": 635, "improv": 635, "defin": [636, 649, 650], "loop": [636, 637, 638, 644, 649, 650, 651], "recurr": [637, 638], "convolut": 637, "select": 637, "further": [637, 641], "read": 637, "export": 638, "introduct": [638, 655], "fast": 638, "recap": 638, "stochast": 638, "aotinductor": 638, "free": 638, "c": 638, "onnx": 638, "rollout": [638, 639, 648, 649, 650, 651, 656], "s": [640, 641], "output": 641, "consider": 641, "first": 644, "tool": 646, "enabl": 646, "3": [646, 647], "interact": 646, "4": [646, 647], "perform": 646, "search": 646, "5": [646, 647], "extract": 646, "input": 647, "mode": 647, "probabl": 647, "onli": 647, "tensorclass": [647, 653], "6": 647, "handl": 647, "7": 647, "divers": 648, "competit": 649, "critic": [649, 650], "pendulum": 651, "write": 651, "_step": 651, "simul": 651, "_reset": 651, "metadata": 651, "_spec": 651, "shape": 651, "seed": [651, 656], "wrap": 651, "our": 651, "pretrain": 652, "vanilla": 653, "other": 653, "pytre": 653, "iter": 653, "over": 653, "fix": 653, "priorit": 653, "save": 653, "raw": 653, "imag": 653, "sequenc": 655, "program": 655, "ensembl": 655, "meta": 655, "sync": 655, "multiprocess": 655, "frame_skip": 656, "deepmind": 656, "control": 656, "devic": 656, "close": 656, "access": 656, "attribut": 656, "kwarg": 656}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})