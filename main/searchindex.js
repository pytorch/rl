Search.setIndex({"docnames": ["index", "reference/collectors", "reference/config", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl.auto_unwrap_transformed_env", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiProcessedWeightUpdater", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.RayWeightUpdater", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.VanillaWeightUpdater", "reference/generated/torchrl.collectors.WeightUpdaterBase", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedWeightUpdater", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RPCWeightUpdater", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.llm.LLMCollector", "reference/generated/torchrl.collectors.llm.RayLLMCollector", "reference/generated/torchrl.collectors.llm.vLLMUpdater", "reference/generated/torchrl.collectors.llm.vLLMUpdaterV2", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DensifyReward", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.RayReplayBuffer", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.llm.ContentBase", "reference/generated/torchrl.data.llm.History", "reference/generated/torchrl.data.llm.TopKRewardSelector", "reference/generated/torchrl.data.replay_buffers.CompressedListStorage", "reference/generated/torchrl.data.replay_buffers.CompressedListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.AsyncEnvPool", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.ChessEnv", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.IsaacLabWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.LLMHashingEnv", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool", "reference/generated/torchrl.envs.RandomPolicy", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_env_specs", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.exploration_type", "reference/generated/torchrl.envs.get_available_libraries", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.llm.ChatEnv", "reference/generated/torchrl.envs.llm.DatasetChatEnv", "reference/generated/torchrl.envs.llm.GSM8KEnv", "reference/generated/torchrl.envs.llm.GSM8KPrepareQuestion", "reference/generated/torchrl.envs.llm.GSM8KRewardParser", "reference/generated/torchrl.envs.llm.IFEvalEnv", "reference/generated/torchrl.envs.llm.IFEvalScoreData", "reference/generated/torchrl.envs.llm.IfEvalScorer", "reference/generated/torchrl.envs.llm.LLMEnv", "reference/generated/torchrl.envs.llm.LLMHashingEnv", "reference/generated/torchrl.envs.llm.MLGymWrapper", "reference/generated/torchrl.envs.llm.make_gsm8k_env", "reference/generated/torchrl.envs.llm.make_mlgym", "reference/generated/torchrl.envs.llm.transforms.AddThinkingPrompt", "reference/generated/torchrl.envs.llm.transforms.BrowserTransform", "reference/generated/torchrl.envs.llm.transforms.DataLoadingPrimer", "reference/generated/torchrl.envs.llm.transforms.KLComputation", "reference/generated/torchrl.envs.llm.transforms.KLRewardTransform", "reference/generated/torchrl.envs.llm.transforms.MCPToolTransform", "reference/generated/torchrl.envs.llm.transforms.PolicyVersion", "reference/generated/torchrl.envs.llm.transforms.PythonInterpreter", "reference/generated/torchrl.envs.llm.transforms.RayDataLoadingPrimer", "reference/generated/torchrl.envs.llm.transforms.RetrieveKL", "reference/generated/torchrl.envs.llm.transforms.RetrieveLogProb", "reference/generated/torchrl.envs.llm.transforms.TemplateTransform", "reference/generated/torchrl.envs.llm.transforms.Tokenizer", "reference/generated/torchrl.envs.llm.transforms.as_nested_tensor", "reference/generated/torchrl.envs.llm.transforms.as_padded_tensor", "reference/generated/torchrl.envs.make_composite_from_td", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.register_gym_spec_conversion", "reference/generated/torchrl.envs.set_exploration_type", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.step_mdp", "reference/generated/torchrl.envs.terminated_or_truncated", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.ConditionalPolicySwitch", "reference/generated/torchrl.envs.transforms.ConditionalSkip", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.Hash", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.LineariseRewards", "reference/generated/torchrl.envs.transforms.MultiAction", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.Stack", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.Timer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Tokenizer", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnaryTransform", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.VecNormV2", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.implement_for", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LLMMaskedCategorical", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.llm.AsyncVLLM", "reference/generated/torchrl.modules.llm.ChatHistory", "reference/generated/torchrl.modules.llm.LLMWrapperBase", "reference/generated/torchrl.modules.llm.LogProbs", "reference/generated/torchrl.modules.llm.Masks", "reference/generated/torchrl.modules.llm.RemoteTransformersWrapper", "reference/generated/torchrl.modules.llm.Text", "reference/generated/torchrl.modules.llm.Tokens", "reference/generated/torchrl.modules.llm.TransformersWrapper", "reference/generated/torchrl.modules.llm.make_async_vllm_engine", "reference/generated/torchrl.modules.llm.make_vllm_worker", "reference/generated/torchrl.modules.llm.stateless_init_process_group", "reference/generated/torchrl.modules.llm.stateless_init_process_group_async", "reference/generated/torchrl.modules.llm.vLLMWrapper", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.add_random_module", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.llm.GRPOLoss", "reference/generated/torchrl.objectives.llm.GRPOLossOutput", "reference/generated/torchrl.objectives.llm.MCAdvantage", "reference/generated/torchrl.objectives.llm.SFTLoss", "reference/generated/torchrl.objectives.llm.SFTLossOutput", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.set_auto_unwrap_transformed_env", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogScalar", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.TargetNetUpdaterHook", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UTDRHook", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.algorithms.PPOTrainer", "reference/generated/torchrl.trainers.algorithms.SACTrainer", "reference/generated/torchrl.trainers.algorithms.configs.collectors.AsyncDataCollectorConfig", "reference/generated/torchrl.trainers.algorithms.configs.collectors.DataCollectorConfig", "reference/generated/torchrl.trainers.algorithms.configs.collectors.MultiSyncDataCollectorConfig", "reference/generated/torchrl.trainers.algorithms.configs.collectors.MultiaSyncDataCollectorConfig", "reference/generated/torchrl.trainers.algorithms.configs.collectors.SyncDataCollectorConfig", "reference/generated/torchrl.trainers.algorithms.configs.common.ConfigBase", "reference/generated/torchrl.trainers.algorithms.configs.data.LazyMemmapStorageConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.LazyStackStorageConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.LazyTensorStorageConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.ListStorageConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.PrioritizedSamplerConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.RandomSamplerConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.ReplayBufferConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.RoundRobinWriterConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.SamplerWithoutReplacementConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.SliceSamplerConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.SliceSamplerWithoutReplacementConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.StorageEnsembleConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.StorageEnsembleWriterConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.TensorDictReplayBufferConfig", "reference/generated/torchrl.trainers.algorithms.configs.data.TensorStorageConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs.BatchedEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs.EnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs.TransformedEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.BraxEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.DMControlEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.EnvLibsConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.GymEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.HabitatEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.IsaacGymEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.JumanjiEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.MOGymEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.MeltingpotEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.MultiThreadedEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.OpenMLEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.OpenSpielEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.PettingZooEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.RoboHiveEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.SMACv2EnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.UnityMLAgentsEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.VmasEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.logging.CSVLoggerConfig", "reference/generated/torchrl.trainers.algorithms.configs.logging.LoggerConfig", "reference/generated/torchrl.trainers.algorithms.configs.logging.TensorboardLoggerConfig", "reference/generated/torchrl.trainers.algorithms.configs.logging.WandbLoggerConfig", "reference/generated/torchrl.trainers.algorithms.configs.modules.ConvNetConfig", "reference/generated/torchrl.trainers.algorithms.configs.modules.MLPConfig", "reference/generated/torchrl.trainers.algorithms.configs.modules.ModelConfig", "reference/generated/torchrl.trainers.algorithms.configs.modules.NetworkConfig", "reference/generated/torchrl.trainers.algorithms.configs.modules.TanhNormalModelConfig", "reference/generated/torchrl.trainers.algorithms.configs.modules.TensorDictModuleConfig", "reference/generated/torchrl.trainers.algorithms.configs.modules.ValueModelConfig", "reference/generated/torchrl.trainers.algorithms.configs.objectives.LossConfig", "reference/generated/torchrl.trainers.algorithms.configs.objectives.PPOLossConfig", "reference/generated/torchrl.trainers.algorithms.configs.trainers.PPOTrainerConfig", "reference/generated/torchrl.trainers.algorithms.configs.trainers.TrainerConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ActionDiscretizerConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ActionMaskConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.AutoResetTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.BatchSizeTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.BinarizeRewardConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.BurnInTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.CatFramesConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.CatTensorsConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.CenterCropConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ClipTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ComposeConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ConditionalPolicySwitchConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ConditionalSkipConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.CropConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.DTypeCastTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.DeviceCastTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.DiscreteActionProjectionConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.DoubleToFloatConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.EndOfLifeTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ExcludeTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.FiniteTensorDictCheckConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.FlattenObservationConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.FrameSkipTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.GrayScaleConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.HashConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.InitTrackerConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.KLRewardTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.LineariseRewardsConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.MultiActionConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.MultiStepTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.NoopResetEnvConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ObservationNormConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.PermuteTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.PinMemoryTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.R3MTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RandomCropTensorDictConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RemoveEmptySpecsConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RenameTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ResizeConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.Reward2GoTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RewardClippingConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RewardScalingConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RewardSumConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.SelectTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.SignTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.SqueezeTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.StackConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.StepCounterConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TargetReturnConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TensorDictPrimerConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TimeMaxPoolConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TimerConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ToTensorImageConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TokenizerConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TrajCounterConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.UnaryTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.UnsqueezeTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VC1TransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VIPRewardTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VIPTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VecGymEnvTransformConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VecNormConfig", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VecNormV2Config", "reference/generated/torchrl.trainers.algorithms.configs.utils.ASGDConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.AdadeltaConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.AdagradConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.AdamConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.AdamWConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.AdamaxConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.LBFGSConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.LionConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.NAdamConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.RAdamConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.RMSpropConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.RpropConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.SGDConfig", "reference/generated/torchrl.trainers.algorithms.configs.utils.SparseAdamConfig", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/llms", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/llm_browser", "tutorials/llm_wrappers", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/config.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl.auto_unwrap_transformed_env.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiProcessedWeightUpdater.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.RayWeightUpdater.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.VanillaWeightUpdater.rst", "reference/generated/torchrl.collectors.WeightUpdaterBase.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedWeightUpdater.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCWeightUpdater.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.llm.LLMCollector.rst", "reference/generated/torchrl.collectors.llm.RayLLMCollector.rst", "reference/generated/torchrl.collectors.llm.vLLMUpdater.rst", "reference/generated/torchrl.collectors.llm.vLLMUpdaterV2.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DensifyReward.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.RayReplayBuffer.rst", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.llm.ContentBase.rst", "reference/generated/torchrl.data.llm.History.rst", "reference/generated/torchrl.data.llm.TopKRewardSelector.rst", "reference/generated/torchrl.data.replay_buffers.CompressedListStorage.rst", "reference/generated/torchrl.data.replay_buffers.CompressedListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.AsyncEnvPool.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.ChessEnv.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.IsaacLabWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.LLMHashingEnv.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool.rst", "reference/generated/torchrl.envs.RandomPolicy.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_env_specs.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.exploration_type.rst", "reference/generated/torchrl.envs.get_available_libraries.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.llm.ChatEnv.rst", "reference/generated/torchrl.envs.llm.DatasetChatEnv.rst", "reference/generated/torchrl.envs.llm.GSM8KEnv.rst", "reference/generated/torchrl.envs.llm.GSM8KPrepareQuestion.rst", "reference/generated/torchrl.envs.llm.GSM8KRewardParser.rst", "reference/generated/torchrl.envs.llm.IFEvalEnv.rst", "reference/generated/torchrl.envs.llm.IFEvalScoreData.rst", "reference/generated/torchrl.envs.llm.IfEvalScorer.rst", "reference/generated/torchrl.envs.llm.LLMEnv.rst", "reference/generated/torchrl.envs.llm.LLMHashingEnv.rst", "reference/generated/torchrl.envs.llm.MLGymWrapper.rst", "reference/generated/torchrl.envs.llm.make_gsm8k_env.rst", "reference/generated/torchrl.envs.llm.make_mlgym.rst", "reference/generated/torchrl.envs.llm.transforms.AddThinkingPrompt.rst", "reference/generated/torchrl.envs.llm.transforms.BrowserTransform.rst", "reference/generated/torchrl.envs.llm.transforms.DataLoadingPrimer.rst", "reference/generated/torchrl.envs.llm.transforms.KLComputation.rst", "reference/generated/torchrl.envs.llm.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.llm.transforms.MCPToolTransform.rst", "reference/generated/torchrl.envs.llm.transforms.PolicyVersion.rst", "reference/generated/torchrl.envs.llm.transforms.PythonInterpreter.rst", "reference/generated/torchrl.envs.llm.transforms.RayDataLoadingPrimer.rst", "reference/generated/torchrl.envs.llm.transforms.RetrieveKL.rst", "reference/generated/torchrl.envs.llm.transforms.RetrieveLogProb.rst", "reference/generated/torchrl.envs.llm.transforms.TemplateTransform.rst", "reference/generated/torchrl.envs.llm.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.llm.transforms.as_nested_tensor.rst", "reference/generated/torchrl.envs.llm.transforms.as_padded_tensor.rst", "reference/generated/torchrl.envs.make_composite_from_td.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.register_gym_spec_conversion.rst", "reference/generated/torchrl.envs.set_exploration_type.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.step_mdp.rst", "reference/generated/torchrl.envs.terminated_or_truncated.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.ConditionalPolicySwitch.rst", "reference/generated/torchrl.envs.transforms.ConditionalSkip.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.Hash.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.LineariseRewards.rst", "reference/generated/torchrl.envs.transforms.MultiAction.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.Stack.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.Timer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnaryTransform.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.VecNormV2.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.implement_for.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LLMMaskedCategorical.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.llm.AsyncVLLM.rst", "reference/generated/torchrl.modules.llm.ChatHistory.rst", "reference/generated/torchrl.modules.llm.LLMWrapperBase.rst", "reference/generated/torchrl.modules.llm.LogProbs.rst", "reference/generated/torchrl.modules.llm.Masks.rst", "reference/generated/torchrl.modules.llm.RemoteTransformersWrapper.rst", "reference/generated/torchrl.modules.llm.Text.rst", "reference/generated/torchrl.modules.llm.Tokens.rst", "reference/generated/torchrl.modules.llm.TransformersWrapper.rst", "reference/generated/torchrl.modules.llm.make_async_vllm_engine.rst", "reference/generated/torchrl.modules.llm.make_vllm_worker.rst", "reference/generated/torchrl.modules.llm.stateless_init_process_group.rst", "reference/generated/torchrl.modules.llm.stateless_init_process_group_async.rst", "reference/generated/torchrl.modules.llm.vLLMWrapper.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.add_random_module.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.llm.GRPOLoss.rst", "reference/generated/torchrl.objectives.llm.GRPOLossOutput.rst", "reference/generated/torchrl.objectives.llm.MCAdvantage.rst", "reference/generated/torchrl.objectives.llm.SFTLoss.rst", "reference/generated/torchrl.objectives.llm.SFTLossOutput.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.set_auto_unwrap_transformed_env.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogScalar.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.TargetNetUpdaterHook.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UTDRHook.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.algorithms.PPOTrainer.rst", "reference/generated/torchrl.trainers.algorithms.SACTrainer.rst", "reference/generated/torchrl.trainers.algorithms.configs.collectors.AsyncDataCollectorConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.collectors.DataCollectorConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.collectors.MultiSyncDataCollectorConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.collectors.MultiaSyncDataCollectorConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.collectors.SyncDataCollectorConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.common.ConfigBase.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.LazyMemmapStorageConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.LazyStackStorageConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.LazyTensorStorageConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.ListStorageConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.PrioritizedSamplerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.RandomSamplerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.ReplayBufferConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.RoundRobinWriterConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.SamplerWithoutReplacementConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.SliceSamplerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.SliceSamplerWithoutReplacementConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.StorageEnsembleConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.StorageEnsembleWriterConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.TensorDictReplayBufferConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.data.TensorStorageConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs.BatchedEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs.EnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs.TransformedEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.BraxEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.DMControlEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.EnvLibsConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.GymEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.HabitatEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.IsaacGymEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.JumanjiEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.MOGymEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.MeltingpotEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.MultiThreadedEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.OpenMLEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.OpenSpielEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.PettingZooEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.RoboHiveEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.SMACv2EnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.UnityMLAgentsEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.envs_libs.VmasEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.logging.CSVLoggerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.logging.LoggerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.logging.TensorboardLoggerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.logging.WandbLoggerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.modules.ConvNetConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.modules.MLPConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.modules.ModelConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.modules.NetworkConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.modules.TanhNormalModelConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.modules.TensorDictModuleConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.modules.ValueModelConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.objectives.LossConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.objectives.PPOLossConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.trainers.PPOTrainerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.trainers.TrainerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ActionDiscretizerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ActionMaskConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.AutoResetTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.BatchSizeTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.BinarizeRewardConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.BurnInTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.CatFramesConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.CatTensorsConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.CenterCropConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ClipTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ComposeConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ConditionalPolicySwitchConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ConditionalSkipConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.CropConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.DTypeCastTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.DeviceCastTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.DiscreteActionProjectionConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.DoubleToFloatConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.EndOfLifeTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ExcludeTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.FiniteTensorDictCheckConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.FlattenObservationConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.FrameSkipTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.GrayScaleConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.HashConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.InitTrackerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.KLRewardTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.LineariseRewardsConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.MultiActionConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.MultiStepTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.NoopResetEnvConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ObservationNormConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.PermuteTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.PinMemoryTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.R3MTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RandomCropTensorDictConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RemoveEmptySpecsConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RenameTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ResizeConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.Reward2GoTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RewardClippingConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RewardScalingConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.RewardSumConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.SelectTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.SignTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.SqueezeTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.StackConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.StepCounterConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TargetReturnConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TensorDictPrimerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TimeMaxPoolConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TimerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.ToTensorImageConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TokenizerConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TrajCounterConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.TransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.UnaryTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.UnsqueezeTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VC1TransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VIPRewardTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VIPTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VecGymEnvTransformConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VecNormConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.transforms.VecNormV2Config.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.ASGDConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.AdadeltaConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.AdagradConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.AdamConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.AdamWConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.AdamaxConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.LBFGSConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.LionConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.NAdamConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.RAdamConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.RMSpropConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.RpropConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.SGDConfig.rst", "reference/generated/torchrl.trainers.algorithms.configs.utils.SparseAdamConfig.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/llms.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/llm_browser.rst", "tutorials/llm_wrappers.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "TorchRL Configuration System", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "auto_unwrap_transformed_env", "DataCollectorBase", "MultiProcessedWeightUpdater", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RayWeightUpdater", "SyncDataCollector", "VanillaWeightUpdater", "WeightUpdaterBase", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "DistributedWeightUpdater", "RPCDataCollector", "RPCWeightUpdater", "RayCollector", "submitit_delayed_launcher", "LLMCollector", "RayLLMCollector", "vLLMUpdater", "vLLMUpdaterV2", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DensifyReward", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "RayReplayBuffer", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "ContentBase", "History", "TopKRewardSelector", "CompressedListStorage", "CompressedListStorageCheckpointer", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyStackStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "AsyncEnvPool", "BraxEnv", "BraxWrapper", "ChessEnv", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "IsaacLabWrapper", "JumanjiEnv", "JumanjiWrapper", "LLMHashingEnv", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "ProcessorAsyncEnvPool", "RandomPolicy", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "ThreadingAsyncEnvPool", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_env_specs", "check_marl_grouping", "exploration_type", "get_available_libraries", "gym_backend", "ChatEnv", "DatasetChatEnv", "GSM8KEnv", "GSM8KPrepareQuestion", "GSM8KRewardParser", "IFEvalEnv", "IFEvalScoreData", "IfEvalScorer", "LLMEnv", "LLMHashingEnv", "MLGymWrapper", "make_gsm8k_env", "make_mlgym", "AddThinkingPrompt", "BrowserTransform", "DataLoadingPrimer", "KLComputation", "KLRewardTransform", "MCPToolTransform", "PolicyVersion", "PythonInterpreter", "RayDataLoadingPrimer", "RetrieveKL", "RetrieveLogProb", "TemplateTransform", "Tokenizer", "as_nested_tensor", "as_padded_tensor", "make_composite_from_td", "DreamerDecoder", "DreamerEnv", "register_gym_spec_conversion", "set_exploration_type", "set_gym_backend", "step_mdp", "terminated_or_truncated", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "ConditionalPolicySwitch", "ConditionalSkip", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "Hash", "InitTracker", "KLRewardTransform", "LineariseRewards", "MultiAction", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "Stack", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "Timer", "ToTensorImage", "Tokenizer", "TrajCounter", "Transform", "TransformedEnv", "UnaryTransform", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "VecNormV2", "gSDENoise", "MultiStepTransform", "implement_for", "AdditiveGaussianModule", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LLMMaskedCategorical", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "AsyncVLLM", "ChatHistory", "LLMWrapperBase", "LogProbs", "Masks", "RemoteTransformersWrapper", "Text", "Tokens", "TransformersWrapper", "make_async_vllm_engine", "make_vllm_worker", "stateless_init_process_group", "stateless_init_process_group_async", "vLLMWrapper", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "add_random_module", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "GRPOLoss", "GRPOLossOutput", "MCAdvantage", "SFTLoss", "SFTLossOutput", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "set_auto_unwrap_transformed_env", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogScalar", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "TargetNetUpdaterHook", "Trainer", "TrainerHookBase", "UTDRHook", "UpdateWeights", "PPOTrainer", "SACTrainer", "torchrl.trainers.algorithms.configs.collectors.AsyncDataCollectorConfig", "torchrl.trainers.algorithms.configs.collectors.DataCollectorConfig", "torchrl.trainers.algorithms.configs.collectors.MultiSyncDataCollectorConfig", "torchrl.trainers.algorithms.configs.collectors.MultiaSyncDataCollectorConfig", "torchrl.trainers.algorithms.configs.collectors.SyncDataCollectorConfig", "torchrl.trainers.algorithms.configs.common.ConfigBase", "torchrl.trainers.algorithms.configs.data.LazyMemmapStorageConfig", "torchrl.trainers.algorithms.configs.data.LazyStackStorageConfig", "torchrl.trainers.algorithms.configs.data.LazyTensorStorageConfig", "torchrl.trainers.algorithms.configs.data.ListStorageConfig", "torchrl.trainers.algorithms.configs.data.PrioritizedSamplerConfig", "torchrl.trainers.algorithms.configs.data.RandomSamplerConfig", "torchrl.trainers.algorithms.configs.data.ReplayBufferConfig", "torchrl.trainers.algorithms.configs.data.RoundRobinWriterConfig", "torchrl.trainers.algorithms.configs.data.SamplerWithoutReplacementConfig", "torchrl.trainers.algorithms.configs.data.SliceSamplerConfig", "torchrl.trainers.algorithms.configs.data.SliceSamplerWithoutReplacementConfig", "torchrl.trainers.algorithms.configs.data.StorageEnsembleConfig", "torchrl.trainers.algorithms.configs.data.StorageEnsembleWriterConfig", "torchrl.trainers.algorithms.configs.data.TensorDictReplayBufferConfig", "torchrl.trainers.algorithms.configs.data.TensorStorageConfig", "torchrl.trainers.algorithms.configs.envs.BatchedEnvConfig", "torchrl.trainers.algorithms.configs.envs.EnvConfig", "torchrl.trainers.algorithms.configs.envs.TransformedEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.BraxEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.DMControlEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.EnvLibsConfig", "torchrl.trainers.algorithms.configs.envs_libs.GymEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.HabitatEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.IsaacGymEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.JumanjiEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.MOGymEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.MeltingpotEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.MultiThreadedEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.OpenMLEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.OpenSpielEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.PettingZooEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.RoboHiveEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.SMACv2EnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.UnityMLAgentsEnvConfig", "torchrl.trainers.algorithms.configs.envs_libs.VmasEnvConfig", "torchrl.trainers.algorithms.configs.logging.CSVLoggerConfig", "torchrl.trainers.algorithms.configs.logging.LoggerConfig", "torchrl.trainers.algorithms.configs.logging.TensorboardLoggerConfig", "torchrl.trainers.algorithms.configs.logging.WandbLoggerConfig", "torchrl.trainers.algorithms.configs.modules.ConvNetConfig", "torchrl.trainers.algorithms.configs.modules.MLPConfig", "torchrl.trainers.algorithms.configs.modules.ModelConfig", "torchrl.trainers.algorithms.configs.modules.NetworkConfig", "torchrl.trainers.algorithms.configs.modules.TanhNormalModelConfig", "torchrl.trainers.algorithms.configs.modules.TensorDictModuleConfig", "torchrl.trainers.algorithms.configs.modules.ValueModelConfig", "torchrl.trainers.algorithms.configs.objectives.LossConfig", "torchrl.trainers.algorithms.configs.objectives.PPOLossConfig", "torchrl.trainers.algorithms.configs.trainers.PPOTrainerConfig", "torchrl.trainers.algorithms.configs.trainers.TrainerConfig", "torchrl.trainers.algorithms.configs.transforms.ActionDiscretizerConfig", "torchrl.trainers.algorithms.configs.transforms.ActionMaskConfig", "torchrl.trainers.algorithms.configs.transforms.AutoResetTransformConfig", "torchrl.trainers.algorithms.configs.transforms.BatchSizeTransformConfig", "torchrl.trainers.algorithms.configs.transforms.BinarizeRewardConfig", "torchrl.trainers.algorithms.configs.transforms.BurnInTransformConfig", "torchrl.trainers.algorithms.configs.transforms.CatFramesConfig", "torchrl.trainers.algorithms.configs.transforms.CatTensorsConfig", "torchrl.trainers.algorithms.configs.transforms.CenterCropConfig", "torchrl.trainers.algorithms.configs.transforms.ClipTransformConfig", "torchrl.trainers.algorithms.configs.transforms.ComposeConfig", "torchrl.trainers.algorithms.configs.transforms.ConditionalPolicySwitchConfig", "torchrl.trainers.algorithms.configs.transforms.ConditionalSkipConfig", "torchrl.trainers.algorithms.configs.transforms.CropConfig", "torchrl.trainers.algorithms.configs.transforms.DTypeCastTransformConfig", "torchrl.trainers.algorithms.configs.transforms.DeviceCastTransformConfig", "torchrl.trainers.algorithms.configs.transforms.DiscreteActionProjectionConfig", "torchrl.trainers.algorithms.configs.transforms.DoubleToFloatConfig", "torchrl.trainers.algorithms.configs.transforms.EndOfLifeTransformConfig", "torchrl.trainers.algorithms.configs.transforms.ExcludeTransformConfig", "torchrl.trainers.algorithms.configs.transforms.FiniteTensorDictCheckConfig", "torchrl.trainers.algorithms.configs.transforms.FlattenObservationConfig", "torchrl.trainers.algorithms.configs.transforms.FrameSkipTransformConfig", "torchrl.trainers.algorithms.configs.transforms.GrayScaleConfig", "torchrl.trainers.algorithms.configs.transforms.HashConfig", "torchrl.trainers.algorithms.configs.transforms.InitTrackerConfig", "torchrl.trainers.algorithms.configs.transforms.KLRewardTransformConfig", "torchrl.trainers.algorithms.configs.transforms.LineariseRewardsConfig", "torchrl.trainers.algorithms.configs.transforms.MultiActionConfig", "torchrl.trainers.algorithms.configs.transforms.MultiStepTransformConfig", "torchrl.trainers.algorithms.configs.transforms.NoopResetEnvConfig", "torchrl.trainers.algorithms.configs.transforms.ObservationNormConfig", "torchrl.trainers.algorithms.configs.transforms.PermuteTransformConfig", "torchrl.trainers.algorithms.configs.transforms.PinMemoryTransformConfig", "torchrl.trainers.algorithms.configs.transforms.R3MTransformConfig", "torchrl.trainers.algorithms.configs.transforms.RandomCropTensorDictConfig", "torchrl.trainers.algorithms.configs.transforms.RemoveEmptySpecsConfig", "torchrl.trainers.algorithms.configs.transforms.RenameTransformConfig", "torchrl.trainers.algorithms.configs.transforms.ResizeConfig", "torchrl.trainers.algorithms.configs.transforms.Reward2GoTransformConfig", "torchrl.trainers.algorithms.configs.transforms.RewardClippingConfig", "torchrl.trainers.algorithms.configs.transforms.RewardScalingConfig", "torchrl.trainers.algorithms.configs.transforms.RewardSumConfig", "torchrl.trainers.algorithms.configs.transforms.SelectTransformConfig", "torchrl.trainers.algorithms.configs.transforms.SignTransformConfig", "torchrl.trainers.algorithms.configs.transforms.SqueezeTransformConfig", "torchrl.trainers.algorithms.configs.transforms.StackConfig", "torchrl.trainers.algorithms.configs.transforms.StepCounterConfig", "torchrl.trainers.algorithms.configs.transforms.TargetReturnConfig", "torchrl.trainers.algorithms.configs.transforms.TensorDictPrimerConfig", "torchrl.trainers.algorithms.configs.transforms.TimeMaxPoolConfig", "torchrl.trainers.algorithms.configs.transforms.TimerConfig", "torchrl.trainers.algorithms.configs.transforms.ToTensorImageConfig", "torchrl.trainers.algorithms.configs.transforms.TokenizerConfig", "torchrl.trainers.algorithms.configs.transforms.TrajCounterConfig", "torchrl.trainers.algorithms.configs.transforms.TransformConfig", "torchrl.trainers.algorithms.configs.transforms.UnaryTransformConfig", "torchrl.trainers.algorithms.configs.transforms.UnsqueezeTransformConfig", "torchrl.trainers.algorithms.configs.transforms.VC1TransformConfig", "torchrl.trainers.algorithms.configs.transforms.VIPRewardTransformConfig", "torchrl.trainers.algorithms.configs.transforms.VIPTransformConfig", "torchrl.trainers.algorithms.configs.transforms.VecGymEnvTransformConfig", "torchrl.trainers.algorithms.configs.transforms.VecNormConfig", "torchrl.trainers.algorithms.configs.transforms.VecNormV2Config", "torchrl.trainers.algorithms.configs.utils.ASGDConfig", "torchrl.trainers.algorithms.configs.utils.AdadeltaConfig", "torchrl.trainers.algorithms.configs.utils.AdagradConfig", "torchrl.trainers.algorithms.configs.utils.AdamConfig", "torchrl.trainers.algorithms.configs.utils.AdamWConfig", "torchrl.trainers.algorithms.configs.utils.AdamaxConfig", "torchrl.trainers.algorithms.configs.utils.LBFGSConfig", "torchrl.trainers.algorithms.configs.utils.LionConfig", "torchrl.trainers.algorithms.configs.utils.NAdamConfig", "torchrl.trainers.algorithms.configs.utils.RAdamConfig", "torchrl.trainers.algorithms.configs.utils.RMSpropConfig", "torchrl.trainers.algorithms.configs.utils.RpropConfig", "torchrl.trainers.algorithms.configs.utils.SGDConfig", "torchrl.trainers.algorithms.configs.utils.SparseAdamConfig", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "LLM Interface", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "TorchRL LLM: Building Tool-Enabled Environments", "LLM Wrappers in TorchRL", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 3, 4, 6, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 114, 115, 116, 117, 118, 122, 124, 125, 127, 129, 130, 131, 133, 135, 136, 137, 139, 140, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 158, 159, 165, 166, 168, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 229, 231, 232, 234, 235, 237, 243, 245, 246, 249, 253, 258, 259, 263, 264, 265, 266, 268, 277, 278, 279, 280, 281, 283, 284, 285, 288, 291, 292, 293, 295, 298, 302, 303, 305, 306, 307, 308, 310, 315, 316, 318, 321, 323, 324, 325, 329, 330, 332, 340, 345, 346, 348, 352, 353, 354, 355, 356, 358, 359, 360, 361, 363, 364, 365, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 387, 391, 392, 393, 394, 395, 397, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 418, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 451, 453, 456, 460, 466, 467, 472, 473, 476, 477, 613, 620, 621, 622, 623, 626, 627, 628, 629, 633, 634, 637, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 651, 652, 654, 655], "open": [0, 6, 8, 64, 66, 73, 87, 103, 107, 108, 115, 198, 296, 353, 355, 356, 358, 359, 363, 364, 427, 430, 634, 645, 648, 649, 654], "sourc": [0, 1, 5, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "reinforc": [0, 2, 4, 10, 100, 163, 164, 192, 193, 235, 293, 300, 305, 306, 307, 308, 312, 340, 375, 392, 393, 395, 398, 399, 400, 402, 407, 408, 414, 415, 416, 417, 476, 625, 627, 632, 634, 638, 639, 644, 646, 650, 653, 654], "learn": [0, 2, 4, 8, 9, 10, 23, 58, 87, 100, 101, 102, 104, 105, 107, 108, 121, 122, 147, 163, 164, 168, 171, 180, 192, 193, 198, 199, 235, 293, 300, 305, 306, 307, 308, 312, 326, 333, 339, 340, 353, 355, 356, 358, 359, 375, 392, 393, 394, 395, 398, 399, 400, 402, 406, 407, 408, 412, 413, 414, 415, 416, 417, 426, 427, 430, 476, 477, 625, 627, 629, 630, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 650, 652, 653, 654, 655], "rl": [0, 1, 3, 4, 6, 9, 11, 16, 17, 19, 22, 30, 97, 156, 165, 192, 235, 277, 333, 360, 365, 369, 378, 386, 392, 394, 409, 410, 412, 414, 426, 462, 624, 626, 627, 628, 629, 630, 633, 634, 635, 641, 644, 648, 649, 651, 652, 655], "librari": [0, 1, 3, 6, 7, 8, 9, 10, 11, 12, 16, 17, 23, 24, 26, 67, 83, 144, 145, 146, 155, 166, 190, 199, 352, 625, 626, 628, 629, 631, 633, 634, 635, 637, 638, 639, 641, 648, 649, 650, 655], "pytorch": [0, 1, 3, 4, 30, 34, 101, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 185, 186, 187, 192, 193, 194, 197, 200, 201, 202, 235, 280, 281, 300, 316, 321, 332, 333, 472, 624, 626, 628, 630, 633, 635, 636, 640, 644, 648, 649, 650, 654, 655], "you": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 19, 23, 24, 26, 30, 32, 38, 45, 50, 58, 68, 69, 75, 80, 83, 100, 108, 109, 141, 144, 147, 151, 155, 159, 162, 163, 164, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 225, 235, 256, 284, 292, 293, 295, 300, 320, 321, 339, 354, 360, 365, 382, 412, 426, 428, 429, 460, 461, 626, 627, 628, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "can": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 115, 116, 121, 122, 124, 128, 129, 130, 135, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 155, 157, 158, 159, 162, 163, 164, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 225, 227, 228, 229, 231, 232, 234, 235, 238, 239, 241, 243, 245, 246, 247, 250, 253, 257, 258, 259, 263, 264, 268, 271, 275, 276, 277, 278, 282, 283, 284, 285, 286, 288, 290, 292, 293, 295, 296, 299, 301, 302, 303, 305, 315, 316, 318, 319, 320, 321, 323, 325, 326, 327, 329, 330, 331, 333, 340, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 365, 369, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 451, 453, 460, 461, 465, 466, 476, 525, 621, 622, 623, 626, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "directli": [0, 3, 5, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 97, 101, 109, 124, 141, 142, 143, 144, 147, 150, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 253, 254, 255, 259, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 286, 288, 289, 291, 292, 293, 295, 352, 357, 382, 410, 417, 426, 428, 429, 623, 627, 634, 635, 636, 637, 638, 648, 649, 650, 652], "from": [0, 1, 2, 4, 5, 6, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 130, 131, 133, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 253, 254, 255, 256, 259, 261, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 295, 296, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 336, 338, 339, 340, 341, 342, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 408, 409, 410, 412, 413, 414, 415, 417, 418, 421, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 451, 452, 453, 462, 465, 468, 472, 474, 476, 477, 488, 489, 493, 612, 613, 617, 619, 620, 623, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655], "pypi": [0, 3, 654], "see": [0, 1, 3, 4, 7, 8, 9, 10, 16, 17, 19, 22, 23, 24, 26, 28, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 122, 124, 129, 130, 141, 144, 147, 151, 154, 156, 158, 159, 163, 164, 166, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 239, 241, 257, 263, 278, 281, 283, 284, 285, 288, 290, 292, 293, 294, 295, 300, 301, 302, 303, 316, 318, 319, 321, 323, 324, 330, 331, 332, 339, 341, 349, 350, 352, 353, 354, 355, 356, 358, 359, 360, 365, 368, 370, 372, 378, 381, 382, 394, 395, 406, 409, 410, 412, 417, 426, 427, 428, 429, 430, 453, 460, 468, 476, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 648, 649, 650, 652, 654, 655], "more": [0, 1, 3, 4, 5, 7, 9, 10, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 121, 122, 124, 135, 141, 144, 147, 150, 151, 152, 154, 155, 158, 159, 163, 164, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 281, 284, 288, 293, 294, 295, 296, 297, 298, 301, 312, 320, 321, 324, 332, 352, 353, 354, 355, 356, 358, 359, 360, 365, 369, 374, 375, 381, 382, 386, 392, 402, 410, 412, 426, 427, 428, 429, 430, 433, 438, 446, 460, 467, 625, 626, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 645, 646, 647, 648, 649, 650, 651, 654, 655], "about": [0, 4, 6, 8, 10, 23, 24, 26, 27, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 83, 85, 88, 89, 90, 91, 92, 101, 104, 105, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 205, 214, 354, 360, 365, 628, 629, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 648, 649, 650, 652, 654, 655], "instruct": [0, 7, 8, 11, 29, 99, 108, 156, 194, 199, 245, 247, 627, 629, 633, 634, 635, 636, 645, 648, 649, 652], "dedic": [0, 1, 3, 4, 23, 24, 26, 28, 53, 72, 81, 82, 124, 171, 180, 352, 370, 371, 372, 627, 628, 633, 638, 640, 641, 643, 647, 649], "section": [0, 2, 3, 4, 5, 35, 147, 316, 321, 627, 634, 637, 638, 643, 648, 649], "below": [0, 3, 4, 8, 16, 17, 19, 22, 23, 24, 26, 28, 38, 45, 50, 58, 68, 69, 72, 75, 80, 81, 82, 87, 88, 106, 107, 108, 109, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 241, 257, 263, 278, 283, 284, 285, 288, 290, 295, 302, 303, 316, 319, 321, 324, 330, 349, 353, 354, 355, 356, 358, 359, 360, 365, 378, 381, 394, 412, 426, 427, 428, 429, 430, 468, 633, 634, 635, 636, 637, 638, 648, 650], "pip": [0, 11, 102, 637, 638, 639, 640, 641, 642, 643, 645, 649, 654, 655], "provid": [0, 1, 2, 3, 4, 6, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 42, 43, 44, 45, 50, 51, 53, 54, 56, 58, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 77, 80, 81, 82, 86, 87, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 115, 116, 118, 121, 122, 123, 124, 127, 129, 130, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 228, 232, 234, 235, 236, 237, 238, 242, 243, 246, 250, 253, 258, 259, 261, 263, 264, 267, 268, 271, 272, 277, 278, 279, 282, 283, 285, 287, 288, 290, 291, 292, 293, 295, 296, 302, 303, 309, 310, 312, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 365, 369, 373, 375, 377, 378, 379, 380, 382, 385, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 408, 409, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 457, 462, 468, 474, 483, 613, 619, 626, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 641, 642, 646, 647, 648, 649, 650, 651, 652, 654, 655], "python": [0, 1, 2, 3, 4, 6, 7, 8, 11, 16, 17, 28, 30, 31, 65, 70, 71, 72, 75, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 124, 167, 183, 184, 192, 212, 225, 316, 317, 318, 321, 322, 323, 327, 328, 627, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "first": [0, 1, 3, 4, 5, 6, 8, 9, 16, 17, 19, 22, 23, 24, 26, 28, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 68, 76, 77, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 117, 122, 129, 130, 135, 137, 141, 144, 147, 150, 151, 152, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 207, 231, 232, 235, 236, 240, 241, 250, 257, 259, 263, 264, 280, 281, 285, 288, 293, 296, 303, 310, 316, 318, 320, 321, 323, 324, 327, 328, 330, 332, 335, 352, 369, 373, 374, 375, 378, 379, 381, 382, 394, 404, 409, 410, 412, 426, 429, 452, 453, 470, 627, 628, 632, 633, 634, 635, 636, 637, 638, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655], "low": [0, 4, 39, 42, 69, 80, 85, 88, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 205, 220, 228, 238, 245, 253, 256, 278, 286, 347, 348, 349, 373, 375, 378, 382, 385, 412, 543, 633, 634, 635, 637, 648, 649, 650, 654], "high": [0, 4, 10, 39, 42, 64, 66, 73, 81, 87, 88, 107, 108, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 199, 200, 201, 202, 205, 220, 228, 238, 245, 253, 256, 258, 278, 286, 347, 348, 349, 353, 355, 356, 358, 359, 373, 375, 378, 382, 385, 401, 412, 415, 427, 430, 433, 438, 446, 543, 627, 630, 633, 634, 635, 646, 648, 649, 650, 652, 654], "level": [0, 3, 4, 5, 29, 42, 43, 51, 65, 70, 72, 77, 87, 107, 108, 110, 124, 150, 152, 198, 208, 215, 235, 276, 284, 318, 320, 323, 353, 355, 356, 358, 359, 401, 409, 415, 427, 430, 630, 633, 634, 637, 641, 654], "abstract": [0, 1, 4, 9, 21, 84, 85, 97, 98, 102, 139, 147, 260, 325, 437, 463, 473, 483, 630, 635, 637, 650, 654], "ar": [0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 127, 128, 129, 130, 131, 133, 135, 137, 141, 144, 147, 148, 150, 151, 152, 158, 159, 162, 163, 164, 165, 168, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 227, 228, 230, 231, 232, 234, 235, 238, 239, 241, 243, 244, 245, 246, 247, 249, 250, 253, 255, 256, 257, 258, 261, 263, 268, 271, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 295, 297, 299, 300, 308, 310, 315, 316, 317, 318, 320, 321, 322, 323, 325, 327, 328, 329, 330, 331, 333, 336, 341, 344, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 365, 368, 373, 374, 377, 378, 379, 381, 382, 383, 384, 385, 389, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 417, 418, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 451, 460, 461, 468, 472, 474, 476, 477, 619, 623, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "intend": [0, 8, 16, 17, 19, 22, 23, 24, 26, 28, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 86, 88, 89, 90, 91, 92, 234, 245, 351, 410, 627, 628, 654], "effici": [0, 1, 5, 9, 18, 111, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 316, 320, 333, 360, 395, 474, 625, 627, 628, 633, 634, 635, 636, 637, 640, 641, 643, 647, 648, 649, 651, 652, 654], "modular": [0, 2, 97, 209, 384, 627, 630, 637, 652, 654], "document": [0, 3, 6, 8, 12, 23, 24, 28, 38, 45, 50, 58, 68, 69, 75, 80, 103, 109, 141, 144, 147, 151, 156, 159, 169, 170, 171, 172, 175, 180, 181, 182, 183, 184, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 285, 295, 320, 354, 360, 365, 426, 428, 429, 624, 627, 630, 634, 636, 637, 638, 641, 644, 654], "properli": [0, 1, 4, 30, 88, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 214, 215, 226, 241, 318, 323, 433, 627, 635, 636, 642, 648, 649, 650, 654], "test": [0, 2, 4, 6, 30, 141, 142, 143, 144, 147, 151, 157, 158, 159, 163, 164, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 205, 207, 283, 288, 320, 466, 619, 635, 636, 637, 651, 654], "The": [0, 1, 2, 4, 5, 6, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 121, 122, 124, 127, 129, 130, 131, 135, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 155, 157, 158, 159, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 223, 226, 227, 228, 231, 232, 234, 235, 239, 240, 241, 243, 246, 247, 248, 253, 256, 257, 259, 261, 263, 268, 270, 271, 272, 275, 276, 277, 278, 280, 283, 284, 285, 288, 290, 291, 292, 293, 295, 297, 298, 299, 300, 305, 306, 307, 308, 309, 312, 316, 317, 318, 320, 321, 322, 323, 325, 326, 327, 328, 329, 333, 337, 339, 340, 342, 343, 344, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 369, 370, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 451, 453, 455, 458, 459, 460, 461, 462, 467, 474, 476, 477, 520, 530, 619, 621, 622, 625, 627, 628, 629, 630, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 648, 649, 650, 651, 652, 654, 655], "code": [0, 3, 4, 6, 8, 9, 16, 17, 42, 43, 51, 69, 75, 77, 103, 141, 144, 147, 151, 156, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 209, 212, 263, 285, 288, 298, 316, 317, 321, 322, 354, 378, 382, 384, 627, 630, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655], "aim": [0, 3, 4, 8, 53, 76, 77, 263, 288, 290, 324, 612, 626, 628, 629, 633, 634, 654], "support": [0, 1, 2, 4, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 32, 45, 64, 66, 68, 73, 80, 87, 102, 105, 106, 107, 108, 115, 117, 131, 133, 137, 138, 140, 141, 142, 143, 144, 150, 152, 157, 166, 168, 171, 173, 177, 190, 198, 200, 206, 209, 217, 232, 235, 247, 253, 259, 278, 279, 282, 285, 286, 293, 312, 337, 339, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 365, 374, 375, 378, 381, 384, 402, 410, 426, 427, 429, 430, 433, 434, 435, 436, 458, 625, 628, 630, 635, 636, 638, 639, 645, 646, 649, 650, 652, 654], "research": [0, 8, 10, 163, 164, 298, 646, 654], "most": [0, 1, 3, 4, 8, 9, 16, 17, 58, 60, 121, 122, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 245, 291, 633, 635, 637, 638, 639, 640, 641, 642, 643, 650, 654, 655], "written": [0, 1, 3, 4, 30, 31, 47, 64, 65, 66, 68, 70, 71, 72, 73, 78, 81, 82, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 113, 115, 122, 124, 129, 130, 141, 144, 145, 146, 147, 150, 151, 152, 153, 159, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 197, 198, 199, 200, 201, 202, 205, 226, 227, 228, 235, 247, 250, 255, 256, 271, 276, 279, 280, 285, 291, 295, 296, 301, 340, 353, 355, 356, 358, 359, 369, 378, 381, 382, 386, 392, 394, 409, 412, 414, 426, 427, 430, 432, 451, 452, 453, 474, 627, 628, 629, 630, 633, 636, 637, 639, 647, 650, 654], "highli": [0, 3, 360, 394, 412, 638, 654, 655], "wai": [0, 1, 3, 4, 5, 42, 43, 51, 77, 97, 101, 124, 135, 155, 193, 194, 197, 214, 235, 239, 263, 266, 283, 284, 290, 291, 318, 321, 323, 412, 433, 434, 435, 436, 477, 627, 628, 633, 634, 635, 637, 638, 640, 641, 647, 648, 649, 650, 651, 652, 654, 655], "easili": [0, 1, 2, 3, 4, 8, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 627, 629, 633, 634, 635, 638, 639, 640, 643, 648, 649, 654, 655], "swap": [0, 1, 4, 150, 291, 635, 637, 651, 654], "compon": [0, 1, 2, 3, 4, 65, 69, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 115, 116, 117, 118, 124, 131, 133, 137, 193, 312, 342, 352, 374, 375, 380, 392, 393, 394, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 418, 426, 429, 431, 467, 472, 627, 630, 633, 634, 635, 636, 637, 639, 640, 643, 645, 647, 648, 649, 650, 651, 654], "transform": [0, 1, 5, 9, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 33, 45, 53, 58, 65, 67, 70, 71, 72, 74, 81, 82, 83, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 120, 124, 133, 138, 141, 144, 147, 148, 151, 159, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 301, 304, 305, 309, 312, 313, 318, 323, 338, 341, 342, 348, 350, 353, 355, 356, 357, 358, 359, 360, 365, 373, 376, 377, 385, 388, 389, 391, 398, 411, 427, 428, 429, 430, 451, 453, 468, 490, 495, 496, 497, 501, 623, 625, 632, 634, 636, 637, 639, 641, 642, 643, 644, 645, 651, 653], "them": [0, 3, 4, 8, 10, 12, 16, 17, 18, 19, 20, 22, 23, 24, 26, 28, 38, 42, 43, 45, 50, 51, 65, 67, 68, 69, 70, 71, 72, 75, 77, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 135, 140, 141, 144, 147, 148, 151, 155, 159, 162, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 200, 201, 202, 217, 243, 246, 253, 256, 278, 282, 285, 286, 292, 293, 297, 298, 300, 301, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 331, 334, 335, 338, 340, 343, 344, 346, 350, 351, 373, 375, 377, 380, 385, 388, 393, 395, 401, 408, 409, 413, 415, 417, 418, 434, 435, 436, 453, 627, 633, 634, 636, 637, 638, 639, 641, 642, 646, 647, 648, 649, 650, 651, 652, 654, 655], "write": [0, 3, 4, 9, 16, 17, 19, 22, 30, 34, 42, 43, 51, 53, 58, 64, 65, 66, 67, 70, 71, 72, 73, 77, 81, 82, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 122, 124, 129, 133, 140, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 227, 229, 231, 232, 234, 235, 236, 238, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 261, 262, 264, 265, 266, 268, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 287, 288, 289, 291, 292, 295, 353, 355, 356, 358, 359, 369, 381, 382, 384, 386, 395, 396, 397, 399, 400, 401, 408, 413, 415, 417, 418, 427, 428, 430, 432, 437, 453, 627, 628, 630, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655], "new": [0, 1, 2, 3, 4, 5, 9, 16, 17, 19, 22, 28, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 121, 122, 124, 128, 141, 144, 147, 151, 159, 166, 171, 172, 175, 178, 179, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 232, 271, 275, 284, 285, 292, 293, 295, 310, 316, 318, 323, 340, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 381, 382, 387, 392, 393, 394, 397, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 418, 426, 427, 428, 429, 430, 431, 460, 627, 629, 633, 635, 638, 640, 646, 648, 649, 650, 654, 655], "ones": [0, 3, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 72, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 107, 108, 109, 129, 130, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 176, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 236, 239, 240, 243, 244, 246, 259, 263, 268, 275, 278, 284, 285, 288, 290, 293, 295, 300, 320, 327, 328, 339, 351, 353, 354, 355, 356, 358, 359, 360, 365, 381, 392, 393, 394, 395, 396, 408, 409, 412, 413, 415, 417, 418, 426, 427, 428, 429, 430, 439, 627, 633, 635, 637, 646, 648, 649, 650, 652, 654, 655], "littl": [0, 1, 4, 83, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 285, 300, 392, 394, 409, 412, 414, 635, 636, 637, 641, 652, 654, 655], "effort": [0, 4, 352, 650, 652, 654], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 127, 128, 129, 130, 131, 133, 135, 137, 138, 140, 141, 142, 143, 144, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 162, 163, 164, 165, 168, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 257, 259, 262, 263, 264, 265, 266, 268, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 343, 344, 346, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 387, 388, 389, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 451, 452, 460, 461, 462, 464, 465, 466, 468, 472, 474, 475, 476, 477, 483, 532, 612, 613, 619, 623, 626, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "repo": [0, 7, 99, 235, 279, 288, 626, 649, 654], "attempt": [0, 16, 17, 19, 22, 23, 24, 26, 28, 38, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 129, 130, 141, 144, 145, 146, 147, 150, 151, 152, 153, 159, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 295, 300, 353, 354, 355, 356, 358, 359, 360, 365, 382, 397, 400, 408, 426, 427, 428, 429, 430, 431, 629, 640, 654], "align": [0, 316, 321, 654], "exist": [0, 1, 3, 4, 5, 16, 17, 19, 22, 23, 28, 30, 31, 38, 45, 50, 53, 58, 64, 66, 68, 69, 73, 75, 80, 86, 87, 107, 108, 109, 115, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 236, 244, 283, 284, 285, 295, 296, 310, 353, 354, 355, 356, 358, 359, 360, 365, 382, 395, 415, 426, 427, 428, 429, 430, 613, 623, 630, 648, 649, 654, 655], "ecosystem": [0, 630, 637, 641, 654], "ha": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 103, 107, 108, 109, 115, 117, 121, 122, 124, 127, 129, 135, 137, 141, 144, 147, 148, 151, 155, 159, 163, 164, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 235, 257, 276, 277, 278, 279, 280, 282, 283, 284, 285, 295, 297, 316, 318, 321, 323, 329, 331, 348, 353, 354, 355, 356, 358, 359, 360, 365, 375, 377, 382, 392, 395, 409, 410, 412, 414, 426, 427, 428, 429, 430, 433, 453, 627, 629, 633, 634, 635, 636, 637, 638, 641, 642, 645, 647, 648, 649, 650, 651, 652, 654, 655], "dataset": [0, 49, 53, 64, 65, 66, 67, 72, 73, 74, 79, 81, 82, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 114, 122, 124, 127, 129, 130, 168, 192, 193, 194, 197, 198, 199, 200, 203, 207, 213, 292, 353, 355, 356, 358, 359, 427, 430, 453, 625, 627, 633, 634, 638, 651, 652, 654, 655], "pillar": [0, 654], "environ": [0, 3, 6, 9, 11, 14, 15, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 69, 70, 75, 76, 77, 85, 87, 88, 89, 90, 91, 92, 109, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 222, 228, 229, 231, 232, 234, 235, 236, 240, 241, 243, 244, 245, 246, 251, 257, 258, 259, 263, 264, 265, 268, 271, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 291, 292, 293, 295, 299, 301, 318, 323, 325, 326, 360, 365, 377, 399, 403, 428, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 461, 462, 464, 466, 476, 477, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 612, 613, 614, 615, 619, 620, 621, 622, 623, 625, 626, 628, 629, 630, 632, 637, 639, 640, 641, 642, 644, 651, 652, 653], "model": [0, 4, 9, 10, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 32, 33, 35, 38, 44, 45, 50, 58, 64, 66, 68, 69, 73, 74, 75, 80, 86, 87, 107, 108, 109, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 243, 263, 278, 288, 290, 294, 295, 302, 303, 304, 309, 311, 324, 325, 326, 330, 331, 338, 341, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 370, 371, 372, 376, 381, 387, 389, 392, 393, 394, 395, 397, 398, 399, 400, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 426, 427, 428, 429, 430, 431, 472, 525, 527, 529, 614, 615, 616, 625, 626, 629, 630, 632, 635, 638, 641, 644, 646, 648, 649, 650, 652, 653, 655], "data": [0, 4, 9, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 157, 158, 159, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 187, 192, 193, 194, 197, 198, 199, 200, 201, 202, 204, 207, 208, 209, 211, 213, 214, 215, 217, 220, 227, 229, 232, 234, 235, 240, 243, 244, 246, 248, 250, 253, 255, 259, 265, 268, 275, 276, 282, 284, 285, 286, 291, 293, 295, 299, 300, 312, 315, 318, 323, 326, 329, 330, 340, 342, 351, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 368, 369, 374, 377, 378, 379, 381, 382, 384, 385, 386, 392, 393, 394, 395, 396, 397, 399, 400, 401, 408, 409, 412, 413, 414, 415, 417, 418, 426, 427, 429, 430, 431, 433, 434, 435, 436, 437, 451, 453, 460, 462, 465, 468, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 614, 619, 621, 622, 623, 625, 628, 629, 630, 632, 636, 637, 638, 639, 640, 644, 645, 646, 650, 651, 652, 653, 655], "util": [0, 4, 16, 17, 19, 22, 23, 24, 26, 28, 29, 34, 38, 45, 50, 58, 68, 69, 72, 74, 75, 80, 87, 107, 108, 109, 129, 130, 141, 142, 143, 144, 147, 151, 157, 158, 159, 164, 171, 172, 173, 174, 175, 180, 181, 182, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 263, 268, 278, 290, 295, 298, 301, 302, 303, 309, 316, 318, 321, 323, 353, 354, 355, 356, 358, 359, 360, 365, 388, 389, 390, 391, 410, 426, 427, 428, 429, 430, 619, 625, 631, 633, 635, 637, 639, 640, 641, 649, 650, 652, 654, 655], "e": [0, 1, 2, 3, 4, 8, 9, 11, 16, 17, 19, 22, 23, 24, 26, 28, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 107, 108, 109, 110, 115, 117, 121, 122, 135, 137, 141, 144, 147, 148, 151, 152, 159, 171, 172, 175, 180, 181, 182, 185, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 234, 236, 239, 240, 241, 242, 250, 253, 256, 257, 259, 263, 271, 278, 280, 283, 284, 285, 288, 290, 295, 296, 316, 318, 319, 321, 323, 326, 330, 342, 348, 349, 353, 354, 355, 356, 358, 359, 360, 363, 364, 365, 368, 373, 375, 377, 378, 380, 381, 382, 392, 394, 395, 396, 400, 401, 408, 409, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 451, 462, 612, 622, 627, 628, 629, 634, 635, 637, 639, 640, 642, 646, 648, 649, 651, 652, 654, 655], "g": [0, 1, 2, 3, 4, 8, 9, 11, 16, 17, 19, 22, 23, 24, 26, 28, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 107, 108, 109, 135, 141, 144, 147, 148, 151, 152, 159, 171, 172, 175, 180, 181, 182, 185, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 234, 236, 239, 240, 250, 253, 256, 259, 263, 271, 278, 280, 283, 284, 285, 288, 290, 295, 296, 316, 318, 319, 321, 322, 323, 326, 330, 348, 349, 353, 354, 355, 356, 358, 359, 360, 363, 364, 365, 373, 378, 381, 382, 395, 412, 415, 426, 427, 428, 429, 430, 432, 442, 443, 444, 445, 447, 448, 449, 450, 451, 622, 627, 628, 629, 634, 635, 637, 639, 642, 648, 649, 650, 651, 652, 654, 655], "collector": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 58, 65, 70, 71, 72, 74, 78, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 176, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 235, 268, 276, 284, 295, 300, 318, 323, 340, 354, 357, 360, 365, 394, 409, 412, 426, 428, 468, 472, 475, 477, 532, 614, 615, 619, 621, 622, 625, 629, 630, 637, 652, 655], "contain": [0, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 122, 124, 125, 127, 129, 130, 131, 136, 139, 140, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 228, 235, 239, 243, 246, 253, 263, 275, 278, 283, 284, 285, 288, 290, 291, 292, 293, 295, 299, 302, 303, 316, 317, 320, 321, 322, 324, 326, 329, 330, 353, 354, 355, 356, 358, 359, 360, 365, 369, 374, 375, 378, 380, 381, 382, 386, 389, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 457, 462, 612, 619, 620, 621, 622, 623, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 648, 649, 650, 651, 652, 654, 655], "etc": [0, 2, 3, 4, 8, 9, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 75, 76, 77, 80, 85, 88, 89, 90, 91, 92, 103, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 255, 275, 285, 295, 296, 324, 330, 348, 354, 360, 365, 426, 428, 429, 627, 629, 634, 635, 641, 652, 654, 655], "have": [0, 1, 3, 4, 6, 7, 8, 9, 10, 16, 17, 22, 23, 25, 26, 28, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 128, 131, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 223, 227, 228, 231, 235, 240, 243, 246, 247, 255, 258, 259, 275, 276, 278, 282, 283, 284, 285, 292, 293, 295, 297, 300, 302, 303, 324, 327, 329, 330, 331, 340, 351, 353, 354, 355, 356, 358, 359, 360, 365, 377, 383, 384, 392, 394, 409, 412, 414, 417, 422, 423, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 462, 472, 474, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 647, 648, 649, 650, 651, 652, 654, 655], "few": [0, 3, 9, 87, 107, 108, 130, 151, 198, 202, 353, 355, 356, 358, 359, 427, 430, 453, 462, 627, 635, 636, 639, 648, 649, 652, 654, 655], "depend": [0, 1, 3, 4, 5, 8, 9, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 39, 64, 66, 88, 141, 144, 147, 150, 151, 152, 153, 159, 171, 172, 175, 177, 180, 181, 182, 185, 186, 192, 193, 194, 197, 199, 200, 201, 202, 243, 246, 360, 365, 382, 386, 412, 455, 627, 628, 633, 635, 636, 645, 648, 649, 650, 654, 655], "possibl": [0, 3, 4, 5, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 100, 103, 105, 107, 108, 109, 116, 122, 129, 135, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 239, 263, 278, 283, 284, 285, 288, 290, 295, 302, 303, 316, 317, 321, 322, 352, 353, 354, 355, 356, 358, 359, 360, 365, 381, 412, 426, 427, 428, 429, 430, 451, 466, 472, 627, 628, 633, 635, 636, 637, 639, 641, 642, 648, 649, 650, 652, 654, 655], "standard": [0, 3, 4, 60, 144, 259, 270, 292, 293, 297, 298, 299, 313, 326, 332, 333, 338, 352, 354, 360, 365, 373, 394, 409, 412, 417, 418, 433, 434, 435, 436, 465, 633, 634, 638, 639, 649, 652, 654], "numpi": [0, 4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 141, 144, 147, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 253, 281, 286, 296, 353, 355, 356, 358, 359, 427, 430, 472, 637, 650, 652, 654, 655], "common": [0, 3, 4, 5, 85, 141, 151, 157, 229, 247, 354, 370, 371, 372, 376, 392, 393, 394, 395, 400, 401, 408, 409, 412, 413, 414, 415, 417, 418, 426, 476, 619, 626, 627, 628, 629, 630, 633, 635, 639, 642, 647, 648, 649, 650, 651, 654, 655], "openai": [0, 8, 35, 150, 152, 159, 177, 201, 635, 650, 654, 655], "gym": [0, 1, 2, 4, 5, 9, 16, 17, 19, 22, 28, 29, 30, 31, 70, 109, 141, 144, 147, 148, 150, 151, 152, 153, 155, 156, 159, 163, 164, 166, 167, 171, 172, 175, 177, 180, 181, 182, 185, 186, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 223, 225, 231, 235, 238, 247, 254, 255, 259, 261, 266, 268, 271, 278, 284, 291, 292, 295, 296, 428, 509, 619, 626, 633, 634, 635, 636, 638, 642, 643, 650, 651, 652], "onli": [0, 1, 2, 3, 4, 5, 8, 16, 17, 19, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 72, 75, 76, 77, 80, 81, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 115, 117, 121, 122, 124, 129, 130, 137, 141, 144, 145, 146, 147, 150, 151, 152, 153, 155, 158, 159, 166, 167, 171, 172, 173, 174, 175, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 231, 235, 236, 238, 239, 240, 241, 243, 245, 246, 250, 253, 257, 259, 263, 264, 268, 275, 276, 277, 278, 279, 283, 284, 285, 288, 290, 292, 293, 295, 296, 300, 320, 321, 323, 327, 329, 330, 354, 357, 360, 365, 369, 373, 374, 378, 379, 381, 382, 383, 384, 392, 394, 395, 396, 400, 401, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 426, 428, 429, 433, 434, 435, 436, 437, 453, 460, 472, 474, 613, 627, 629, 630, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 645, 647, 648, 649, 650, 652, 654, 655], "option": [0, 1, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 137, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 245, 246, 247, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 263, 264, 266, 267, 270, 271, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 340, 342, 343, 344, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 369, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 385, 386, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 442, 443, 444, 445, 447, 448, 449, 450, 451, 453, 455, 458, 460, 462, 464, 465, 466, 467, 468, 469, 472, 476, 477, 525, 527, 528, 529, 532, 545, 546, 613, 619, 621, 622, 623, 625, 627, 628, 630, 636, 638, 641, 648, 649, 652, 654], "On": [0, 4, 8, 23, 24, 26, 28, 42, 100, 317, 322, 627, 628, 630, 634, 648, 649], "end": [0, 3, 4, 16, 17, 22, 30, 38, 45, 50, 53, 58, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 113, 122, 124, 128, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 247, 253, 261, 276, 277, 283, 285, 295, 302, 303, 316, 317, 321, 322, 325, 354, 360, 365, 377, 395, 415, 426, 428, 429, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 493, 494, 552, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "come": [0, 1, 3, 4, 9, 16, 17, 19, 22, 23, 24, 26, 28, 30, 53, 58, 135, 141, 144, 147, 151, 158, 159, 162, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 207, 243, 246, 368, 369, 370, 371, 372, 378, 386, 392, 394, 409, 412, 414, 453, 633, 634, 635, 636, 640, 641, 642, 643, 648, 649, 652, 654, 655], "set": [0, 1, 2, 3, 4, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 115, 116, 117, 118, 124, 128, 131, 137, 141, 144, 147, 149, 151, 152, 158, 159, 163, 164, 165, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 224, 225, 227, 229, 231, 232, 235, 236, 239, 243, 246, 253, 254, 255, 256, 263, 268, 276, 277, 278, 279, 283, 284, 285, 288, 290, 292, 293, 295, 296, 316, 318, 320, 321, 323, 325, 327, 329, 330, 337, 339, 340, 348, 352, 353, 354, 355, 356, 358, 359, 360, 365, 368, 373, 381, 382, 394, 395, 401, 406, 409, 410, 412, 415, 426, 427, 428, 429, 430, 433, 437, 453, 461, 462, 466, 468, 477, 615, 623, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 639, 640, 641, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "re": [0, 3, 4, 9, 14, 23, 24, 26, 38, 45, 50, 53, 58, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 128, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 250, 295, 323, 327, 328, 331, 354, 360, 365, 378, 382, 426, 428, 429, 460, 627, 630, 633, 635, 636, 638, 640, 645, 647, 648, 650, 654, 655], "usabl": [0, 630, 636, 654], "function": [0, 2, 3, 4, 9, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 115, 116, 117, 118, 124, 131, 133, 137, 141, 144, 147, 148, 151, 152, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 225, 226, 227, 231, 232, 243, 246, 253, 255, 282, 283, 285, 286, 292, 293, 295, 296, 297, 298, 301, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 327, 328, 329, 330, 331, 334, 335, 336, 338, 340, 343, 344, 346, 349, 351, 353, 354, 355, 356, 358, 359, 360, 365, 370, 371, 372, 373, 375, 377, 378, 380, 381, 382, 384, 385, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 421, 422, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 472, 476, 477, 531, 619, 625, 628, 630, 633, 636, 637, 638, 639, 642, 645, 647, 650, 652, 655], "cost": [0, 3, 41, 103, 116, 118, 392, 394, 409, 412, 414, 629, 633, 634, 637, 648, 649, 650, 652], "return": [0, 3, 4, 8, 9, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 116, 122, 124, 125, 127, 129, 130, 133, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 157, 158, 159, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 177, 180, 181, 182, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 299, 300, 303, 304, 305, 306, 307, 308, 310, 312, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 336, 338, 341, 343, 344, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 377, 378, 380, 381, 382, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 417, 418, 422, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 453, 457, 461, 472, 474, 612, 614, 619, 620, 621, 622, 623, 625, 627, 628, 630, 633, 634, 635, 637, 639, 640, 642, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "process": [0, 1, 2, 4, 5, 6, 9, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 38, 45, 50, 58, 64, 65, 66, 68, 69, 72, 73, 75, 80, 81, 82, 83, 86, 87, 97, 100, 104, 105, 107, 108, 109, 110, 117, 121, 122, 125, 129, 137, 141, 144, 147, 148, 151, 155, 159, 162, 166, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 234, 235, 243, 246, 253, 278, 281, 283, 284, 292, 293, 295, 318, 323, 329, 330, 340, 352, 353, 354, 355, 356, 358, 359, 360, 363, 364, 365, 375, 380, 394, 412, 426, 427, 428, 429, 430, 625, 627, 630, 633, 634, 636, 637, 638, 645, 646, 648, 649, 650, 651, 652, 654, 655], "good": [0, 1, 3, 5, 10, 121, 122, 171, 211, 627, 633, 635, 636, 637, 639, 649, 654, 655], "runtim": [0, 3, 4, 34, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429, 650], "perform": [0, 1, 2, 3, 4, 5, 9, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 32, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 74, 75, 76, 77, 80, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 141, 144, 145, 146, 147, 150, 151, 152, 153, 158, 159, 171, 172, 175, 177, 180, 181, 182, 185, 186, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 243, 246, 253, 258, 280, 283, 285, 295, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 325, 326, 331, 334, 335, 338, 339, 340, 343, 344, 346, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 365, 373, 375, 377, 380, 385, 388, 394, 395, 404, 412, 415, 426, 427, 428, 429, 430, 466, 472, 474, 627, 629, 633, 634, 635, 636, 637, 638, 641, 643, 646, 647, 648, 649, 650, 655], "To": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 21, 23, 24, 26, 38, 45, 50, 58, 65, 68, 69, 70, 72, 74, 75, 80, 81, 82, 97, 99, 100, 101, 102, 103, 104, 105, 109, 113, 122, 124, 129, 130, 133, 140, 141, 142, 143, 144, 147, 150, 151, 152, 157, 158, 159, 162, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 185, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 241, 276, 278, 292, 295, 301, 318, 323, 340, 354, 360, 365, 370, 371, 372, 382, 395, 401, 406, 410, 417, 426, 428, 429, 453, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 627, 628, 629, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 648, 649, 650, 651, 652, 654, 655], "read": [0, 3, 4, 8, 34, 42, 43, 47, 51, 65, 67, 70, 71, 72, 74, 77, 78, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 115, 116, 117, 118, 121, 124, 131, 133, 137, 141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 227, 228, 229, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 254, 255, 261, 262, 264, 265, 266, 268, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 287, 288, 289, 291, 292, 295, 301, 336, 353, 355, 356, 358, 359, 369, 370, 371, 372, 374, 377, 378, 381, 382, 384, 386, 387, 392, 393, 394, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 418, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 453, 466, 472, 627, 628, 633, 634, 635, 637, 638, 639, 647, 648, 649, 650, 651, 654, 655], "philosophi": [0, 10], "capabl": [0, 1, 4, 8, 10, 12, 18, 28, 34, 192, 206, 476, 627, 630, 633, 638, 641, 645, 647, 651, 655], "beyond": [0, 2, 53, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 637], "api": [0, 1, 3, 4, 6, 34, 42, 43, 45, 51, 53, 68, 77, 80, 85, 87, 107, 108, 144, 147, 173, 174, 177, 198, 202, 204, 263, 290, 292, 293, 300, 352, 353, 354, 355, 356, 358, 359, 360, 365, 426, 427, 429, 430, 476, 477, 628, 629, 630, 637, 638, 639, 640, 641, 642, 646, 648, 649, 650, 652, 654, 655], "check": [0, 3, 4, 5, 6, 7, 8, 10, 16, 17, 19, 22, 23, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 72, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 93, 95, 107, 108, 109, 112, 113, 120, 129, 141, 144, 147, 148, 150, 151, 152, 159, 165, 171, 172, 175, 180, 181, 182, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 236, 241, 249, 255, 264, 278, 281, 285, 295, 296, 310, 353, 354, 355, 356, 358, 359, 360, 365, 369, 374, 375, 378, 379, 380, 381, 382, 395, 406, 412, 417, 426, 427, 428, 429, 430, 453, 624, 627, 628, 629, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 654, 655], "paper": [0, 100, 103, 142, 143, 145, 146, 153, 157, 158, 163, 164, 166, 167, 177, 185, 186, 263, 288, 290, 303, 316, 341, 350, 399, 407, 417, 633, 635, 648, 649], "releas": [0, 5, 8, 11, 32, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 283, 285, 295, 354, 360, 365, 395, 415, 426, 428, 429], "sync": [0, 1, 2, 16, 17, 22, 23, 24, 25, 26, 27, 28, 31, 141, 211, 352, 475, 619, 627, 630, 633], "so": [0, 1, 3, 4, 5, 7, 8, 11, 12, 38, 42, 45, 50, 53, 58, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 278, 283, 292, 295, 300, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 383, 384, 426, 427, 428, 429, 430, 433, 453, 627, 633, 635, 636, 640, 643, 648, 649, 650, 655], "make": [0, 1, 2, 3, 4, 5, 8, 12, 38, 42, 45, 50, 53, 58, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 80, 85, 87, 97, 99, 102, 104, 105, 107, 108, 109, 124, 127, 131, 133, 140, 141, 144, 147, 151, 152, 155, 156, 158, 159, 161, 167, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 228, 241, 248, 256, 259, 263, 264, 268, 272, 276, 280, 284, 288, 295, 298, 301, 316, 317, 318, 321, 322, 323, 329, 330, 332, 352, 353, 354, 355, 356, 358, 359, 360, 365, 374, 382, 392, 394, 409, 412, 414, 426, 427, 428, 429, 430, 433, 434, 435, 436, 451, 468, 615, 623, 627, 628, 629, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "sure": [0, 1, 4, 5, 8, 45, 102, 109, 131, 144, 151, 155, 195, 196, 197, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 241, 268, 284, 295, 374, 428, 623, 628, 633, 635, 636, 637, 640, 648, 649, 650, 652, 654, 655], "alwai": [0, 3, 4, 16, 17, 26, 30, 38, 39, 45, 50, 58, 68, 69, 75, 80, 85, 88, 97, 106, 109, 112, 113, 120, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 255, 258, 280, 292, 293, 295, 320, 354, 360, 365, 402, 410, 426, 428, 429, 525, 627, 628, 629, 634, 635, 636, 637, 648, 649, 650, 652], "enjoi": [0, 3, 4, 103, 641], "latest": [0, 1, 3, 4, 11, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 30, 166, 169, 170, 173, 174, 468, 635, 648, 649, 650, 654], "featur": [0, 3, 4, 5, 16, 17, 19, 22, 23, 24, 26, 28, 32, 34, 38, 45, 60, 62, 68, 80, 85, 86, 87, 101, 107, 108, 122, 129, 130, 141, 144, 147, 151, 159, 162, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 187, 192, 193, 194, 197, 198, 200, 201, 202, 232, 235, 250, 253, 255, 261, 278, 279, 287, 292, 298, 302, 303, 313, 314, 316, 317, 318, 321, 322, 323, 324, 329, 332, 333, 353, 354, 355, 356, 358, 359, 360, 365, 382, 389, 392, 394, 409, 412, 414, 426, 427, 429, 430, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 476, 477, 623, 627, 628, 629, 633, 634, 635, 636, 637, 639, 640, 641, 643, 646, 650, 652, 654, 655], "recent": [0, 8, 209, 291, 293, 296, 655], "version": [0, 1, 2, 3, 4, 7, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 30, 31, 32, 33, 37, 38, 40, 43, 45, 46, 50, 51, 52, 55, 57, 58, 61, 63, 64, 66, 68, 69, 74, 75, 80, 87, 89, 90, 91, 92, 100, 105, 107, 108, 109, 129, 141, 144, 147, 150, 151, 152, 153, 159, 166, 167, 171, 172, 173, 175, 177, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 235, 282, 291, 292, 293, 295, 296, 298, 318, 323, 331, 337, 353, 354, 355, 356, 357, 358, 359, 360, 364, 365, 372, 392, 394, 409, 410, 412, 414, 415, 426, 427, 428, 429, 430, 433, 436, 476, 477, 625, 626, 628, 629, 630, 633, 635, 636, 637, 638, 640, 643, 648, 649, 650, 651, 655], "although": [0, 1, 4, 9, 28, 38, 45, 50, 68, 69, 75, 80, 88, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 297, 298, 301, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 331, 334, 335, 338, 340, 343, 344, 346, 351, 373, 375, 377, 380, 385, 388, 629, 630, 633, 634, 641, 652], "core": [0, 2, 3, 4, 9, 30, 31, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 121, 122, 124, 192, 630, 636, 639, 654], "guarante": [0, 3, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 107, 108, 109, 110, 115, 116, 117, 118, 131, 133, 137, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 283, 292, 293, 295, 353, 354, 355, 356, 358, 359, 360, 365, 382, 426, 427, 428, 429, 430, 641], "backward": [0, 2, 9, 32, 38, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 285, 292, 293, 295, 316, 317, 321, 322, 339, 353, 354, 355, 356, 358, 359, 360, 365, 382, 392, 393, 395, 396, 400, 401, 408, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 633, 635, 636, 637, 640, 641, 643, 648, 649, 650], "compat": [0, 2, 3, 4, 8, 16, 17, 19, 32, 34, 38, 45, 50, 58, 68, 69, 75, 80, 87, 99, 107, 108, 109, 116, 118, 124, 127, 129, 130, 131, 135, 141, 144, 147, 151, 153, 159, 168, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 276, 285, 288, 292, 293, 295, 296, 316, 317, 318, 321, 322, 323, 352, 353, 354, 355, 356, 358, 359, 360, 365, 379, 392, 393, 395, 396, 397, 399, 400, 401, 408, 410, 412, 413, 414, 415, 417, 418, 422, 426, 427, 428, 429, 430, 433, 627, 633, 636, 645, 652], "2": [0, 1, 2, 3, 4, 9, 10, 11, 16, 17, 19, 28, 29, 30, 33, 34, 35, 36, 37, 38, 41, 42, 43, 45, 46, 47, 50, 51, 53, 54, 55, 56, 57, 58, 62, 63, 65, 66, 67, 68, 69, 70, 72, 75, 77, 78, 80, 81, 82, 83, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 115, 117, 121, 122, 124, 129, 130, 135, 137, 141, 142, 143, 144, 147, 148, 151, 157, 158, 159, 162, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 227, 231, 232, 234, 236, 239, 240, 241, 243, 244, 245, 246, 255, 256, 259, 261, 263, 265, 268, 271, 275, 276, 277, 278, 283, 284, 285, 288, 290, 292, 293, 295, 296, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 338, 339, 340, 348, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 365, 373, 374, 375, 377, 381, 385, 386, 392, 393, 394, 395, 396, 400, 401, 408, 409, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 462, 523, 524, 527, 528, 529, 609, 627, 628, 629, 632, 633, 634, 635, 636, 637, 639, 640, 647, 648, 649, 650, 652, 653, 654, 655], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 16, 17, 18, 19, 22, 28, 29, 30, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 115, 116, 117, 121, 122, 124, 129, 130, 137, 141, 142, 143, 144, 147, 150, 151, 153, 154, 157, 158, 159, 165, 166, 167, 169, 170, 171, 172, 175, 177, 178, 179, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 251, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 268, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 332, 333, 336, 339, 340, 343, 344, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 369, 373, 375, 380, 381, 382, 384, 385, 388, 389, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 421, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 462, 469, 478, 480, 481, 482, 485, 505, 509, 523, 527, 531, 547, 563, 565, 573, 575, 579, 580, 582, 591, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 619, 623, 627, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655], "nightli": [0, 7], "via": [0, 1, 3, 4, 5, 8, 9, 21, 26, 27, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 65, 68, 72, 76, 77, 80, 81, 82, 85, 88, 89, 90, 91, 92, 99, 101, 102, 103, 104, 105, 108, 116, 151, 171, 180, 200, 202, 256, 263, 266, 290, 354, 360, 365, 395, 398, 410, 426, 429, 476, 629, 630, 633, 634, 635, 636, 639, 641, 652, 654, 655], "tensordict": [0, 1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 127, 129, 130, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 159, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 226, 227, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 257, 259, 261, 262, 263, 264, 265, 266, 268, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 299, 300, 301, 311, 312, 315, 318, 323, 325, 326, 329, 330, 340, 341, 342, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 365, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 422, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 451, 452, 462, 466, 467, 468, 470, 472, 497, 528, 625, 627, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 655], "git": [0, 7, 8, 11], "clone": [0, 3, 5, 9, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 68, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 115, 194, 206, 212, 213, 255, 265, 283, 284, 293, 354, 360, 365, 370, 371, 372, 381, 400, 408, 417, 625, 633, 648, 650, 654], "willing": 0, "contribut": [0, 3, 327, 476, 630], "cd": [0, 8], "path": [0, 4, 7, 8, 38, 45, 50, 53, 58, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 80, 81, 82, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 124, 132, 138, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 183, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 225, 263, 290, 295, 326, 353, 354, 355, 356, 357, 358, 359, 360, 365, 412, 426, 427, 428, 429, 430, 455, 460, 472, 476, 477, 627, 630, 634, 637, 643, 648], "root": [0, 3, 4, 42, 43, 51, 53, 65, 70, 72, 77, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113, 120, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 226, 235, 257, 279, 280, 318, 319, 323, 348, 349, 433, 629, 636, 638, 648, 649, 650, 652, 655], "http": [0, 3, 6, 7, 8, 11, 16, 17, 23, 24, 26, 35, 65, 83, 97, 100, 101, 102, 103, 104, 105, 121, 122, 142, 143, 145, 146, 153, 155, 157, 158, 163, 164, 166, 167, 168, 169, 170, 173, 174, 177, 183, 184, 185, 186, 199, 235, 263, 288, 298, 304, 305, 306, 307, 308, 309, 312, 313, 314, 321, 326, 327, 328, 333, 334, 335, 339, 340, 341, 343, 344, 350, 375, 392, 393, 395, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 433, 438, 446, 624, 644, 645, 651, 654], "github": [0, 3, 6, 7, 8, 11, 23, 24, 26, 35, 97, 100, 101, 103, 142, 143, 145, 146, 150, 153, 157, 158, 163, 164, 166, 167, 169, 170, 173, 174, 177, 183, 184, 185, 186, 232, 235, 288, 298, 639, 643, 645, 648, 649, 654], "com": [0, 3, 6, 7, 8, 11, 23, 24, 26, 35, 100, 103, 104, 142, 143, 145, 146, 153, 155, 157, 158, 163, 164, 166, 167, 169, 170, 173, 174, 177, 183, 184, 185, 186, 235, 298, 645, 654], "setup": [0, 1, 8, 142, 143, 155, 157, 158, 183, 214, 215, 429, 476, 630], "py": [0, 2, 3, 4, 35, 150, 152, 225, 235, 310, 320, 341, 350, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655], "develop": [0, 4, 5, 8, 53, 155, 360, 365, 627, 630, 633, 646, 654], "A": [0, 1, 4, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 131, 135, 136, 137, 138, 139, 141, 144, 147, 149, 151, 153, 154, 156, 159, 171, 172, 175, 176, 177, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 226, 228, 230, 231, 232, 234, 235, 238, 239, 240, 241, 245, 251, 255, 257, 263, 264, 266, 273, 278, 280, 283, 284, 285, 288, 289, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 312, 315, 316, 317, 318, 321, 322, 323, 324, 326, 327, 328, 330, 331, 333, 339, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 373, 374, 375, 377, 378, 379, 382, 384, 385, 388, 389, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 422, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 439, 451, 454, 455, 458, 460, 461, 464, 471, 472, 475, 477, 482, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 619, 625, 627, 629, 632, 633, 635, 637, 639, 640, 641, 644, 645, 650, 653, 655], "seri": [0, 3, 4, 8, 9, 62, 114, 125, 135, 136, 139, 140, 180, 258, 284, 453, 628, 629, 633, 634, 635, 642, 643, 648, 649, 652, 655], "quick": [0, 97, 625, 637], "ramp": 0, "up": [0, 1, 2, 3, 4, 9, 10, 14, 15, 16, 17, 18, 19, 22, 23, 24, 26, 28, 33, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 74, 76, 77, 85, 88, 89, 90, 91, 92, 99, 105, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 231, 234, 253, 256, 279, 284, 295, 298, 352, 357, 412, 428, 477, 626, 628, 629, 633, 634, 635, 636, 639, 643, 645, 646, 648, 649, 650, 652, 654, 655], "If": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 122, 124, 125, 127, 128, 129, 130, 135, 137, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 158, 159, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 226, 227, 228, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 253, 255, 256, 257, 258, 259, 263, 264, 267, 268, 271, 272, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 292, 293, 295, 296, 301, 302, 303, 315, 316, 317, 318, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 340, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 365, 369, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 406, 408, 409, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 447, 448, 449, 450, 451, 457, 460, 461, 465, 467, 468, 472, 475, 477, 613, 619, 623, 626, 627, 629, 633, 634, 635, 636, 637, 638, 640, 642, 643, 645, 647, 648, 649, 650, 652, 654, 655], "hurri": [0, 638], "last": [0, 1, 3, 4, 5, 16, 17, 19, 22, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 67, 68, 76, 77, 85, 87, 88, 89, 90, 91, 92, 99, 128, 129, 130, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 166, 167, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 205, 214, 220, 228, 231, 234, 239, 240, 250, 257, 259, 264, 277, 279, 281, 291, 296, 297, 302, 303, 315, 316, 318, 321, 323, 324, 327, 328, 334, 345, 348, 351, 354, 360, 365, 373, 377, 382, 395, 433, 435, 436, 627, 634, 635, 636, 637, 638, 639, 645, 648, 649, 650, 651, 652, 654, 655], "item": [0, 3, 4, 9, 16, 19, 31, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 65, 70, 71, 72, 76, 77, 80, 81, 82, 85, 86, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 116, 122, 124, 128, 135, 228, 249, 284, 293, 327, 328, 396, 397, 399, 429, 462, 627, 629, 630, 633, 635, 636, 640, 641, 645, 648, 649, 650, 652], "navig": [0, 206, 645, 649], "previou": [0, 4, 5, 11, 58, 65, 70, 71, 72, 74, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 227, 250, 278, 295, 316, 321, 344, 373, 627, 635, 636, 637, 638, 639, 643, 650, 655], "whenev": [0, 1, 3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 72, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 103, 109, 121, 122, 129, 130, 145, 146, 150, 152, 153, 163, 164, 177, 185, 186, 193, 194, 195, 196, 197, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 225, 250, 254, 284, 285, 291, 295, 354, 360, 365, 410, 426, 428, 429, 433, 434, 435, 436, 451, 475, 628, 642, 645, 652], "want": [0, 1, 3, 4, 7, 8, 9, 19, 30, 45, 68, 80, 130, 193, 194, 197, 207, 235, 259, 339, 354, 360, 365, 392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 426, 429, 431, 628, 633, 634, 635, 636, 637, 638, 640, 641, 642, 648, 649, 650, 651, 652, 654, 655], "ted": [0, 47, 59, 78, 79, 97, 99, 100, 101, 102, 103, 104, 105, 112, 113, 120, 625, 632, 644, 653], "s": [0, 1, 2, 3, 4, 7, 8, 9, 12, 14, 16, 17, 18, 19, 20, 22, 23, 24, 26, 28, 30, 31, 33, 38, 42, 45, 50, 53, 58, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 80, 81, 82, 85, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 124, 129, 130, 135, 141, 142, 143, 144, 147, 151, 155, 157, 158, 159, 163, 164, 166, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 239, 240, 253, 257, 263, 276, 278, 281, 282, 283, 284, 285, 288, 290, 292, 293, 295, 297, 300, 302, 303, 310, 315, 318, 323, 328, 329, 330, 333, 339, 341, 348, 350, 352, 353, 354, 355, 356, 358, 359, 360, 365, 370, 372, 375, 377, 378, 381, 382, 385, 393, 394, 395, 400, 406, 408, 409, 410, 412, 415, 417, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 451, 474, 627, 628, 629, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655], "modul": [0, 1, 2, 3, 4, 5, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 35, 38, 44, 45, 50, 58, 68, 69, 74, 75, 80, 87, 107, 108, 109, 135, 141, 142, 143, 144, 147, 151, 159, 162, 165, 168, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 225, 234, 239, 245, 247, 253, 255, 263, 264, 277, 278, 283, 284, 285, 288, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 451, 471, 472, 474, 476, 477, 616, 619, 625, 629, 630, 632, 634, 635, 638, 640, 641, 642, 644, 646, 647, 648, 649, 650, 651, 652, 653], "optim": [0, 1, 3, 9, 33, 38, 45, 50, 58, 68, 69, 74, 75, 80, 87, 107, 108, 109, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 283, 285, 295, 299, 320, 326, 332, 333, 339, 348, 352, 353, 354, 355, 356, 358, 359, 360, 365, 393, 395, 410, 411, 412, 415, 423, 426, 427, 428, 429, 430, 466, 467, 472, 474, 476, 477, 532, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 619, 625, 627, 629, 630, 632, 635, 636, 637, 638, 639, 641, 644, 646, 648, 649, 650, 653], "collect": [0, 1, 3, 4, 5, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 53, 58, 65, 70, 71, 72, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 124, 128, 141, 144, 147, 151, 159, 171, 172, 175, 177, 180, 181, 182, 187, 192, 193, 194, 197, 198, 200, 201, 202, 207, 211, 232, 235, 250, 259, 263, 290, 340, 353, 355, 356, 358, 359, 377, 393, 396, 399, 401, 413, 415, 417, 418, 427, 430, 453, 462, 465, 468, 472, 474, 475, 477, 612, 613, 619, 625, 627, 630, 632, 633, 636, 637, 638, 639, 640, 643, 644, 648, 649, 650, 651, 652, 653, 654, 655], "storag": [0, 1, 9, 16, 17, 19, 22, 30, 38, 45, 47, 50, 53, 58, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 78, 80, 81, 82, 84, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 128, 129, 130, 132, 133, 134, 135, 137, 138, 141, 144, 147, 149, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 234, 235, 243, 246, 268, 295, 353, 354, 355, 356, 358, 359, 360, 365, 394, 409, 412, 426, 427, 428, 429, 430, 477, 484, 485, 486, 487, 490, 491, 495, 496, 497, 498, 625, 627, 630, 632, 634, 635, 636, 637, 638, 640, 643, 644, 648, 649, 651, 653], "log": [0, 4, 5, 9, 12, 74, 208, 209, 214, 215, 310, 311, 312, 320, 327, 328, 336, 348, 349, 352, 354, 357, 360, 361, 365, 374, 375, 378, 382, 392, 393, 394, 395, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 418, 426, 429, 431, 460, 464, 465, 466, 472, 474, 476, 477, 619, 625, 627, 628, 629, 630, 632, 633, 634, 635, 638, 639, 643, 644, 648, 649, 650, 653, 654], "your": [0, 1, 2, 3, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 30, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 155, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 292, 293, 295, 354, 360, 365, 382, 394, 412, 426, 428, 429, 461, 623, 625, 626, 628, 629, 632, 634, 635, 636, 638, 639, 640, 641, 642, 644, 646, 648, 649, 652, 653, 654], "own": [0, 1, 2, 16, 17, 22, 28, 29, 33, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429, 453, 625, 627, 629, 632, 634, 635, 638, 644, 648, 649, 650, 653], "train": [0, 1, 3, 4, 14, 16, 17, 19, 22, 23, 24, 26, 28, 29, 30, 32, 35, 38, 41, 45, 50, 58, 64, 66, 68, 69, 73, 74, 75, 80, 86, 87, 97, 100, 106, 107, 108, 109, 121, 122, 141, 144, 147, 151, 156, 159, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 243, 251, 263, 277, 282, 285, 288, 290, 295, 297, 298, 300, 305, 307, 315, 320, 340, 352, 353, 354, 355, 356, 358, 359, 360, 363, 364, 365, 392, 393, 394, 395, 396, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 433, 465, 472, 474, 475, 476, 477, 619, 625, 627, 628, 630, 632, 634, 638, 641, 642, 644, 651, 652, 653, 654, 655], "loop": [0, 1, 2, 9, 19, 30, 64, 66, 73, 87, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 297, 315, 339, 340, 353, 355, 356, 358, 359, 393, 395, 401, 408, 412, 413, 415, 417, 418, 427, 430, 433, 434, 435, 436, 468, 472, 627, 629, 630, 632, 633, 634, 638, 640, 641, 642, 644, 647, 652, 653, 654], "ppo": [0, 1, 2, 5, 9, 378, 382, 394, 409, 412, 426, 476, 531, 532, 625, 628, 630, 632, 633, 634, 637, 639, 640, 644, 648, 653], "pendulum": [0, 2, 4, 16, 17, 19, 22, 28, 29, 30, 31, 70, 109, 135, 141, 144, 145, 146, 147, 148, 150, 151, 152, 159, 166, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 235, 238, 239, 241, 248, 254, 255, 259, 266, 268, 272, 273, 276, 278, 279, 280, 283, 284, 285, 286, 292, 293, 295, 301, 318, 323, 428, 619, 628, 630, 632, 634, 635, 638, 639, 640, 644, 653, 654, 655], "introduct": [0, 629, 632, 638, 644, 648, 649, 653, 655], "multi": [0, 1, 8, 10, 16, 17, 22, 38, 45, 50, 58, 65, 68, 69, 72, 75, 76, 77, 80, 81, 82, 109, 112, 113, 120, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 178, 179, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 256, 285, 295, 316, 318, 321, 323, 324, 329, 330, 331, 352, 354, 360, 365, 377, 382, 426, 428, 429, 431, 433, 434, 435, 436, 480, 481, 524, 625, 627, 632, 633, 634, 635, 636, 638, 639, 644, 650, 653, 654], "agent": [0, 10, 71, 76, 77, 156, 162, 163, 164, 169, 170, 173, 174, 178, 179, 183, 184, 185, 186, 188, 206, 256, 275, 276, 277, 327, 328, 329, 330, 331, 333, 341, 350, 394, 409, 412, 431, 476, 625, 632, 638, 644, 650, 653], "env": [0, 1, 2, 3, 6, 7, 8, 9, 12, 16, 17, 19, 22, 23, 24, 26, 28, 29, 30, 31, 38, 42, 45, 47, 50, 53, 58, 68, 69, 70, 74, 75, 78, 80, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 124, 135, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 301, 318, 323, 325, 326, 353, 354, 355, 356, 358, 359, 360, 365, 377, 381, 410, 426, 428, 429, 451, 452, 453, 461, 477, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 613, 614, 615, 619, 621, 622, 623, 625, 627, 628, 629, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653], "us": [0, 1, 2, 3, 6, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 129, 130, 135, 137, 141, 142, 143, 144, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 259, 262, 263, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 309, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 338, 339, 340, 341, 342, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 369, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 417, 418, 422, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 446, 451, 453, 456, 457, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 520, 530, 613, 614, 615, 617, 619, 623, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 653, 655], "pretrain": [0, 352, 632, 644, 653], "recurr": [0, 3, 234, 316, 317, 318, 321, 323, 344, 368, 433, 632, 634, 639, 644, 652, 653], "dqn": [0, 2, 3, 97, 228, 247, 303, 312, 374, 375, 392, 393, 395, 396, 397, 399, 401, 402, 403, 407, 408, 410, 412, 413, 414, 415, 416, 417, 418, 426, 429, 431, 616, 625, 628, 630, 632, 637, 639, 640, 643, 644, 653], "polici": [0, 2, 4, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 47, 58, 70, 78, 109, 141, 142, 143, 144, 147, 151, 159, 165, 171, 172, 175, 176, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 224, 240, 245, 255, 257, 277, 280, 284, 295, 297, 300, 301, 312, 315, 318, 323, 329, 330, 333, 340, 342, 354, 357, 360, 365, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 385, 392, 393, 394, 395, 396, 400, 401, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 426, 428, 429, 466, 474, 475, 476, 477, 478, 480, 481, 482, 532, 545, 614, 615, 619, 621, 622, 625, 628, 630, 632, 634, 638, 640, 641, 644, 646, 651, 652, 653, 654, 655], "replai": [0, 9, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 58, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 121, 122, 123, 124, 125, 126, 128, 130, 131, 133, 135, 136, 140, 234, 235, 245, 264, 268, 278, 284, 295, 395, 396, 397, 399, 400, 401, 408, 413, 415, 417, 418, 428, 468, 472, 474, 477, 487, 488, 489, 490, 493, 497, 498, 617, 619, 625, 627, 629, 630, 632, 637, 644, 650, 651, 653], "buffer": [0, 5, 9, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 140, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 234, 235, 239, 244, 245, 253, 263, 264, 268, 278, 283, 284, 285, 288, 290, 295, 297, 340, 353, 354, 355, 356, 358, 359, 360, 365, 373, 381, 384, 394, 395, 396, 397, 399, 400, 401, 408, 409, 412, 413, 415, 417, 418, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 468, 472, 474, 477, 487, 488, 489, 490, 493, 497, 498, 617, 619, 625, 627, 629, 630, 632, 637, 642, 644, 650, 651, 653, 655], "export": [0, 7, 8, 632, 644, 653], "llm": [0, 3, 30, 31, 32, 33, 74, 86, 106, 107, 108, 109, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 320, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 426, 427, 428, 429, 430, 560, 625, 632, 644, 653], "build": [0, 1, 2, 3, 4, 8, 34, 38, 42, 45, 50, 58, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 85, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 141, 142, 143, 144, 147, 151, 152, 153, 157, 158, 159, 163, 164, 166, 169, 170, 171, 172, 175, 177, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 268, 292, 293, 295, 299, 326, 353, 354, 355, 356, 358, 359, 360, 365, 376, 378, 382, 426, 427, 428, 429, 430, 472, 616, 617, 618, 627, 628, 629, 630, 632, 635, 636, 637, 639, 640, 641, 642, 644, 648, 649, 650, 651, 653, 654, 655], "tool": [0, 1, 3, 4, 6, 108, 192, 206, 210, 212, 627, 628, 629, 632, 636, 638, 644, 648, 650, 652, 653, 655], "enabl": [0, 2, 3, 8, 9, 99, 115, 117, 128, 137, 192, 206, 232, 318, 323, 340, 352, 354, 357, 360, 361, 365, 377, 451, 453, 466, 474, 476, 477, 627, 630, 632, 635, 638, 644, 648, 649, 650, 652, 653], "competit": [0, 4, 163, 164, 632, 644, 649, 653], "ddpg": [0, 305, 306, 307, 308, 396, 407, 416, 477, 625, 628, 630, 632, 634, 640, 644, 649, 653], "task": [0, 2, 3, 4, 10, 74, 76, 77, 86, 100, 103, 141, 144, 145, 146, 147, 151, 154, 159, 163, 164, 171, 172, 173, 174, 175, 177, 180, 181, 182, 185, 186, 192, 193, 194, 197, 199, 200, 201, 202, 204, 263, 276, 285, 288, 290, 400, 408, 477, 625, 630, 632, 633, 634, 635, 636, 638, 639, 644, 645, 648, 649, 650, 653, 655], "specif": [0, 1, 2, 3, 6, 9, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 81, 82, 85, 88, 89, 90, 91, 92, 141, 144, 147, 151, 159, 169, 170, 171, 172, 175, 180, 181, 182, 185, 192, 193, 194, 197, 200, 201, 202, 207, 223, 257, 278, 293, 309, 318, 323, 352, 354, 360, 365, 373, 392, 394, 410, 412, 414, 426, 429, 453, 472, 476, 625, 629, 632, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 652, 653, 654], "object": [0, 3, 4, 5, 7, 8, 16, 17, 18, 19, 22, 23, 24, 26, 28, 30, 31, 35, 38, 42, 45, 50, 58, 60, 64, 66, 68, 69, 73, 75, 80, 85, 86, 87, 107, 108, 109, 110, 115, 116, 117, 118, 124, 127, 131, 133, 137, 140, 141, 144, 147, 151, 157, 159, 171, 172, 175, 176, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 243, 246, 247, 253, 256, 259, 263, 283, 284, 285, 288, 292, 293, 295, 318, 323, 326, 329, 330, 341, 348, 350, 352, 353, 354, 355, 356, 358, 359, 360, 365, 369, 370, 378, 381, 382, 383, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 477, 613, 614, 615, 618, 619, 623, 625, 628, 630, 632, 634, 635, 636, 637, 641, 643, 644, 646, 648, 649, 650, 652, 653, 655], "loss": [0, 2, 4, 9, 66, 247, 320, 327, 339, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 426, 429, 431, 432, 433, 467, 471, 472, 477, 530, 531, 616, 619, 627, 629, 630, 632, 637, 638, 640, 641, 642, 644, 650, 652, 653], "trainer": [0, 2, 392, 393, 394, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 418, 426, 429, 431, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 627, 632, 633, 644, 653], "exampl": [0, 1, 3, 5, 10, 11, 16, 17, 19, 22, 23, 28, 29, 30, 31, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 50, 51, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 86, 87, 88, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 121, 122, 124, 129, 130, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 259, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 314, 315, 316, 317, 318, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 336, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 389, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 421, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 439, 451, 453, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 475, 476, 477, 523, 524, 527, 528, 529, 619, 625, 628, 629, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 653, 654, 655], "packag": [0, 7, 8, 11, 225, 625, 626, 645, 655], "batch": [0, 2, 3, 16, 17, 18, 19, 22, 23, 24, 26, 28, 30, 31, 33, 34, 42, 58, 60, 62, 65, 67, 70, 71, 72, 74, 81, 82, 83, 85, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 115, 116, 117, 118, 122, 123, 124, 128, 129, 130, 135, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 165, 166, 168, 169, 170, 171, 172, 175, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 232, 235, 239, 241, 250, 257, 259, 261, 264, 268, 275, 278, 280, 284, 285, 287, 291, 292, 293, 295, 298, 310, 316, 317, 318, 320, 321, 322, 323, 327, 328, 329, 330, 331, 332, 336, 340, 341, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 368, 377, 381, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 462, 465, 468, 469, 470, 472, 474, 475, 476, 477, 499, 621, 622, 623, 625, 627, 628, 629, 630, 634, 635, 636, 637, 638, 641, 643, 645, 647, 648, 649, 651, 654, 655], "size": [0, 3, 16, 17, 19, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 121, 122, 123, 124, 128, 129, 130, 131, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 157, 158, 159, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 228, 232, 234, 235, 236, 239, 242, 243, 246, 247, 248, 250, 253, 256, 257, 261, 263, 265, 266, 268, 272, 274, 275, 276, 278, 280, 281, 284, 285, 286, 287, 290, 292, 295, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 336, 337, 338, 339, 340, 341, 342, 343, 344, 347, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 365, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 384, 386, 389, 392, 393, 394, 395, 396, 397, 399, 400, 401, 408, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 453, 462, 468, 474, 477, 625, 627, 628, 629, 634, 635, 636, 637, 638, 639, 641, 645, 648, 649, 650, 655], "copi": [0, 3, 4, 15, 18, 23, 24, 26, 28, 36, 37, 38, 39, 40, 41, 42, 45, 46, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 74, 75, 76, 80, 85, 86, 87, 88, 89, 90, 91, 92, 103, 107, 108, 109, 115, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 231, 235, 253, 266, 277, 283, 284, 285, 292, 293, 295, 296, 318, 323, 331, 353, 354, 355, 356, 358, 359, 360, 365, 373, 395, 410, 415, 426, 427, 428, 429, 430, 433, 451, 625, 627, 629, 633, 634, 636, 638, 648, 652, 654], "weight": [0, 5, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 38, 45, 50, 58, 65, 68, 69, 74, 75, 80, 87, 107, 108, 109, 121, 122, 124, 127, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 178, 179, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 253, 256, 263, 278, 283, 284, 285, 288, 290, 295, 316, 317, 318, 321, 322, 323, 329, 331, 333, 352, 353, 354, 355, 356, 358, 359, 360, 365, 381, 392, 393, 394, 395, 401, 404, 412, 415, 417, 426, 427, 428, 429, 430, 475, 477, 561, 618, 625, 627, 628, 630, 633, 634, 635, 647, 650, 652, 654], "synchron": [0, 4, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 64, 66, 73, 87, 107, 108, 166, 198, 352, 353, 355, 356, 358, 359, 365, 427, 430, 480, 482, 621, 622, 625, 627, 634, 635, 648], "distribut": [0, 3, 4, 5, 10, 11, 15, 18, 21, 23, 24, 25, 26, 27, 28, 29, 32, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 144, 173, 174, 211, 255, 259, 293, 297, 299, 310, 311, 312, 313, 319, 320, 326, 327, 328, 336, 337, 338, 339, 343, 344, 347, 348, 349, 352, 354, 357, 360, 363, 364, 365, 373, 374, 375, 378, 382, 383, 392, 393, 394, 395, 400, 401, 402, 408, 409, 412, 413, 414, 415, 417, 418, 426, 491, 625, 627, 629, 630, 634, 635, 637, 639, 641, 648, 649, 650, 654, 655], "interoper": [0, 16, 17, 625], "run": [0, 3, 4, 5, 6, 7, 8, 9, 11, 14, 15, 16, 17, 19, 22, 23, 24, 25, 26, 28, 30, 31, 38, 45, 50, 58, 68, 69, 70, 75, 80, 97, 100, 109, 122, 129, 130, 141, 142, 143, 144, 145, 146, 147, 150, 151, 157, 158, 159, 165, 166, 167, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 253, 258, 259, 275, 283, 284, 285, 292, 295, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 331, 334, 335, 338, 340, 343, 344, 346, 351, 352, 354, 360, 365, 373, 375, 377, 380, 382, 383, 384, 385, 388, 395, 401, 415, 426, 428, 429, 453, 460, 466, 477, 621, 622, 623, 625, 626, 627, 628, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 645, 648, 649, 650, 654], "asynchron": [0, 4, 10, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 352, 353, 354, 355, 356, 358, 359, 360, 365, 381, 392, 426, 427, 428, 429, 430, 472, 474, 478, 481, 621, 625, 633, 634, 635], "singl": [0, 2, 3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 38, 42, 43, 45, 48, 50, 51, 53, 56, 58, 60, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 77, 80, 81, 82, 83, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 116, 124, 130, 135, 141, 144, 147, 150, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 228, 235, 236, 256, 263, 268, 278, 283, 285, 290, 295, 302, 303, 316, 317, 318, 321, 322, 323, 324, 330, 352, 353, 354, 355, 356, 358, 359, 360, 361, 365, 380, 384, 393, 394, 395, 397, 399, 401, 402, 408, 409, 412, 413, 415, 417, 418, 423, 426, 427, 428, 429, 430, 433, 434, 435, 436, 442, 443, 444, 445, 447, 448, 449, 450, 451, 623, 625, 627, 628, 629, 633, 634, 635, 636, 637, 638, 639, 640, 641, 645, 647, 648, 649, 650, 651, 652, 654], "node": [0, 2, 3, 21, 23, 24, 26, 28, 29, 42, 43, 51, 53, 64, 66, 73, 77, 87, 105, 107, 108, 159, 198, 201, 283, 352, 353, 355, 356, 358, 359, 363, 364, 427, 430, 625, 641, 654], "helper": [0, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 633, 634, 636, 648, 650], "compos": [0, 2, 4, 38, 45, 50, 58, 65, 68, 69, 72, 75, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 123, 124, 125, 126, 135, 136, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 240, 241, 253, 267, 283, 284, 285, 292, 295, 354, 360, 365, 376, 377, 395, 404, 415, 426, 428, 429, 453, 544, 625, 633, 634, 635, 636, 637, 641, 645, 647, 649, 651, 652, 654, 655], "episod": [0, 2, 4, 53, 97, 98, 99, 100, 101, 102, 103, 104, 105, 122, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 226, 231, 268, 271, 277, 299, 433, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 476, 625, 634, 638, 643, 648, 649, 652], "format": [0, 1, 4, 38, 45, 47, 50, 56, 57, 58, 59, 62, 63, 68, 69, 75, 78, 79, 80, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 112, 113, 120, 127, 135, 141, 144, 147, 151, 159, 171, 172, 173, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 235, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429, 453, 625, 627, 633, 634, 637, 638, 640, 642, 645, 654, 655], "tensorspec": [0, 4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 88, 89, 90, 91, 92, 93, 94, 95, 109, 141, 144, 147, 151, 159, 165, 171, 172, 175, 176, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 227, 228, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 245, 247, 248, 250, 252, 254, 255, 256, 257, 259, 261, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 297, 315, 340, 344, 369, 373, 374, 375, 378, 379, 380, 381, 382, 383, 385, 393, 395, 397, 400, 401, 413, 415, 417, 418, 428, 431, 625, 650], "tree": [0, 1, 53, 64, 66, 73, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 235, 353, 355, 356, 358, 359, 427, 430, 625, 648, 652], "forest": [0, 53, 87, 625], "larg": [0, 4, 5, 41, 64, 66, 73, 87, 107, 108, 121, 122, 129, 130, 198, 243, 246, 288, 320, 352, 353, 355, 356, 358, 359, 360, 392, 394, 409, 412, 414, 426, 427, 430, 625, 634, 635, 646, 648, 649, 652], "languag": [0, 35, 74, 200, 625, 627, 646], "human": [0, 35, 101, 193, 625, 650], "feedback": [0, 193, 476, 625, 627, 630, 643, 654], "rlhf": [0, 193, 255, 426, 625, 627, 628], "spec": [0, 1, 3, 16, 17, 19, 28, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 108, 109, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 156, 157, 158, 159, 165, 166, 167, 169, 170, 171, 172, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 223, 226, 227, 228, 229, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 250, 252, 254, 255, 256, 257, 259, 261, 263, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 297, 312, 315, 318, 323, 340, 342, 344, 353, 355, 356, 358, 359, 369, 373, 374, 375, 378, 379, 380, 381, 382, 384, 385, 392, 393, 395, 396, 397, 399, 400, 401, 408, 412, 413, 414, 415, 417, 418, 428, 431, 625, 627, 628, 629, 633, 634, 635, 636, 637, 638, 639, 643, 645, 647, 648, 649, 654], "lock": [0, 42, 43, 51, 64, 66, 73, 77, 87, 107, 108, 141, 144, 147, 151, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 232, 241, 278, 292, 293, 353, 355, 356, 358, 359, 427, 430, 625, 627, 629, 650], "method": [0, 1, 3, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 121, 122, 124, 129, 130, 131, 132, 133, 135, 137, 141, 144, 147, 150, 151, 152, 153, 158, 159, 171, 172, 175, 176, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 247, 248, 249, 250, 251, 254, 255, 257, 259, 262, 263, 264, 265, 266, 267, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 310, 315, 318, 323, 329, 330, 331, 352, 353, 354, 355, 356, 358, 359, 360, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 389, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 406, 408, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 437, 451, 452, 465, 477, 620, 625, 627, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 648, 650, 652, 655], "partial": [0, 3, 16, 17, 19, 22, 30, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 234, 235, 277, 278, 279, 378, 472, 625, 636], "step": [0, 1, 2, 5, 9, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 45, 53, 58, 74, 87, 97, 107, 108, 109, 112, 113, 120, 122, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 157, 158, 159, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 226, 227, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 250, 251, 254, 255, 257, 259, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 291, 292, 295, 297, 298, 299, 313, 315, 316, 318, 321, 323, 325, 326, 339, 340, 353, 355, 356, 358, 359, 377, 378, 382, 392, 403, 412, 427, 428, 430, 432, 433, 434, 435, 436, 439, 440, 441, 452, 455, 462, 466, 472, 474, 477, 625, 627, 630, 634, 636, 637, 639, 640, 642, 643, 646, 647, 650, 651, 654], "reset": [0, 1, 2, 3, 9, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 38, 45, 50, 53, 58, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 130, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 230, 231, 232, 235, 247, 250, 254, 258, 263, 271, 276, 277, 278, 279, 280, 283, 284, 285, 288, 291, 292, 295, 296, 301, 316, 318, 323, 331, 332, 333, 340, 354, 360, 365, 367, 377, 410, 426, 428, 429, 452, 625, 627, 629, 633, 634, 635, 636, 638, 641, 645, 647, 648, 649, 654], "vector": [0, 1, 9, 36, 62, 142, 143, 152, 157, 158, 162, 173, 174, 177, 185, 186, 245, 291, 293, 305, 307, 316, 317, 321, 322, 324, 433, 436, 446, 447, 448, 449, 450, 625, 628, 629, 633, 634, 636, 647, 648, 649, 650, 651, 655], "async": [0, 2, 16, 17, 19, 22, 23, 24, 26, 28, 30, 70, 141, 175, 181, 291, 352, 361, 364, 365, 474, 625], "custom": [0, 1, 3, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 38, 45, 50, 58, 68, 69, 75, 80, 87, 101, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 288, 295, 329, 330, 352, 353, 354, 355, 356, 358, 359, 360, 365, 385, 391, 402, 412, 419, 426, 427, 428, 429, 430, 623, 625, 628, 630, 633, 634, 635, 636, 639, 640, 642, 645, 648, 649], "nativ": [0, 1, 8, 10, 101, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 235, 352, 365, 453, 625, 627, 636, 652], "auto": [0, 32, 117, 137, 147, 152, 230, 231, 285, 291, 340, 393, 395, 401, 411, 413, 415, 417, 418, 625, 627, 629, 648, 649], "dynam": [0, 3, 8, 16, 17, 19, 100, 103, 105, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 220, 295, 400, 408, 625, 627, 635, 638, 650], "mask": [0, 1, 5, 34, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 108, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 214, 215, 229, 264, 295, 300, 301, 312, 315, 320, 327, 328, 342, 354, 357, 360, 365, 373, 374, 375, 379, 380, 401, 415, 426, 429, 465, 468, 625, 634, 636, 637, 646, 655], "action": [0, 2, 3, 9, 10, 16, 17, 19, 22, 28, 30, 31, 47, 53, 62, 70, 74, 78, 80, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 121, 122, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 228, 229, 232, 238, 239, 240, 243, 244, 245, 246, 247, 248, 250, 251, 253, 255, 257, 258, 259, 261, 265, 266, 268, 272, 276, 278, 282, 284, 285, 286, 287, 291, 295, 297, 299, 301, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 315, 318, 323, 324, 325, 326, 327, 328, 329, 338, 340, 341, 342, 344, 347, 348, 350, 354, 360, 365, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 385, 386, 392, 393, 394, 395, 396, 397, 399, 400, 401, 408, 409, 410, 412, 413, 414, 415, 417, 418, 426, 428, 429, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 465, 476, 477, 528, 534, 619, 623, 625, 627, 628, 630, 633, 634, 635, 637, 638, 639, 640, 645, 646, 647, 648, 649, 651, 654, 655], "record": [0, 3, 12, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 228, 255, 295, 354, 360, 365, 412, 426, 428, 429, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 466, 477, 519, 521, 522, 619, 625, 634, 635, 639, 643, 648], "domain": [0, 3, 9, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 206, 220, 245, 253, 278, 286, 369, 374, 375, 378, 379, 380, 381, 382, 383, 384, 389, 625, 635, 640, 645, 648, 649, 650, 654, 655], "interfac": [0, 1, 4, 33, 141, 154, 168, 324, 332, 352, 354, 357, 360, 365, 483, 625, 628, 629, 633, 635, 637, 642, 645, 646, 650, 652], "structur": [0, 1, 2, 4, 8, 53, 60, 64, 65, 66, 72, 73, 74, 81, 82, 85, 86, 87, 107, 108, 116, 135, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 199, 200, 201, 202, 207, 214, 215, 227, 243, 246, 278, 329, 340, 353, 354, 355, 356, 358, 359, 360, 365, 392, 401, 412, 415, 427, 430, 433, 434, 435, 436, 437, 483, 625, 629, 633, 635, 636, 638, 641, 648, 649, 650, 651], "actor": [0, 4, 5, 16, 17, 19, 22, 28, 30, 31, 32, 70, 176, 193, 194, 197, 207, 209, 213, 214, 255, 299, 304, 305, 307, 312, 313, 315, 326, 338, 340, 342, 352, 357, 362, 365, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 426, 429, 431, 477, 531, 625, 627, 629, 630, 634, 636, 638, 640, 643, 648, 651, 654], "explor": [0, 1, 2, 294, 297, 300, 315, 333, 340, 369, 374, 375, 378, 379, 380, 381, 382, 392, 410, 412, 466, 477, 614, 615, 619, 625, 627, 635, 636, 637, 638, 640, 641, 643, 648, 649, 650], "valu": [0, 1, 2, 3, 4, 9, 16, 17, 19, 22, 23, 24, 26, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 121, 122, 124, 129, 130, 135, 141, 144, 147, 151, 152, 159, 162, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 225, 226, 227, 228, 231, 233, 235, 236, 238, 241, 243, 244, 245, 246, 247, 253, 258, 259, 263, 264, 267, 268, 269, 271, 273, 275, 278, 279, 283, 284, 285, 290, 291, 292, 293, 295, 296, 297, 298, 301, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 318, 319, 320, 323, 324, 326, 327, 328, 329, 330, 332, 333, 336, 340, 341, 342, 347, 348, 349, 350, 353, 354, 355, 356, 358, 359, 360, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 385, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 421, 422, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 461, 462, 464, 465, 466, 467, 468, 472, 476, 529, 619, 625, 630, 634, 637, 640, 641, 642, 647, 648, 649, 650, 652, 654, 655], "gener": [0, 1, 3, 4, 8, 9, 10, 16, 17, 19, 22, 23, 24, 26, 28, 32, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 65, 68, 72, 74, 76, 77, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 126, 128, 141, 144, 147, 148, 151, 159, 163, 164, 165, 168, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 227, 229, 232, 239, 241, 243, 244, 248, 253, 255, 257, 259, 265, 266, 271, 272, 276, 278, 282, 284, 286, 291, 293, 295, 300, 301, 310, 318, 323, 327, 328, 336, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 365, 369, 378, 382, 386, 387, 406, 413, 421, 426, 427, 428, 429, 430, 433, 438, 446, 456, 465, 472, 490, 625, 627, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "hook": [0, 3, 15, 18, 20, 21, 25, 27, 32, 33, 38, 45, 47, 50, 58, 65, 68, 69, 70, 71, 72, 75, 78, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 138, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 297, 298, 301, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 331, 334, 335, 338, 340, 342, 343, 344, 346, 351, 353, 354, 355, 356, 358, 359, 360, 365, 373, 375, 377, 380, 385, 388, 426, 427, 428, 429, 430, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 625], "planner": [0, 299, 326, 625], "torchvmap": [0, 87, 107, 108, 198, 316, 317, 321, 322, 331, 351, 353, 355, 356, 358, 359, 381, 384, 393, 395, 401, 408, 410, 413, 415, 417, 418, 426, 427, 429, 430, 433, 434, 435, 436, 625, 628], "random": [0, 1, 2, 3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 69, 74, 76, 77, 85, 88, 89, 90, 91, 92, 103, 105, 123, 135, 141, 144, 147, 151, 159, 165, 171, 172, 175, 176, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 207, 228, 245, 258, 259, 278, 285, 301, 315, 316, 318, 321, 352, 354, 360, 365, 378, 381, 382, 389, 393, 410, 413, 420, 426, 429, 466, 477, 478, 480, 481, 482, 489, 527, 564, 613, 625, 628, 633, 634, 635, 637, 638, 639, 641, 650, 651, 652, 654, 655], "sac": [0, 2, 401, 413, 415, 477, 625, 630], "redq": [0, 413, 625], "crossq": [0, 395, 625], "iql": [0, 400, 408, 625, 633, 648, 649], "cql": [0, 393, 399, 625], "gail": [0, 406, 625], "dt": [0, 172, 340, 625, 650], "td3": [0, 2, 417, 418, 625, 630], "bc": [0, 6, 417, 625], "a2c": [0, 392, 625, 630], "dreamer": [0, 221, 222, 313, 403, 404, 405, 625, 628], "checkpoint": [0, 72, 111, 113, 115, 119, 131, 132, 134, 138, 474, 625, 652], "algorithm": [0, 1, 2, 3, 4, 9, 10, 14, 23, 24, 26, 165, 228, 275, 392, 412, 413, 415, 474, 476, 477, 625, 629, 633, 634, 635, 636, 637, 639, 640, 641, 642, 648, 649, 651, 652, 654], "experiment": [0, 26, 32, 34, 62, 97, 378, 382, 476, 477, 625], "builder": [0, 199, 203, 625, 634, 655], "logger": [0, 2, 4, 12, 451, 453, 455, 456, 457, 458, 459, 460, 465, 472, 477, 519, 520, 521, 522, 532, 619, 623, 625, 634, 648], "_util": [0, 4, 171, 625, 637, 643], "implement_for": [0, 4, 625], "set_auto_unwrap_transformed_env": [0, 13, 285, 625], "auto_unwrap_transformed_env": [0, 461, 625], "configur": [0, 1, 9, 14, 16, 17, 19, 20, 22, 23, 24, 26, 28, 29, 30, 33, 74, 144, 193, 255, 304, 309, 338, 352, 354, 361, 394, 410, 412, 426, 429, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 625, 628, 633, 634, 635, 640, 646, 648, 649, 650], "system": [0, 5, 6, 108, 113, 192, 193, 194, 197, 199, 210, 211, 212, 214, 215, 426, 429, 483, 625, 627, 635, 646, 648, 649, 650], "simpl": [0, 3, 4, 10, 20, 21, 38, 45, 50, 58, 62, 68, 69, 75, 80, 85, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 305, 352, 354, 360, 365, 377, 382, 397, 399, 410, 412, 414, 426, 428, 429, 433, 465, 625, 627, 629, 630, 633, 634, 635, 638, 639, 640, 646, 648, 649, 652, 655], "categori": [0, 3, 42, 100, 625, 628, 630], "group": [0, 4, 32, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 68, 76, 77, 85, 87, 88, 89, 90, 91, 92, 97, 107, 108, 109, 141, 144, 147, 151, 159, 162, 163, 164, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 188, 192, 193, 194, 197, 198, 200, 201, 202, 207, 256, 275, 352, 353, 355, 356, 358, 359, 360, 363, 364, 423, 427, 430, 625, 627, 628, 630, 634, 639, 641, 649, 652], "complex": [0, 1, 3, 4, 15, 18, 20, 21, 25, 27, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429, 625, 627, 633, 634, 638, 639], "parallel": [0, 1, 4, 9, 32, 33, 141, 144, 147, 150, 151, 152, 159, 171, 172, 173, 174, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 285, 291, 318, 323, 352, 361, 362, 392, 499, 620, 621, 622, 623, 625, 627, 634, 635, 648, 649, 654], "avail": [0, 1, 3, 4, 5, 7, 28, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 122, 124, 128, 129, 130, 142, 143, 145, 146, 155, 157, 158, 163, 164, 169, 170, 171, 173, 174, 177, 183, 184, 185, 186, 204, 213, 214, 228, 231, 234, 253, 255, 312, 342, 361, 378, 382, 410, 426, 429, 453, 621, 622, 625, 627, 630, 633, 634, 635, 636, 637, 638, 639, 646, 648, 649, 650, 652, 655], "complet": [0, 3, 8, 10, 25, 30, 31, 122, 128, 141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 199, 200, 201, 202, 206, 235, 276, 352, 428, 476, 625, 626, 627, 629, 630, 633, 635, 638, 645, 646, 647], "experi": [0, 4, 65, 72, 81, 82, 97, 99, 100, 101, 102, 103, 104, 105, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 455, 456, 457, 458, 459, 460, 477, 625, 626, 634, 635, 637, 641, 642, 648, 649, 652], "store": [0, 1, 4, 9, 14, 16, 17, 18, 19, 22, 23, 24, 25, 26, 28, 30, 31, 38, 42, 45, 48, 49, 50, 53, 58, 60, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 80, 81, 82, 83, 86, 87, 100, 101, 103, 104, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 121, 122, 124, 129, 135, 137, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 253, 280, 291, 292, 293, 295, 297, 299, 300, 326, 340, 352, 353, 354, 355, 356, 358, 359, 360, 365, 392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 460, 477, 625, 627, 630, 633, 635, 636, 639, 641, 643, 648, 649, 651, 655], "implement": [0, 1, 3, 4, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 70, 75, 76, 77, 80, 84, 85, 88, 89, 90, 91, 92, 109, 119, 121, 131, 132, 141, 144, 147, 151, 159, 165, 166, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 239, 243, 244, 248, 251, 255, 257, 265, 266, 272, 276, 282, 284, 285, 286, 292, 293, 295, 296, 300, 302, 316, 317, 318, 319, 321, 322, 323, 347, 348, 349, 352, 354, 360, 362, 365, 392, 393, 395, 398, 399, 400, 406, 408, 410, 411, 412, 414, 415, 417, 426, 428, 429, 451, 462, 476, 477, 614, 625, 627, 628, 630, 633, 634, 635, 636, 637, 648, 649, 650, 654], "detail": [0, 3, 4, 6, 7, 8, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 72, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 107, 108, 109, 124, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 281, 285, 295, 300, 312, 316, 321, 331, 339, 352, 353, 354, 355, 356, 358, 359, 360, 365, 375, 392, 394, 402, 409, 410, 412, 426, 427, 428, 429, 430, 625, 626, 627, 630, 634, 637, 641, 647, 652], "class": [0, 3, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 147, 148, 149, 150, 151, 152, 153, 158, 159, 162, 165, 168, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 621, 622, 623, 625, 628, 629, 633, 634, 635, 636, 638, 639, 640, 641, 642, 645, 648, 649, 652, 655], "creat": [0, 1, 3, 4, 5, 6, 7, 8, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 116, 118, 124, 135, 141, 144, 147, 148, 151, 155, 159, 171, 172, 173, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 232, 235, 240, 253, 263, 283, 284, 285, 288, 291, 292, 293, 295, 302, 303, 305, 306, 307, 308, 309, 310, 314, 318, 323, 324, 325, 329, 330, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 373, 381, 382, 389, 395, 397, 402, 412, 413, 415, 426, 427, 428, 429, 430, 431, 453, 468, 477, 532, 613, 614, 615, 619, 621, 622, 625, 627, 628, 633, 634, 635, 636, 637, 639, 642, 645, 646, 648, 649, 650, 651, 652, 654, 655], "best": [0, 3, 6, 10, 155, 318, 323, 352, 412, 625, 648, 649, 652, 654], "practic": [0, 1, 3, 4, 5, 6, 9, 30, 60, 97, 284, 319, 348, 349, 391, 625, 626, 633, 634, 635, 636, 637, 640, 645, 648, 649, 651, 655], "futur": [0, 3, 5, 32, 34, 38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 112, 113, 120, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 263, 283, 285, 290, 295, 324, 352, 353, 354, 355, 356, 358, 359, 360, 365, 392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 476, 477, 625, 626, 627, 630], "extens": [0, 1, 3, 65, 72, 81, 82, 130, 300, 625, 627, 630, 652], "thing": [0, 1, 4, 8, 9, 87, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 284, 329, 330, 353, 355, 356, 358, 359, 401, 415, 427, 430, 626, 635, 636, 637, 638, 639, 640, 641, 642, 648, 649, 652, 655], "consid": [0, 1, 3, 4, 9, 15, 16, 17, 18, 19, 23, 25, 26, 27, 28, 30, 32, 38, 42, 43, 45, 50, 51, 58, 65, 68, 69, 72, 75, 77, 80, 81, 82, 109, 115, 117, 129, 130, 137, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 245, 292, 295, 310, 327, 329, 330, 347, 354, 360, 365, 393, 395, 408, 413, 415, 417, 418, 426, 428, 429, 433, 435, 436, 626, 627, 629, 633, 638, 639, 640, 650, 652], "when": [0, 1, 2, 3, 4, 6, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 128, 129, 130, 131, 133, 137, 141, 142, 143, 144, 147, 148, 150, 151, 152, 158, 159, 162, 163, 164, 166, 168, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 224, 226, 229, 231, 234, 235, 239, 240, 243, 245, 246, 255, 256, 258, 259, 263, 264, 271, 278, 280, 283, 284, 285, 288, 290, 291, 292, 293, 295, 296, 298, 299, 310, 312, 316, 317, 318, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 339, 342, 348, 352, 353, 354, 355, 356, 358, 359, 360, 365, 377, 378, 381, 382, 384, 388, 393, 394, 395, 397, 401, 402, 408, 409, 410, 412, 413, 415, 417, 418, 419, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 451, 452, 453, 455, 458, 460, 468, 474, 623, 626, 627, 628, 629, 630, 633, 634, 635, 636, 637, 639, 641, 642, 648, 649, 650, 651, 652, 654, 655], "debug": [0, 7, 9, 53, 74, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 211, 280, 354, 360, 365, 626, 655], "work": [0, 1, 3, 4, 5, 9, 25, 27, 32, 33, 38, 42, 43, 45, 50, 51, 58, 68, 69, 72, 75, 77, 80, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 115, 121, 122, 127, 129, 130, 133, 140, 141, 144, 147, 150, 151, 152, 155, 159, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 226, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 262, 263, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 288, 289, 291, 292, 293, 295, 296, 302, 303, 324, 352, 354, 360, 365, 375, 380, 385, 394, 409, 412, 426, 428, 429, 472, 626, 627, 628, 630, 633, 634, 635, 636, 638, 641, 646, 647, 648, 649, 650, 651, 652, 654, 655], "habitat": [0, 4, 153, 506, 626, 651], "lab": [0, 4, 145, 146, 153, 156, 626], "mujoco": [0, 7, 9, 177, 626, 633, 635, 636], "error": [0, 1, 4, 8, 11, 36, 37, 38, 41, 45, 46, 50, 54, 55, 56, 57, 58, 62, 63, 64, 66, 68, 69, 73, 75, 76, 80, 87, 107, 108, 109, 115, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 183, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 264, 283, 295, 296, 352, 353, 354, 355, 356, 358, 359, 360, 365, 401, 410, 415, 426, 427, 428, 429, 430, 626, 627, 629, 630, 633, 635, 648, 649, 655], "solut": [0, 3, 4, 7, 8, 10, 28, 129, 626, 628, 630, 637, 654], "resourc": [0, 1, 14, 23, 24, 26, 28, 153, 193, 194, 197, 206, 207, 213, 214, 352, 357, 365, 626, 627, 633, 635, 637, 648, 649], "issu": [0, 3, 4, 5, 6, 9, 70, 97, 101, 113, 115, 117, 121, 122, 129, 137, 141, 144, 147, 150, 151, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 207, 213, 214, 226, 235, 264, 279, 352, 369, 374, 375, 378, 379, 380, 381, 382, 394, 412, 476, 626, 627, 630, 646, 654], "customis": [0, 626, 634, 642], "video": [0, 5, 10, 107, 453, 455, 458, 460, 466, 623, 625, 626, 643, 648, 649], "render": [0, 4, 9, 158, 185, 451, 453, 466, 626, 633, 634, 635, 637, 638, 642], "index": [0, 4, 8, 9, 11, 19, 30, 31, 36, 37, 39, 40, 41, 42, 43, 46, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 114, 115, 116, 117, 121, 122, 124, 125, 127, 129, 133, 135, 136, 137, 139, 140, 141, 144, 147, 151, 159, 163, 164, 169, 170, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 198, 200, 201, 202, 214, 226, 230, 235, 239, 245, 285, 320, 327, 328, 352, 353, 355, 356, 358, 359, 377, 427, 430, 625, 638, 645, 647, 648, 649, 652, 654], "search": [0, 3, 42, 43, 51, 77, 87, 168, 227, 354, 360, 365, 634], "page": [0, 8, 35, 206, 460, 640, 645], "somewhat": [1, 3, 207, 629, 639, 655], "equival": [1, 2, 4, 28, 31, 32, 36, 37, 38, 41, 42, 45, 46, 50, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 68, 69, 72, 73, 75, 80, 81, 82, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 141, 142, 143, 144, 147, 150, 151, 152, 153, 156, 157, 158, 159, 166, 167, 169, 170, 171, 172, 175, 177, 180, 181, 182, 183, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 244, 247, 278, 280, 285, 295, 312, 321, 324, 342, 353, 354, 355, 356, 358, 359, 360, 365, 374, 375, 379, 380, 412, 426, 427, 428, 429, 430, 468, 641, 654, 655], "dataload": [1, 30, 106, 128, 130, 192, 193, 194, 197, 200, 207, 213, 634, 641, 652], "except": [1, 3, 4, 16, 17, 19, 22, 23, 24, 26, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 103, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 249, 268, 277, 278, 279, 283, 285, 295, 297, 315, 316, 318, 321, 323, 336, 340, 353, 354, 355, 356, 358, 359, 360, 365, 392, 395, 410, 412, 415, 426, 427, 428, 429, 430, 453, 627, 628, 633, 634, 638, 646, 648, 652, 654, 655], "1": [1, 2, 3, 4, 5, 9, 11, 16, 17, 19, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 115, 116, 117, 121, 122, 124, 129, 130, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 157, 158, 159, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 251, 253, 255, 256, 257, 259, 261, 263, 264, 265, 266, 268, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 288, 290, 292, 293, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 332, 333, 336, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 369, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 388, 389, 392, 393, 394, 395, 396, 397, 399, 400, 401, 404, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 441, 442, 443, 447, 448, 450, 451, 453, 462, 466, 468, 469, 477, 478, 480, 481, 482, 484, 486, 499, 505, 523, 524, 527, 529, 531, 532, 536, 541, 562, 565, 575, 584, 599, 604, 609, 619, 623, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 639, 640, 641, 643, 647, 648, 649, 650, 651, 652, 653, 654, 655], "thei": [1, 2, 3, 4, 5, 9, 10, 16, 17, 19, 21, 22, 23, 24, 26, 28, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 122, 124, 141, 144, 147, 150, 151, 152, 159, 162, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 231, 234, 249, 255, 263, 272, 280, 284, 285, 290, 295, 323, 353, 354, 355, 356, 358, 359, 360, 365, 392, 393, 394, 395, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 433, 468, 472, 627, 628, 629, 630, 633, 634, 635, 636, 637, 640, 647, 648, 649, 650, 651, 652, 654, 655], "over": [1, 2, 3, 4, 5, 9, 16, 17, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 121, 122, 124, 128, 129, 130, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 228, 245, 259, 271, 279, 293, 295, 327, 336, 339, 348, 351, 354, 360, 365, 384, 402, 404, 410, 426, 428, 429, 433, 439, 451, 468, 612, 627, 628, 630, 633, 634, 635, 637, 638, 639, 640, 641, 648, 649, 650, 655], "non": [1, 3, 4, 9, 16, 17, 19, 22, 23, 24, 26, 28, 31, 33, 36, 38, 39, 40, 42, 43, 45, 50, 51, 52, 58, 60, 61, 64, 65, 66, 68, 69, 73, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 103, 107, 108, 109, 116, 118, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 232, 233, 235, 239, 250, 263, 275, 278, 284, 285, 286, 287, 288, 290, 293, 295, 301, 316, 318, 321, 323, 329, 353, 354, 355, 356, 358, 359, 360, 365, 381, 382, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 404, 408, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 627, 628, 633, 636, 637, 648, 649, 650, 652, 655], "static": [1, 42, 43, 45, 51, 68, 74, 77, 80, 86, 122, 129, 130, 153, 172, 196, 202, 292, 296, 354, 360, 365, 408, 426, 429, 638, 650, 652], "like": [1, 2, 3, 4, 5, 8, 12, 25, 28, 38, 42, 43, 45, 50, 51, 53, 58, 60, 65, 68, 69, 72, 75, 77, 80, 81, 82, 86, 87, 107, 108, 109, 110, 118, 124, 130, 141, 144, 147, 148, 151, 153, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 247, 278, 281, 295, 316, 321, 330, 353, 354, 355, 356, 357, 358, 359, 360, 365, 376, 382, 392, 394, 409, 412, 413, 414, 426, 427, 428, 429, 430, 628, 629, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 648, 649, 650, 651, 652, 654, 655], "being": [1, 3, 4, 8, 9, 16, 17, 19, 21, 22, 23, 24, 26, 27, 28, 38, 45, 50, 58, 68, 69, 75, 76, 80, 87, 106, 107, 108, 109, 116, 118, 121, 122, 135, 138, 141, 144, 147, 150, 151, 152, 153, 158, 159, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 224, 234, 243, 245, 246, 253, 258, 266, 278, 283, 284, 285, 295, 315, 318, 323, 340, 353, 354, 355, 356, 358, 359, 360, 365, 394, 395, 409, 410, 412, 415, 426, 427, 428, 429, 430, 453, 468, 475, 621, 622, 623, 627, 628, 629, 633, 634, 635, 636, 641, 648, 649, 650, 652], "accept": [1, 3, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 38, 45, 50, 58, 64, 66, 68, 69, 72, 73, 75, 80, 87, 88, 100, 101, 104, 105, 106, 107, 108, 109, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 230, 235, 239, 250, 253, 263, 271, 275, 278, 283, 284, 285, 286, 287, 288, 290, 295, 324, 351, 353, 354, 355, 356, 358, 359, 360, 365, 381, 382, 383, 395, 415, 426, 427, 428, 429, 430, 453, 627, 630, 635, 638, 642, 652, 654, 655], "two": [1, 2, 3, 4, 5, 9, 11, 38, 45, 50, 53, 54, 55, 56, 57, 58, 65, 68, 69, 72, 74, 75, 80, 81, 82, 87, 103, 107, 108, 109, 124, 128, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 240, 259, 263, 283, 290, 295, 308, 316, 318, 321, 323, 329, 330, 345, 348, 353, 354, 355, 356, 358, 359, 360, 365, 382, 409, 412, 417, 422, 426, 427, 428, 429, 430, 466, 472, 627, 629, 633, 634, 635, 636, 637, 638, 639, 641, 642, 646, 647, 648, 649, 650, 652, 654, 655], "main": [1, 2, 3, 4, 6, 16, 17, 21, 26, 29, 34, 70, 105, 148, 192, 235, 240, 352, 382, 472, 627, 628, 629, 630, 633, 634, 645, 646, 647, 654, 655], "argument": [1, 3, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 130, 133, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 163, 164, 166, 167, 169, 170, 171, 172, 173, 175, 177, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 228, 229, 231, 232, 234, 235, 236, 238, 239, 240, 241, 244, 247, 248, 249, 251, 253, 254, 255, 257, 262, 263, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 301, 302, 303, 315, 316, 318, 321, 323, 324, 327, 328, 329, 330, 332, 340, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 369, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 385, 386, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 406, 407, 408, 409, 411, 412, 413, 414, 415, 417, 418, 421, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 441, 451, 452, 453, 458, 460, 464, 472, 476, 477, 612, 619, 620, 623, 633, 634, 635, 636, 637, 638, 639, 641, 648, 649, 650, 652, 654, 655], "list": [1, 3, 4, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 116, 118, 124, 127, 128, 129, 130, 131, 133, 141, 144, 145, 146, 147, 150, 151, 152, 153, 159, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 226, 233, 234, 238, 239, 243, 244, 246, 255, 256, 259, 261, 263, 271, 273, 281, 282, 283, 284, 285, 287, 288, 290, 292, 295, 301, 302, 303, 305, 311, 314, 318, 323, 324, 327, 328, 334, 342, 352, 353, 354, 355, 356, 358, 359, 360, 362, 365, 375, 377, 379, 380, 382, 384, 385, 386, 393, 395, 408, 410, 413, 415, 417, 418, 420, 425, 426, 427, 428, 429, 430, 433, 436, 451, 452, 466, 468, 487, 495, 496, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 535, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 621, 622, 627, 629, 633, 635, 638, 639, 640, 641, 645, 646, 647, 648, 650, 651, 652, 654, 655], "constructor": [1, 3, 4, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 70, 72, 81, 82, 86, 87, 103, 107, 108, 121, 135, 141, 144, 147, 151, 159, 166, 171, 172, 175, 180, 181, 182, 185, 192, 193, 194, 197, 198, 199, 200, 201, 202, 214, 215, 231, 235, 283, 302, 303, 324, 352, 353, 354, 355, 356, 358, 359, 360, 365, 368, 378, 382, 392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 426, 427, 429, 430, 431, 433, 434, 435, 436, 437, 476, 620, 623, 627, 628, 633, 634, 635, 638, 641, 648, 649, 652, 654], "iter": [1, 3, 4, 17, 19, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 118, 124, 128, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 248, 259, 272, 295, 296, 298, 300, 301, 302, 303, 324, 329, 330, 346, 352, 353, 354, 355, 356, 358, 359, 360, 365, 369, 374, 378, 379, 381, 383, 384, 386, 410, 425, 426, 427, 428, 429, 430, 466, 468, 470, 472, 627, 629, 630, 633, 635, 636, 641, 643, 648, 649, 650], "execut": [1, 3, 4, 7, 8, 9, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 65, 67, 69, 70, 71, 72, 75, 76, 77, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 115, 116, 118, 124, 129, 130, 141, 142, 143, 144, 147, 148, 151, 152, 153, 155, 157, 158, 159, 165, 166, 171, 172, 175, 177, 180, 181, 182, 183, 192, 193, 194, 197, 198, 200, 201, 202, 210, 212, 229, 240, 241, 257, 280, 285, 315, 316, 318, 321, 323, 331, 352, 353, 355, 356, 357, 358, 359, 362, 368, 377, 383, 384, 410, 417, 426, 427, 428, 429, 430, 613, 623, 627, 628, 629, 630, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 648, 649, 652, 653, 654, 655], "queri": [1, 3, 4, 16, 38, 45, 50, 53, 58, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 116, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 263, 288, 292, 295, 353, 354, 355, 356, 358, 359, 360, 365, 384, 426, 427, 428, 429, 430, 627, 629, 633, 640, 645, 650, 654], "defin": [1, 2, 3, 4, 16, 17, 19, 21, 22, 30, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 264, 277, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 329, 331, 334, 335, 338, 339, 340, 343, 344, 346, 351, 353, 354, 355, 356, 358, 359, 360, 365, 373, 375, 377, 380, 385, 388, 389, 397, 399, 410, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 452, 471, 532, 620, 627, 628, 633, 634, 636, 640, 643, 650, 652, 655], "number": [1, 3, 4, 9, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 121, 122, 124, 127, 129, 130, 137, 141, 142, 143, 144, 147, 150, 151, 152, 157, 158, 159, 165, 166, 167, 168, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 245, 247, 248, 249, 251, 254, 255, 258, 259, 262, 264, 265, 266, 268, 270, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 291, 292, 295, 297, 298, 299, 302, 303, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 329, 330, 334, 335, 340, 341, 343, 344, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 369, 373, 377, 378, 381, 382, 386, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 458, 460, 462, 464, 466, 472, 474, 475, 477, 612, 613, 621, 622, 623, 627, 628, 629, 630, 633, 634, 635, 636, 638, 639, 641, 643, 648, 649, 650, 651, 652, 655], "befor": [1, 3, 4, 5, 7, 8, 11, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 41, 45, 46, 50, 53, 54, 55, 58, 68, 69, 75, 80, 86, 87, 102, 109, 128, 130, 135, 141, 144, 147, 151, 152, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 291, 292, 293, 295, 300, 316, 318, 323, 324, 332, 333, 354, 360, 365, 392, 393, 394, 395, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 417, 418, 426, 428, 429, 431, 434, 435, 436, 468, 627, 633, 635, 636, 637, 641, 642, 648, 649, 650, 652, 655], "deliv": [1, 3, 4, 19, 103, 207, 633, 634, 638, 641, 654], "stack": [1, 3, 4, 8, 9, 16, 17, 19, 23, 26, 28, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 70, 72, 73, 77, 80, 85, 87, 88, 89, 90, 91, 92, 95, 107, 108, 116, 121, 124, 141, 144, 147, 150, 151, 152, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 207, 214, 215, 218, 219, 235, 240, 257, 292, 316, 318, 321, 322, 323, 353, 355, 356, 358, 359, 377, 383, 384, 393, 395, 408, 413, 415, 417, 418, 427, 430, 433, 452, 462, 485, 580, 625, 627, 634, 637, 638, 645, 646, 647, 648, 650, 654], "user": [1, 3, 4, 6, 9, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 34, 38, 45, 50, 53, 58, 68, 69, 75, 80, 87, 97, 99, 103, 105, 108, 109, 122, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 183, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 236, 253, 277, 283, 285, 295, 309, 354, 360, 365, 395, 412, 415, 417, 426, 428, 429, 453, 620, 627, 629, 630, 633, 634, 638, 640, 641, 646, 650, 654, 655], "reach": [1, 4, 16, 17, 19, 22, 23, 24, 26, 28, 29, 30, 74, 128, 141, 144, 147, 151, 158, 159, 163, 164, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 200, 201, 202, 257, 276, 297, 315, 340, 633, 635, 643, 645, 648, 649, 654, 655], "done": [1, 3, 4, 5, 8, 9, 14, 16, 17, 19, 22, 23, 24, 26, 29, 30, 31, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 74, 76, 77, 78, 80, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 112, 113, 120, 122, 124, 129, 130, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 228, 229, 231, 232, 235, 243, 244, 246, 247, 248, 253, 257, 258, 259, 261, 265, 266, 268, 270, 272, 275, 276, 278, 279, 282, 283, 284, 285, 286, 292, 295, 299, 316, 318, 323, 326, 348, 357, 377, 392, 393, 394, 395, 396, 397, 399, 400, 401, 408, 409, 412, 413, 414, 415, 417, 418, 426, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 465, 552, 627, 628, 629, 633, 635, 636, 637, 638, 640, 641, 643, 646, 647, 648, 649, 650, 652, 654, 655], "state": [1, 3, 4, 5, 16, 17, 19, 20, 21, 22, 30, 31, 38, 45, 47, 50, 53, 58, 65, 68, 69, 70, 71, 72, 74, 75, 78, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 120, 124, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 157, 158, 159, 165, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 231, 234, 235, 236, 238, 239, 241, 244, 247, 250, 253, 257, 259, 266, 276, 277, 282, 283, 284, 285, 286, 287, 292, 293, 295, 299, 304, 309, 313, 316, 317, 318, 321, 322, 323, 324, 326, 331, 334, 338, 341, 343, 344, 350, 353, 354, 355, 356, 357, 358, 359, 360, 365, 370, 377, 381, 387, 392, 394, 395, 399, 401, 409, 410, 412, 413, 414, 415, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 465, 472, 474, 476, 477, 623, 627, 628, 629, 633, 634, 635, 636, 637, 638, 639, 640, 641, 645, 646, 648, 649, 650, 655], "after": [1, 3, 4, 9, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 33, 38, 45, 47, 50, 58, 64, 66, 68, 69, 73, 74, 75, 80, 87, 97, 107, 108, 109, 117, 124, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 155, 156, 157, 158, 159, 166, 167, 169, 170, 171, 172, 175, 177, 180, 181, 182, 183, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 245, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 297, 298, 315, 316, 318, 323, 332, 353, 354, 355, 356, 358, 359, 360, 365, 374, 379, 395, 404, 415, 417, 426, 427, 428, 429, 430, 433, 627, 634, 635, 636, 637, 638, 639, 641, 643, 645, 648, 649, 650, 651, 652, 655], "predefin": [1, 2, 205, 453, 634, 636, 641, 652, 654], "becaus": [1, 3, 4, 5, 8, 31, 38, 42, 43, 45, 50, 51, 58, 64, 66, 68, 69, 73, 74, 75, 77, 80, 87, 97, 107, 108, 109, 116, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 247, 255, 276, 291, 295, 308, 330, 353, 354, 355, 356, 358, 359, 360, 365, 369, 374, 375, 377, 378, 379, 380, 381, 382, 392, 412, 426, 427, 428, 429, 430, 433, 628, 633, 634, 636, 637, 639, 640, 641, 645, 647, 648, 649, 650, 652, 655], "potenti": [1, 3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 199, 200, 201, 202, 650, 652], "comput": [1, 4, 5, 9, 16, 18, 19, 28, 30, 38, 41, 45, 50, 58, 68, 69, 74, 75, 80, 87, 107, 108, 109, 121, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 259, 273, 285, 289, 293, 295, 297, 298, 301, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 334, 335, 336, 338, 340, 343, 344, 346, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 365, 370, 373, 375, 377, 378, 380, 382, 385, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 465, 477, 613, 627, 629, 633, 635, 636, 637, 638, 639, 645, 646, 647, 648, 649, 651, 652], "heavi": [1, 9, 97, 652], "crucial": [1, 3, 4, 87, 107, 108, 198, 297, 315, 340, 353, 355, 356, 358, 359, 400, 408, 410, 426, 427, 430, 477, 627, 633, 634, 635, 636, 638, 640, 642, 648, 649, 650, 654, 655], "hyperparamet": [1, 127, 295, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 426, 429, 431, 625, 633, 642, 650, 652], "appropri": [1, 2, 4, 5, 8, 108, 114, 125, 135, 136, 139, 140, 159, 171, 180, 201, 202, 247, 620, 623, 627, 633, 642, 652], "paramet": [1, 2, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 131, 133, 135, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 520, 530, 532, 612, 613, 614, 615, 619, 620, 621, 622, 623, 627, 628, 629, 630, 633, 636, 637, 639, 643, 648, 649, 650, 651, 654], "take": [1, 3, 4, 9, 21, 34, 38, 45, 50, 53, 68, 69, 74, 75, 80, 87, 100, 107, 108, 110, 132, 138, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 199, 200, 201, 202, 205, 238, 240, 276, 279, 280, 284, 297, 298, 301, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 329, 331, 334, 335, 338, 340, 343, 344, 346, 351, 353, 355, 356, 358, 359, 373, 375, 376, 377, 378, 380, 382, 385, 388, 391, 412, 427, 430, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 462, 475, 627, 628, 630, 633, 634, 635, 637, 638, 639, 640, 648, 649, 650, 652, 655], "consider": [1, 3, 4, 9, 150, 152, 284, 320, 352, 627, 634, 648, 649, 652], "whether": [1, 3, 4, 16, 17, 18, 19, 22, 23, 24, 26, 28, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 115, 117, 124, 125, 137, 141, 144, 147, 151, 158, 159, 163, 164, 165, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 231, 240, 241, 243, 246, 277, 283, 285, 292, 293, 295, 302, 303, 318, 320, 323, 324, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 377, 382, 386, 392, 393, 394, 395, 396, 397, 399, 401, 402, 406, 408, 409, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 461, 472, 477, 623, 627, 633, 634, 635, 637, 638, 648, 649, 650, 654, 655], "should": [1, 2, 3, 4, 5, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 115, 118, 122, 124, 129, 130, 131, 135, 138, 141, 144, 145, 146, 147, 150, 151, 152, 153, 158, 159, 162, 165, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 228, 231, 232, 235, 238, 239, 240, 243, 244, 247, 248, 250, 255, 256, 257, 259, 264, 265, 266, 268, 271, 272, 276, 277, 279, 282, 284, 285, 286, 291, 292, 293, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 329, 330, 331, 334, 335, 338, 340, 343, 344, 346, 351, 353, 354, 355, 356, 358, 359, 360, 365, 373, 375, 377, 378, 380, 381, 382, 385, 388, 392, 394, 395, 401, 407, 409, 410, 412, 413, 414, 415, 416, 417, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 453, 455, 461, 466, 467, 468, 472, 619, 621, 622, 623, 627, 628, 629, 630, 633, 634, 635, 636, 637, 639, 641, 642, 645, 647, 648, 649, 650, 651, 652, 654, 655], "occur": [1, 9, 17, 45, 68, 76, 77, 80, 87, 97, 141, 144, 147, 151, 153, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 227, 236, 248, 259, 264, 291, 298, 354, 360, 365, 369, 374, 375, 378, 379, 380, 381, 382, 404, 426, 429, 627, 637, 652, 655], "serial": [1, 3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 38, 45, 50, 58, 65, 68, 69, 70, 71, 72, 75, 78, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 283, 292, 293, 295, 354, 360, 365, 426, 428, 429, 627], "syncdatacollector": [1, 3, 4, 16, 17, 20, 22, 23, 24, 26, 28, 30, 31, 47, 58, 78, 232, 235, 268, 300, 318, 323, 477, 482, 619, 622, 625, 633, 634, 635, 636, 637, 641, 643, 648, 649, 652], "worker": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 64, 66, 73, 85, 86, 87, 100, 105, 106, 107, 108, 109, 148, 166, 171, 180, 195, 196, 198, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 283, 284, 292, 293, 295, 352, 353, 355, 356, 358, 359, 362, 363, 364, 427, 428, 430, 472, 621, 622, 623, 627, 633, 634, 635, 654, 655], "multisyncdatacollector": [1, 17, 23, 24, 26, 28, 31, 300, 480, 622, 625, 635, 641, 654], "split": [1, 16, 17, 19, 22, 23, 24, 26, 28, 42, 43, 49, 51, 64, 66, 77, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 122, 129, 130, 162, 173, 174, 193, 316, 321, 392, 393, 394, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 418, 426, 429, 431, 628, 630, 635, 639, 652, 654], "workload": [1, 352], "across": [1, 4, 9, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 65, 69, 72, 75, 76, 77, 81, 82, 85, 88, 89, 90, 91, 92, 108, 122, 129, 130, 142, 143, 145, 146, 150, 152, 153, 155, 157, 158, 166, 167, 171, 177, 182, 193, 194, 197, 207, 213, 214, 283, 292, 293, 295, 318, 323, 329, 339, 340, 352, 354, 410, 412, 426, 428, 429, 475, 491, 625, 627, 628, 629, 633, 638, 642, 648, 649, 650], "aggreg": [1, 4, 38, 68, 97, 122, 135, 173, 174, 199, 227, 256, 293, 302, 303, 305, 306, 384, 627, 629, 649], "result": [1, 2, 3, 4, 8, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 34, 38, 39, 45, 50, 58, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 80, 81, 82, 87, 88, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 122, 124, 128, 129, 130, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 228, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 297, 300, 315, 316, 318, 321, 323, 324, 329, 342, 348, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 365, 373, 375, 380, 392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 433, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 474, 475, 627, 629, 634, 636, 638, 639, 642, 643, 646, 650, 651, 654, 655], "final": [1, 2, 3, 4, 5, 28, 53, 64, 66, 73, 74, 87, 107, 108, 194, 197, 198, 199, 205, 278, 291, 297, 315, 316, 318, 321, 323, 329, 340, 353, 355, 356, 358, 359, 376, 383, 427, 430, 433, 466, 628, 633, 634, 635, 637, 642, 643, 645, 648, 649, 650, 655], "multiasyncdatacollector": [1, 16, 22, 23, 24, 26, 28, 31, 300, 481, 621, 625, 633, 634, 635, 641, 654], "sever": [1, 2, 3, 4, 9, 33, 38, 45, 50, 54, 58, 68, 69, 75, 80, 86, 87, 100, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 236, 238, 239, 256, 285, 295, 353, 354, 355, 356, 358, 359, 360, 365, 412, 426, 427, 428, 429, 430, 525, 627, 633, 635, 637, 642, 643, 652, 655], "gather": [1, 4, 23, 26, 28, 53, 86, 106, 115, 117, 122, 129, 137, 214, 257, 264, 328, 331, 336, 354, 360, 365, 410, 426, 429, 432, 477, 613, 626, 634, 635, 636, 641, 648, 649, 650, 652, 654, 655], "continu": [1, 3, 4, 10, 39, 42, 53, 88, 89, 90, 108, 130, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 200, 201, 202, 220, 228, 253, 278, 286, 305, 306, 307, 308, 339, 340, 354, 384, 389, 393, 416, 433, 438, 446, 477, 628, 630, 633, 635, 636, 639, 648, 649, 652], "concomitantli": [1, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 200, 201, 202], "network": [1, 5, 9, 38, 45, 50, 58, 68, 69, 75, 80, 101, 109, 141, 144, 147, 151, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 302, 303, 305, 306, 307, 308, 311, 313, 314, 321, 324, 329, 330, 331, 333, 334, 335, 337, 339, 341, 343, 344, 345, 350, 354, 360, 365, 370, 371, 372, 373, 381, 385, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 424, 426, 428, 429, 431, 433, 434, 435, 436, 437, 471, 477, 523, 525, 526, 527, 529, 618, 619, 625, 627, 628, 629, 630, 637, 640, 643, 647, 650, 655], "impli": [1, 87, 655], "mai": [1, 3, 4, 5, 6, 8, 9, 16, 17, 19, 22, 23, 24, 26, 28, 30, 32, 34, 38, 42, 43, 45, 50, 51, 58, 64, 66, 68, 69, 73, 75, 76, 77, 80, 85, 87, 99, 105, 107, 108, 109, 113, 116, 121, 122, 129, 141, 144, 147, 150, 151, 152, 153, 159, 171, 172, 175, 177, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 255, 259, 272, 283, 285, 287, 292, 293, 295, 298, 318, 323, 324, 329, 353, 354, 355, 356, 358, 359, 360, 365, 382, 394, 401, 409, 412, 415, 426, 427, 428, 429, 430, 476, 477, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 648, 649, 650, 651, 652, 655], "slightli": [1, 34, 87, 97, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430, 629, 636, 637, 648, 650, 651, 652, 655], "lag": [1, 633, 634, 635], "therefor": [1, 3, 4, 8, 65, 72, 81, 82, 87, 104, 105, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 205, 268, 353, 355, 356, 358, 359, 412, 427, 428, 430, 431, 637, 640, 648, 655], "fastest": 1, "price": [1, 3], "suitabl": [1, 3, 235, 426, 627], "where": [1, 2, 3, 4, 5, 8, 9, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 36, 38, 45, 47, 49, 50, 53, 58, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 117, 122, 124, 129, 130, 135, 137, 138, 141, 144, 147, 151, 159, 162, 165, 168, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 226, 227, 228, 229, 232, 235, 240, 247, 255, 263, 268, 271, 276, 277, 278, 279, 280, 284, 285, 287, 290, 291, 295, 297, 315, 316, 317, 318, 320, 321, 322, 323, 327, 328, 329, 337, 339, 340, 353, 354, 355, 356, 358, 359, 360, 365, 373, 378, 381, 382, 391, 392, 393, 394, 395, 400, 401, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 627, 629, 630, 633, 634, 635, 637, 638, 645, 647, 648, 649, 650, 652, 655], "off": [1, 3, 5, 319, 349, 374, 415, 451, 466, 474, 477, 614, 628, 630, 633, 634, 635, 639, 640, 648, 649, 651, 654, 655], "curriculum": [1, 5], "For": [1, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 19, 22, 23, 24, 26, 28, 31, 36, 37, 38, 39, 40, 41, 45, 46, 50, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 72, 75, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 99, 103, 105, 107, 108, 109, 115, 117, 122, 124, 129, 137, 141, 144, 147, 150, 151, 152, 156, 158, 159, 171, 172, 173, 174, 175, 180, 181, 182, 183, 185, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 243, 246, 250, 259, 277, 284, 285, 291, 295, 312, 316, 318, 320, 321, 323, 327, 330, 332, 352, 353, 354, 355, 356, 358, 359, 360, 365, 370, 372, 373, 375, 379, 392, 400, 402, 408, 412, 426, 427, 428, 429, 430, 466, 627, 628, 629, 630, 633, 634, 635, 636, 638, 639, 641, 642, 645, 648, 649, 650, 651, 652, 655], "remot": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 65, 70, 71, 72, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 124, 171, 180, 198, 207, 209, 213, 214, 293, 353, 355, 356, 357, 358, 359, 365, 427, 430, 655], "rollout": [1, 3, 4, 12, 16, 17, 19, 22, 28, 30, 31, 34, 53, 74, 80, 87, 135, 141, 142, 143, 144, 147, 151, 153, 154, 157, 158, 159, 163, 164, 165, 166, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 185, 186, 187, 192, 193, 194, 197, 200, 201, 202, 207, 228, 229, 231, 232, 235, 238, 240, 241, 243, 246, 247, 248, 253, 255, 256, 261, 265, 266, 271, 272, 273, 276, 277, 279, 280, 283, 286, 292, 293, 295, 299, 300, 301, 318, 323, 326, 340, 377, 392, 451, 453, 613, 628, 633, 635, 636, 639, 640, 641, 642, 643, 651, 652, 654], "necessari": [1, 5, 7, 9, 16, 17, 19, 22, 23, 24, 26, 28, 97, 100, 101, 103, 104, 105, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 200, 201, 202, 272, 413, 433, 434, 435, 436, 437, 629, 633, 635, 639, 640, 641, 645, 646], "synchronis": [1, 148, 648, 649], "either": [1, 3, 6, 29, 33, 36, 38, 45, 50, 58, 65, 68, 69, 70, 72, 74, 75, 80, 87, 106, 109, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 257, 276, 277, 293, 295, 354, 360, 362, 365, 387, 410, 417, 418, 426, 428, 429, 457, 627, 630, 633, 634, 636, 648, 651, 652, 654, 655], "update_policy_weights_": [1, 14, 16, 17, 19, 21, 22, 23, 24, 26, 28, 30, 31, 211, 627, 633, 649, 654], "update_at_each_batch": [1, 16, 17, 22], "true": [1, 2, 3, 4, 5, 9, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 115, 116, 117, 118, 121, 122, 124, 125, 127, 128, 129, 130, 137, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 227, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 245, 248, 250, 253, 254, 255, 256, 257, 258, 259, 263, 264, 266, 267, 270, 271, 272, 275, 276, 278, 281, 282, 283, 284, 285, 286, 287, 288, 290, 292, 293, 295, 296, 297, 298, 299, 302, 303, 305, 306, 307, 308, 314, 316, 317, 318, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 339, 340, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 368, 369, 370, 371, 372, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 392, 393, 394, 395, 396, 397, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 422, 426, 427, 428, 429, 430, 433, 434, 435, 436, 439, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 460, 461, 464, 465, 466, 468, 472, 474, 477, 478, 480, 481, 482, 492, 493, 494, 501, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 523, 524, 527, 531, 532, 534, 562, 564, 581, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 623, 627, 628, 629, 630, 633, 634, 635, 636, 637, 639, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "second": [1, 3, 4, 9, 16, 17, 19, 22, 30, 34, 53, 54, 55, 56, 57, 97, 100, 135, 171, 206, 210, 232, 280, 316, 318, 321, 323, 352, 375, 394, 409, 412, 415, 453, 455, 458, 460, 470, 633, 635, 641, 648, 649, 650, 652, 654, 655], "devic": [1, 3, 4, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 121, 129, 130, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 223, 226, 228, 232, 239, 243, 244, 246, 247, 248, 253, 255, 256, 261, 262, 263, 265, 266, 268, 272, 275, 276, 278, 281, 284, 285, 286, 288, 290, 292, 295, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 314, 315, 316, 317, 318, 321, 322, 323, 324, 326, 329, 330, 332, 333, 338, 340, 341, 342, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 386, 389, 392, 393, 394, 395, 396, 397, 399, 400, 401, 408, 409, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 451, 468, 475, 478, 480, 481, 482, 484, 486, 498, 499, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 523, 524, 531, 549, 568, 592, 593, 594, 617, 627, 628, 633, 634, 635, 636, 637, 648, 649, 650, 651, 654], "oper": [1, 3, 4, 5, 8, 9, 16, 17, 19, 22, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 73, 75, 76, 77, 80, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 116, 122, 129, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 250, 255, 280, 282, 286, 293, 295, 311, 312, 317, 320, 322, 353, 354, 355, 356, 357, 358, 359, 360, 365, 370, 371, 372, 374, 375, 376, 381, 387, 392, 394, 396, 397, 402, 409, 412, 414, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 472, 625, 627, 629, 630, 633, 634, 635, 636, 637, 638, 639, 647, 648, 649, 650, 655], "instanc": [1, 2, 3, 4, 5, 8, 9, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 38, 39, 42, 45, 50, 58, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 80, 81, 82, 83, 85, 86, 87, 88, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 115, 116, 117, 120, 122, 124, 129, 130, 137, 141, 144, 146, 147, 148, 150, 151, 152, 156, 159, 165, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 227, 259, 278, 285, 292, 295, 297, 298, 301, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 325, 329, 330, 331, 334, 335, 338, 340, 343, 344, 346, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 393, 395, 397, 400, 401, 408, 410, 413, 415, 417, 418, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 451, 453, 457, 461, 466, 474, 525, 613, 614, 615, 619, 621, 622, 627, 628, 629, 630, 633, 635, 636, 637, 638, 639, 645, 650, 652, 655], "cpu": [1, 3, 4, 9, 11, 16, 17, 19, 22, 28, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 121, 124, 129, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 228, 232, 239, 243, 244, 246, 247, 248, 253, 256, 261, 263, 265, 266, 268, 272, 275, 276, 278, 284, 285, 286, 288, 290, 295, 299, 301, 311, 316, 317, 318, 321, 322, 323, 326, 332, 333, 340, 341, 342, 350, 353, 354, 355, 356, 357, 358, 359, 360, 365, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 384, 386, 389, 392, 393, 395, 396, 397, 399, 400, 401, 408, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 451, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 549, 568, 592, 593, 594, 628, 633, 634, 635, 636, 648, 649, 650, 651, 654], "slower": [1, 648], "than": [1, 3, 4, 5, 9, 14, 16, 17, 19, 22, 23, 24, 25, 26, 28, 30, 31, 35, 36, 38, 68, 87, 97, 99, 103, 107, 108, 109, 122, 129, 130, 133, 135, 141, 144, 147, 151, 155, 159, 169, 170, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 207, 209, 214, 240, 256, 257, 266, 293, 297, 308, 318, 320, 321, 323, 324, 351, 353, 355, 356, 358, 359, 360, 369, 374, 381, 382, 386, 410, 426, 427, 428, 429, 430, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 626, 627, 628, 629, 633, 634, 635, 636, 637, 638, 640, 648, 649, 650, 652, 654, 655], "one": [1, 2, 3, 4, 5, 6, 8, 9, 14, 16, 17, 19, 22, 23, 24, 26, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 81, 85, 87, 88, 89, 90, 91, 92, 97, 103, 107, 108, 109, 112, 113, 114, 115, 120, 121, 122, 124, 125, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 144, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 159, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 232, 235, 238, 240, 241, 243, 244, 245, 246, 253, 256, 258, 259, 263, 268, 271, 274, 275, 277, 278, 279, 284, 285, 287, 290, 292, 295, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 330, 331, 334, 335, 336, 337, 338, 340, 342, 343, 344, 346, 351, 352, 353, 354, 355, 356, 358, 359, 360, 365, 369, 373, 374, 375, 377, 378, 379, 380, 381, 382, 385, 386, 388, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 423, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 440, 441, 453, 455, 464, 466, 467, 472, 613, 623, 626, 627, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 647, 648, 649, 650, 651, 652, 655], "cuda": [1, 3, 4, 8, 16, 17, 19, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 75, 76, 77, 80, 85, 88, 89, 90, 91, 92, 109, 141, 142, 143, 144, 147, 151, 153, 154, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 255, 262, 263, 278, 284, 285, 288, 290, 295, 316, 317, 321, 322, 354, 360, 361, 365, 381, 426, 428, 429, 463, 633, 634, 635, 636, 648, 649, 651, 655], "multipl": [1, 2, 3, 4, 6, 9, 15, 16, 17, 19, 22, 23, 24, 25, 26, 28, 56, 68, 72, 81, 82, 83, 87, 108, 110, 117, 124, 125, 137, 141, 142, 143, 157, 158, 171, 180, 182, 193, 194, 197, 199, 200, 207, 213, 214, 236, 238, 245, 254, 257, 258, 268, 271, 275, 276, 283, 292, 316, 321, 323, 329, 332, 333, 352, 365, 369, 374, 378, 379, 381, 382, 385, 394, 401, 409, 412, 423, 439, 476, 491, 623, 627, 628, 629, 630, 633, 634, 635, 638, 640, 641, 646, 648, 649, 650, 652, 654], "infer": [1, 4, 15, 16, 17, 18, 19, 21, 23, 25, 26, 27, 28, 30, 31, 32, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 207, 213, 214, 215, 235, 292, 327, 332, 352, 362, 365, 373, 378, 382, 399, 426, 429, 451, 627, 633, 635, 637, 641, 643, 646, 652, 654], "dispatch": [1, 4, 23, 24, 26, 28, 45, 68, 80, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 288, 289, 291, 292, 295, 351, 354, 360, 365, 377, 426, 428, 429, 453, 633, 655], "speed": [1, 3, 4, 5, 9, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 629, 633, 634, 635, 636, 648, 649, 650, 652, 654], "avoid": [1, 2, 3, 4, 38, 45, 50, 58, 68, 69, 75, 80, 101, 109, 115, 117, 129, 137, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 225, 235, 253, 283, 285, 292, 293, 295, 298, 348, 354, 360, 365, 369, 381, 386, 394, 395, 409, 412, 415, 426, 428, 429, 612, 627, 635, 637, 646, 649], "oom": [1, 4, 64, 66, 73, 87, 107, 108, 115, 117, 137, 198, 353, 355, 356, 358, 359, 427, 430], "choic": [1, 3, 60, 87, 99, 105, 107, 108, 171, 198, 207, 353, 355, 356, 358, 359, 427, 430, 476, 628, 629, 633, 634, 640, 648, 649], "pass": [1, 3, 4, 5, 14, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 36, 38, 42, 43, 45, 50, 51, 58, 60, 65, 68, 69, 70, 72, 74, 75, 77, 80, 81, 82, 85, 86, 87, 97, 100, 101, 103, 104, 105, 107, 108, 109, 113, 115, 117, 122, 124, 129, 130, 135, 137, 141, 144, 147, 148, 149, 151, 152, 159, 162, 166, 171, 172, 173, 174, 175, 180, 181, 182, 185, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 229, 231, 232, 235, 239, 241, 243, 246, 256, 257, 265, 266, 283, 284, 287, 292, 295, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 329, 330, 331, 332, 334, 335, 338, 340, 341, 343, 344, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 369, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 388, 393, 394, 395, 408, 409, 410, 412, 413, 415, 417, 418, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 451, 468, 472, 476, 477, 621, 622, 623, 627, 628, 633, 634, 635, 636, 637, 638, 639, 640, 641, 647, 648, 649, 650, 652, 654, 655], "ie": [1, 3, 4, 23, 26, 29, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 76, 77, 80, 81, 85, 86, 88, 89, 90, 91, 92, 103, 121, 130, 141, 144, 147, 151, 155, 159, 168, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 227, 228, 235, 250, 275, 278, 287, 292, 318, 323, 354, 360, 365, 373, 381, 426, 429, 628, 629, 634, 649], "while": [1, 2, 3, 4, 8, 9, 16, 17, 19, 22, 30, 34, 38, 45, 50, 58, 68, 69, 70, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 268, 295, 297, 298, 301, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 331, 334, 335, 338, 340, 343, 344, 346, 351, 353, 354, 355, 356, 357, 358, 359, 360, 365, 373, 375, 377, 380, 385, 388, 394, 400, 401, 408, 409, 412, 415, 426, 427, 428, 429, 430, 627, 628, 629, 633, 635, 636, 639, 641, 642, 648, 649, 650, 651, 652, 654], "wait": [1, 14, 16, 17, 22, 23, 24, 25, 26, 28, 29, 70, 183, 205, 352, 636, 650], "also": [1, 2, 3, 4, 9, 10, 12, 16, 17, 21, 34, 36, 37, 38, 41, 45, 46, 50, 54, 55, 56, 57, 58, 62, 63, 64, 66, 68, 69, 72, 73, 75, 80, 81, 82, 85, 87, 97, 100, 101, 103, 104, 105, 106, 107, 108, 109, 115, 116, 117, 122, 124, 129, 130, 135, 137, 141, 144, 147, 151, 158, 159, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 225, 226, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 245, 247, 248, 249, 251, 253, 254, 255, 259, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 288, 289, 291, 292, 295, 296, 302, 303, 316, 321, 324, 344, 353, 354, 355, 356, 358, 359, 360, 365, 377, 378, 383, 384, 385, 392, 393, 395, 396, 397, 399, 400, 401, 406, 408, 412, 415, 417, 426, 427, 428, 429, 430, 433, 440, 441, 451, 453, 465, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 645, 647, 648, 649, 650, 652, 654, 655], "impact": [1, 3, 4, 14, 23, 24, 26, 103, 158, 243, 246, 298, 360, 392, 394, 409, 412, 414, 426, 634, 636, 648, 649], "memori": [1, 4, 9, 28, 33, 38, 41, 45, 50, 58, 64, 66, 68, 69, 70, 73, 75, 80, 86, 87, 97, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 113, 115, 116, 120, 141, 142, 143, 144, 147, 148, 151, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 235, 239, 263, 278, 284, 285, 288, 290, 292, 293, 295, 310, 320, 321, 322, 353, 354, 355, 356, 358, 359, 360, 365, 381, 426, 427, 428, 429, 430, 484, 623, 625, 627, 630, 633, 634, 636, 648, 652, 654], "manag": [1, 4, 9, 14, 16, 17, 18, 19, 22, 23, 24, 26, 27, 28, 30, 31, 33, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 300, 318, 323, 352, 365, 368, 412, 424, 425, 433, 434, 435, 436, 461, 466, 477, 627, 628, 636, 637, 640, 645, 654], "kei": [1, 2, 3, 8, 16, 17, 19, 22, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 107, 108, 109, 112, 121, 122, 124, 127, 129, 130, 135, 141, 144, 147, 151, 157, 158, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 259, 262, 263, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 295, 297, 299, 301, 311, 312, 315, 318, 323, 325, 326, 340, 342, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 369, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 451, 453, 465, 466, 467, 469, 470, 472, 613, 627, 629, 630, 633, 635, 636, 637, 638, 640, 645, 646, 647, 648, 649, 650, 652, 654, 655], "control": [1, 2, 4, 6, 9, 19, 34, 35, 42, 43, 44, 51, 72, 77, 81, 82, 121, 122, 124, 129, 141, 144, 145, 146, 147, 151, 158, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 207, 210, 213, 214, 215, 226, 245, 305, 306, 307, 308, 318, 323, 325, 326, 340, 344, 351, 352, 381, 382, 383, 392, 394, 395, 409, 410, 412, 416, 426, 429, 433, 438, 446, 451, 461, 477, 627, 628, 630, 633, 634, 635, 636, 637, 638, 639, 640, 648, 649, 650, 652, 654], "which": [1, 2, 3, 4, 5, 8, 9, 15, 16, 17, 19, 21, 22, 23, 24, 26, 28, 30, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 112, 116, 124, 127, 128, 135, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 155, 157, 158, 159, 163, 164, 166, 167, 169, 170, 171, 172, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 235, 236, 240, 243, 246, 251, 253, 255, 256, 258, 259, 263, 264, 266, 276, 278, 279, 282, 283, 284, 285, 286, 288, 292, 295, 296, 311, 316, 317, 318, 319, 321, 322, 323, 327, 328, 329, 330, 331, 337, 339, 349, 352, 353, 354, 355, 356, 358, 359, 360, 365, 370, 371, 372, 373, 377, 378, 381, 382, 383, 384, 392, 393, 394, 395, 397, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 417, 418, 422, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 451, 453, 462, 467, 476, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 645, 647, 648, 649, 650, 651, 652, 655], "storing_devic": [1, 16, 17, 19, 22, 23, 24, 26, 28, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 478, 480, 481, 482, 634, 636, 649], "dure": [1, 3, 4, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 36, 37, 41, 42, 46, 54, 55, 56, 57, 62, 63, 65, 66, 69, 70, 71, 72, 74, 75, 81, 82, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 113, 118, 121, 122, 124, 127, 129, 141, 144, 147, 148, 151, 158, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 204, 207, 211, 216, 217, 231, 232, 235, 238, 243, 246, 248, 250, 251, 253, 257, 261, 273, 275, 278, 280, 282, 283, 285, 286, 287, 292, 293, 295, 298, 300, 301, 318, 323, 330, 352, 360, 377, 394, 412, 426, 429, 433, 435, 436, 466, 472, 474, 477, 627, 629, 633, 634, 635, 636, 639, 640, 641, 643, 648, 649, 650, 652, 655], "heurist": [1, 5, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 198, 297, 353, 355, 356, 358, 359, 377, 382, 427, 430, 633, 637, 641, 655], "usual": [1, 3, 4, 5, 7, 8, 9, 16, 17, 19, 22, 23, 24, 26, 28, 99, 127, 135, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 283, 333, 412, 417, 426, 429, 432, 433, 434, 435, 436, 437, 452, 626, 627, 628, 629, 630, 633, 634, 635, 636, 639, 641, 642, 649, 652, 655], "same": [1, 2, 3, 4, 5, 19, 21, 23, 24, 26, 28, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 80, 83, 85, 86, 87, 88, 89, 90, 91, 92, 99, 103, 107, 108, 109, 128, 129, 130, 133, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 157, 158, 159, 162, 166, 167, 171, 172, 173, 174, 175, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 235, 243, 245, 246, 251, 253, 256, 257, 258, 259, 275, 283, 284, 285, 292, 295, 296, 302, 303, 317, 322, 324, 327, 328, 329, 330, 340, 348, 352, 353, 354, 355, 356, 358, 359, 360, 365, 373, 385, 393, 395, 408, 410, 413, 415, 417, 418, 423, 426, 427, 428, 429, 430, 476, 627, 629, 630, 633, 634, 635, 638, 639, 641, 645, 646, 647, 648, 649, 651, 652, 655], "default": [1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 121, 122, 124, 125, 127, 128, 129, 130, 135, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 340, 342, 343, 344, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 369, 373, 374, 375, 377, 378, 379, 380, 381, 382, 385, 386, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 421, 422, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 523, 532, 619, 623, 627, 629, 630, 633, 634, 635, 636, 639, 648, 651, 652, 654, 655], "behavior": [1, 3, 4, 5, 16, 17, 28, 38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 85, 87, 103, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 236, 243, 246, 259, 264, 277, 285, 293, 295, 298, 318, 319, 323, 349, 352, 353, 354, 355, 356, 358, 359, 360, 365, 394, 400, 408, 412, 417, 426, 427, 428, 429, 430, 451, 461, 466, 628, 634, 636, 648, 649, 650, 652], "besid": 1, "those": [1, 3, 4, 6, 8, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 217, 235, 240, 243, 246, 253, 259, 278, 279, 282, 286, 323, 339, 378, 382, 383, 384, 475, 621, 622, 628, 633, 634, 638, 639, 649, 650, 655], "choos": [1, 4, 12, 60, 141, 144, 162, 318, 323, 412, 625, 629, 633, 634, 635, 637, 648, 649, 652, 654], "follow": [1, 3, 4, 7, 8, 9, 12, 21, 38, 45, 50, 53, 58, 64, 66, 67, 68, 69, 73, 74, 75, 80, 85, 87, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 122, 129, 130, 141, 142, 143, 144, 147, 150, 151, 152, 157, 158, 159, 165, 168, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 231, 235, 255, 263, 288, 292, 293, 295, 302, 303, 316, 318, 321, 323, 324, 352, 353, 354, 355, 356, 358, 359, 360, 365, 375, 378, 379, 380, 391, 392, 393, 394, 395, 396, 400, 401, 408, 409, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 453, 472, 627, 628, 629, 630, 633, 634, 635, 636, 637, 640, 641, 647, 648, 649, 650, 652, 654, 655], "max_frames_per_traj": [1, 16, 17, 19, 22, 23, 24, 26, 28, 478, 480, 481, 482, 612, 633, 635, 654], "frame": [1, 3, 12, 16, 17, 19, 22, 23, 24, 26, 28, 30, 58, 97, 110, 235, 251, 295, 297, 315, 340, 377, 452, 453, 455, 458, 460, 464, 466, 472, 477, 612, 613, 633, 634, 635, 636, 639, 648, 649, 652, 654, 655], "call": [1, 2, 3, 4, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 122, 123, 124, 128, 129, 131, 133, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 166, 167, 168, 169, 170, 171, 172, 175, 177, 180, 181, 182, 183, 184, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 224, 227, 228, 229, 231, 232, 234, 235, 236, 238, 239, 240, 241, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 257, 259, 261, 262, 263, 264, 265, 266, 268, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 326, 330, 331, 332, 334, 335, 338, 340, 343, 344, 346, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 373, 375, 377, 380, 381, 382, 384, 385, 388, 393, 394, 395, 401, 408, 409, 410, 412, 413, 415, 417, 418, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 451, 452, 455, 466, 468, 627, 629, 630, 634, 635, 636, 637, 638, 639, 641, 642, 648, 649, 650, 652, 654, 655], "frames_per_batch": [1, 2, 3, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 47, 58, 70, 78, 232, 235, 268, 318, 323, 477, 478, 480, 481, 482, 612, 630, 633, 634, 635, 636, 637, 641, 643, 648, 649, 652, 654], "each": [1, 2, 3, 4, 5, 8, 9, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 38, 42, 43, 45, 49, 50, 51, 53, 54, 56, 58, 59, 68, 69, 72, 74, 75, 77, 79, 80, 81, 87, 97, 99, 100, 103, 107, 108, 109, 121, 122, 124, 127, 129, 130, 132, 135, 141, 144, 147, 148, 151, 159, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 254, 256, 257, 263, 268, 271, 276, 277, 278, 279, 283, 284, 290, 292, 293, 295, 296, 297, 312, 315, 316, 317, 318, 321, 323, 329, 330, 334, 341, 342, 350, 352, 353, 354, 355, 356, 358, 359, 360, 365, 368, 374, 375, 380, 382, 384, 394, 409, 412, 426, 427, 428, 429, 430, 433, 439, 442, 443, 444, 445, 447, 448, 449, 450, 453, 466, 468, 621, 622, 627, 629, 633, 634, 635, 636, 639, 640, 641, 643, 648, 649, 650, 651, 652, 654, 655], "init_random_fram": [1, 16, 17, 19, 22, 23, 24, 26, 28, 478, 480, 481, 482, 612, 633, 634, 637, 643], "rand_step": [1, 3, 4, 47, 78, 141, 144, 145, 146, 147, 148, 150, 151, 152, 159, 160, 161, 165, 166, 167, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 254, 278, 292, 650, 654, 655], "reset_at_each_it": [1, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 478, 480, 481, 482, 633], "split_traj": [1, 16, 17, 19, 22, 23, 24, 26, 28, 99, 101, 103, 104, 105, 478, 480, 481, 482, 633, 634, 635], "trajectori": [1, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 34, 45, 48, 49, 58, 59, 79, 81, 87, 97, 99, 100, 101, 103, 104, 105, 121, 122, 129, 130, 135, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 235, 264, 276, 283, 295, 299, 323, 326, 340, 412, 428, 433, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 462, 493, 494, 625, 629, 633, 634, 635, 636, 638, 641, 643, 650, 654, 655], "pad": [1, 3, 4, 34, 67, 83, 99, 101, 103, 104, 105, 108, 207, 208, 209, 214, 215, 217, 219, 235, 282, 302, 303, 305, 306, 323, 327, 328, 329, 354, 355, 356, 357, 359, 360, 365, 426, 468, 523, 646], "along": [1, 3, 4, 16, 17, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 74, 75, 76, 77, 80, 85, 86, 87, 88, 89, 90, 91, 92, 99, 101, 103, 104, 105, 107, 108, 109, 117, 122, 124, 129, 130, 135, 137, 141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 234, 235, 236, 257, 259, 261, 264, 271, 275, 281, 295, 323, 324, 327, 328, 333, 353, 354, 355, 356, 358, 359, 360, 365, 374, 378, 381, 382, 395, 410, 417, 426, 427, 428, 429, 430, 633, 634, 636, 638, 640, 648, 649, 650, 652, 654], "point": [1, 3, 4, 29, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 70, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 102, 109, 114, 121, 122, 125, 135, 136, 139, 140, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 262, 263, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 295, 325, 352, 354, 360, 365, 381, 391, 402, 426, 428, 429, 472, 626, 634, 635, 647, 648, 649, 650, 652, 654, 655], "boolean": [1, 4, 16, 17, 19, 22, 23, 24, 26, 28, 34, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 74, 76, 77, 85, 88, 89, 90, 91, 92, 122, 129, 130, 151, 202, 227, 231, 240, 264, 276, 320, 327, 328, 340, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 627, 630, 636], "repres": [1, 3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 42, 43, 47, 51, 53, 60, 77, 78, 80, 81, 87, 101, 107, 108, 116, 141, 144, 145, 146, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 198, 200, 201, 202, 251, 264, 280, 292, 295, 312, 327, 328, 342, 348, 353, 355, 356, 358, 359, 374, 375, 379, 380, 422, 427, 430, 433, 468, 627, 628, 633, 635, 636, 637, 638, 639, 640, 648, 649], "valid": [1, 2, 3, 4, 34, 64, 66, 67, 86, 87, 106, 135, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 188, 192, 193, 194, 197, 200, 201, 202, 231, 264, 283, 285, 295, 297, 302, 303, 320, 324, 327, 328, 340, 354, 357, 394, 401, 409, 412, 415, 426, 433, 434, 435, 436, 468, 627, 630, 637, 655], "exploration_typ": [1, 16, 17, 19, 22, 23, 24, 26, 28, 466, 478, 480, 481, 482, 527, 625, 628, 633, 634], "strategi": [1, 2, 3, 4, 19, 87, 103, 107, 108, 127, 162, 198, 208, 228, 315, 328, 336, 352, 353, 355, 356, 358, 359, 365, 426, 427, 430, 627, 628, 630, 633, 634, 637, 639, 648, 649, 652, 654], "reset_when_don": [1, 16, 17, 19, 22], "its": [1, 3, 4, 5, 6, 8, 10, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, 28, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 72, 73, 75, 76, 77, 80, 81, 85, 87, 88, 89, 90, 91, 92, 94, 107, 108, 109, 117, 121, 122, 124, 129, 130, 141, 144, 147, 151, 158, 159, 165, 171, 172, 173, 174, 175, 180, 181, 182, 185, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 234, 235, 241, 247, 255, 276, 277, 278, 283, 285, 291, 292, 293, 295, 296, 297, 302, 303, 318, 323, 327, 328, 329, 330, 339, 353, 354, 355, 356, 358, 359, 360, 365, 374, 378, 379, 382, 385, 392, 393, 394, 395, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 418, 426, 427, 428, 429, 430, 431, 453, 472, 476, 477, 619, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 648, 649, 650, 651, 652, 654, 655], "organ": [1, 2, 3, 630, 645, 650, 652], "within": [1, 3, 4, 16, 17, 21, 22, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 116, 121, 122, 130, 141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 246, 247, 248, 249, 251, 254, 255, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 288, 289, 291, 292, 293, 295, 297, 298, 301, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 331, 334, 335, 338, 340, 343, 344, 346, 351, 352, 353, 354, 355, 356, 358, 359, 360, 365, 368, 373, 375, 377, 380, 382, 385, 388, 389, 397, 402, 417, 426, 427, 428, 429, 430, 431, 433, 451, 453, 472, 628, 629, 634, 637, 638, 639, 640, 641, 642, 643, 648, 650, 654], "differ": [1, 2, 3, 4, 5, 16, 17, 19, 22, 23, 24, 26, 28, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 72, 74, 75, 76, 77, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 99, 100, 103, 107, 108, 109, 121, 124, 127, 141, 142, 143, 144, 147, 148, 151, 157, 158, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 231, 235, 240, 244, 245, 256, 259, 266, 275, 283, 285, 287, 295, 296, 312, 316, 317, 321, 322, 324, 326, 329, 330, 331, 342, 352, 353, 354, 355, 356, 358, 359, 360, 365, 382, 408, 410, 412, 422, 426, 427, 428, 429, 430, 433, 434, 435, 439, 440, 441, 466, 472, 475, 621, 622, 627, 628, 629, 630, 633, 634, 635, 637, 638, 640, 642, 646, 647, 648, 649, 650, 651, 652, 654, 655], "how": [1, 3, 4, 12, 21, 23, 24, 26, 35, 38, 45, 50, 58, 65, 68, 69, 75, 80, 81, 87, 103, 107, 108, 109, 121, 122, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 256, 295, 331, 352, 353, 354, 355, 356, 358, 359, 360, 365, 378, 392, 394, 407, 409, 410, 412, 426, 427, 428, 429, 430, 453, 455, 472, 474, 626, 627, 628, 633, 634, 635, 636, 637, 638, 639, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "tabl": [1, 38, 628, 634, 639], "summar": [1, 4, 650], "what": [1, 2, 4, 9, 12, 44, 45, 65, 85, 97, 122, 129, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 214, 215, 226, 247, 278, 283, 379, 395, 406, 410, 417, 426, 429, 626, 628, 629, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 645, 646, 648, 649, 650, 651, 652, 654, 655], "expect": [1, 3, 4, 5, 8, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 72, 73, 75, 76, 77, 80, 85, 86, 87, 88, 89, 90, 91, 92, 101, 107, 108, 109, 122, 128, 129, 141, 144, 147, 151, 159, 165, 168, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 247, 248, 250, 252, 254, 255, 256, 257, 259, 261, 263, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 316, 317, 318, 321, 322, 323, 329, 330, 340, 352, 353, 354, 355, 356, 358, 359, 360, 365, 375, 381, 384, 392, 393, 394, 395, 396, 397, 399, 400, 401, 406, 408, 409, 410, 412, 413, 414, 415, 417, 418, 423, 426, 427, 428, 429, 430, 431, 433, 613, 626, 628, 629, 630, 633, 635, 636, 638, 639, 640, 641, 645, 646, 648, 649, 650, 652, 655], "n": [1, 3, 4, 7, 8, 30, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 74, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 107, 108, 109, 121, 122, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 245, 250, 287, 295, 316, 317, 321, 326, 337, 339, 340, 353, 354, 355, 356, 358, 359, 360, 365, 377, 382, 392, 393, 401, 410, 426, 427, 428, 429, 430, 432, 468, 540, 627, 630, 634, 636, 637, 646, 652, 654, 655], "b": [1, 3, 4, 8, 9, 30, 34, 42, 43, 45, 51, 64, 66, 68, 72, 73, 74, 75, 77, 80, 81, 82, 87, 107, 108, 115, 116, 135, 144, 198, 210, 253, 286, 316, 317, 320, 321, 322, 329, 330, 332, 333, 341, 350, 353, 354, 355, 356, 358, 359, 360, 365, 385, 426, 427, 429, 430, 433, 434, 435, 436, 437, 439, 453, 634, 645, 652], "cat_result": [1, 16, 17], "na": [1, 194, 197, 212], "t": [1, 3, 4, 5, 7, 8, 9, 16, 17, 19, 22, 23, 24, 26, 28, 30, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 121, 122, 124, 128, 129, 130, 135, 141, 144, 147, 148, 150, 151, 159, 166, 167, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 246, 247, 248, 249, 251, 253, 254, 255, 262, 263, 264, 265, 266, 267, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 288, 289, 290, 291, 292, 295, 296, 316, 318, 320, 321, 323, 327, 340, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 374, 381, 392, 412, 415, 416, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 439, 453, 460, 472, 475, 623, 626, 627, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 647, 648, 649, 650, 651, 652, 654, 655], "p": [1, 3, 5, 121, 122, 124, 127, 148, 178, 179, 300, 301], "In": [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 16, 17, 19, 21, 22, 23, 24, 26, 28, 29, 30, 38, 45, 50, 58, 68, 69, 75, 80, 87, 97, 99, 101, 103, 104, 105, 107, 108, 109, 130, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 243, 244, 246, 254, 263, 268, 272, 277, 278, 281, 283, 284, 285, 288, 290, 291, 293, 295, 296, 316, 319, 321, 324, 329, 344, 348, 349, 353, 354, 355, 356, 358, 359, 360, 365, 381, 382, 384, 391, 392, 393, 395, 396, 397, 399, 400, 401, 408, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 475, 621, 622, 623, 627, 628, 629, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 648, 649, 650, 651, 652, 655], "case": [1, 2, 4, 5, 6, 8, 9, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 70, 72, 73, 76, 77, 81, 85, 87, 88, 89, 90, 91, 92, 97, 100, 101, 103, 104, 105, 107, 108, 112, 113, 120, 124, 135, 141, 144, 147, 150, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 198, 200, 201, 202, 214, 243, 244, 246, 254, 259, 278, 281, 285, 286, 296, 320, 323, 324, 330, 331, 353, 355, 356, 358, 359, 378, 381, 382, 384, 385, 391, 392, 393, 395, 396, 397, 399, 400, 401, 408, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 433, 434, 435, 436, 453, 462, 475, 621, 622, 623, 625, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 641, 642, 646, 648, 649, 650, 652, 654, 655], "dimens": [1, 4, 16, 17, 19, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 72, 73, 74, 76, 77, 85, 86, 87, 88, 89, 90, 91, 92, 99, 101, 103, 104, 105, 107, 108, 115, 116, 117, 122, 129, 130, 135, 137, 141, 144, 145, 146, 147, 150, 151, 152, 153, 159, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 198, 199, 200, 201, 202, 207, 219, 220, 228, 234, 235, 236, 250, 257, 259, 261, 264, 271, 274, 275, 278, 281, 287, 292, 293, 302, 303, 304, 309, 310, 318, 321, 323, 324, 327, 328, 329, 332, 333, 338, 341, 345, 346, 347, 348, 351, 353, 355, 356, 358, 359, 360, 365, 374, 377, 392, 393, 394, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 418, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 623, 625, 627, 629, 633, 634, 635, 636, 638, 645, 648, 649, 650, 652], "time": [1, 2, 3, 4, 5, 8, 9, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 34, 38, 45, 50, 58, 65, 68, 69, 70, 71, 72, 74, 75, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 115, 124, 135, 141, 142, 143, 144, 147, 148, 151, 157, 158, 159, 162, 168, 171, 172, 173, 174, 175, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 225, 226, 234, 235, 236, 257, 264, 271, 278, 279, 280, 283, 285, 292, 295, 301, 313, 316, 321, 323, 340, 353, 354, 355, 356, 358, 359, 360, 365, 368, 377, 382, 393, 394, 395, 401, 404, 408, 409, 410, 412, 413, 415, 417, 418, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 472, 585, 629, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 648, 649, 650, 652, 654, 655], "adapt": [1, 35, 229, 257, 276, 292, 298, 352, 401, 409, 415, 627, 633, 637, 650], "equal": [1, 16, 17, 22, 38, 87, 97, 109, 122, 129, 130, 144, 166, 169, 170, 171, 180, 200, 258, 259, 302, 303, 316, 318, 321, 323, 324, 327, 328, 330, 394, 412, 416, 422, 426, 462, 621, 622, 633, 635, 651], "introduc": [1, 3, 121, 122, 171, 180, 316, 318, 321, 323, 340, 633, 648], "some": [1, 3, 4, 5, 8, 9, 10, 29, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 70, 72, 75, 76, 77, 80, 85, 86, 87, 88, 89, 90, 91, 92, 99, 105, 107, 108, 109, 110, 115, 117, 124, 135, 137, 141, 142, 143, 144, 147, 150, 151, 152, 157, 158, 159, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 231, 263, 278, 285, 288, 295, 305, 318, 346, 353, 354, 355, 356, 358, 359, 360, 365, 382, 383, 384, 426, 427, 428, 429, 430, 453, 462, 612, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 648, 649, 650, 652, 654, 655], "confus": [1, 36, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 285, 295, 354, 360, 365, 426, 428, 429], "other": [1, 2, 3, 4, 5, 8, 9, 12, 16, 17, 19, 22, 23, 24, 26, 28, 29, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 73, 75, 76, 77, 80, 85, 86, 87, 88, 89, 90, 91, 92, 97, 99, 101, 103, 104, 105, 107, 108, 109, 110, 115, 116, 117, 118, 124, 127, 128, 129, 130, 131, 133, 137, 141, 144, 147, 150, 151, 152, 156, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 238, 240, 244, 245, 265, 272, 278, 281, 288, 292, 293, 295, 300, 315, 316, 318, 323, 333, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 368, 373, 375, 380, 382, 392, 393, 394, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 418, 426, 427, 428, 429, 430, 431, 433, 451, 465, 468, 621, 622, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 648, 649, 650, 651, 654, 655], "better": [1, 4, 9, 10, 16, 17, 32, 33, 34, 158, 192, 193, 194, 197, 199, 209, 318, 323, 352, 361, 365, 627, 629, 635, 638, 650, 654], "consist": [1, 3, 4, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 72, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 100, 103, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 255, 291, 295, 300, 303, 324, 354, 360, 365, 426, 428, 429, 627, 633, 634, 635, 646, 650, 651, 655], "interact": [1, 3, 4, 5, 6, 8, 9, 16, 17, 19, 22, 23, 24, 26, 28, 103, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 203, 206, 285, 378, 382, 477, 627, 633, 635, 637, 638, 639, 641, 648, 649, 650, 655], "keep": [1, 2, 3, 4, 5, 8, 9, 17, 65, 72, 81, 82, 87, 107, 108, 109, 124, 128, 135, 144, 171, 180, 198, 209, 211, 214, 226, 259, 263, 290, 292, 293, 295, 340, 353, 355, 356, 358, 359, 377, 394, 412, 426, 427, 428, 430, 453, 464, 472, 633, 634, 635, 636, 641, 642, 643, 649, 650, 652, 655], "separ": [1, 2, 3, 5, 9, 16, 17, 19, 22, 23, 26, 28, 30, 34, 42, 43, 51, 64, 66, 72, 73, 77, 81, 82, 87, 97, 100, 107, 108, 198, 205, 235, 263, 290, 352, 353, 355, 356, 358, 359, 393, 396, 399, 401, 413, 415, 417, 418, 427, 430, 433, 627, 629, 633, 634, 639, 640, 648, 649, 652, 655], "interchang": [1, 329, 330, 635, 638, 642, 646, 651, 652], "between": [1, 3, 4, 5, 6, 16, 17, 18, 19, 22, 25, 28, 30, 31, 32, 35, 38, 45, 50, 58, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 80, 81, 82, 87, 103, 107, 108, 109, 110, 117, 121, 122, 124, 125, 128, 129, 130, 137, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 240, 245, 258, 269, 280, 283, 285, 292, 293, 295, 302, 303, 311, 316, 318, 323, 324, 329, 330, 352, 353, 354, 355, 356, 358, 359, 360, 363, 364, 365, 375, 378, 382, 392, 394, 395, 396, 399, 400, 401, 404, 405, 408, 409, 410, 412, 413, 414, 415, 417, 418, 422, 426, 427, 428, 429, 430, 433, 466, 472, 477, 627, 629, 633, 634, 636, 637, 641, 645, 646, 648, 649, 650, 652, 655], "wherea": [1, 3, 29, 30, 38, 45, 50, 58, 60, 68, 69, 75, 80, 103, 109, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 166, 167, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 240, 245, 283, 285, 295, 354, 360, 365, 395, 410, 415, 426, 428, 429, 630, 642], "correspond": [1, 3, 4, 5, 16, 17, 19, 22, 23, 24, 26, 28, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 73, 75, 76, 77, 80, 81, 85, 87, 88, 89, 90, 91, 92, 100, 103, 105, 107, 108, 109, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 253, 263, 278, 283, 285, 290, 292, 293, 295, 300, 315, 318, 321, 323, 327, 328, 340, 353, 354, 355, 356, 358, 359, 360, 365, 378, 382, 395, 397, 400, 401, 415, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 627, 628, 633, 634, 635, 637, 638, 640, 641, 642, 648, 649, 650, 651], "sub": [1, 3, 4, 16, 17, 22, 23, 24, 26, 28, 38, 42, 43, 45, 50, 51, 58, 68, 69, 75, 77, 80, 97, 103, 109, 129, 135, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 264, 283, 284, 293, 295, 354, 360, 365, 383, 384, 426, 428, 429, 462, 472, 627, 628, 629, 633, 634, 635, 641, 647, 654, 655], "doesn": [1, 5, 16, 17, 22, 38, 45, 50, 58, 68, 69, 75, 80, 109, 135, 141, 144, 147, 151, 159, 166, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 243, 246, 295, 296, 320, 354, 357, 360, 365, 415, 426, 428, 429, 627, 637, 638], "understood": [1, 633], "serv": [1, 4, 23, 26, 28, 87, 107, 108, 153, 198, 353, 355, 356, 358, 359, 427, 430, 483, 627, 652, 654, 655], "basi": [1, 135, 329, 652, 654], "we": [1, 3, 4, 6, 8, 10, 12, 31, 32, 34, 35, 38, 42, 45, 50, 53, 58, 65, 68, 69, 72, 74, 75, 80, 81, 82, 97, 99, 103, 105, 109, 115, 128, 130, 135, 141, 142, 143, 144, 147, 148, 151, 155, 157, 158, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 240, 255, 263, 266, 272, 283, 288, 291, 292, 293, 295, 296, 299, 323, 327, 329, 330, 331, 352, 354, 360, 365, 392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 426, 428, 429, 431, 453, 476, 626, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 647, 648, 649, 650, 651, 652, 654, 655], "anoth": [1, 3, 4, 9, 15, 18, 20, 21, 25, 27, 32, 53, 80, 85, 103, 108, 116, 122, 129, 141, 144, 147, 150, 151, 152, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 215, 232, 241, 243, 244, 246, 278, 284, 324, 378, 392, 393, 394, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 418, 426, 429, 431, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 627, 629, 633, 635, 636, 637, 639, 640, 647, 648, 649, 650, 655], "wise": [1, 257], "requir": [1, 4, 5, 8, 9, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 72, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 99, 101, 103, 107, 108, 109, 116, 121, 122, 129, 130, 141, 144, 147, 151, 155, 159, 166, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 235, 239, 240, 253, 263, 275, 278, 283, 284, 285, 288, 290, 293, 295, 300, 318, 320, 323, 324, 331, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 381, 382, 383, 384, 392, 393, 394, 395, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 433, 451, 453, 455, 476, 532, 627, 628, 630, 633, 634, 635, 636, 638, 639, 640, 642, 645, 646, 648, 649, 650, 652, 654, 655], "op": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 36, 37, 39, 40, 41, 46, 54, 55, 56, 57, 60, 61, 62, 63, 85, 88, 89, 90, 91, 92, 258, 291, 297, 300, 315, 453, 475], "sinc": [1, 3, 4, 5, 6, 8, 12, 16, 17, 19, 22, 30, 31, 32, 34, 38, 45, 50, 53, 58, 65, 68, 69, 72, 75, 80, 81, 82, 87, 97, 105, 107, 108, 109, 121, 122, 130, 135, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 177, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 241, 295, 297, 298, 301, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 329, 331, 334, 335, 338, 340, 343, 344, 346, 351, 353, 354, 355, 356, 358, 359, 360, 365, 373, 374, 375, 377, 379, 380, 385, 388, 426, 427, 428, 429, 430, 451, 453, 627, 629, 633, 634, 635, 636, 638, 639, 640, 645, 648, 650, 651, 652, 654, 655], "goal": [1, 4, 5, 97, 98, 99, 100, 101, 102, 103, 104, 105, 159, 201, 277, 627, 633, 634, 635, 636, 645, 649, 650], "policy_devic": [1, 16, 17, 19, 22, 23, 24, 26, 28, 478, 480, 481, 482, 634], "explicitli": [1, 3, 4, 5, 41, 86, 112, 113, 120, 124, 231, 339, 378, 461, 627, 629, 634, 636, 641, 648, 649, 652], "do": [1, 3, 4, 5, 8, 60, 105, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 199, 200, 201, 202, 210, 212, 214, 215, 226, 228, 240, 264, 278, 283, 291, 292, 318, 323, 330, 332, 371, 382, 410, 426, 429, 433, 453, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 650, 652, 654, 655], "deepcopi": [1, 331, 410, 426, 429, 648], "place": [1, 2, 3, 4, 20, 35, 38, 42, 43, 44, 45, 50, 51, 58, 64, 66, 68, 69, 73, 75, 77, 80, 87, 107, 108, 109, 115, 117, 124, 127, 129, 137, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 231, 239, 247, 263, 278, 284, 285, 288, 290, 291, 292, 295, 331, 353, 354, 355, 356, 357, 358, 359, 360, 365, 373, 377, 381, 426, 427, 428, 429, 430, 433, 468, 475, 612, 627, 629, 634, 635, 639, 642, 648, 649, 650, 652], "instanti": [1, 2, 3, 4, 16, 17, 28, 30, 31, 64, 65, 66, 70, 71, 72, 73, 81, 82, 85, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 121, 122, 124, 155, 158, 198, 202, 231, 239, 253, 278, 330, 353, 355, 356, 358, 359, 427, 430, 433, 434, 435, 436, 437, 451, 476, 523, 524, 527, 528, 529, 630, 633, 634, 639, 640, 642, 648, 649, 650, 652, 655], "all": [1, 2, 3, 4, 5, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 158, 159, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 224, 226, 228, 234, 235, 238, 239, 243, 244, 246, 249, 255, 258, 259, 263, 271, 273, 275, 278, 279, 284, 285, 288, 290, 292, 295, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 329, 330, 331, 334, 335, 338, 340, 343, 344, 346, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 368, 373, 375, 377, 380, 381, 382, 384, 385, 388, 389, 392, 393, 394, 395, 404, 408, 410, 412, 413, 414, 415, 417, 418, 423, 426, 427, 428, 429, 430, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 467, 472, 483, 612, 621, 622, 623, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 647, 648, 649, 650, 652, 654, 655], "graph": [1, 4, 5, 9, 45, 68, 80, 87, 107, 108, 142, 143, 157, 158, 198, 209, 353, 354, 355, 356, 358, 359, 360, 365, 424, 425, 426, 427, 429, 430, 633, 637, 650], "reli": [1, 3, 4, 12, 34, 69, 75, 278, 316, 317, 318, 321, 322, 323, 363, 364, 392, 412, 433, 474, 629, 633, 635, 637, 639, 641, 650, 655], "third": [1, 259, 280, 375, 648, 649], "parti": 1, "try": [1, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 42, 43, 51, 64, 66, 73, 77, 87, 107, 108, 198, 353, 354, 355, 356, 358, 359, 360, 365, 427, 430, 627, 633, 634, 635, 637, 640, 641, 646, 648, 649, 650, 654, 655], "limit": [1, 2, 3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 74, 76, 77, 85, 88, 89, 90, 91, 92, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 209, 214, 215, 235, 255, 392, 394, 409, 410, 412, 414, 426, 429, 627, 629, 633, 634, 636, 648, 649, 650], "chart": 1, "show": [1, 2, 3, 12, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 240, 295, 330, 352, 354, 360, 365, 426, 428, 429, 453, 477, 633, 635, 636, 637, 645, 648, 649, 650, 652, 654], "decis": [1, 3, 4, 304, 309, 338, 373, 398, 411, 628, 636, 638, 639, 648, 649, 652, 655], "multiprocess": [1, 3, 4, 15, 16, 17, 23, 24, 26, 72, 81, 82, 97, 105, 116, 118, 124, 141, 148, 149, 171, 175, 180, 292, 293, 633, 634, 635, 636, 641, 648, 649, 650, 651, 655], "ensur": [1, 2, 3, 4, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 30, 38, 45, 50, 58, 65, 68, 69, 75, 80, 81, 87, 109, 121, 122, 128, 141, 144, 147, 151, 156, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 229, 235, 263, 276, 285, 288, 292, 293, 295, 318, 323, 352, 354, 360, 365, 374, 394, 409, 412, 426, 428, 429, 627, 628, 634, 635, 636, 650, 652], "flexibl": [1, 3, 4, 10, 166, 192, 419, 627, 629, 630, 633, 637, 646, 652, 655], "mechan": [1, 5, 15, 16, 17, 18, 19, 20, 22, 25, 27, 30, 31, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 285, 295, 352, 354, 360, 365, 426, 428, 429, 627, 634, 640, 650], "accommod": [1, 3, 4, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 638, 639], "variou": [1, 3, 4, 15, 144, 284, 392, 393, 394, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 418, 419, 426, 429, 431, 453, 621, 622, 627, 633, 634, 635, 637, 638, 639, 640, 642, 648, 649, 652, 655], "deploy": [1, 637], "scenario": [1, 3, 20, 25, 27, 163, 164, 171, 185, 186, 240, 283, 426, 451, 627, 633, 639, 648, 649, 650], "facilit": [1, 3, 4, 8, 262, 263, 278, 288, 290, 370, 371, 372, 628, 633, 636, 639, 650], "weightupdaterbas": [1, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33], "These": [1, 3, 8, 53, 74, 100, 105, 138, 185, 263, 290, 293, 429, 627, 628, 629, 630, 633, 635, 648, 649, 650, 652, 655], "base": [1, 4, 5, 9, 10, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 32, 33, 38, 53, 65, 72, 75, 81, 82, 86, 103, 121, 122, 126, 132, 135, 136, 138, 139, 141, 142, 143, 144, 147, 151, 155, 157, 158, 159, 165, 166, 167, 171, 172, 175, 180, 181, 182, 185, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 207, 208, 209, 211, 213, 214, 217, 218, 219, 226, 240, 244, 268, 282, 284, 288, 289, 318, 323, 329, 331, 332, 333, 352, 354, 360, 365, 370, 376, 392, 393, 395, 396, 397, 399, 400, 401, 403, 408, 412, 413, 414, 415, 417, 418, 460, 472, 476, 483, 487, 497, 498, 500, 504, 533, 589, 625, 628, 629, 630, 633, 634, 636, 638, 639, 640, 642, 645, 646, 648, 649, 650, 652, 655], "logic": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 630, 648], "allow": [1, 2, 3, 4, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 35, 38, 42, 43, 45, 50, 51, 58, 60, 62, 64, 66, 68, 69, 72, 73, 75, 76, 77, 80, 81, 82, 87, 97, 103, 107, 108, 109, 116, 122, 124, 127, 129, 130, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 231, 232, 266, 293, 295, 320, 324, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 419, 422, 426, 427, 428, 429, 430, 431, 627, 628, 630, 633, 635, 636, 637, 638, 639, 640, 646, 648, 649, 650, 652, 654, 655], "tailor": [1, 200, 627, 654], "need": [1, 2, 3, 4, 5, 8, 9, 11, 14, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 30, 32, 35, 38, 44, 45, 50, 58, 64, 66, 68, 69, 75, 80, 85, 87, 107, 108, 109, 131, 135, 141, 144, 147, 151, 155, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 238, 240, 241, 250, 256, 263, 266, 279, 283, 284, 285, 290, 292, 293, 295, 297, 298, 301, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 331, 332, 334, 335, 338, 340, 343, 344, 346, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 373, 375, 377, 378, 379, 380, 381, 385, 388, 391, 401, 414, 415, 426, 427, 428, 429, 430, 432, 437, 453, 472, 623, 627, 628, 629, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 648, 649, 650, 652, 654, 655], "handl": [1, 2, 3, 4, 15, 16, 17, 18, 20, 21, 23, 25, 26, 27, 28, 32, 33, 38, 45, 50, 58, 60, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 291, 292, 293, 295, 323, 324, 352, 353, 354, 355, 356, 358, 359, 360, 365, 392, 410, 412, 426, 427, 428, 429, 430, 465, 472, 477, 621, 622, 627, 633, 634, 635, 636, 638, 640, 645, 649, 652], "well": [1, 2, 3, 4, 9, 28, 34, 38, 45, 50, 58, 65, 67, 68, 69, 72, 75, 80, 81, 82, 85, 109, 122, 127, 131, 138, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 284, 285, 295, 300, 305, 321, 343, 344, 354, 360, 365, 382, 410, 412, 417, 426, 428, 429, 433, 437, 627, 628, 633, 634, 636, 637, 638, 639, 640, 642, 651, 652, 654, 655], "server": [1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 627], "everi": [1, 4, 9, 16, 17, 18, 19, 22, 30, 31, 38, 42, 43, 45, 50, 51, 58, 60, 62, 65, 68, 69, 70, 71, 72, 75, 77, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 131, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 276, 277, 292, 295, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 329, 330, 331, 334, 335, 338, 340, 343, 344, 346, 351, 354, 360, 365, 373, 375, 377, 380, 385, 388, 394, 409, 410, 412, 426, 428, 429, 472, 627, 630, 633, 634, 635, 636, 638, 639, 648, 649, 650], "even": [1, 3, 4, 5, 9, 12, 17, 23, 24, 26, 28, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 80, 85, 88, 89, 90, 91, 92, 110, 115, 116, 117, 118, 122, 129, 131, 133, 137, 141, 144, 147, 148, 151, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 227, 231, 633, 635, 638, 645, 648, 649, 650, 655], "simplest": [1, 45, 68, 80, 135, 354, 360, 365, 385, 426, 429, 633, 635, 639, 648, 649, 652, 655], "vanillaweightupdat": 1, "dict": [1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 58, 60, 61, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 122, 124, 129, 130, 141, 144, 147, 148, 149, 150, 151, 152, 159, 163, 164, 166, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 255, 278, 283, 285, 291, 292, 293, 295, 296, 302, 303, 304, 305, 306, 307, 308, 309, 314, 324, 338, 352, 353, 354, 355, 356, 358, 359, 360, 365, 378, 382, 395, 401, 415, 417, 426, 427, 428, 429, 430, 453, 457, 458, 466, 472, 474, 476, 477, 478, 480, 481, 482, 499, 523, 524, 571, 614, 615, 621, 622, 623, 628, 633, 634, 635, 652, 654, 655], "assum": [1, 3, 4, 7, 15, 16, 17, 18, 19, 25, 27, 32, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 74, 75, 76, 77, 81, 82, 85, 88, 89, 90, 91, 92, 99, 101, 103, 104, 105, 112, 113, 120, 129, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 207, 220, 234, 237, 242, 250, 263, 264, 271, 278, 285, 288, 290, 301, 318, 323, 351, 368, 385, 397, 401, 402, 415, 428, 431, 442, 443, 444, 445, 447, 448, 449, 450, 453, 633, 635, 647, 650], "divers": [1, 5, 171, 180, 360], "abl": [1, 4, 53, 141, 162, 173, 174, 175, 181, 318, 323, 627, 633, 635, 636, 639, 647, 648, 649, 650, 652], "leav": [1, 3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 72, 73, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 198, 200, 201, 202, 227, 272, 353, 355, 356, 358, 359, 427, 430, 629, 633, 641, 652], "untouch": [1, 87, 97, 103, 107, 108, 109, 195, 196, 198, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 232, 239, 243, 244, 248, 255, 257, 265, 266, 272, 276, 282, 284, 286, 293, 295, 353, 355, 356, 358, 359, 427, 428, 430], "particularli": [1, 3, 4, 87, 107, 108, 110, 198, 211, 320, 353, 355, 356, 358, 359, 427, 430, 474, 477, 637, 654, 655], "benefici": [1, 3, 320], "involv": [1, 87, 107, 108, 150, 152, 153, 163, 164, 177, 198, 232, 235, 283, 318, 323, 353, 355, 356, 358, 359, 427, 430, 627, 638, 640], "architectur": [1, 5, 209, 309, 352, 360, 630, 640, 648, 649, 654], "special": [1, 2, 4, 42, 43, 51, 64, 66, 73, 77, 87, 89, 91, 107, 108, 198, 202, 353, 354, 355, 356, 358, 359, 360, 365, 427, 430, 625, 627, 633, 636, 637, 655], "hardwar": [1, 4, 637], "By": [1, 3, 4, 15, 18, 19, 20, 21, 25, 27, 42, 43, 51, 62, 77, 109, 141, 144, 145, 146, 147, 150, 151, 152, 153, 159, 163, 164, 171, 172, 173, 174, 175, 177, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 257, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 288, 289, 291, 292, 295, 351, 382, 410, 426, 428, 429, 461, 466, 623, 627, 629, 633, 636, 648, 651, 652, 655], "retriev": [1, 3, 4, 15, 16, 17, 18, 21, 22, 25, 27, 53, 64, 65, 66, 68, 70, 71, 72, 73, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 124, 127, 129, 130, 141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 207, 208, 209, 214, 215, 226, 236, 244, 247, 259, 299, 302, 326, 353, 355, 356, 358, 359, 365, 377, 378, 382, 385, 389, 392, 393, 394, 395, 397, 409, 412, 413, 415, 417, 418, 426, 427, 430, 431, 433, 434, 435, 436, 623, 630, 634, 635, 639, 650, 655], "appli": [1, 2, 3, 4, 5, 15, 18, 19, 25, 27, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 254, 255, 256, 258, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 288, 289, 291, 292, 295, 300, 316, 321, 331, 348, 353, 354, 355, 356, 358, 359, 360, 365, 374, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 406, 408, 409, 411, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 433, 451, 465, 467, 627, 630, 633, 634, 635, 641, 645, 648, 650, 654, 655], "seamless": [1, 3, 324, 352, 627, 646], "integr": [1, 2, 3, 32, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 308, 318, 323, 326, 352, 354, 360, 365, 381, 426, 428, 429, 628, 630, 638, 639, 641, 645, 648, 649, 650, 651], "infrastructur": [1, 4, 648, 649], "transit": [1, 38, 45, 50, 58, 68, 69, 75, 80, 99, 103, 109, 122, 130, 135, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 298, 300, 354, 360, 365, 387, 426, 428, 429, 633, 636, 638, 639, 641, 648, 650, 652], "sampl": [1, 2, 5, 9, 10, 31, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 74, 76, 77, 80, 81, 82, 85, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 115, 116, 117, 121, 122, 123, 124, 127, 128, 129, 130, 133, 135, 137, 141, 144, 147, 151, 159, 165, 168, 171, 172, 175, 180, 181, 182, 189, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 224, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 291, 292, 293, 295, 297, 299, 310, 315, 319, 320, 326, 327, 328, 336, 338, 339, 340, 343, 348, 349, 354, 357, 360, 365, 366, 369, 374, 375, 376, 378, 379, 380, 381, 382, 392, 393, 394, 395, 396, 397, 399, 409, 411, 412, 417, 418, 426, 428, 462, 468, 472, 474, 477, 488, 489, 492, 493, 494, 534, 612, 625, 628, 629, 633, 634, 635, 636, 637, 638, 639, 641, 643, 648, 649, 651, 654, 655], "attent": [1, 3, 9, 200, 235, 354, 360, 365, 426, 627, 633, 636, 646, 655], "given": [1, 3, 4, 16, 17, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 122, 124, 129, 130, 141, 144, 147, 151, 159, 165, 169, 170, 171, 172, 175, 180, 181, 182, 183, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 239, 245, 253, 259, 263, 278, 282, 284, 285, 286, 288, 290, 292, 293, 295, 297, 299, 301, 312, 313, 315, 316, 318, 320, 321, 323, 326, 331, 342, 346, 353, 354, 355, 356, 358, 359, 360, 365, 369, 374, 375, 377, 380, 381, 382, 383, 384, 386, 391, 396, 397, 399, 410, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 463, 466, 619, 627, 628, 629, 630, 633, 634, 635, 638, 639, 640, 641, 642, 649, 650, 655], "built": [1, 2, 3, 4, 6, 8, 87, 107, 108, 124, 142, 143, 150, 157, 158, 168, 169, 198, 353, 355, 356, 358, 359, 392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 419, 426, 427, 429, 430, 431, 617, 619, 620, 623, 627, 630, 633, 634, 635, 636, 637, 640, 642, 645, 650, 652, 655], "flatten": [1, 30, 31, 36, 37, 39, 40, 41, 42, 43, 46, 47, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 73, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 135, 198, 232, 250, 353, 355, 356, 358, 359, 427, 428, 430, 433, 468, 625, 627, 649], "suffici": [1, 4, 5, 633], "preprocess": [1, 3, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 284, 634, 637], "popul": [1, 3, 4, 16, 17, 19, 28, 30, 31, 65, 70, 71, 72, 79, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 200, 254, 278, 310, 331, 410, 426, 429, 633, 635, 636, 639, 641, 650, 652], "replaybuff": [1, 3, 4, 16, 17, 19, 22, 28, 30, 31, 47, 65, 70, 71, 78, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 115, 116, 121, 122, 123, 124, 129, 130, 139, 235, 264, 268, 295, 397, 402, 431, 477, 490, 617, 619, 625, 635, 637, 641, 643, 648, 649, 651, 652, 654], "lazytensorstorag": [1, 3, 16, 17, 19, 22, 30, 65, 72, 80, 81, 82, 121, 129, 130, 135, 268, 295, 477, 486, 635, 637, 643, 648, 649, 652], "lambda": [1, 3, 16, 17, 19, 22, 28, 29, 30, 31, 45, 53, 68, 72, 80, 87, 135, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 205, 225, 232, 240, 241, 253, 255, 278, 286, 293, 295, 296, 301, 351, 354, 360, 365, 374, 377, 378, 379, 403, 405, 406, 417, 426, 429, 433, 436, 444, 445, 449, 450, 451, 619, 627, 629, 633, 634, 636, 637, 648, 649, 651, 652, 654, 655], "reshap": [1, 3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 103, 129, 135, 232, 318, 323, 324, 339, 451, 627, 635, 648, 649], "slice": [1, 3, 4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 65, 70, 72, 76, 77, 85, 88, 89, 90, 91, 92, 97, 99, 103, 122, 124, 129, 130, 228, 234, 235, 493, 494, 636, 652], "recommend": [1, 3, 5, 8, 16, 17, 19, 22, 23, 24, 26, 28, 64, 65, 66, 72, 73, 81, 82, 87, 107, 108, 129, 135, 155, 192, 193, 194, 197, 198, 209, 235, 331, 352, 353, 355, 356, 358, 359, 360, 363, 364, 365, 394, 412, 427, 430, 629, 641, 646, 648, 649], "achiev": [1, 3, 4, 5, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 277, 295, 301, 354, 360, 365, 378, 426, 428, 429, 468, 630, 633, 634, 635, 636, 637, 645, 648, 649, 650, 652, 654, 655], "multidimension": [1, 3, 81, 121, 122, 652], "slicesampl": [1, 3, 97, 122, 130, 235, 493, 636, 652], "sampler": [1, 2, 3, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 115, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 131, 133, 135, 137, 235, 264, 339, 397, 402, 431, 490, 497, 633, 635, 636, 648, 649, 652], "One": [1, 3, 4, 5, 9, 36, 37, 41, 42, 43, 46, 51, 56, 57, 62, 63, 77, 86, 135, 141, 142, 143, 171, 175, 180, 181, 235, 268, 288, 297, 336, 381, 385, 416, 422, 457, 633, 634, 652, 655], "must": [1, 3, 4, 8, 12, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 115, 116, 117, 118, 122, 124, 129, 130, 131, 132, 133, 135, 137, 141, 142, 144, 147, 148, 151, 157, 159, 169, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 185, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 228, 231, 232, 235, 238, 240, 241, 247, 251, 253, 255, 257, 259, 261, 272, 275, 277, 278, 279, 282, 283, 285, 286, 287, 292, 295, 302, 303, 312, 318, 320, 323, 324, 327, 328, 329, 330, 342, 354, 357, 360, 365, 369, 374, 375, 377, 378, 379, 380, 381, 382, 385, 386, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 408, 410, 412, 413, 414, 415, 416, 417, 418, 426, 428, 429, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 455, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 627, 629, 633, 634, 635, 636, 639, 645, 647, 650, 652], "shape": [1, 3, 4, 16, 17, 19, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 115, 116, 117, 121, 124, 129, 135, 137, 141, 144, 145, 146, 147, 150, 151, 152, 157, 158, 159, 162, 163, 164, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 185, 186, 187, 192, 193, 194, 197, 198, 199, 200, 201, 202, 205, 207, 208, 214, 215, 220, 226, 228, 232, 234, 236, 243, 246, 247, 248, 253, 255, 256, 259, 261, 265, 266, 268, 272, 275, 276, 278, 281, 286, 292, 294, 295, 299, 301, 304, 305, 306, 307, 308, 309, 310, 311, 314, 316, 317, 318, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 332, 336, 337, 338, 339, 340, 341, 342, 347, 348, 350, 353, 354, 355, 356, 358, 359, 360, 365, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 389, 392, 393, 395, 396, 397, 399, 400, 401, 408, 412, 413, 414, 415, 417, 418, 422, 426, 427, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 462, 468, 472, 523, 524, 527, 528, 529, 619, 627, 628, 629, 633, 634, 635, 636, 637, 639, 640, 643, 645, 646, 647, 648, 649, 651, 652, 654, 655], "clearli": [1, 3, 627], "dimension": [1, 65, 69, 72, 80, 81, 82, 200, 245, 318, 323, 433, 438, 446, 629, 649], "num_slic": [1, 3, 97, 103, 122, 129, 130, 493, 494, 652], "4": [1, 2, 3, 4, 8, 36, 38, 42, 43, 47, 51, 53, 56, 57, 58, 62, 65, 68, 70, 71, 72, 74, 75, 77, 78, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 115, 116, 117, 121, 122, 124, 129, 130, 137, 141, 142, 143, 144, 145, 146, 147, 151, 157, 158, 159, 160, 161, 162, 165, 167, 171, 172, 175, 178, 179, 180, 181, 182, 192, 193, 194, 197, 198, 199, 200, 201, 202, 213, 228, 229, 231, 232, 235, 240, 241, 247, 268, 275, 276, 277, 283, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 321, 322, 324, 326, 327, 328, 329, 330, 334, 335, 336, 338, 339, 340, 341, 342, 350, 353, 355, 356, 358, 359, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 384, 386, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 426, 427, 429, 430, 431, 451, 452, 476, 477, 532, 540, 550, 556, 627, 628, 632, 633, 634, 635, 636, 642, 648, 649, 650, 652, 653, 654, 655], "trajectory_kei": [1, 34, 129, 130], "traj_id": [1, 3, 4, 16, 17, 19, 30, 34, 47, 78, 232, 268, 641, 652], "total_fram": [1, 2, 3, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 47, 58, 70, 78, 232, 235, 268, 472, 477, 478, 480, 481, 482, 532, 612, 619, 630, 633, 634, 635, 636, 637, 641, 643, 648, 649, 652, 654], "dim": [1, 3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 72, 73, 76, 77, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 129, 198, 219, 235, 236, 257, 261, 274, 275, 278, 287, 292, 322, 346, 351, 353, 355, 356, 358, 359, 377, 427, 430, 540, 541, 562, 566, 579, 580, 584, 591, 623, 627, 629, 634, 635, 637, 648, 650, 652], "ndim": [1, 3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 65, 72, 76, 77, 81, 82, 85, 88, 89, 90, 91, 92, 115, 117, 121, 122, 135, 137, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 257, 295, 377, 484, 486, 498], "parallelenv": [1, 3, 4, 16, 17, 19, 22, 26, 30, 31, 109, 135, 141, 144, 147, 151, 159, 166, 172, 173, 174, 175, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 283, 284, 293, 295, 318, 323, 428, 451, 620, 625, 633, 634, 635, 638, 647, 654, 655], "make_env": [1, 4, 171, 180, 186, 283, 292, 293, 451, 614, 615, 627, 633, 634, 654, 655], "regular": [1, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 64, 66, 73, 87, 107, 108, 109, 121, 127, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 291, 292, 295, 298, 300, 311, 318, 323, 342, 353, 355, 356, 357, 358, 359, 375, 379, 380, 381, 382, 402, 412, 427, 428, 429, 430, 475, 476, 477, 625, 630, 633, 634, 637, 638, 639, 643, 645, 652, 655], "behav": [1, 4, 153, 165, 316, 321, 336, 400, 408, 410, 426, 429, 637, 651], "accordingli": [1, 3, 4, 64, 66, 73, 87, 107, 108, 122, 196, 198, 241, 257, 276, 277, 321, 353, 355, 356, 358, 359, 379, 427, 430, 636], "3": [1, 3, 4, 7, 8, 11, 12, 16, 17, 19, 22, 28, 30, 31, 33, 36, 37, 38, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 77, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 115, 117, 121, 122, 124, 129, 130, 135, 137, 141, 144, 145, 146, 147, 150, 151, 152, 153, 154, 159, 162, 163, 164, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 229, 231, 232, 235, 239, 240, 241, 245, 247, 248, 253, 255, 259, 261, 263, 265, 266, 268, 271, 272, 275, 276, 277, 278, 281, 283, 284, 285, 286, 288, 290, 293, 295, 296, 298, 299, 301, 302, 303, 305, 306, 307, 309, 312, 314, 316, 317, 318, 321, 322, 323, 324, 326, 327, 329, 330, 331, 336, 339, 341, 351, 352, 353, 354, 355, 356, 358, 359, 360, 365, 369, 370, 371, 372, 374, 375, 378, 380, 381, 384, 385, 386, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 404, 408, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 439, 442, 443, 444, 445, 447, 448, 449, 450, 451, 453, 470, 523, 540, 563, 628, 630, 632, 633, 634, 635, 636, 638, 639, 641, 642, 648, 649, 650, 652, 653, 654, 655], "isn": [1, 3, 4, 9, 16, 17, 19, 22, 23, 24, 26, 28, 64, 66, 73, 87, 103, 107, 108, 121, 135, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 198, 200, 201, 202, 231, 247, 253, 353, 355, 356, 358, 359, 374, 381, 427, 430, 433, 639, 640, 642, 648, 649], "current": [1, 3, 4, 13, 15, 16, 17, 18, 19, 22, 25, 27, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 119, 122, 124, 130, 141, 144, 147, 151, 153, 159, 166, 169, 170, 171, 172, 175, 180, 181, 182, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 231, 232, 235, 253, 264, 277, 278, 279, 283, 284, 285, 293, 295, 313, 340, 344, 348, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 377, 392, 394, 395, 402, 409, 412, 414, 415, 426, 427, 428, 429, 430, 433, 456, 627, 630, 633, 634, 635, 636, 640, 648, 649, 650, 652, 655], "fulli": [1, 3, 9, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 317, 320, 322, 354, 360, 365, 426, 428, 429, 634, 637, 640, 650, 652], "ani": [1, 2, 3, 4, 6, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 124, 125, 128, 130, 131, 133, 135, 136, 137, 139, 140, 141, 144, 147, 148, 151, 152, 159, 166, 171, 172, 173, 174, 175, 180, 181, 182, 183, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 250, 251, 253, 254, 255, 262, 263, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 288, 289, 291, 292, 293, 295, 296, 301, 302, 303, 309, 310, 324, 333, 339, 352, 353, 354, 355, 356, 358, 359, 360, 365, 373, 377, 381, 382, 383, 384, 392, 393, 394, 395, 396, 397, 399, 400, 401, 408, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 433, 435, 436, 451, 453, 458, 465, 472, 474, 475, 476, 478, 480, 481, 482, 484, 486, 490, 493, 494, 495, 496, 497, 498, 499, 501, 505, 509, 523, 524, 525, 527, 528, 529, 531, 532, 537, 544, 545, 546, 583, 590, 626, 627, 629, 630, 633, 634, 635, 636, 637, 639, 640, 645, 648, 649, 650, 652, 654, 655], "consecut": [1, 4, 97, 128, 155, 323, 340, 453, 636, 638, 641, 649, 652, 655], "won": [1, 4, 5, 16, 17, 19, 22, 23, 24, 26, 28, 38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 103, 107, 108, 109, 141, 144, 147, 148, 150, 151, 159, 166, 167, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 263, 290, 295, 353, 354, 355, 356, 358, 359, 360, 365, 392, 426, 427, 428, 429, 430, 472, 623, 634, 635, 638, 639], "therebi": [1, 35, 451, 629, 633, 634], "interrupt": [1, 3, 151, 202, 377, 439], "start": [1, 3, 4, 5, 6, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 35, 53, 70, 85, 86, 87, 97, 105, 121, 122, 129, 130, 141, 144, 147, 148, 151, 156, 159, 162, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 226, 242, 467, 625, 632, 633, 634, 636, 637, 644, 649, 650, 652, 653, 655], "get": [1, 3, 4, 5, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 42, 43, 45, 51, 53, 64, 65, 66, 68, 69, 72, 73, 75, 77, 80, 87, 97, 99, 103, 107, 108, 109, 115, 117, 122, 129, 130, 131, 133, 135, 137, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 208, 213, 214, 215, 229, 234, 236, 240, 243, 245, 246, 255, 259, 264, 277, 278, 281, 285, 292, 293, 315, 320, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 369, 378, 379, 382, 389, 426, 427, 429, 430, 433, 434, 435, 436, 437, 453, 457, 625, 627, 628, 629, 632, 633, 634, 635, 636, 637, 644, 646, 648, 649, 650, 652, 653, 654, 655], "rid": [1, 45, 68, 80, 354, 360, 365, 426, 429], "natur": [1, 3, 4, 14, 23, 24, 26, 192, 627, 633, 639, 640, 641, 652], "background": [1, 14, 16, 17, 22, 23, 24, 26, 31, 652], "simpli": [1, 2, 4, 7, 64, 66, 73, 86, 87, 107, 108, 133, 135, 140, 198, 204, 248, 272, 291, 353, 355, 356, 358, 359, 410, 426, 427, 429, 430, 433, 627, 628, 629, 633, 635, 640, 645, 648, 649, 655], "replay_buff": [1, 2, 3, 9, 16, 17, 19, 22, 28, 30, 31, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 235, 468, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 532, 619, 630, 633, 634, 635, 636, 641, 648, 649, 652], "rb": [1, 3, 16, 17, 19, 22, 30, 47, 65, 70, 71, 72, 78, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 116, 121, 122, 124, 129, 130, 135, 235, 268, 295, 634, 636, 637, 641, 643, 649, 651, 652, 654], "paus": [1, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31], "sleep": [1, 16, 17, 19, 22, 30, 70, 148, 655], "10": [1, 3, 4, 8, 29, 34, 36, 37, 38, 41, 45, 46, 53, 54, 58, 65, 70, 71, 72, 74, 80, 81, 82, 83, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 115, 116, 117, 121, 124, 129, 130, 135, 137, 141, 142, 143, 144, 147, 148, 151, 157, 158, 159, 165, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 185, 186, 192, 193, 194, 197, 198, 200, 201, 202, 205, 207, 208, 210, 212, 228, 229, 232, 234, 235, 240, 241, 277, 279, 280, 281, 292, 293, 295, 299, 301, 304, 305, 307, 309, 311, 315, 316, 317, 318, 320, 321, 322, 323, 326, 327, 328, 338, 340, 351, 353, 355, 356, 358, 359, 378, 382, 385, 389, 393, 397, 399, 406, 412, 413, 414, 418, 427, 430, 431, 433, 434, 435, 436, 439, 453, 462, 524, 527, 528, 529, 534, 539, 582, 600, 630, 633, 634, 635, 636, 637, 638, 639, 643, 648, 650, 652, 654, 655], "i": [1, 3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 38, 42, 43, 45, 47, 50, 51, 58, 65, 68, 69, 72, 75, 77, 78, 80, 82, 83, 87, 107, 108, 109, 110, 111, 115, 117, 121, 122, 129, 130, 137, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 241, 242, 257, 263, 268, 271, 283, 285, 290, 295, 317, 318, 322, 323, 342, 353, 354, 355, 356, 358, 359, 360, 365, 368, 375, 377, 378, 380, 381, 382, 392, 394, 395, 396, 400, 401, 408, 409, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 433, 434, 435, 436, 462, 612, 627, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 648, 649, 650, 652, 654, 655], "rang": [1, 3, 4, 5, 9, 65, 70, 71, 72, 74, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 115, 117, 124, 135, 141, 144, 147, 148, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 199, 200, 201, 202, 207, 268, 281, 292, 295, 296, 317, 322, 339, 353, 355, 356, 358, 359, 409, 417, 418, 427, 430, 629, 630, 633, 635, 636, 637, 640, 641, 643, 648, 649, 650, 652, 654], "optim_step": [1, 299, 326, 637, 643], "rest": [1, 2, 16, 17, 22, 45, 300, 628, 635, 636, 648, 650, 654], "multithread": [1, 3, 4, 65, 72, 81, 82, 97, 99, 100, 101, 102, 103, 104, 105, 106, 166, 167, 641, 652], "mind": [1, 4, 97, 103, 122, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 648, 649], "gil": 1, "relat": [1, 3, 4, 5, 11, 42, 65, 171, 197, 250, 392, 393, 395, 396, 397, 399, 400, 401, 408, 412, 413, 414, 415, 417, 418, 634, 643, 650], "restrict": [1, 3, 4, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430, 629, 634, 645, 651, 652, 655], "hand": [1, 3, 4, 8, 28, 42, 648, 649, 650], "let": [1, 2, 3, 4, 7, 8, 12, 34, 38, 45, 50, 53, 58, 65, 68, 69, 72, 75, 80, 81, 82, 83, 109, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 295, 329, 330, 354, 360, 365, 374, 426, 428, 429, 466, 627, 629, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "child": [1, 21, 38, 45, 50, 53, 58, 68, 69, 75, 80, 87, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429, 634], "fill": [1, 16, 17, 19, 22, 23, 24, 26, 28, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 97, 151, 202, 231, 278, 291, 323, 433, 636, 650, 651], "truli": [1, 291, 654], "decoupl": [1, 14, 16, 17, 19, 22, 23, 24, 26, 30, 633, 640, 654], "been": [1, 3, 4, 6, 8, 9, 13, 23, 26, 28, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 74, 76, 77, 85, 88, 89, 90, 91, 92, 124, 128, 141, 144, 147, 151, 155, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 255, 276, 277, 284, 285, 316, 318, 321, 323, 331, 377, 392, 410, 412, 414, 426, 429, 633, 634, 635, 636, 647, 648, 649, 650, 652, 654, 655], "shut": [1, 14, 16, 17, 19, 22, 23, 24, 26, 30, 31, 175, 181], "down": [1, 5, 14, 16, 17, 19, 22, 23, 24, 26, 30, 31, 175, 181, 629, 636, 638], "async_shutdown": [1, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 70], "mean": [1, 2, 3, 4, 5, 8, 16, 17, 18, 19, 22, 23, 24, 26, 28, 30, 64, 66, 73, 81, 85, 87, 97, 107, 108, 116, 121, 122, 129, 130, 135, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 205, 231, 259, 283, 292, 293, 297, 298, 299, 310, 313, 316, 318, 320, 321, 323, 326, 338, 339, 347, 348, 353, 355, 356, 358, 359, 378, 382, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 426, 427, 429, 430, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 465, 476, 628, 629, 633, 634, 635, 637, 639, 648, 649, 650, 652, 655], "drastic": [1, 158, 171, 652], "load": [1, 3, 7, 8, 16, 17, 19, 22, 30, 31, 32, 33, 38, 45, 47, 50, 58, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 78, 80, 81, 82, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 124, 131, 132, 133, 137, 138, 141, 144, 146, 147, 151, 159, 171, 172, 175, 180, 181, 182, 183, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 225, 292, 293, 295, 352, 353, 354, 355, 356, 358, 359, 360, 365, 426, 427, 428, 429, 430, 472, 474, 476, 477, 623, 627, 630, 633, 635, 637, 645, 646, 652], "factor": [1, 9, 12, 35, 45, 58, 268, 295, 297, 298, 315, 319, 333, 340, 348, 349, 393, 399, 402, 403, 405, 416, 439, 633, 634, 637, 639, 643, 648, 649, 652, 655], "signific": [1, 3, 4, 6, 9, 635, 654, 655], "understand": [1, 3, 9, 14, 23, 24, 26, 45, 627, 633, 634, 637, 638, 639, 645, 648, 649], "affect": [1, 4, 9, 38, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 241, 285, 293, 295, 353, 354, 355, 356, 358, 359, 360, 365, 426, 427, 428, 429, 430, 433, 434, 435, 436, 648], "legitim": [1, 629, 655], "unless": [1, 3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 103, 107, 108, 109, 112, 128, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 283, 285, 293, 295, 300, 353, 354, 355, 356, 358, 359, 360, 365, 392, 393, 395, 408, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 635], "benchmark": [1, 3, 4, 10, 142, 143, 151, 157, 158, 202], "backend": [1, 2, 4, 8, 16, 17, 19, 22, 23, 24, 28, 29, 30, 87, 141, 144, 147, 150, 151, 159, 171, 172, 175, 180, 181, 182, 191, 192, 193, 194, 197, 200, 201, 202, 225, 296, 352, 354, 360, 365, 505, 509, 627, 630, 633, 635, 636, 637, 638, 641, 642, 646, 650], "gloo": [1, 23, 24, 29], "nccl": [1, 23, 24, 352, 363, 364], "mpi": [1, 23, 24], "distributeddatacollector": [1, 25, 29, 625], "rpc": [1, 16, 17, 19, 22, 26, 27, 29, 30, 31, 71, 352], "rpcdatacollector": [1, 27, 29, 625], "launcher": [1, 23, 24, 26, 29], "rai": [1, 16, 17, 18, 19, 22, 28, 30, 31, 32, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 193, 194, 197, 207, 209, 213, 214, 352, 357, 362, 365, 627], "submitit": [1, 23, 24, 26, 29], "mode": [1, 4, 7, 14, 16, 17, 19, 22, 23, 24, 26, 28, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 107, 108, 109, 141, 144, 147, 151, 156, 159, 166, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 243, 246, 277, 285, 292, 293, 295, 300, 310, 318, 319, 320, 323, 328, 336, 347, 348, 349, 353, 354, 355, 356, 358, 359, 360, 365, 368, 378, 382, 394, 410, 412, 426, 427, 428, 429, 430, 451, 461, 466, 582, 627, 628, 629, 633, 634, 648, 649, 654, 655], "find": [1, 5, 7, 8, 23, 24, 26, 65, 67, 83, 129, 130, 205, 297, 321, 340, 465, 469, 633, 634, 637, 639, 640, 645, 648, 649], "folder": [1, 3, 64, 66, 73, 87, 107, 108, 185, 198, 235, 353, 355, 356, 358, 359, 427, 430, 634], "machin": [1, 3, 8, 23, 24, 26, 58, 102, 155, 648, 649, 654], "wonder": 1, "why": [1, 3, 4, 226, 629, 648, 650, 655], "instead": [1, 3, 4, 5, 8, 9, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 32, 36, 38, 41, 45, 50, 58, 68, 69, 70, 75, 80, 84, 87, 103, 107, 108, 109, 121, 122, 141, 144, 147, 151, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 250, 295, 296, 297, 298, 301, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 331, 334, 335, 338, 340, 343, 344, 346, 351, 353, 354, 355, 356, 358, 359, 360, 365, 373, 375, 377, 380, 381, 385, 388, 392, 394, 395, 397, 400, 401, 402, 408, 409, 412, 413, 414, 415, 426, 427, 428, 429, 430, 431, 433, 437, 441, 623, 627, 629, 636, 637, 638, 639, 643, 650, 652, 655], "lower": [1, 3, 4, 28, 38, 39, 121, 122, 238, 292, 293, 343, 344, 385, 412, 635, 648, 650], "io": [1, 12, 97, 103, 157, 158, 166, 169, 170, 183, 184, 321, 322, 637], "footprint": [1, 3, 652], "commun": [1, 3, 4, 25, 27, 87, 107, 108, 159, 171, 175, 180, 198, 201, 352, 353, 355, 356, 358, 359, 363, 364, 427, 430, 626, 627, 635, 655], "yet": [1, 142, 143, 157, 428, 651], "plai": [1, 4, 173, 174, 182, 192, 235, 634, 635, 640, 652, 655], "role": [1, 4, 108, 164, 192, 194, 197, 205, 214, 215, 360, 365, 429, 627, 634, 640, 646, 655], "opposit": [1, 648], "direct": [1, 3, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 316, 321, 354, 360, 365, 410, 426, 428, 429, 627, 634, 640, 646], "faster": [1, 3, 5, 34, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 104, 105, 121, 166, 327, 433, 434, 435, 436, 636, 637, 648, 649], "share": [1, 2, 4, 7, 9, 16, 17, 19, 22, 30, 34, 64, 66, 72, 73, 81, 82, 85, 87, 107, 108, 110, 113, 115, 116, 117, 118, 122, 124, 125, 129, 131, 133, 137, 148, 171, 180, 193, 194, 197, 198, 207, 213, 214, 275, 283, 292, 293, 318, 323, 329, 330, 353, 355, 356, 358, 359, 370, 371, 372, 392, 393, 394, 395, 396, 400, 401, 408, 409, 412, 413, 414, 415, 417, 418, 427, 430, 490, 623, 625, 627, 628, 629, 630, 635, 637, 643, 645, 646, 647, 648, 649, 654, 655], "among": [1, 4, 60, 173, 174, 283, 401, 415, 629, 648, 649], "prohibit": [1, 4, 19, 135], "slow": [1, 3, 4, 5, 12, 64, 66, 73, 87, 107, 108, 116, 129, 130, 198, 353, 355, 356, 358, 359, 427, 430], "compar": [1, 4, 103, 135, 393, 395, 408, 413, 415, 417, 418, 466, 627, 629, 633, 635, 637, 639, 640, 648, 649, 652, 655], "gpu": [1, 3, 8, 9, 31, 33, 38, 45, 50, 58, 68, 69, 75, 80, 109, 115, 117, 137, 141, 144, 147, 151, 152, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 352, 354, 357, 360, 361, 362, 365, 426, 428, 429, 627, 633, 635, 636, 648, 649, 655], "driver": [1, 8], "keyword": [1, 3, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 117, 118, 121, 122, 124, 127, 129, 130, 133, 137, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 157, 158, 159, 163, 164, 166, 167, 169, 170, 171, 172, 175, 177, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 228, 229, 231, 232, 234, 235, 236, 238, 239, 240, 241, 244, 247, 248, 249, 251, 253, 254, 255, 257, 262, 263, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 301, 315, 318, 323, 327, 328, 329, 330, 340, 352, 353, 354, 355, 356, 358, 359, 360, 365, 369, 373, 374, 377, 378, 379, 381, 382, 385, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 406, 407, 408, 409, 411, 412, 413, 414, 415, 417, 418, 421, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 441, 451, 453, 458, 460, 472, 476, 477, 620, 633, 634, 635, 637, 639, 642, 648, 649, 652, 654, 655], "mani": [1, 2, 3, 4, 5, 72, 87, 107, 108, 142, 143, 145, 146, 147, 150, 152, 153, 157, 158, 166, 167, 177, 198, 200, 205, 207, 278, 353, 355, 356, 358, 359, 392, 394, 401, 409, 412, 426, 427, 430, 474, 627, 628, 633, 634, 635, 637, 638, 639, 641, 643, 648, 649, 650, 652, 654, 655], "eg": [1, 3, 4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 73, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 110, 115, 116, 117, 118, 131, 133, 137, 141, 144, 145, 146, 147, 150, 151, 152, 153, 155, 159, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 245, 276, 285, 296, 329, 353, 355, 356, 358, 359, 373, 427, 430, 453], "gymnasium": [1, 3, 4, 6, 16, 17, 19, 22, 30, 80, 141, 144, 147, 150, 151, 152, 156, 159, 160, 161, 171, 172, 175, 180, 181, 182, 191, 192, 193, 194, 197, 200, 201, 202, 225, 248, 272, 276, 291, 296, 505, 634, 635, 637, 650, 654], "warn": [1, 4, 64, 66, 69, 73, 75, 87, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 285, 292, 297, 315, 340, 353, 355, 356, 358, 359, 427, 430, 461, 627, 634, 645, 646], "quickli": [1, 4, 634, 648, 649, 655], "becom": [1, 3, 4, 5, 28, 316, 321, 648, 649, 655], "quit": [1, 4, 12, 97, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 633, 634, 635, 637, 639, 648, 649, 655], "annoi": [1, 4], "filter": [1, 3, 4, 5, 86, 122, 129, 130, 392, 393, 395, 396, 400, 401, 408, 412, 413, 415, 638], "out": [1, 3, 4, 5, 6, 10, 15, 18, 20, 21, 25, 27, 28, 32, 33, 38, 45, 50, 53, 58, 64, 66, 68, 69, 73, 75, 80, 86, 87, 99, 103, 107, 108, 109, 113, 122, 129, 130, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 275, 278, 295, 297, 316, 317, 321, 327, 328, 331, 332, 333, 353, 354, 355, 356, 358, 359, 360, 365, 369, 373, 374, 375, 378, 379, 380, 381, 382, 410, 424, 425, 426, 427, 428, 429, 430, 627, 629, 630, 633, 634, 635, 636, 637, 638, 639, 641, 648, 649, 650, 652, 654, 655], "still": [1, 3, 4, 10, 45, 68, 80, 87, 88, 103, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 283, 285, 340, 354, 360, 365, 409, 410, 426, 429, 627, 629, 633, 634, 636, 647, 650, 652, 655], "wish": [1, 4, 12, 16, 17, 22, 103, 225, 640, 652], "displai": [1, 4, 8, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 472, 630, 633, 634, 645, 649, 650], "filter_warnings_subprocess": [1, 4], "fals": [1, 3, 4, 12, 13, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 227, 228, 229, 231, 232, 235, 236, 239, 241, 243, 246, 247, 248, 250, 253, 254, 255, 257, 258, 259, 261, 263, 264, 265, 266, 268, 270, 271, 272, 275, 276, 278, 281, 282, 283, 284, 285, 286, 287, 288, 290, 292, 293, 295, 296, 297, 298, 299, 301, 302, 303, 305, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 340, 341, 342, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359, 360, 362, 365, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 392, 393, 394, 395, 396, 397, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 422, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 442, 443, 444, 445, 447, 448, 449, 450, 451, 453, 460, 461, 464, 465, 466, 468, 469, 472, 477, 478, 480, 481, 482, 484, 485, 486, 487, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 536, 537, 562, 565, 575, 586, 598, 599, 600, 601, 602, 608, 609, 610, 623, 627, 628, 629, 630, 633, 634, 635, 636, 637, 642, 643, 645, 646, 647, 648, 649, 650, 651, 654, 655], "power": [2, 12, 634], "top": [2, 4, 5, 109, 135, 142, 143, 157, 158, 242, 284, 299, 326, 354, 360, 365, 547, 639], "hydra": [2, 476, 630], "dataclass": [2, 64, 66, 73, 85, 87, 107, 108, 198, 353, 355, 356, 358, 359, 410, 427, 430, 630], "overridden": [2, 3, 4, 15, 18, 20, 21, 25, 27, 38, 45, 50, 68, 69, 75, 80, 97, 100, 101, 103, 104, 105, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 297, 298, 301, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 331, 334, 335, 338, 340, 343, 344, 346, 351, 373, 375, 377, 380, 385, 388, 433, 435, 436, 636, 648], "extend": [2, 3, 9, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 47, 53, 65, 68, 70, 71, 72, 78, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 114, 115, 118, 121, 122, 124, 125, 129, 130, 133, 135, 136, 139, 140, 192, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 228, 234, 268, 284, 295, 298, 410, 426, 428, 429, 468, 476, 625, 627, 629, 630, 633, 634, 635, 637, 641, 643, 648, 649, 651, 652, 654], "advantag": [2, 4, 9, 200, 207, 314, 392, 394, 409, 412, 414, 426, 428, 433, 434, 435, 436, 437, 438, 440, 442, 444, 446, 447, 449, 627, 629, 630, 633, 634, 635, 636, 649, 650, 655], "easi": [2, 4, 6, 12, 97, 102, 141, 144, 145, 146, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 297, 315, 340, 627, 628, 629, 633, 634, 635, 646, 649, 651, 652, 654, 655], "glimps": 2, "go": [2, 3, 4, 8, 116, 162, 171, 241, 264, 268, 373, 439, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "sota": [2, 16, 17, 165, 251, 414, 462, 614, 627, 630, 633, 634, 654], "ppo_train": [2, 630], "help": [2, 4, 5, 38, 45, 50, 58, 68, 69, 75, 80, 85, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 247, 295, 354, 360, 365, 392, 394, 409, 412, 414, 426, 428, 429, 476, 626, 629, 630, 633, 634, 635, 636, 645, 646, 648, 649], "overrid": [2, 4, 15, 18, 20, 21, 25, 27, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 72, 75, 76, 77, 80, 85, 88, 89, 90, 91, 92, 97, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 231, 295, 310, 354, 360, 365, 426, 428, 429, 453, 623, 628, 630, 645], "reproduc": [2, 4, 69, 75, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 235, 253, 477, 633, 635, 637, 649], "command": [2, 7, 8, 11, 175, 181, 182, 635, 645, 648, 649, 650, 655], "here": [2, 3, 4, 5, 8, 9, 10, 11, 16, 17, 28, 104, 105, 135, 141, 144, 145, 146, 147, 151, 155, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 212, 235, 283, 331, 460, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 641, 643, 648, 649, 650, 652, 654, 655], "minim": [2, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 455, 627, 630, 652], "config": [2, 7, 8, 263, 290, 304, 309, 338, 476, 613, 614, 615, 617, 620, 630], "yaml": 2, "training_env": [2, 630], "env_nam": [2, 7, 141, 142, 144, 145, 147, 148, 150, 151, 153, 157, 159, 160, 166, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 630, 633, 635, 655], "cartpol": [2, 3, 4, 12, 47, 58, 78, 80, 141, 144, 145, 146, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 231, 232, 235, 240, 271, 277, 292, 295, 377, 451, 634, 636, 639, 641, 642, 643, 652, 655], "v1": [2, 3, 4, 12, 16, 17, 19, 22, 28, 29, 30, 31, 47, 58, 70, 78, 80, 87, 99, 101, 107, 108, 109, 135, 141, 144, 147, 148, 150, 151, 152, 157, 158, 159, 166, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 231, 232, 235, 238, 240, 241, 248, 254, 255, 259, 266, 268, 271, 272, 273, 276, 277, 278, 279, 280, 283, 284, 286, 292, 293, 295, 301, 318, 323, 353, 355, 356, 358, 359, 377, 422, 427, 428, 430, 442, 443, 444, 445, 447, 448, 449, 450, 451, 628, 630, 634, 636, 638, 639, 640, 641, 642, 643, 650, 652, 654, 655], "part": [2, 3, 4, 5, 9, 38, 45, 50, 58, 68, 69, 74, 75, 80, 87, 97, 100, 101, 103, 104, 105, 109, 122, 141, 142, 144, 147, 151, 157, 159, 169, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 234, 259, 268, 271, 295, 354, 360, 365, 386, 426, 428, 429, 462, 623, 627, 629, 633, 635, 636, 637, 643, 648, 650, 655], "tell": [2, 3, 4, 5, 8, 141, 173, 174, 283, 633, 636, 641, 648, 649], "includ": [2, 3, 4, 5, 8, 10, 28, 38, 45, 50, 58, 60, 68, 69, 75, 80, 85, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 131, 133, 137, 141, 144, 147, 151, 159, 165, 169, 170, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 250, 253, 277, 283, 285, 292, 293, 295, 318, 323, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 392, 395, 401, 410, 412, 415, 426, 427, 428, 429, 430, 465, 476, 532, 612, 627, 628, 630, 633, 634, 635, 636, 637, 645, 646, 648, 649, 650, 652, 655], "target": [2, 3, 5, 9, 28, 35, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 277, 295, 339, 352, 354, 360, 365, 381, 382, 392, 393, 394, 395, 396, 397, 399, 401, 402, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 426, 428, 429, 431, 432, 433, 434, 435, 436, 437, 471, 477, 612, 618, 619, 629, 630, 636, 637, 643, 648, 650], "proper": [2, 3, 4, 5, 7, 8, 209, 352, 433, 434, 435, 436, 627, 634, 635, 645, 648, 649, 650, 652], "specifi": [2, 3, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 141, 144, 147, 151, 159, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 240, 242, 243, 244, 246, 271, 274, 277, 282, 286, 287, 295, 296, 299, 321, 352, 353, 354, 355, 356, 358, 359, 360, 363, 364, 365, 381, 382, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 426, 427, 428, 429, 430, 460, 628, 633, 635, 636, 637, 641, 645, 648], "select": [2, 5, 45, 65, 68, 70, 71, 72, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 124, 144, 163, 164, 173, 174, 176, 185, 186, 192, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 251, 254, 255, 257, 258, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 288, 289, 291, 292, 295, 299, 352, 354, 360, 365, 374, 379, 426, 428, 429, 470, 628, 629, 633, 637, 638, 646, 648, 652], "name": [2, 3, 4, 7, 8, 16, 17, 19, 22, 32, 33, 38, 42, 43, 45, 50, 51, 58, 64, 66, 68, 69, 73, 75, 77, 80, 86, 87, 97, 100, 102, 105, 106, 107, 108, 109, 141, 142, 144, 145, 147, 151, 157, 159, 162, 163, 164, 166, 169, 171, 172, 173, 174, 175, 177, 180, 181, 182, 185, 186, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 227, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 245, 247, 248, 249, 251, 253, 254, 255, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 291, 292, 295, 296, 318, 323, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 374, 379, 392, 393, 394, 395, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 418, 426, 427, 428, 429, 430, 431, 433, 435, 436, 437, 451, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 627, 630, 633, 634, 635, 636, 637, 640, 641, 642, 645, 648, 649, 650, 651, 655], "syntax": [2, 391, 630, 633], "dmcontrol": [2, 4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "brax": [2, 9, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 266, 502, 638, 655], "observ": [2, 3, 4, 9, 16, 17, 19, 22, 28, 30, 31, 35, 47, 53, 58, 70, 78, 80, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 112, 113, 120, 122, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 221, 226, 228, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 252, 253, 254, 255, 257, 259, 260, 261, 265, 266, 267, 268, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 295, 301, 304, 305, 306, 307, 308, 309, 312, 315, 318, 323, 329, 334, 335, 338, 339, 340, 342, 343, 369, 370, 371, 372, 373, 374, 377, 378, 379, 386, 387, 392, 393, 394, 395, 396, 397, 399, 400, 401, 404, 408, 409, 412, 413, 414, 415, 417, 418, 428, 431, 433, 434, 435, 436, 437, 451, 453, 476, 477, 528, 619, 627, 628, 629, 630, 634, 635, 636, 637, 638, 639, 640, 642, 643, 647, 648, 649, 650, 652, 654, 655], "reward": [2, 3, 4, 16, 17, 19, 44, 45, 47, 49, 53, 58, 59, 64, 73, 74, 78, 80, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 121, 122, 135, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 228, 229, 232, 233, 238, 239, 243, 244, 246, 247, 248, 253, 255, 256, 257, 261, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 282, 284, 285, 286, 287, 289, 290, 292, 293, 295, 299, 318, 326, 373, 377, 387, 392, 393, 395, 396, 397, 399, 400, 401, 404, 408, 410, 412, 413, 414, 415, 417, 418, 426, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 464, 465, 466, 469, 476, 477, 623, 629, 630, 633, 634, 635, 636, 637, 638, 642, 645, 646, 648, 649, 650, 654, 655], "neural": [2, 162, 173, 174, 302, 303, 337, 339, 345, 381, 433, 628, 634, 635, 636, 639, 648, 649, 650, 655], "mlp": [2, 165, 299, 302, 303, 305, 306, 307, 308, 314, 318, 323, 326, 330, 331, 370, 374, 389, 397, 399, 524, 628, 634, 637, 639, 640, 643, 647, 651, 654], "convnet": [2, 305, 306, 314, 329, 523, 636, 637, 639, 654], "writer": [2, 3, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 114, 117, 122, 124, 125, 129, 135, 136, 137, 140, 490, 491, 496, 497, 635, 652], "assign": [2, 4, 5, 16, 17, 22, 32, 38, 39, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 88, 107, 108, 109, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 283, 285, 295, 353, 354, 355, 356, 358, 359, 360, 363, 364, 365, 395, 396, 397, 399, 415, 426, 427, 428, 429, 430, 635, 639, 645, 648, 649, 652], "locat": [2, 3, 8, 64, 66, 73, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 223, 242, 247, 259, 270, 293, 319, 348, 349, 352, 353, 355, 356, 358, 359, 427, 430, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 627, 633, 634, 635, 642, 648, 649, 652], "batched_env": 2, "create_env_fn": [2, 16, 17, 19, 22, 23, 24, 26, 28, 148, 171, 180, 478, 480, 481, 482, 499, 532, 630, 633, 654], "transformed_env": [2, 239, 285, 638], "base_env": [2, 4, 141, 143, 144, 147, 151, 152, 158, 159, 170, 171, 172, 175, 180, 181, 182, 184, 192, 193, 194, 197, 200, 201, 202, 213, 228, 229, 232, 238, 240, 241, 243, 245, 246, 255, 261, 265, 267, 273, 276, 278, 279, 283, 285, 295, 453, 461, 501, 627, 630, 633, 634, 635, 637, 648, 651, 654, 655], "transform0": 2, "noop_reset": 2, "transform1": [2, 4], "step_count": [2, 3, 16, 17, 19, 58, 141, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 241, 276, 295, 581, 635, 636, 637, 638, 643], "noop": [2, 258, 564], "30": [2, 3, 4, 72, 80, 101, 109, 129, 130, 206, 231, 258, 343, 344, 451, 455, 458, 460, 519, 564, 627, 641, 646, 649, 650, 652], "max_step": [2, 4, 12, 135, 141, 144, 147, 151, 159, 163, 164, 165, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 200, 201, 202, 205, 276, 283, 295, 451, 581, 638, 639, 640, 642, 643, 648, 649, 654, 655], "200": [2, 3, 16, 17, 19, 28, 38, 45, 47, 50, 58, 68, 69, 70, 75, 78, 80, 97, 109, 141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 268, 295, 305, 306, 313, 343, 344, 354, 360, 365, 426, 428, 429, 451, 453, 633, 636, 637, 641, 643, 652], "step_count_kei": [2, 240, 241, 276, 581], "num_work": [2, 3, 16, 17, 25, 27, 64, 66, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 166, 171, 180, 213, 480, 481, 499, 630, 633, 634], "_partial_": [2, 478, 480, 481, 482, 484, 485, 486, 487, 490, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 523, 524, 525, 526, 527, 528, 529, 530, 531, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611], "individu": [2, 3, 5, 23, 24, 26, 28, 38, 45, 50, 58, 68, 69, 75, 80, 86, 109, 122, 124, 135, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 293, 295, 354, 360, 365, 394, 409, 412, 426, 428, 429, 633, 636, 649], "construct": [2, 3, 4, 6, 34, 38, 45, 50, 58, 65, 68, 69, 72, 75, 80, 81, 82, 85, 97, 109, 124, 141, 144, 147, 148, 150, 151, 159, 171, 172, 173, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 243, 246, 293, 295, 318, 323, 344, 354, 360, 365, 382, 426, 428, 429, 472, 627, 628, 634, 635, 636, 639, 648, 650, 652, 655], "repeat": [2, 3, 87, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 166, 167, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 203, 207, 213, 283, 299, 310, 352, 354, 360, 365, 588, 627, 635, 648, 649, 650], "layer": [2, 259, 292, 298, 302, 303, 305, 306, 311, 313, 316, 317, 318, 321, 322, 323, 324, 329, 330, 332, 333, 334, 335, 345, 346, 367, 376, 385, 524, 627, 628, 634, 635, 636, 637, 639, 648, 651], "track": [2, 3, 4, 5, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 82, 87, 107, 108, 121, 122, 128, 144, 198, 200, 211, 271, 280, 292, 293, 295, 340, 353, 355, 356, 358, 359, 377, 427, 428, 430, 458, 464, 474, 625, 634, 636, 638, 641, 649, 650, 652], "count": [2, 3, 4, 16, 17, 19, 22, 30, 53, 58, 87, 147, 148, 240, 276, 283, 293, 340, 352, 466, 472, 612, 627, 633, 634, 635, 636, 652, 655], "composit": [2, 3, 4, 36, 37, 39, 40, 41, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 87, 88, 89, 90, 91, 92, 94, 108, 109, 127, 133, 140, 141, 144, 147, 149, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 227, 229, 232, 243, 244, 245, 246, 248, 253, 255, 257, 265, 266, 272, 276, 278, 282, 283, 284, 286, 293, 295, 297, 299, 326, 369, 378, 382, 384, 385, 389, 392, 412, 428, 625, 627, 633, 635, 639, 645, 650], "combin": [2, 3, 5, 48, 69, 122, 208, 214, 215, 352, 417, 627, 630, 634, 637, 642, 652, 654], "both": [2, 3, 4, 8, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 32, 38, 42, 43, 45, 50, 51, 58, 65, 68, 69, 70, 71, 72, 75, 77, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 141, 144, 147, 148, 150, 151, 159, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 183, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 228, 235, 253, 266, 282, 283, 285, 295, 302, 303, 318, 322, 323, 324, 329, 330, 352, 354, 360, 362, 365, 370, 371, 372, 375, 380, 392, 394, 395, 396, 400, 401, 408, 409, 410, 412, 413, 414, 415, 417, 418, 426, 428, 429, 433, 465, 466, 532, 627, 628, 630, 633, 635, 637, 638, 640, 645, 646, 648, 649, 650, 651, 652, 655], "maximum": [2, 4, 5, 14, 16, 17, 18, 19, 22, 23, 24, 26, 28, 36, 58, 64, 66, 67, 74, 80, 83, 86, 87, 88, 106, 110, 115, 116, 117, 118, 121, 122, 137, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 207, 245, 269, 276, 277, 279, 298, 347, 348, 349, 354, 357, 360, 365, 385, 393, 395, 400, 401, 408, 410, 411, 415, 426, 429, 453, 468, 477, 627, 628, 633, 634, 635, 636, 639, 648, 649, 652], "length": [2, 3, 16, 17, 26, 36, 37, 38, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 67, 68, 74, 76, 77, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 103, 106, 108, 122, 129, 130, 133, 141, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 207, 215, 228, 235, 256, 264, 292, 299, 302, 303, 305, 307, 309, 316, 320, 321, 324, 326, 329, 330, 354, 360, 365, 369, 381, 386, 428, 429, 462, 468, 627, 633, 635, 636, 641, 643, 645, 650, 652, 655], "concept": [2, 3, 4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 339, 627, 634, 645, 652], "nest": [2, 3, 4, 34, 38, 42, 43, 45, 47, 49, 50, 51, 58, 59, 64, 66, 68, 69, 72, 73, 75, 77, 78, 79, 80, 87, 93, 107, 108, 109, 115, 116, 117, 120, 124, 137, 141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 227, 235, 276, 279, 283, 284, 295, 353, 354, 355, 356, 358, 359, 360, 365, 377, 412, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 451, 461, 465, 630, 634, 635, 637, 649, 650, 652, 654], "deep": [2, 4, 10, 235, 256, 305, 306, 307, 308, 311, 340, 392, 395, 407, 415, 416, 633, 648], "insid": [2, 4, 64, 66, 73, 87, 107, 108, 171, 198, 244, 353, 355, 356, 358, 359, 427, 430, 655], "factori": [2, 10, 16, 17, 19, 22, 23, 24, 26, 28, 70, 72, 81, 82, 83, 85, 213, 478, 499, 523, 524, 633], "onc": [2, 3, 4, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 103, 107, 108, 109, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 231, 257, 268, 278, 285, 295, 297, 340, 353, 354, 355, 356, 358, 359, 360, 365, 377, 426, 427, 428, 429, 430, 469, 628, 630, 634, 635, 636, 639, 642, 650, 652, 655], "per": [2, 3, 4, 5, 16, 17, 19, 22, 23, 24, 26, 28, 31, 100, 109, 121, 122, 129, 135, 155, 157, 158, 171, 173, 174, 215, 238, 257, 271, 302, 303, 313, 315, 329, 330, 352, 361, 377, 412, 453, 455, 458, 460, 472, 474, 477, 621, 622, 627, 630, 633, 634, 635, 636, 637, 639, 640, 643, 648, 649, 652, 654], "variabl": [2, 3, 4, 5, 8, 9, 21, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 69, 75, 76, 77, 85, 88, 89, 90, 91, 92, 97, 100, 101, 104, 105, 108, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 163, 164, 167, 168, 169, 170, 171, 172, 175, 177, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 197, 200, 201, 202, 207, 215, 239, 280, 284, 293, 316, 317, 318, 321, 322, 323, 326, 354, 360, 365, 370, 371, 372, 410, 413, 461, 627, 630, 634, 646], "interpol": [2, 124, 267, 572, 634, 637], "refer": [2, 4, 8, 9, 10, 12, 27, 28, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 74, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 107, 108, 109, 141, 144, 147, 150, 151, 152, 156, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 253, 283, 284, 285, 292, 295, 299, 312, 313, 326, 327, 328, 329, 330, 331, 334, 335, 343, 344, 353, 354, 355, 356, 358, 359, 360, 365, 372, 375, 392, 395, 402, 403, 404, 405, 412, 415, 426, 427, 428, 429, 430, 433, 438, 446, 627, 632, 633, 635, 637, 639, 640, 641, 642, 648, 649, 652], "flag": [2, 4, 9, 45, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 196, 197, 199, 200, 201, 202, 205, 254, 340, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 628, 648, 649, 650, 651], "script": [2, 8, 100, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 461, 619, 623, 628, 629, 630, 633, 634, 637, 642, 648, 649, 650, 652], "discov": [2, 5], "It": [2, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 116, 124, 127, 135, 140, 141, 144, 147, 151, 153, 159, 165, 166, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 229, 232, 234, 235, 247, 253, 255, 259, 264, 277, 283, 285, 291, 293, 295, 297, 305, 307, 313, 315, 329, 330, 339, 340, 341, 343, 344, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 365, 375, 377, 380, 382, 392, 393, 394, 395, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 416, 418, 426, 427, 428, 429, 430, 431, 432, 433, 451, 460, 465, 466, 476, 525, 626, 627, 628, 629, 633, 634, 636, 637, 638, 648, 649, 650, 651, 652, 654, 655], "print": [2, 3, 4, 7, 8, 16, 17, 19, 28, 29, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 121, 122, 124, 129, 130, 135, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 185, 186, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 225, 226, 227, 228, 231, 232, 235, 236, 240, 241, 243, 244, 245, 246, 254, 259, 265, 266, 268, 271, 276, 278, 279, 280, 281, 292, 293, 295, 302, 303, 305, 306, 307, 308, 309, 312, 314, 315, 318, 323, 324, 327, 328, 329, 330, 336, 339, 340, 342, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 369, 370, 371, 372, 373, 374, 377, 378, 379, 381, 382, 384, 386, 389, 410, 412, 426, 427, 428, 429, 430, 451, 619, 627, 628, 630, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "someth": [2, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 162, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429, 626, 634, 635, 650, 655], "policy_model": 2, "tanh_norm": 2, "value_model": [2, 403, 405], "policy_network": [2, 630], "value_network": [2, 326, 396, 397, 399, 400, 402, 408, 415, 433, 434, 435, 436, 629, 630, 633, 635, 637, 640, 643, 648], "tensor": [2, 3, 9, 16, 17, 19, 22, 23, 24, 26, 28, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 127, 129, 130, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 157, 158, 159, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 226, 227, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 245, 246, 247, 248, 250, 253, 254, 256, 259, 261, 263, 264, 265, 266, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 290, 292, 293, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 388, 390, 392, 393, 395, 396, 397, 399, 400, 401, 404, 405, 408, 410, 412, 413, 414, 415, 417, 418, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 465, 486, 498, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 648, 649, 650, 654, 655], "without_replac": 2, "round_robin": 2, "adam": [2, 194, 339, 348, 477, 601, 633, 634, 635, 636, 637, 640, 643, 648, 649, 650], "wandb": [2, 453, 457, 460, 522, 642, 654], "out_featur": [2, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 299, 302, 303, 305, 306, 307, 308, 313, 314, 318, 323, 324, 326, 329, 330, 332, 333, 354, 360, 365, 370, 374, 381, 389, 397, 399, 426, 428, 429, 524, 527, 528, 529, 628, 633, 636, 637, 639, 640, 643, 654], "in_featur": [2, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 302, 303, 305, 306, 307, 308, 314, 324, 329, 330, 332, 333, 354, 360, 365, 370, 381, 389, 397, 399, 426, 428, 429, 523, 524, 527, 528, 529, 637, 639, 640], "num_cel": [2, 302, 303, 305, 306, 307, 308, 313, 314, 318, 323, 324, 329, 330, 370, 389, 523, 524, 527, 528, 529, 630, 634, 635, 636, 637, 639, 640, 643, 648, 649, 654], "128": [2, 3, 97, 99, 103, 130, 142, 143, 157, 158, 306, 309, 634, 636, 637, 643, 648, 651, 652], "num_cal": 2, "in_kei": [2, 3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 45, 53, 68, 70, 80, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 141, 142, 143, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 299, 301, 311, 318, 323, 326, 341, 350, 351, 354, 357, 360, 365, 369, 370, 371, 372, 373, 374, 377, 378, 379, 381, 382, 384, 385, 386, 389, 392, 393, 394, 395, 396, 397, 399, 400, 401, 406, 408, 409, 412, 413, 414, 415, 417, 418, 426, 428, 429, 431, 433, 434, 435, 436, 452, 453, 525, 527, 528, 529, 535, 538, 539, 540, 541, 542, 543, 547, 548, 549, 550, 551, 554, 555, 556, 557, 558, 559, 560, 561, 563, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 619, 628, 633, 634, 635, 636, 637, 639, 640, 643, 646, 647, 648, 649, 650, 651, 652, 654, 655], "out_kei": [2, 3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 45, 53, 68, 70, 80, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 141, 142, 143, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 299, 301, 311, 312, 318, 323, 326, 341, 342, 350, 351, 354, 357, 360, 365, 369, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 389, 392, 393, 394, 395, 400, 401, 406, 408, 409, 412, 413, 414, 415, 417, 426, 428, 429, 431, 433, 434, 435, 436, 451, 453, 466, 525, 527, 528, 529, 535, 538, 539, 540, 541, 542, 543, 547, 548, 549, 550, 551, 554, 555, 556, 557, 558, 559, 560, 561, 563, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 619, 628, 633, 634, 635, 636, 637, 639, 643, 646, 647, 648, 649, 650, 651, 652, 654, 655], "state_valu": [2, 3, 371, 372, 386, 394, 400, 408, 409, 412, 413, 415, 433, 434, 435, 436, 438, 440, 442, 444, 446, 447, 449, 628, 633, 649], "loss_modul": [2, 394, 407, 409, 410, 412, 416, 426, 429, 471, 472, 477, 532, 618, 619, 629, 630, 633, 634, 635, 648, 649, 652], "100000": [2, 477, 634], "1024": [2, 28, 70, 309, 652], "lr": [2, 339, 477, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 630, 633, 634, 635, 636, 643, 648, 649, 650], "001": [2, 601, 602, 607, 610, 611, 633, 650], "actor_network": [2, 392, 393, 394, 395, 396, 398, 400, 401, 408, 409, 411, 412, 413, 414, 415, 417, 418, 426, 429, 471, 477, 531, 532, 629, 633, 635, 640, 648, 649], "critic_network": [2, 392, 394, 409, 412, 414, 531, 532, 635, 649], "exp_nam": [2, 12, 453, 454, 455, 458, 459, 460, 519, 521, 522, 619, 630, 634, 642, 643], "my_experi": 2, "0001": [2, 293, 313, 527, 598, 601, 605], "chang": [2, 4, 6, 8, 12, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 72, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 107, 108, 109, 110, 115, 116, 117, 118, 122, 128, 129, 131, 133, 137, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 239, 243, 244, 246, 248, 255, 257, 265, 266, 272, 276, 282, 284, 285, 286, 292, 293, 295, 321, 353, 354, 355, 356, 358, 359, 360, 365, 392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 476, 477, 627, 629, 630, 633, 636, 646, 648, 649, 650, 651, 652, 655], "rate": [2, 5, 12, 97, 292, 293, 432, 476, 634, 635, 648, 649], "multirun": 2, "01": [2, 4, 231, 259, 293, 298, 340, 388, 392, 394, 409, 412, 426, 598, 600, 602, 608, 609], "8": [2, 3, 4, 7, 8, 42, 43, 51, 58, 72, 77, 80, 97, 98, 99, 100, 101, 102, 103, 104, 105, 121, 122, 129, 130, 141, 142, 143, 144, 145, 146, 147, 151, 159, 169, 170, 171, 172, 175, 180, 181, 182, 183, 192, 193, 194, 197, 200, 201, 202, 228, 231, 240, 241, 277, 280, 286, 293, 302, 303, 305, 306, 314, 324, 370, 371, 372, 378, 381, 384, 408, 633, 634, 650, 652, 654], "my_custom_config": 2, "under": [2, 3, 4, 5, 28, 38, 42, 43, 45, 50, 51, 53, 58, 68, 69, 74, 75, 77, 80, 97, 99, 100, 101, 103, 104, 105, 109, 141, 144, 145, 146, 147, 150, 151, 152, 153, 159, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 256, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 288, 289, 291, 292, 295, 300, 354, 360, 365, 369, 374, 375, 378, 379, 380, 381, 382, 410, 426, 428, 429, 433, 434, 435, 436, 437, 453, 472, 627, 629, 633, 634, 639, 648, 650, 655], "hood": [2, 3, 4, 28, 97, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 300, 627, 650], "configstor": 2, "regist": [2, 4, 15, 18, 20, 21, 25, 27, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 183, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 226, 243, 246, 247, 271, 283, 285, 295, 297, 298, 301, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 331, 334, 335, 338, 340, 343, 344, 346, 351, 353, 354, 355, 356, 358, 359, 360, 365, 373, 375, 377, 380, 385, 388, 392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 451, 453, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 630, 633, 635, 638, 652], "type": [2, 4, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 105, 106, 107, 108, 109, 124, 141, 144, 147, 151, 159, 162, 165, 168, 171, 172, 173, 174, 175, 180, 181, 182, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 226, 232, 235, 239, 243, 244, 247, 248, 253, 255, 257, 263, 265, 266, 272, 276, 278, 282, 283, 284, 285, 286, 288, 290, 292, 293, 295, 297, 302, 303, 324, 329, 330, 333, 341, 350, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 374, 378, 381, 382, 389, 392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 421, 423, 426, 427, 428, 429, 430, 431, 439, 451, 530, 621, 625, 628, 630, 633, 634, 635, 637, 641, 645, 648, 649, 650, 652, 655], "safeti": [2, 16, 17, 22, 165, 171, 180, 293, 645], "id": [2, 8, 15, 18, 20, 21, 25, 27, 33, 34, 74, 87, 122, 124, 129, 130, 141, 144, 147, 150, 151, 159, 171, 172, 175, 180, 181, 182, 183, 184, 192, 193, 194, 197, 199, 200, 201, 202, 340, 352, 360, 395, 413, 456, 460, 522, 641, 652], "registr": [2, 21, 634], "happen": [2, 3, 4, 25, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 296, 340, 474, 634, 637, 640, 641, 642, 651, 655], "automat": [2, 3, 4, 6, 13, 21, 33, 39, 53, 85, 87, 88, 105, 107, 108, 115, 117, 124, 130, 137, 141, 142, 143, 144, 147, 150, 151, 152, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 196, 197, 198, 200, 201, 202, 211, 231, 243, 246, 259, 278, 291, 293, 302, 318, 323, 352, 353, 354, 355, 356, 358, 359, 360, 363, 364, 365, 369, 377, 378, 382, 427, 430, 451, 461, 465, 627, 628, 633, 635, 636, 638, 639, 648, 649, 650, 652, 654], "import": [2, 3, 4, 5, 7, 11, 12, 16, 17, 19, 22, 28, 29, 30, 31, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 121, 122, 124, 129, 130, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 161, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 225, 226, 227, 228, 229, 231, 232, 234, 235, 238, 240, 241, 247, 248, 253, 254, 255, 256, 259, 261, 263, 265, 266, 267, 268, 271, 272, 273, 275, 276, 277, 278, 279, 280, 283, 284, 286, 290, 292, 293, 295, 296, 299, 301, 305, 306, 307, 308, 311, 312, 314, 315, 316, 317, 318, 321, 322, 323, 324, 326, 329, 330, 331, 340, 341, 342, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 389, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 451, 453, 464, 466, 476, 477, 619, 627, 628, 629, 630, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 647, 648, 649, 650, 651, 652, 654, 655], "config_stor": 2, "cs": 2, "gymenvconfig": [2, 630], "batchedenvconfig": [2, 630], "tanhnormalmodelconfig": [2, 525, 630], "inherit": [2, 4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 325, 329, 330, 410, 630, 635, 648, 649], "envs_lib": 2, "envlibsconfig": 2, "mycustomenvconfig": 2, "_target_": [2, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 527, 528, 529, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611], "str": [2, 16, 17, 19, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 118, 121, 122, 124, 135, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 157, 159, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 224, 227, 231, 235, 247, 253, 254, 255, 263, 267, 276, 277, 280, 282, 283, 285, 286, 288, 290, 291, 292, 295, 296, 299, 311, 312, 318, 323, 325, 326, 327, 329, 330, 331, 341, 342, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 369, 374, 375, 378, 379, 380, 381, 382, 385, 386, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 422, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 527, 528, 529, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 623, 627, 634, 635, 637, 645], "my_modul": 2, "mycustomenv": 2, "myenv": [2, 171, 232, 243, 246], "custom_param": 2, "float": [2, 4, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 35, 38, 39, 42, 44, 45, 50, 58, 62, 65, 68, 69, 74, 75, 80, 81, 87, 88, 103, 107, 108, 109, 121, 122, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 231, 235, 239, 243, 246, 255, 256, 259, 263, 268, 269, 270, 277, 278, 281, 284, 285, 288, 290, 293, 295, 297, 298, 300, 301, 310, 313, 316, 319, 321, 324, 327, 328, 332, 333, 339, 343, 344, 347, 349, 352, 353, 354, 355, 356, 358, 359, 360, 365, 381, 385, 388, 390, 391, 392, 393, 394, 395, 399, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 426, 427, 428, 429, 430, 432, 438, 439, 440, 441, 442, 443, 444, 445, 446, 469, 477, 488, 524, 527, 531, 532, 543, 561, 563, 565, 573, 574, 575, 582, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 627, 633, 634, 652, 655], "def": [2, 3, 4, 29, 38, 45, 50, 58, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 141, 144, 147, 148, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 225, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 246, 247, 248, 249, 251, 254, 255, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 291, 292, 293, 295, 296, 299, 312, 316, 317, 321, 322, 326, 331, 353, 354, 355, 356, 358, 359, 360, 365, 377, 378, 386, 393, 395, 396, 401, 408, 410, 413, 415, 417, 418, 426, 427, 428, 429, 430, 451, 461, 627, 629, 630, 633, 634, 637, 645, 647, 648, 649, 650, 652, 654, 655], "__post_init__": 2, "self": [2, 4, 16, 17, 19, 22, 23, 24, 26, 28, 35, 38, 42, 43, 45, 50, 51, 58, 64, 66, 68, 69, 73, 75, 77, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 246, 247, 248, 249, 251, 254, 255, 262, 263, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 290, 291, 292, 295, 296, 297, 299, 312, 315, 318, 323, 326, 329, 330, 341, 350, 353, 354, 355, 356, 358, 359, 360, 365, 378, 381, 386, 392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 627, 630, 633, 645, 650, 654], "super": [2, 4, 109, 165, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 246, 247, 248, 249, 251, 254, 255, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 288, 289, 291, 292, 295, 299, 312, 326, 386, 393, 395, 396, 401, 408, 413, 415, 417, 418, 428, 633, 650, 654], "my_custom": 2, "begin": [2, 5, 16, 17, 19, 22, 23, 24, 26, 28, 122, 129, 231, 316, 317, 321, 322, 391, 461, 629, 637, 638, 639, 640, 641, 642, 643, 645], "gradual": 2, "add": [2, 3, 4, 5, 7, 28, 38, 42, 43, 45, 50, 51, 53, 58, 65, 68, 69, 70, 71, 72, 75, 77, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 114, 116, 121, 124, 125, 135, 136, 139, 140, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 253, 255, 282, 285, 295, 318, 323, 332, 354, 360, 365, 376, 392, 420, 426, 428, 429, 467, 627, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 648, 649, 650, 652, 654], "leverag": [2, 18, 28, 141, 144, 147, 151, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 352, 627, 633, 649, 655], "sparingli": 2, "correctli": [2, 4, 8, 38, 45, 50, 58, 68, 69, 75, 80, 109, 110, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429, 627], "duplic": [2, 3, 38, 45, 50, 58, 68, 69, 75, 80, 109, 128, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 393, 395, 397, 402, 408, 410, 413, 415, 417, 418, 426, 428, 429, 431], "As": [2, 3, 4, 5, 58, 72, 81, 82, 85, 97, 124, 141, 144, 147, 151, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 268, 310, 382, 433, 628, 633, 634, 635, 636, 637, 638, 640, 641, 648, 649, 650, 651, 652, 654, 655], "expand": [2, 3, 9, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 73, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 115, 129, 130, 198, 232, 278, 310, 353, 355, 356, 358, 359, 381, 384, 393, 395, 408, 410, 413, 415, 417, 418, 426, 427, 429, 430, 630, 648, 649, 650, 652, 654], "sactrainerconfig": [2, 630], "td3trainerconfig": 2, "addit": [2, 3, 4, 5, 15, 18, 25, 27, 38, 45, 50, 58, 60, 68, 69, 75, 80, 87, 99, 107, 108, 109, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 185, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 239, 263, 278, 282, 284, 285, 288, 290, 295, 297, 316, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 365, 373, 377, 381, 391, 394, 410, 412, 426, 427, 428, 429, 430, 433, 451, 453, 627, 629, 630, 633, 634, 637, 638, 648, 649, 652], "design": [2, 15, 25, 27, 38, 45, 50, 58, 60, 62, 68, 69, 75, 80, 87, 107, 108, 109, 127, 133, 140, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 235, 253, 264, 283, 285, 293, 295, 352, 353, 354, 355, 356, 358, 359, 360, 365, 373, 392, 393, 394, 395, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 418, 426, 427, 428, 429, 430, 431, 625, 630, 633, 634, 635, 638, 639, 640, 645, 646, 647, 648, 649, 650, 652, 654, 655], "maintain": [2, 3, 4, 6, 10, 44, 60, 209, 235, 293, 401, 415, 627, 650], "central": [3, 15, 21, 25, 27, 329, 330, 331, 352, 633, 634, 638, 648, 649, 652], "wide": [3, 4, 6, 654], "give": [3, 4, 8, 42, 43, 51, 77, 81, 100, 108, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 235, 394, 409, 412, 626, 629, 633, 634, 637, 648, 649, 650, 651, 654], "abil": [3, 410, 650, 652], "panel": [3, 635], "usag": [3, 4, 6, 8, 16, 17, 19, 22, 23, 24, 26, 28, 45, 68, 80, 99, 105, 111, 113, 135, 193, 209, 211, 232, 235, 247, 300, 318, 323, 352, 354, 360, 365, 394, 395, 400, 408, 409, 412, 415, 419, 426, 429, 476, 625, 628, 630, 633, 635, 636, 639, 640, 642, 648, 649, 652], "almost": [3, 293, 327, 328, 636], "physic": [3, 7, 8, 113, 171, 172, 177, 630, 633, 648, 649, 650], "theori": 3, "crude": 3, "made": [3, 4, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 72, 75, 76, 77, 80, 85, 88, 89, 90, 91, 92, 97, 109, 110, 115, 116, 117, 118, 131, 133, 137, 141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 278, 284, 295, 331, 340, 354, 360, 365, 397, 410, 426, 428, 429, 431, 525, 633, 634, 636, 648, 649, 651, 652, 654], "liststorag": [3, 53, 65, 70, 72, 80, 81, 82, 116, 124, 487, 652], "veri": [3, 4, 87, 107, 108, 157, 158, 197, 198, 353, 355, 356, 358, 359, 427, 430, 634, 638, 641, 645, 648, 650, 652, 654, 655], "ineffici": [3, 5], "contigu": [3, 4, 9, 39, 42, 50, 88, 100, 103, 104, 116, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 220, 253, 256, 278, 286, 650, 652, 654], "tensorstorag": [3, 72, 80, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 121, 122, 135, 138, 498, 641, 652], "lazymemmapstorag": [3, 47, 65, 70, 71, 72, 78, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 122, 124, 129, 130, 234, 235, 484, 633, 634, 636, 641, 648, 651, 652], "citizen": 3, "pytre": [3, 65, 70, 72, 81, 82, 87, 107, 108, 118, 124, 138, 198, 353, 355, 356, 358, 359, 427, 430], "tupl": [3, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 113, 118, 122, 124, 129, 133, 135, 141, 144, 145, 146, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 253, 255, 259, 295, 301, 305, 311, 312, 318, 322, 323, 324, 331, 338, 341, 342, 352, 353, 354, 355, 356, 358, 359, 360, 365, 374, 375, 379, 380, 385, 392, 393, 394, 395, 396, 400, 401, 403, 408, 409, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 433, 434, 435, 436, 465, 466, 469, 531, 601, 602, 603, 605, 606, 607, 609, 611, 616, 645, 652, 654], "dictionari": [3, 15, 16, 17, 19, 22, 23, 24, 25, 26, 28, 30, 31, 38, 42, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 86, 87, 107, 108, 109, 122, 127, 129, 130, 141, 144, 147, 150, 151, 152, 159, 163, 164, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 278, 283, 285, 293, 295, 353, 354, 355, 356, 358, 359, 360, 365, 378, 382, 395, 401, 415, 417, 426, 427, 428, 429, 430, 466, 474, 621, 622, 623, 630, 634, 635, 638, 640, 648, 650, 655], "ram": [3, 150, 152, 642, 652], "prealloc": [3, 4, 171, 180, 650], "ve": [3, 74, 633, 636, 643, 645], "string": [3, 23, 24, 26, 38, 45, 50, 53, 58, 60, 67, 68, 69, 75, 80, 86, 87, 106, 109, 116, 141, 144, 147, 151, 159, 163, 169, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 225, 253, 263, 276, 282, 290, 295, 318, 323, 352, 354, 357, 360, 365, 374, 377, 378, 379, 391, 426, 428, 429, 452, 465, 470, 627, 629, 633, 635, 636, 645, 652], "element": [3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 34, 36, 53, 54, 56, 62, 64, 65, 66, 70, 71, 72, 73, 80, 81, 82, 85, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 115, 116, 117, 118, 121, 122, 124, 129, 130, 135, 137, 141, 144, 147, 151, 159, 168, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 199, 200, 201, 202, 207, 228, 235, 240, 241, 264, 273, 277, 278, 293, 297, 302, 303, 316, 317, 321, 353, 355, 356, 358, 359, 368, 369, 374, 377, 381, 382, 386, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 426, 427, 429, 430, 433, 462, 627, 629, 633, 635, 639, 641, 645, 652, 655], "none": [3, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 127, 129, 130, 131, 133, 135, 137, 141, 144, 147, 148, 150, 151, 159, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 250, 252, 253, 255, 256, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 465, 466, 467, 468, 469, 470, 472, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 490, 493, 494, 497, 498, 499, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 522, 523, 524, 525, 527, 528, 529, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 604, 606, 608, 609, 610, 613, 614, 615, 616, 618, 619, 621, 622, 623, 627, 628, 630, 633, 634, 636, 637, 646, 650, 652, 654], "int": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 129, 130, 131, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 177, 180, 181, 182, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 228, 230, 231, 232, 234, 235, 236, 237, 239, 242, 245, 250, 251, 253, 257, 258, 259, 261, 263, 264, 267, 274, 275, 276, 279, 282, 283, 285, 287, 290, 295, 297, 298, 299, 302, 303, 304, 305, 307, 309, 310, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 340, 341, 342, 343, 344, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 373, 374, 375, 377, 378, 380, 382, 392, 393, 394, 401, 403, 404, 409, 410, 411, 412, 413, 417, 418, 426, 427, 428, 429, 430, 433, 435, 436, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 455, 458, 460, 462, 463, 464, 466, 468, 472, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 490, 493, 494, 497, 498, 499, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 522, 523, 524, 531, 532, 534, 536, 537, 539, 540, 541, 542, 547, 550, 556, 562, 563, 564, 566, 569, 572, 579, 580, 581, 584, 587, 588, 591, 604, 621, 622, 623, 637, 650, 652], "entri": [3, 4, 16, 17, 22, 34, 38, 42, 43, 45, 47, 50, 51, 53, 58, 64, 66, 67, 68, 69, 73, 75, 77, 78, 80, 86, 87, 94, 99, 100, 101, 102, 104, 105, 107, 108, 109, 129, 130, 141, 144, 145, 146, 147, 150, 151, 152, 153, 159, 163, 164, 171, 172, 175, 177, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 231, 235, 237, 238, 241, 242, 243, 244, 246, 247, 250, 254, 256, 257, 259, 261, 263, 266, 268, 271, 273, 275, 276, 277, 278, 280, 283, 285, 287, 290, 292, 295, 318, 320, 327, 328, 352, 353, 354, 355, 356, 358, 359, 360, 365, 373, 374, 377, 379, 380, 393, 395, 415, 426, 427, 428, 429, 430, 433, 434, 435, 436, 628, 633, 635, 636, 638, 639, 640, 642, 648, 649, 650, 651, 652, 654, 655], "onto": [3, 9, 62, 64, 66, 73, 87, 107, 108, 198, 209, 214, 220, 244, 297, 340, 353, 355, 356, 358, 359, 369, 374, 375, 378, 379, 380, 381, 382, 427, 430, 433, 636, 650], "__setitem__": 3, "indic": [3, 4, 9, 16, 17, 18, 19, 22, 23, 24, 26, 28, 34, 36, 37, 39, 40, 41, 42, 43, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 114, 121, 122, 124, 125, 127, 128, 129, 130, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 166, 167, 171, 172, 175, 177, 180, 181, 182, 185, 186, 192, 193, 194, 197, 198, 200, 201, 202, 227, 228, 235, 236, 240, 276, 277, 278, 279, 285, 293, 295, 296, 302, 303, 320, 324, 327, 328, 330, 340, 353, 355, 356, 358, 359, 377, 379, 380, 388, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 426, 427, 429, 430, 431, 613, 623, 626, 627, 630, 635, 636, 637, 641, 642, 643, 650, 652, 655], "without": [3, 4, 8, 10, 15, 16, 17, 18, 19, 25, 27, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 97, 99, 103, 107, 108, 109, 124, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 229, 231, 243, 246, 281, 284, 295, 316, 317, 321, 322, 353, 354, 355, 356, 358, 359, 360, 363, 364, 365, 371, 372, 392, 393, 395, 396, 397, 399, 400, 401, 408, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 492, 494, 619, 626, 627, 628, 633, 634, 635, 637, 638, 639, 640, 641, 645, 646, 648, 649, 650, 652, 655], "updat": [3, 4, 5, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 38, 42, 44, 45, 50, 53, 58, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 121, 122, 124, 141, 144, 147, 151, 159, 165, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 229, 231, 232, 243, 245, 246, 253, 265, 276, 277, 283, 285, 289, 292, 293, 295, 297, 299, 300, 315, 316, 326, 331, 340, 352, 353, 354, 355, 356, 358, 359, 360, 365, 378, 379, 380, 381, 382, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 466, 471, 472, 474, 475, 477, 614, 615, 618, 619, 625, 627, 630, 634, 635, 636, 637, 640, 643, 648, 649, 650, 652, 655], "cursor": [3, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "afterward": [3, 38, 45, 50, 68, 69, 75, 80, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 297, 298, 301, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 331, 334, 335, 338, 340, 343, 344, 346, 351, 373, 375, 377, 380, 385, 388, 648, 655], "our": [3, 4, 8, 9, 12, 23, 53, 72, 235, 240, 453, 629, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 647, 648, 649, 651, 652, 654], "far": [3, 65, 70, 71, 72, 74, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 197, 319, 348, 349, 627, 643, 650, 655], "empti": [3, 4, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 118, 124, 141, 144, 147, 151, 158, 159, 168, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 243, 246, 263, 265, 279, 285, 288, 290, 293, 295, 352, 353, 354, 355, 356, 358, 359, 360, 365, 381, 415, 426, 427, 428, 429, 430, 457, 633, 650], "64": [3, 4, 64, 66, 73, 87, 97, 103, 107, 108, 124, 198, 235, 267, 305, 306, 314, 318, 323, 330, 331, 341, 353, 355, 356, 358, 359, 427, 430, 431, 523, 633, 634, 635, 636, 637, 639, 643, 647, 650, 652, 654, 655], "dtype": [3, 4, 16, 17, 19, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 115, 116, 117, 121, 122, 129, 130, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 157, 158, 159, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 223, 226, 227, 228, 229, 232, 233, 239, 240, 243, 244, 245, 246, 247, 248, 253, 255, 256, 259, 261, 263, 265, 266, 268, 272, 275, 276, 278, 280, 281, 284, 285, 286, 288, 290, 295, 299, 301, 311, 312, 316, 317, 318, 320, 321, 322, 323, 326, 332, 333, 340, 341, 342, 350, 352, 353, 354, 355, 356, 358, 359, 360, 365, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 386, 389, 392, 393, 395, 396, 397, 399, 400, 401, 408, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 439, 548, 586, 627, 628, 637, 645, 646, 647, 650, 652, 654, 655], "unit8": 3, "img": 3, "randint": [3, 86, 87, 107, 108, 124, 198, 207, 281, 320, 353, 355, 356, 358, 359, 427, 430, 652], "255": [3, 124, 281, 652], "uint8": [3, 4, 42, 64, 66, 73, 87, 97, 103, 107, 108, 145, 146, 163, 164, 198, 247, 253, 261, 281, 353, 355, 356, 358, 359, 427, 430, 634, 652], "next": [3, 4, 5, 9, 16, 17, 19, 31, 34, 42, 43, 45, 47, 49, 51, 53, 58, 65, 70, 71, 72, 74, 77, 78, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 112, 113, 120, 122, 124, 129, 130, 135, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 157, 158, 159, 163, 164, 165, 169, 170, 171, 172, 175, 178, 179, 180, 181, 182, 183, 185, 186, 192, 193, 194, 197, 200, 201, 202, 205, 207, 208, 210, 212, 214, 220, 226, 228, 231, 232, 234, 235, 240, 241, 243, 246, 247, 248, 253, 254, 255, 256, 257, 261, 265, 266, 268, 271, 272, 276, 278, 280, 283, 286, 291, 292, 293, 295, 299, 317, 318, 322, 323, 326, 344, 377, 387, 389, 392, 393, 395, 396, 397, 399, 400, 401, 402, 408, 412, 413, 414, 415, 417, 418, 428, 429, 431, 432, 433, 434, 435, 436, 437, 453, 465, 466, 469, 493, 494, 627, 634, 636, 637, 639, 643, 645, 650, 651, 654, 655], "ask": [3, 4, 9, 97, 103, 122, 129, 130, 360, 453, 635, 636, 638, 639, 648, 649, 651, 655], "look": [3, 4, 6, 8, 9, 38, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 122, 141, 144, 147, 151, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 240, 253, 263, 264, 288, 295, 300, 353, 354, 355, 356, 358, 359, 360, 365, 378, 382, 383, 384, 426, 427, 428, 429, 430, 629, 635, 636, 637, 638, 639, 640, 641, 642, 643, 648, 649, 650, 651, 652, 654, 655], "lead": [3, 4, 5, 9, 11, 30, 34, 42, 43, 51, 58, 65, 72, 77, 87, 99, 121, 128, 141, 144, 145, 146, 147, 150, 151, 152, 153, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 278, 296, 319, 341, 348, 349, 368, 633, 636, 637, 648, 649, 650, 652, 654], "match": [3, 4, 7, 9, 16, 17, 19, 22, 23, 24, 26, 28, 29, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 124, 133, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 245, 247, 248, 250, 252, 254, 255, 256, 257, 259, 261, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 302, 303, 310, 318, 323, 324, 329, 330, 347, 353, 354, 355, 356, 358, 359, 360, 365, 369, 373, 374, 378, 379, 381, 382, 385, 386, 393, 394, 395, 401, 409, 411, 412, 413, 415, 426, 427, 428, 429, 430, 468, 475, 627, 628, 629, 633, 635, 637, 647, 649, 650, 652, 655], "don": [3, 4, 5, 7, 8, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 192, 235, 284, 327, 352, 634, 635, 637, 641, 652, 654, 655], "throw": [3, 38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 353, 354, 355, 356, 358, 359, 360, 365, 426, 427, 428, 429, 430, 655], "rb_td": 3, "batch_siz": [3, 4, 9, 16, 17, 19, 30, 33, 34, 42, 45, 47, 53, 60, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 78, 80, 81, 82, 83, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 121, 122, 123, 124, 129, 130, 135, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 226, 227, 228, 232, 234, 235, 239, 243, 246, 247, 248, 253, 261, 265, 266, 268, 272, 275, 276, 278, 284, 285, 286, 295, 299, 301, 309, 310, 311, 312, 315, 318, 323, 326, 340, 341, 342, 350, 351, 353, 354, 355, 356, 358, 359, 360, 365, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 392, 393, 395, 396, 397, 399, 400, 401, 408, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 453, 462, 468, 474, 477, 490, 497, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 537, 627, 628, 629, 630, 633, 634, 635, 636, 641, 645, 646, 648, 649, 650, 652, 654, 655], "max": [3, 34, 62, 66, 81, 86, 106, 121, 122, 135, 158, 199, 245, 279, 340, 393, 394, 395, 401, 411, 413, 415, 426, 465, 476, 627, 633, 635, 636, 637, 643], "label": [3, 66, 67, 74, 86, 87, 633, 648, 652], "100": [3, 16, 17, 19, 22, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 85, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 115, 117, 124, 129, 130, 135, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 238, 240, 247, 259, 268, 273, 276, 295, 320, 327, 328, 329, 352, 354, 360, 365, 375, 377, 426, 428, 429, 453, 463, 477, 604, 619, 627, 634, 635, 637, 638, 640, 643, 647, 648, 649, 650, 652, 654, 655], "rb_pytre": 3, "randn": [3, 4, 65, 68, 70, 71, 72, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 115, 116, 117, 122, 124, 129, 130, 137, 141, 198, 208, 220, 234, 259, 301, 304, 305, 309, 311, 312, 316, 317, 320, 321, 322, 327, 328, 329, 336, 338, 342, 353, 355, 356, 358, 359, 369, 370, 371, 372, 373, 374, 378, 379, 381, 384, 385, 386, 392, 393, 395, 396, 397, 399, 400, 401, 408, 410, 412, 413, 414, 415, 417, 418, 426, 427, 429, 430, 433, 434, 435, 436, 470, 523, 524, 527, 528, 529, 628, 637, 652, 654, 655], "c": [3, 4, 7, 8, 16, 17, 19, 22, 30, 42, 45, 64, 66, 68, 72, 73, 80, 81, 82, 87, 102, 107, 108, 116, 198, 259, 281, 286, 320, 321, 322, 353, 354, 355, 356, 358, 359, 360, 365, 426, 427, 429, 430, 634, 652], "zero": [3, 4, 5, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 115, 117, 121, 122, 124, 129, 130, 135, 137, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 232, 234, 236, 240, 243, 245, 246, 259, 265, 268, 275, 293, 295, 298, 299, 306, 307, 308, 314, 315, 316, 317, 318, 321, 322, 323, 327, 328, 330, 331, 340, 341, 350, 353, 354, 355, 356, 358, 359, 360, 365, 380, 382, 388, 392, 393, 395, 396, 397, 399, 400, 401, 408, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 439, 636, 637, 646, 652, 654, 655], "assert": [3, 4, 7, 19, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 135, 141, 144, 147, 151, 154, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 198, 200, 201, 202, 205, 220, 225, 228, 232, 235, 238, 243, 246, 255, 266, 273, 285, 292, 301, 330, 351, 353, 355, 356, 358, 359, 427, 429, 430, 433, 434, 435, 436, 461, 462, 470, 523, 524, 527, 528, 529, 627, 641, 647, 652, 655], "len": [3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 65, 70, 71, 72, 76, 77, 81, 82, 85, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 115, 117, 124, 137, 207, 261, 302, 303, 324, 330, 429, 633, 636, 637, 641, 643, 648, 650, 651, 652, 654], "ambigu": [3, 65, 70, 72, 124], "signatur": [3, 16, 17, 19, 22, 23, 24, 26, 28, 38, 45, 50, 53, 58, 65, 68, 69, 70, 72, 75, 80, 87, 109, 124, 133, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 232, 239, 253, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429, 629, 633, 637, 638, 650], "deal": [3, 4, 65, 70, 72, 124, 410, 426, 429, 629, 633, 635, 649, 652], "interpret": [3, 4, 65, 70, 72, 124, 627, 634], "put": [3, 65, 70, 72, 124, 151, 163, 164, 182, 185, 186, 292, 460, 623, 627, 628, 634, 635, 636, 638, 645, 648, 650], "solv": [3, 5, 8, 10, 11, 65, 70, 72, 124, 205, 626, 633, 634, 635, 641, 643, 648, 649, 650, 652], "clear": [3, 4, 12, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 72, 75, 76, 77, 80, 85, 88, 89, 90, 91, 92, 100, 109, 124, 141, 142, 143, 144, 147, 151, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 320, 354, 360, 365, 426, 428, 429, 463, 638, 641, 646], "cut": [3, 65, 70, 72, 124], "distinct": [3, 4, 65, 70, 72, 87, 107, 108, 124, 198, 232, 235, 353, 355, 356, 358, 359, 427, 430, 627, 640, 647], "view": [3, 4, 9, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 72, 75, 76, 77, 80, 85, 88, 89, 90, 91, 92, 103, 104, 109, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 229, 295, 312, 316, 321, 324, 354, 360, 365, 426, 428, 429, 627, 630, 638, 650, 652, 654, 655], "through": [3, 4, 5, 6, 9, 16, 17, 19, 21, 22, 23, 26, 28, 30, 31, 33, 42, 43, 51, 65, 69, 70, 71, 72, 75, 77, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 124, 141, 142, 143, 144, 147, 150, 151, 152, 155, 157, 158, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 206, 207, 231, 241, 243, 246, 264, 296, 301, 324, 341, 352, 353, 355, 356, 358, 359, 365, 377, 378, 382, 383, 384, 388, 391, 410, 427, 430, 433, 434, 435, 436, 461, 627, 628, 629, 633, 634, 635, 636, 638, 640, 647, 648, 649, 650, 651, 652, 655], "collate_fn": [3, 65, 70, 71, 72, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 192, 193, 194, 197, 652, 654], "__init__": [3, 4, 8, 109, 147, 165, 183, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 225, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 246, 247, 248, 249, 251, 254, 255, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 288, 289, 291, 292, 295, 299, 310, 312, 316, 321, 326, 332, 333, 362, 386, 393, 395, 396, 401, 408, 413, 415, 417, 418, 428, 630, 650, 655], "major": 3, "worri": [3, 83, 655], "though": [3, 5, 12, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 324, 360, 635, 648, 649], "too": [3, 8, 16, 17, 19, 22, 23, 24, 26, 28, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 67, 68, 74, 76, 77, 80, 85, 88, 89, 90, 91, 92, 109, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 258, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 288, 289, 291, 292, 295, 319, 348, 349, 354, 360, 365, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 417, 418, 426, 428, 429, 431, 433, 434, 435, 436, 634, 639, 642, 650, 652, 655], "latter": [3, 23, 24, 26, 38, 45, 50, 58, 68, 69, 75, 80, 99, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 297, 298, 301, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 331, 334, 335, 338, 340, 343, 344, 346, 351, 354, 360, 365, 373, 375, 377, 380, 385, 388, 412, 426, 428, 429, 621, 622], "inv": [3, 4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 238, 245, 248, 253, 261, 268, 273, 275, 280, 284, 287, 295, 428, 650], "obvious": [3, 637], "ignor": [3, 16, 17, 19, 22, 23, 24, 26, 28, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 67, 68, 69, 75, 76, 77, 80, 83, 85, 87, 88, 89, 90, 91, 92, 107, 108, 109, 113, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 245, 248, 272, 281, 295, 297, 298, 301, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 327, 328, 331, 334, 335, 338, 340, 343, 344, 346, 351, 353, 354, 355, 356, 358, 359, 360, 365, 373, 375, 377, 380, 385, 388, 426, 427, 428, 429, 430, 433, 645, 646, 652], "thread": [3, 4, 16, 17, 19, 22, 30, 31, 64, 66, 73, 87, 107, 108, 141, 142, 143, 157, 158, 171, 180, 181, 198, 293, 352, 353, 355, 356, 358, 359, 427, 430, 627], "prefetch": [3, 65, 72, 81, 82, 97, 99, 100, 101, 102, 103, 104, 105, 106, 633, 634, 636, 652], "advis": [3, 12, 100, 642, 655], "techniqu": [3, 9, 171, 180, 634, 637, 641, 652], "real": [3, 6, 103, 354, 360, 365, 382, 629, 636, 637, 650, 651], "life": [3, 247, 552, 651], "adopt": [3, 4, 6, 633, 655], "throughput": [3, 10, 158, 352, 361, 365, 627, 633], "constant": [3, 12, 44, 121, 122, 235, 259, 277, 630, 633, 635, 636, 655], "throughout": [3, 4, 392, 393, 394, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 418, 426, 429, 431, 635, 648, 655], "further": [3, 4, 6, 35, 429, 633, 635, 637, 638], "refin": [3, 42, 43, 51, 77, 103, 392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 426, 429, 431, 627], "coupl": [3, 394, 412, 636, 639, 640, 650, 652], "first_elt": 3, "wa": [3, 4, 6, 8, 42, 43, 45, 51, 53, 64, 65, 66, 68, 70, 71, 72, 73, 77, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 111, 122, 124, 128, 129, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 198, 200, 201, 202, 207, 227, 235, 253, 285, 321, 353, 354, 355, 356, 358, 359, 360, 365, 392, 394, 407, 409, 412, 414, 416, 426, 427, 430, 439, 627, 629, 634, 635, 638, 639, 647, 648, 652, 654], "influenti": 3, "latenc": [3, 4, 627], "especi": [3, 4, 8, 9, 236, 354, 360, 365], "larger": [3, 5, 80, 318, 323, 400, 408, 654], "volum": 3, "due": [3, 4, 6, 14, 23, 24, 26, 34, 394, 412, 477, 627, 630, 640, 651, 652, 655], "memorymappedtensor": [3, 47, 64, 66, 78, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 455, 641], "file": [3, 7, 8, 9, 64, 66, 73, 87, 97, 99, 100, 101, 103, 104, 105, 107, 108, 113, 185, 198, 353, 355, 356, 358, 359, 427, 430, 452, 453, 455, 472, 476, 477, 625, 630, 632, 634, 648, 652, 653], "improv": [3, 5, 12, 32, 199, 251, 392, 476, 629, 630, 637, 648, 649, 652], "failur": [3, 5, 199, 352, 394, 412, 426, 627], "recoveri": [3, 627], "were": [3, 8, 16, 17, 19, 21, 22, 23, 24, 26, 28, 71, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 171, 180, 253, 394, 412, 627, 635, 648, 652], "found": [3, 4, 7, 8, 11, 16, 17, 19, 22, 28, 34, 38, 42, 43, 45, 50, 51, 53, 58, 64, 66, 68, 69, 73, 75, 77, 80, 86, 87, 97, 99, 100, 101, 103, 104, 105, 107, 108, 109, 129, 130, 141, 144, 145, 146, 147, 150, 151, 152, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 229, 235, 256, 268, 271, 279, 292, 293, 295, 315, 329, 330, 353, 354, 355, 356, 358, 359, 360, 365, 378, 382, 409, 410, 412, 426, 427, 428, 429, 430, 627, 629, 633, 634, 636, 637, 638, 640, 642, 645, 650, 652, 654], "rough": 3, "1x": 3, "83x": 3, "44x": 3, "applic": [3, 87, 107, 108, 192, 198, 353, 355, 356, 358, 359, 415, 427, 430, 431, 627, 638, 639, 650], "bandwidth": 3, "primari": [3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 159, 201, 641], "concern": [3, 627, 640], "transfer": [3, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 33, 87, 107, 108, 198, 353, 355, 356, 358, 359, 382, 427, 430], "sensori": [3, 110], "imag": [3, 4, 5, 8, 12, 103, 107, 110, 235, 237, 240, 242, 263, 281, 290, 324, 451, 453, 633, 634, 637, 638, 642, 649, 651, 655], "audio": [3, 107], "text": [3, 30, 67, 74, 83, 101, 107, 108, 109, 159, 192, 193, 194, 196, 197, 199, 200, 201, 209, 210, 212, 214, 215, 316, 317, 321, 322, 340, 352, 354, 357, 360, 361, 365, 428, 429, 627, 635, 645], "compressedliststorag": [3, 111], "save": [3, 4, 9, 38, 45, 50, 58, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 78, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 124, 131, 132, 133, 137, 138, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 291, 295, 353, 354, 355, 356, 358, 359, 360, 365, 426, 427, 428, 429, 430, 452, 453, 455, 460, 472, 477, 630, 637, 641, 642, 643, 648, 649], "substanti": [3, 630], "full": [3, 4, 87, 107, 108, 109, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 208, 214, 215, 300, 318, 323, 353, 355, 356, 358, 359, 360, 365, 375, 382, 412, 427, 430, 462, 627, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "fidel": 3, "lossless": 3, "zstd": [3, 110], "seamlessli": [3, 4, 192, 211, 627, 646, 650], "decompress": [3, 110], "vram": 3, "ratio": [3, 16, 17, 22, 74, 394, 412, 472, 474, 633, 635], "95x": 3, "122x": 3, "atari": [3, 4, 5, 97, 99, 100, 101, 103, 104, 105, 110, 235, 303, 453, 637, 642, 655], "al": [3, 4, 16, 17, 19, 22, 30, 35, 150, 152, 247, 261, 299, 552, 637, 655], "pong": [3, 4, 16, 17, 19, 22, 30, 97, 167, 261, 637, 655], "12": [3, 8, 11, 53, 64, 66, 73, 80, 87, 104, 107, 108, 115, 117, 130, 137, 157, 158, 171, 178, 179, 180, 194, 198, 240, 285, 293, 295, 353, 355, 356, 358, 359, 427, 430, 453, 652], "22": [3, 30, 103, 110, 129, 130, 291], "99x": 3, "106x": 3, "111x": 3, "max_siz": [3, 53, 65, 72, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 115, 116, 117, 118, 129, 130, 131, 135, 137, 484, 485, 486, 487, 498, 630, 635, 641], "1000": [3, 5, 19, 30, 53, 72, 80, 110, 115, 116, 121, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 235, 292, 297, 315, 320, 339, 340, 378, 382, 407, 477, 587, 633, 634, 635, 636, 637, 639, 641, 643, 646, 650, 651, 652], "compression_level": [3, 110], "32": [3, 29, 42, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 130, 151, 158, 178, 179, 185, 186, 202, 207, 213, 235, 253, 302, 303, 304, 305, 306, 308, 309, 314, 324, 329, 330, 334, 335, 338, 341, 350, 431, 451, 522, 523, 524, 527, 528, 529, 634, 636, 637, 639, 640, 650, 651, 652, 654, 655], "84": [3, 97, 110, 129, 267, 542, 547, 572, 636, 637], "ob": [3, 4, 5, 9, 34, 42, 43, 51, 53, 65, 70, 71, 72, 77, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 121, 124, 129, 130, 135, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 220, 226, 229, 231, 240, 243, 244, 246, 259, 273, 275, 281, 305, 306, 307, 308, 329, 330, 331, 379, 386, 393, 395, 396, 401, 408, 413, 415, 417, 418, 433, 434, 435, 436, 627, 634, 637, 647, 648, 650, 652, 654, 655], "adjust": [3, 12, 278, 633, 648, 649, 650], "fast": [3, 8, 10, 116, 142, 143, 226, 266, 413, 633, 634, 635, 654], "less": [3, 25, 87, 107, 108, 121, 122, 166, 198, 351, 353, 355, 356, 358, 359, 360, 427, 430, 621, 622, 629, 635, 636, 652, 654], "my_compress": 3, "my_decompress": 3, "compressed_tensor": 3, "metadata": [3, 32, 33, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 87, 88, 89, 90, 91, 92, 97, 99, 107, 108, 111, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 352, 353, 355, 356, 358, 359, 395, 401, 415, 417, 427, 430, 635, 638, 640, 641, 648, 649, 655], "compression_fn": [3, 110], "decompression_fn": [3, 110], "least": [3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 68, 76, 77, 85, 88, 89, 90, 91, 92, 122, 129, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 238, 642, 655], "14": [3, 7, 80, 97, 98, 99, 100, 101, 102, 103, 104, 105, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 240, 259, 295, 296, 412], "zlib": 3, "otherwis": [3, 4, 13, 16, 17, 19, 29, 30, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 122, 124, 129, 130, 141, 142, 143, 144, 147, 150, 151, 152, 153, 156, 157, 158, 159, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 236, 240, 241, 245, 253, 259, 277, 278, 279, 283, 284, 285, 292, 295, 296, 298, 300, 316, 319, 321, 329, 330, 348, 349, 353, 354, 355, 356, 358, 359, 360, 365, 368, 374, 379, 382, 385, 393, 395, 404, 410, 411, 415, 426, 427, 428, 429, 430, 433, 435, 436, 466, 468, 629, 630, 633, 634, 635, 636, 645, 650, 655], "nvidia": [3, 8, 155, 637], "nvcomp": 3, "pleas": [3, 4, 38, 45, 50, 58, 68, 69, 75, 80, 84, 101, 109, 141, 144, 147, 150, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 235, 253, 279, 283, 285, 295, 329, 330, 331, 354, 360, 365, 395, 415, 426, 428, 429, 476, 626, 630], "compressed_replay_buff": 3, "long": [3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 67, 76, 77, 85, 88, 89, 90, 91, 92, 115, 122, 169, 170, 245, 283, 298, 321, 322, 352, 400, 636, 637, 641, 652], "sharabl": [3, 171, 180], "collabor": [3, 103], "rather": [3, 5, 133, 169, 170, 200, 207, 266, 293, 627, 628, 629, 633, 634, 635, 636, 638, 640, 648, 649, 652], "incur": [3, 87, 107, 108, 142, 143, 157, 158, 198, 353, 355, 356, 358, 359, 427, 430], "transmiss": 3, "overhead": [3, 87, 107, 108, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 226, 320, 353, 355, 356, 358, 359, 382, 427, 430, 627], "content": [3, 4, 9, 19, 42, 43, 51, 64, 65, 66, 72, 73, 77, 81, 82, 87, 107, 108, 128, 129, 130, 141, 144, 147, 150, 151, 152, 159, 166, 171, 172, 175, 180, 181, 182, 192, 193, 194, 196, 197, 198, 200, 201, 202, 206, 214, 215, 265, 302, 303, 324, 329, 330, 353, 355, 356, 358, 359, 360, 365, 378, 410, 426, 427, 429, 430, 627, 635, 645, 646, 650, 654], "map": [3, 4, 9, 15, 18, 20, 25, 27, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 72, 73, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 120, 121, 122, 141, 144, 147, 151, 159, 162, 163, 164, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 185, 186, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 228, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 261, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 291, 292, 293, 295, 312, 353, 354, 355, 356, 358, 359, 360, 365, 369, 370, 371, 372, 374, 378, 379, 381, 382, 384, 385, 386, 387, 394, 395, 409, 412, 415, 426, 427, 428, 429, 430, 431, 433, 466, 484, 625, 628, 629, 633, 634, 635, 636, 639, 640, 651], "tensordictroundrobinwrit": [3, 82, 124], "goe": [3, 5, 87, 173, 174, 633, 635, 648, 649, 655], "prioritizedsampl": [3, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 122, 124, 397, 402, 431, 488, 633, 652], "access": [3, 4, 8, 9, 12, 16, 17, 19, 22, 30, 31, 38, 45, 50, 58, 65, 68, 69, 75, 80, 100, 101, 102, 109, 116, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 235, 263, 284, 288, 295, 352, 354, 360, 365, 426, 428, 429, 623, 626, 627, 633, 638, 648, 649, 650, 652, 654], "tensordictreplaybuff": [3, 65, 70, 71, 72, 81, 97, 98, 99, 100, 101, 102, 103, 104, 105, 121, 122, 124, 129, 130, 135, 234, 235, 468, 497, 619, 625, 633, 634, 636, 652], "mp": [3, 23, 24, 26, 97, 98, 99, 100, 101, 102, 103, 104, 105, 148, 292, 293], "td": [3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 42, 45, 47, 53, 64, 65, 66, 68, 70, 71, 72, 73, 78, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 115, 121, 122, 124, 135, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 157, 158, 159, 160, 161, 169, 170, 171, 172, 175, 176, 180, 181, 182, 183, 184, 192, 193, 194, 197, 198, 200, 201, 202, 205, 207, 226, 229, 232, 234, 236, 240, 241, 243, 244, 245, 246, 254, 255, 256, 257, 259, 268, 271, 275, 278, 281, 285, 292, 299, 301, 311, 312, 315, 325, 326, 340, 341, 342, 350, 353, 354, 355, 356, 358, 359, 360, 365, 369, 370, 371, 372, 373, 374, 378, 379, 381, 384, 386, 401, 415, 426, 427, 429, 430, 431, 434, 435, 436, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 462, 470, 627, 628, 629, 633, 634, 636, 649, 650, 651, 654], "__name__": [3, 4, 16, 17, 19, 22, 29, 30, 70, 148, 293, 451, 630, 634, 654], "__main__": [3, 4, 16, 17, 19, 22, 29, 30, 70, 148, 293, 451, 630, 654], "21": [3, 53, 87, 103, 104, 129, 130, 171, 173, 174, 180, 240, 632, 653], "proc": 3, "arg": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 37, 38, 39, 40, 42, 43, 45, 46, 50, 51, 52, 53, 55, 57, 58, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 115, 116, 117, 118, 122, 124, 129, 130, 131, 133, 137, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 222, 228, 229, 230, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 253, 254, 255, 257, 262, 263, 264, 265, 266, 268, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 295, 297, 299, 301, 302, 303, 310, 311, 315, 318, 323, 324, 325, 326, 340, 351, 352, 353, 354, 355, 356, 358, 359, 360, 365, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 460, 464, 468, 472, 476, 477, 623, 634, 637, 645], "join": [3, 148, 207, 625, 634, 635, 637, 648], "now": [3, 4, 8, 65, 72, 81, 82, 124, 169, 170, 171, 207, 209, 235, 272, 330, 352, 627, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 647, 648, 649, 651, 652, 655], "20": [3, 53, 80, 86, 87, 104, 129, 130, 135, 141, 144, 147, 151, 155, 159, 169, 170, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 277, 295, 314, 316, 317, 321, 322, 339, 373, 462, 604, 630, 646, 652, 655], "_data": [3, 650], "difficult": [3, 5, 171, 642], "pai": [3, 9, 235, 633, 636], "word": [3, 4, 12, 74, 97, 99, 101, 103, 104, 105, 410, 426, 429, 633, 641, 650, 655], "1m": [3, 97, 103, 612, 633, 635, 636], "doe": [3, 4, 20, 23, 38, 45, 50, 58, 64, 65, 66, 68, 69, 73, 75, 80, 81, 86, 87, 97, 99, 103, 107, 108, 109, 112, 113, 120, 122, 129, 131, 133, 140, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 288, 289, 291, 292, 293, 295, 300, 309, 310, 316, 317, 318, 321, 322, 323, 332, 339, 351, 353, 354, 355, 356, 358, 359, 360, 365, 373, 383, 384, 392, 394, 402, 409, 410, 412, 426, 427, 428, 429, 430, 432, 472, 627, 629, 630, 633, 634, 635, 636, 638, 641, 648, 650, 652, 655], "howev": [3, 4, 6, 8, 32, 38, 45, 50, 58, 68, 69, 75, 80, 109, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 253, 254, 255, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 291, 292, 295, 354, 360, 365, 392, 394, 395, 409, 412, 414, 415, 426, 428, 429, 627, 628, 633, 634, 636, 637, 640, 650, 652, 655], "capac": [3, 65, 72, 81, 82, 115, 117, 121, 122, 129, 137, 635, 641], "There": [3, 4, 11, 87, 107, 108, 124, 194, 198, 284, 300, 318, 323, 353, 355, 356, 358, 359, 392, 412, 427, 430, 628, 629, 630, 635, 636, 637, 639, 641, 648, 649, 650, 652, 654, 655], "circumv": 3, "account": [3, 115, 117, 137, 141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 231, 241, 327, 328, 628, 634, 636, 652, 655], "convent": [3, 4, 97, 99, 100, 101, 102, 103, 104, 105, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 200, 201, 202, 354, 629, 633, 636, 648, 649, 650], "dim_extend": [3, 65, 72, 81, 82], "obtain": [3, 4, 8, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 74, 76, 77, 85, 88, 89, 90, 91, 92, 97, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 215, 234, 263, 277, 290, 299, 301, 339, 341, 468, 633, 635, 638, 639, 640, 648, 649], "counterpart": [3, 4, 235], "desir": [3, 4, 12, 16, 17, 19, 22, 30, 38, 41, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 224, 230, 232, 239, 241, 259, 261, 263, 264, 278, 284, 285, 288, 290, 295, 302, 303, 310, 324, 330, 353, 354, 355, 356, 358, 359, 360, 365, 369, 374, 375, 378, 379, 380, 381, 382, 426, 427, 428, 429, 430, 628, 633, 637, 645, 648, 649, 650, 652], "diversifi": 3, "offer": [3, 4, 8, 141, 142, 143, 144, 147, 151, 157, 158, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 283, 451, 627, 628, 630, 633, 634, 637, 638, 640, 641, 648, 650, 652, 655], "accomplish": [3, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 638, 645], "__especially__": 3, "offlin": [3, 9, 16, 17, 19, 22, 23, 24, 26, 28, 97, 98, 100, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 288, 289, 291, 292, 295, 393, 399, 400, 408, 417, 428, 460, 522, 630, 638, 651, 652], "docstr": [3, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429, 638, 639], "happi": [3, 637], "concaten": [3, 9, 16, 17, 28, 53, 54, 56, 87, 103, 107, 108, 198, 200, 235, 236, 259, 275, 321, 324, 353, 355, 356, 358, 359, 384, 427, 430, 627, 633, 634, 639, 648, 649, 650, 652, 655], "schedul": [3, 5, 8, 74, 352, 466, 635, 650], "transformedenv": [3, 4, 12, 13, 58, 109, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 228, 229, 232, 235, 238, 239, 241, 243, 246, 247, 248, 254, 255, 256, 258, 259, 261, 265, 266, 267, 268, 271, 272, 273, 276, 277, 278, 279, 283, 284, 292, 295, 318, 323, 377, 428, 453, 461, 501, 627, 633, 634, 635, 636, 637, 638, 642, 643, 647, 648, 649, 650, 651, 652, 654, 655], "stepcount": [3, 53, 58, 109, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 240, 241, 283, 284, 285, 295, 301, 428, 581, 627, 633, 634, 635, 636, 637, 638, 643, 648, 649, 654], "gymenv": [3, 4, 6, 12, 16, 17, 19, 22, 28, 29, 30, 31, 47, 53, 58, 70, 78, 80, 109, 135, 141, 144, 147, 148, 151, 153, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 228, 231, 232, 235, 238, 239, 240, 241, 247, 253, 254, 255, 259, 261, 266, 267, 268, 271, 273, 277, 278, 279, 280, 283, 284, 285, 286, 292, 293, 295, 301, 318, 323, 377, 428, 451, 453, 505, 619, 625, 628, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 651, 652, 654, 655], "randompolici": [3, 16, 17, 19, 22, 23, 24, 26, 28, 29, 30, 58, 235, 268, 625, 641, 652], "action_spec": [3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 58, 109, 141, 142, 143, 144, 147, 151, 157, 158, 159, 165, 171, 172, 173, 174, 175, 176, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 229, 232, 235, 239, 243, 244, 246, 255, 259, 265, 268, 284, 285, 286, 287, 295, 299, 312, 326, 342, 344, 369, 374, 378, 379, 393, 395, 397, 399, 413, 415, 417, 418, 428, 619, 628, 633, 634, 635, 636, 637, 639, 640, 641, 643, 647, 648, 649, 650, 651, 652, 654, 655], "traj_kei": [3, 122, 129, 130, 493, 494, 652], "truncated_kei": [3, 122, 129, 130, 268, 276, 493, 494, 581], "strict_length": [3, 97, 103, 122, 129, 130, 453, 493, 494, 636], "enumer": [3, 16, 17, 19, 28, 30, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 72, 75, 76, 77, 78, 80, 82, 85, 88, 89, 90, 91, 92, 109, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 419, 426, 428, 429, 629, 633, 634, 635, 636, 643, 648, 652, 654], "break": [3, 6, 16, 17, 19, 22, 28, 30, 32, 38, 45, 50, 58, 68, 69, 70, 72, 75, 80, 82, 97, 100, 101, 103, 104, 105, 106, 109, 122, 129, 130, 135, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 235, 268, 292, 293, 295, 318, 323, 348, 354, 360, 365, 426, 428, 429, 453, 634, 637, 641, 643, 652, 654], "33": [3, 38, 42, 45, 50, 58, 68, 69, 75, 80, 109, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 302, 303, 324, 354, 360, 365, 426, 428, 429], "34": [3, 302, 303, 324, 412], "35": [3, 302, 303, 324, 646], "36": [3, 194], "37": [3, 234], "38": [3, 8, 53], "39": [3, 101, 157, 158], "40": [3, 80, 157, 158], "41": [3, 129], "11": [3, 11, 34, 53, 62, 80, 86, 87, 115, 116, 117, 121, 130, 137, 148, 228, 240, 281, 295, 299, 326], "13": [3, 6, 80, 129, 130, 177, 240, 291, 293, 295, 296], "15": [3, 34, 97, 98, 99, 100, 101, 102, 103, 104, 105, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 240, 295, 340, 373, 403, 652], "16": [3, 4, 16, 17, 22, 30, 38, 45, 50, 58, 68, 69, 75, 80, 104, 109, 122, 130, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 295, 352, 354, 357, 360, 365, 426, 428, 429, 627, 636, 652], "17": [3, 12, 104, 129, 130, 151, 171, 202, 228, 240, 295], "could": [3, 4, 5, 7, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 75, 76, 77, 80, 85, 88, 89, 90, 91, 92, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 382, 426, 428, 429, 627, 634, 635, 642, 648, 649, 651, 655], "sai": [3, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 329, 354, 360, 365, 426, 428, 429, 648, 651, 655], "interleav": 3, "cannot": [3, 4, 5, 8, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 42, 56, 62, 72, 81, 82, 110, 117, 118, 122, 125, 129, 130, 137, 141, 144, 147, 150, 151, 152, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 243, 246, 264, 271, 283, 329, 330, 379, 392, 395, 412, 634, 635, 636, 637, 648, 649, 650], "suggest": [3, 431, 633, 649], "serialenv": [3, 4, 141, 144, 147, 151, 159, 171, 172, 175, 181, 182, 192, 193, 194, 197, 200, 201, 202, 278, 293, 295, 301, 377, 625, 654, 655], "squeez": [3, 4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 109, 231, 232, 235, 240, 274, 277, 302, 303, 345, 346, 633, 637, 650, 652], "6": [3, 4, 8, 16, 17, 19, 22, 30, 31, 34, 42, 43, 51, 53, 58, 72, 75, 77, 80, 87, 97, 104, 105, 121, 122, 130, 145, 146, 151, 171, 178, 179, 194, 202, 228, 231, 240, 241, 259, 261, 277, 283, 293, 301, 302, 303, 305, 306, 307, 310, 314, 317, 324, 329, 330, 331, 334, 347, 377, 378, 386, 627, 634, 637, 654], "5": [3, 4, 16, 17, 19, 22, 30, 34, 41, 42, 43, 51, 53, 54, 55, 56, 57, 58, 62, 65, 70, 72, 75, 77, 80, 81, 82, 97, 108, 109, 110, 124, 129, 130, 135, 141, 144, 147, 148, 151, 157, 158, 159, 163, 164, 166, 171, 172, 175, 178, 179, 180, 181, 182, 185, 186, 192, 194, 197, 199, 200, 201, 202, 205, 210, 212, 228, 231, 232, 234, 240, 241, 256, 268, 275, 276, 277, 283, 293, 295, 298, 299, 300, 301, 302, 303, 305, 306, 311, 312, 313, 314, 316, 319, 320, 321, 324, 326, 329, 330, 334, 339, 342, 348, 349, 352, 361, 362, 365, 373, 374, 377, 379, 385, 409, 412, 414, 417, 418, 451, 523, 524, 527, 529, 609, 627, 628, 632, 633, 634, 637, 639, 643, 648, 649, 650, 652, 653, 654, 655], "7": [3, 4, 7, 11, 45, 53, 58, 62, 65, 72, 80, 81, 121, 122, 130, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 199, 200, 201, 202, 228, 231, 240, 241, 277, 280, 293, 299, 301, 302, 303, 306, 324, 326, 329, 352, 360, 365, 439, 627, 633, 652, 654], "9": [3, 4, 8, 34, 38, 53, 58, 65, 72, 80, 81, 87, 104, 105, 107, 108, 122, 130, 135, 145, 146, 162, 173, 174, 182, 198, 228, 231, 240, 241, 277, 280, 285, 292, 293, 295, 327, 328, 353, 355, 356, 358, 359, 360, 365, 392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 419, 426, 427, 429, 430, 431, 461, 599, 601, 602, 603, 605, 606, 607, 611, 629, 633, 634, 648, 649], "18": [3, 53, 104, 129, 130, 178, 179, 185, 186, 283, 295, 330], "19": [3, 104, 129, 130, 135, 240, 295], "independ": [3, 16, 17, 19, 22, 23, 24, 26, 28, 30, 100, 171, 180, 250, 257, 278, 287, 300, 330, 352, 368, 392, 412, 629, 630, 633, 634, 636, 649, 652, 654], "congruent": 3, "randomcroptensordict": [3, 569, 633], "unlik": [3, 36, 72, 81, 82, 128, 151, 163, 164, 185, 186, 202, 298, 300, 377, 402, 412, 453, 627, 628, 634, 637, 639, 641, 654], "stop": [3, 4, 16, 17, 19, 22, 28, 30, 74, 105, 122, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 354, 360, 365, 635, 641, 648, 649, 654, 655], "signal": [3, 4, 16, 17, 19, 22, 34, 53, 97, 99, 101, 103, 104, 105, 122, 129, 130, 135, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 199, 200, 201, 202, 227, 235, 241, 247, 256, 276, 279, 629, 633, 635, 648, 649, 652, 655], "disk": [3, 4, 53, 64, 65, 66, 70, 71, 72, 73, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 111, 115, 124, 198, 353, 355, 356, 358, 359, 427, 430, 472, 630, 633, 634, 636, 637, 641, 642, 648, 652], "dump": [3, 4, 12, 47, 64, 65, 66, 70, 71, 72, 73, 78, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 113, 115, 116, 117, 118, 124, 131, 133, 137, 198, 213, 353, 355, 356, 358, 359, 427, 430, 451, 452, 453, 642, 643, 648], "json": [3, 210, 645], "anticip": [3, 243, 246], "compli": [3, 103, 300, 628], "back": [3, 15, 18, 21, 25, 27, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 73, 76, 77, 85, 87, 88, 89, 90, 91, 92, 99, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 198, 200, 201, 202, 217, 282, 291, 331, 353, 355, 356, 358, 359, 369, 374, 375, 378, 379, 380, 381, 382, 427, 430, 627, 635, 637, 648, 649, 650, 652], "exact": [3, 4, 34, 171, 321], "statu": [3, 4, 25, 147, 209], "prioriti": [3, 5, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 115, 116, 117, 118, 121, 122, 124, 131, 133, 137, 395, 396, 397, 399, 400, 401, 402, 408, 413, 415, 417, 418, 431, 630, 633, 634, 652], "heap": 3, "naiv": [3, 288, 638], "just": [3, 4, 5, 87, 107, 108, 133, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 162, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 192, 193, 194, 197, 198, 200, 201, 202, 227, 231, 238, 278, 330, 353, 355, 356, 358, 359, 427, 430, 462, 627, 630, 633, 634, 635, 636, 637, 638, 639, 641, 645, 648, 649, 650, 652, 654, 655], "public": [3, 71, 102, 132, 263, 290, 627], "serializ": [3, 31, 357, 627], "consum": [3, 128, 130, 377, 627, 634, 635, 641, 649, 652], "much": [3, 4, 9, 16, 17, 22, 65, 81, 87, 103, 107, 108, 121, 122, 171, 180, 198, 353, 355, 356, 358, 359, 409, 412, 427, 430, 635, 637, 638, 642, 648, 649, 650, 652, 655], "plu": [3, 16, 17, 22, 74, 171, 180, 627, 650], "three": [3, 36, 37, 41, 46, 54, 55, 56, 57, 62, 63, 68, 106, 192, 395, 627, 628, 630, 635, 637, 638, 639, 648, 649, 650, 652, 655], "flatstoragecheckpoint": 3, "discard": [3, 4, 86, 99, 101, 151, 226, 288, 452, 652, 655], "At": [3, 280, 315, 325, 634, 635, 636, 641, 647, 650, 651], "correct": [3, 5, 64, 66, 73, 87, 107, 108, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 204, 205, 208, 235, 255, 320, 353, 355, 356, 358, 359, 426, 427, 430, 612, 635, 636, 645], "nestedstoragecheckpoint": 3, "represent": [3, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 107, 108, 109, 116, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 263, 288, 290, 295, 353, 354, 355, 356, 358, 359, 360, 365, 392, 412, 426, 427, 428, 429, 430, 627, 633, 650, 651, 655], "appar": [3, 4, 464], "h5storagecheckpoint": 3, "h5db": 3, "space": [3, 10, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 108, 112, 113, 120, 141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 220, 223, 228, 238, 245, 253, 256, 278, 286, 297, 303, 309, 312, 329, 335, 340, 342, 365, 369, 374, 375, 378, 379, 380, 381, 382, 384, 385, 386, 389, 392, 397, 399, 400, 401, 412, 417, 418, 431, 628, 629, 630, 634, 635, 636, 637, 638, 639, 640, 648, 649, 650, 655], "assumpt": [3, 4, 85, 650, 652], "accur": [3, 8, 99, 105, 627, 634, 650, 652], "truncat": [3, 4, 16, 17, 19, 22, 47, 49, 53, 58, 59, 67, 78, 80, 83, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 112, 113, 120, 122, 129, 130, 141, 144, 145, 146, 147, 150, 151, 152, 159, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 183, 185, 186, 192, 193, 194, 197, 200, 201, 202, 207, 227, 228, 247, 248, 253, 258, 265, 268, 272, 276, 278, 285, 286, 295, 318, 323, 349, 377, 433, 439, 493, 494, 581, 633, 635, 638, 648, 655], "marl": [3, 162, 188, 235, 275, 279, 329, 330, 331, 401, 415, 629, 638, 648, 649], "extra": [3, 11, 38, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 235, 292, 293, 295, 353, 354, 355, 356, 358, 359, 360, 365, 426, 427, 428, 429, 430, 460, 627, 628, 635, 636, 652], "fail": [3, 8, 29, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 214, 229, 354, 360, 365], "concret": [3, 633, 635, 645], "set_se": [3, 4, 16, 17, 19, 22, 28, 30, 31, 47, 53, 58, 78, 80, 141, 142, 143, 144, 147, 151, 157, 158, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 231, 240, 241, 259, 266, 271, 277, 279, 285, 295, 627, 637, 641, 643, 650, 654, 655], "manual_se": [3, 4, 36, 47, 54, 55, 65, 72, 78, 80, 81, 82, 87, 100, 104, 105, 107, 108, 116, 129, 130, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 229, 231, 240, 241, 245, 259, 268, 271, 277, 279, 293, 295, 315, 327, 328, 336, 339, 340, 353, 355, 356, 358, 359, 369, 375, 382, 385, 392, 393, 395, 396, 400, 408, 415, 427, 430, 637, 641, 643, 648, 649, 650, 654, 655], "rb_test": 3, "_storag": [3, 651, 652], "102": 3, "path_to_save_dir": 3, "assert_allclose_td": 3, "altern": [3, 5, 16, 17, 19, 22, 30, 41, 64, 66, 73, 87, 107, 108, 166, 192, 198, 240, 283, 309, 327, 328, 329, 352, 353, 355, 356, 358, 359, 391, 395, 427, 430, 451, 627, 633, 635, 637, 648, 649], "state_dict": [3, 16, 17, 19, 22, 28, 30, 31, 32, 33, 38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 110, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 283, 285, 292, 293, 295, 329, 330, 353, 354, 355, 356, 358, 359, 360, 365, 395, 415, 426, 427, 428, 429, 430, 474, 623, 627, 630, 633, 634, 655], "load_state_dict": [3, 16, 17, 19, 22, 28, 30, 31, 38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 110, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 283, 285, 292, 293, 295, 353, 354, 355, 356, 358, 359, 360, 365, 395, 415, 426, 427, 428, 429, 430, 474, 630, 633], "drawback": 3, "struggl": 3, "big": [3, 635, 641, 652, 655], "sequenti": [3, 10, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 234, 255, 295, 354, 360, 365, 368, 370, 371, 372, 378, 383, 384, 389, 392, 393, 395, 401, 408, 412, 413, 414, 415, 417, 426, 428, 429, 628, 635, 636, 639, 649, 650, 651, 654, 655], "known": [3, 4, 6, 8, 9, 80, 151, 202, 278, 440, 441, 633, 634, 638], "indiffer": 3, "heavili": [3, 12], "smooth": [3, 298, 633, 634, 640], "essenti": [3, 4, 14, 23, 24, 26, 392, 393, 394, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 418, 426, 429, 431, 627, 634, 638, 648, 650, 652], "purpos": [3, 4, 8, 12, 87, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 235, 316, 353, 355, 356, 358, 359, 392, 394, 406, 409, 412, 414, 426, 427, 430, 619, 633, 635, 636, 637, 640, 642, 648, 649, 651, 655], "guid": [3, 12, 173, 174, 178, 179, 277, 352, 626, 633, 649, 654], "explan": [3, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 300, 354, 360, 365, 426, 428, 429], "effect": [3, 4, 19, 30, 31, 38, 42, 45, 50, 58, 65, 68, 69, 70, 72, 75, 80, 81, 82, 87, 97, 103, 107, 108, 109, 121, 122, 124, 127, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 231, 235, 241, 285, 295, 300, 353, 354, 355, 356, 358, 359, 360, 365, 394, 412, 426, 427, 428, 429, 430, 472, 477, 627, 628, 633, 639, 648, 652, 655], "realm": [3, 639], "practition": 3, "often": [3, 4, 9, 331, 394, 407, 410, 412, 426, 429, 472, 633, 634, 638, 640, 650, 652, 655], "encount": [3, 5, 103, 257, 377, 626, 634, 639, 650], "situat": [3, 163, 164, 200, 207], "sometim": [3, 4, 85, 636, 655], "immedi": [3, 38, 42, 43, 45, 50, 51, 58, 68, 69, 75, 77, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429, 432, 648, 649], "199": 3, "info": [3, 4, 16, 17, 65, 70, 71, 72, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 121, 122, 124, 127, 129, 130, 141, 144, 145, 146, 147, 150, 151, 152, 153, 159, 163, 164, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 197, 200, 201, 202, 253, 286, 288, 291, 294, 460, 627, 638, 643, 645, 648, 649, 652, 654], "glanc": [3, 638], "seem": [3, 633, 636, 638], "togeth": [3, 4, 12, 16, 17, 19, 22, 23, 24, 26, 28, 53, 68, 74, 76, 77, 116, 141, 144, 147, 151, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 235, 264, 275, 284, 316, 318, 321, 323, 350, 370, 371, 372, 387, 627, 628, 634, 636, 638, 648], "omit": [3, 159, 201, 207, 297, 315, 340, 467, 635, 640, 650, 652], "imposs": [3, 4, 72, 81, 82, 135, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 392, 394, 409, 412, 414], "determin": [3, 4, 16, 17, 18, 53, 65, 81, 87, 99, 107, 108, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 185, 186, 187, 192, 193, 194, 196, 197, 198, 200, 201, 202, 205, 263, 290, 329, 340, 353, 354, 355, 356, 358, 359, 360, 365, 395, 426, 427, 430, 634, 639, 648, 649], "complic": [3, 45, 68, 80, 354, 360, 365, 426, 429, 650, 652, 655], "matter": [3, 44, 641], "inconsist": [3, 655], "miss": [3, 4, 5, 7, 8, 38, 42, 45, 50, 53, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 253, 283, 285, 291, 295, 296, 354, 360, 365, 383, 384, 392, 395, 412, 415, 426, 428, 429, 626, 633, 636, 646], "elimin": [3, 4, 627, 638], "upon": [3, 4, 9, 21, 648, 650], "canon": 3, "definit": [3, 62, 131, 329, 645], "markov": [3, 4, 638, 655], "mdp": [3, 226, 638, 650], "context": [3, 4, 6, 9, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 38, 45, 50, 58, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 130, 141, 144, 147, 148, 151, 159, 168, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 278, 287, 295, 300, 318, 323, 330, 332, 354, 360, 365, 368, 373, 424, 425, 426, 428, 429, 433, 434, 435, 436, 438, 446, 453, 461, 466, 627, 628, 629, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 654], "condit": [3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 86, 88, 89, 90, 91, 92, 200, 205, 240, 241, 277, 292, 374, 375, 377, 379, 380, 391, 545, 627, 629, 633, 648, 650, 652], "termin": [3, 4, 8, 16, 17, 19, 22, 30, 47, 49, 53, 58, 59, 70, 74, 78, 80, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113, 120, 129, 141, 144, 145, 146, 147, 150, 151, 152, 157, 158, 159, 163, 164, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 185, 186, 192, 193, 194, 197, 200, 201, 202, 207, 227, 228, 231, 232, 247, 253, 265, 278, 286, 295, 299, 318, 323, 326, 377, 383, 392, 393, 395, 396, 397, 399, 400, 401, 408, 412, 413, 414, 415, 417, 418, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 627, 633, 634, 635, 645, 648, 649, 650, 654, 655], "imit": [3, 4, 406], "inform": [3, 4, 5, 16, 17, 19, 22, 23, 24, 26, 27, 28, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 80, 83, 85, 87, 88, 89, 90, 91, 92, 103, 107, 108, 109, 121, 122, 141, 144, 147, 148, 151, 154, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 301, 302, 303, 324, 330, 353, 354, 355, 356, 358, 359, 360, 365, 426, 427, 428, 429, 430, 628, 629, 630, 633, 634, 635, 636, 637, 638, 645, 648, 649, 650, 652, 654], "stateless": [3, 4, 31, 53, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 232, 241, 293, 363, 364, 410, 426, 429, 451, 633, 638, 650, 655], "simul": [3, 4, 6, 8, 9, 85, 142, 143, 144, 153, 157, 158, 177, 185, 186, 192, 222, 299, 326, 627, 628, 633, 635, 637, 638, 642, 646, 648, 649], "furthermor": [3, 648, 649], "certain": [3, 5, 23, 24, 26, 28, 38, 45, 50, 58, 68, 69, 75, 80, 86, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 225, 240, 241, 251, 276, 285, 295, 315, 317, 322, 354, 360, 365, 409, 426, 428, 429, 627, 633, 634, 635, 637, 643, 648, 649, 655], "uniform": [3, 65, 81, 121, 122, 354, 360, 365, 648], "unambigu": 3, "distinguish": [3, 4, 72, 81, 82, 163, 164, 185, 186], "everyth": [3, 199, 634, 635, 636, 642, 643], "belong": [3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 97, 103, 291, 292, 382, 633, 641, 649], "rule": [3, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 243, 246, 295, 354, 360, 365, 382, 426, 428, 429, 628, 635], "field": [3, 4, 16, 17, 19, 22, 30, 31, 34, 38, 42, 45, 47, 50, 53, 58, 64, 66, 67, 68, 69, 73, 74, 75, 78, 80, 81, 82, 83, 85, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 115, 116, 117, 121, 129, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 157, 158, 159, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 228, 232, 243, 246, 247, 248, 253, 261, 265, 266, 268, 272, 275, 276, 278, 283, 285, 286, 295, 299, 301, 311, 312, 318, 323, 326, 340, 341, 342, 350, 353, 354, 355, 356, 358, 359, 360, 365, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 384, 386, 392, 393, 395, 396, 397, 399, 400, 401, 408, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 532, 613, 626, 627, 628, 634, 646, 650], "taken": [3, 4, 31, 36, 37, 41, 46, 54, 55, 56, 57, 62, 63, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 228, 267, 327, 328, 629, 633, 635, 636, 639, 648, 649, 650], "is_shar": [3, 4, 16, 17, 19, 30, 34, 42, 45, 47, 53, 64, 66, 67, 68, 73, 74, 78, 80, 81, 82, 83, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 115, 116, 117, 121, 129, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 157, 158, 159, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 185, 186, 192, 193, 194, 197, 198, 200, 201, 202, 207, 226, 228, 232, 243, 246, 247, 248, 253, 261, 265, 266, 268, 272, 275, 276, 278, 286, 292, 299, 301, 311, 312, 318, 323, 326, 340, 341, 342, 350, 353, 354, 355, 356, 358, 359, 360, 365, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 384, 386, 392, 393, 395, 396, 397, 399, 400, 401, 408, 412, 413, 414, 415, 417, 418, 426, 427, 429, 430, 431, 628, 650], "envbas": [3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 53, 87, 109, 141, 144, 148, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 229, 232, 243, 246, 258, 265, 266, 284, 285, 292, 295, 299, 318, 323, 325, 326, 377, 428, 466, 613, 614, 615, 619, 621, 622, 623, 625, 638], "brought": [3, 635, 636, 639], "step_mdp": [3, 4, 42, 43, 51, 77, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 318, 323, 625, 636, 638, 650, 654, 655], "trigger": [3, 8, 45, 68, 80, 200, 293, 354, 360, 365, 426, 429, 636], "turn": [3, 23, 24, 26, 28, 31, 42, 43, 51, 64, 66, 69, 73, 75, 77, 87, 107, 108, 109, 144, 158, 171, 182, 192, 198, 240, 252, 284, 287, 291, 353, 355, 356, 358, 359, 374, 426, 427, 430, 433, 451, 466, 627, 629, 633, 634, 636, 639, 650, 651], "retain": [3, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 627], "regard": [3, 99, 105, 312, 375, 392, 402, 412, 633, 635, 650], "recur": [3, 392, 393, 395, 396, 397, 399, 400, 401, 408, 412, 413, 414, 415, 417, 418, 433, 434, 435, 436, 437, 639], "anyth": [3, 5, 16, 17, 19, 22, 23, 24, 26, 28, 629], "els": [3, 142, 143, 207, 232, 316, 317, 321, 322, 334, 627, 628, 630, 633, 634, 635, 636, 645, 646, 648, 649, 650, 651], "repetit": [3, 360, 635, 638, 641], "embed": [3, 263, 288, 289, 290, 305, 341, 369, 370, 371, 372, 381, 382, 386, 651], "strictli": [3, 4, 9, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 256, 283, 285, 295, 354, 360, 365, 395, 415, 426, 428, 429, 633, 635], "enforc": [3, 38, 42, 45, 50, 58, 68, 69, 75, 80, 109, 128, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 283, 285, 295, 354, 360, 362, 365, 383, 394, 395, 412, 415, 426, 428, 429, 650], "n_action": [3, 377, 393, 395, 397, 399, 411, 415], "rightmost": [3, 629], "n_ob": [3, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 255, 377, 392, 393, 395, 396, 397, 399, 400, 401, 408, 412, 413, 414, 415, 417, 418, 640], "estim": [3, 5, 97, 122, 129, 130, 192, 193, 194, 197, 200, 207, 247, 255, 305, 348, 370, 371, 372, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 426, 429, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 627, 629, 630, 634, 635, 639, 640, 648, 649], "subsequ": [3, 38, 45, 50, 58, 68, 69, 75, 80, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 231, 295, 354, 360, 365, 426, 428, 429, 636, 648], "proce": [3, 648], "f": [3, 16, 17, 19, 22, 30, 104, 109, 142, 143, 151, 157, 158, 202, 208, 212, 214, 215, 280, 296, 322, 391, 429, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 627, 633, 634, 635, 636, 643, 646, 648, 649, 650, 652, 655], "next_state_valu": [3, 417, 418, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 625], "broadcast": [3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 310, 352, 401, 415, 627], "left": [3, 60, 97, 99, 103, 109, 122, 129, 195, 196, 199, 200, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 232, 239, 240, 242, 243, 244, 248, 255, 257, 263, 265, 266, 272, 276, 279, 282, 284, 286, 288, 290, 293, 295, 315, 327, 329, 354, 360, 365, 428, 547, 634, 635, 637, 641, 642], "would": [3, 4, 38, 45, 50, 58, 68, 69, 74, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 316, 318, 321, 323, 324, 329, 354, 360, 365, 382, 426, 428, 429, 629, 630, 634, 635, 636, 638, 640, 641, 650, 652, 654, 655], "bug": [3, 5], "worst": [3, 634], "twice": [3, 9, 130], "feasibl": 3, "mostli": [3, 4, 22, 339, 453, 629, 642, 652, 655], "eas": [3, 4, 648, 649], "flat": [3, 135, 433], "manner": [3, 151, 202, 210, 263, 288, 628, 633, 634, 635, 641, 647, 650, 652], "ted2flat": [3, 47, 625], "flat2t": [3, 625], "unflatten": [3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 198, 232, 353, 355, 356, 358, 359, 377, 427, 430], "deseri": [3, 4, 47], "posit": [3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 85, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 122, 124, 141, 144, 145, 146, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 240, 250, 251, 253, 274, 275, 276, 279, 283, 285, 287, 295, 320, 354, 360, 365, 395, 415, 426, 428, 429, 627, 629, 635, 648, 649, 650, 652], "mark": [3, 4, 19, 105, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 280, 318, 323, 433, 435, 436, 627, 641, 652], "identifi": [3, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 67, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 199, 200, 201, 202, 214, 215, 627, 645], "abov": [3, 4, 8, 32, 38, 45, 50, 58, 68, 69, 75, 80, 88, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 284, 295, 319, 348, 349, 354, 360, 365, 391, 426, 428, 429, 627, 629, 630, 633, 635, 637, 638, 639, 648, 649, 650, 655], "output": [3, 4, 5, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 38, 45, 50, 53, 58, 65, 68, 69, 72, 75, 80, 81, 82, 85, 87, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 122, 129, 130, 141, 144, 145, 146, 147, 150, 151, 152, 153, 158, 159, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 232, 233, 235, 238, 239, 241, 242, 243, 244, 246, 248, 250, 253, 255, 257, 259, 263, 265, 266, 271, 272, 275, 276, 279, 280, 282, 284, 285, 286, 288, 290, 291, 293, 295, 297, 302, 303, 304, 305, 306, 309, 311, 312, 313, 316, 317, 318, 321, 322, 323, 324, 329, 330, 337, 339, 340, 342, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 369, 370, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 451, 453, 462, 627, 628, 629, 633, 634, 635, 636, 637, 638, 639, 642, 645, 646, 647, 648, 649, 650, 651, 654, 655], "typic": [3, 4, 5, 9, 14, 15, 18, 19, 20, 23, 24, 25, 26, 27, 30, 38, 45, 50, 58, 68, 69, 75, 80, 87, 101, 109, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 247, 277, 295, 337, 339, 354, 360, 365, 378, 393, 395, 410, 412, 415, 426, 428, 429, 476, 627, 628, 629, 630, 635, 637, 638, 640, 641, 646, 648, 649, 650], "grumodul": [3, 234, 278, 368, 389, 636], "lstmmodul": [3, 318, 368, 636, 637], "skip": [3, 4, 18, 38, 45, 50, 58, 68, 69, 75, 80, 97, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 241, 251, 253, 257, 283, 285, 295, 354, 360, 365, 378, 382, 395, 410, 415, 426, 428, 429, 433, 434, 435, 436, 452, 453, 464, 466, 477, 627, 633, 634, 646, 650], "accumul": [3, 9, 295], "upcom": [3, 209, 214, 410, 426, 429, 442, 443, 444, 445, 447, 448, 449, 450, 630, 633], "popular": [3, 4, 628, 636, 640, 649], "rainbow": 3, "multistep": [3, 16, 17, 19, 22, 23, 24, 26, 28, 30, 295, 625, 634], "shift": [3, 47, 49, 58, 59, 78, 112, 113, 120, 388, 433, 434, 435, 436, 635], "approxim": [3, 649, 655], "intens": [3, 4, 9, 320], "ataridqnexperiencereplai": 3, "onlin": [3, 9, 16, 22, 235, 309, 338, 392, 398, 411, 412, 462, 623, 635, 636, 649, 652], "2x": 3, "small": [3, 121, 122, 130, 288, 293, 298, 633, 635, 637, 648, 649, 655], "clearer": [3, 637, 639], "lazi": [3, 4, 76, 77, 87, 94, 95, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 198, 200, 201, 202, 263, 288, 302, 329, 332, 353, 355, 356, 358, 359, 383, 384, 427, 430, 484, 485, 486, 633, 634, 639, 641, 647, 652, 655], "certainli": 3, "welcom": [3, 476, 627, 630, 638], "wrapper": [3, 4, 22, 33, 64, 66, 73, 74, 81, 82, 87, 107, 108, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 193, 194, 197, 198, 200, 201, 202, 207, 209, 291, 296, 300, 301, 351, 353, 354, 355, 356, 357, 358, 359, 360, 362, 365, 373, 377, 382, 387, 427, 430, 433, 458, 459, 460, 623, 625, 632, 635, 636, 638, 644, 645, 648, 649, 651, 653, 654, 655], "around": [3, 6, 8, 22, 81, 82, 141, 144, 147, 151, 159, 165, 171, 172, 175, 176, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 207, 300, 339, 377, 382, 433, 627, 633, 634, 645, 649, 655], "selecttransform": [3, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 577], "excludetransform": [3, 104, 272, 553, 652], "promptli": 3, "virtual": [3, 4, 150], "instal": [3, 4, 6, 11, 23, 24, 26, 69, 80, 99, 102, 141, 144, 147, 151, 156, 159, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 192, 193, 194, 197, 199, 200, 201, 202, 455, 472, 626, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 648, 649, 655], "respons": [3, 4, 9, 16, 17, 19, 21, 23, 26, 28, 30, 31, 122, 129, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 196, 197, 199, 200, 201, 202, 205, 210, 212, 353, 355, 357, 358, 359, 360, 365, 426, 429, 472, 640, 641, 645, 646, 655], "d4rl": [3, 99, 105], "repositori": [3, 8, 100, 101, 102, 105, 185, 186, 648, 649], "wheel": [3, 635], "publish": 3, "openml": [3, 102, 168, 512], "scikit": [3, 102, 168], "panda": [3, 102], "raw": [3, 4, 5, 74, 110, 217, 253, 282, 286, 319, 348, 349, 634, 637, 641, 650], "modifi": [3, 4, 8, 9, 38, 45, 50, 58, 68, 69, 75, 80, 86, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 235, 239, 241, 250, 253, 255, 263, 278, 284, 285, 288, 290, 293, 295, 331, 340, 353, 354, 355, 356, 358, 359, 360, 365, 373, 381, 382, 426, 427, 428, 429, 430, 612, 627, 629, 633, 634, 635, 637, 638, 648, 649, 650], "fly": [3, 235, 292, 409, 627, 629, 635, 650, 652, 655], "pre": [3, 8, 29, 33, 38, 45, 50, 58, 68, 69, 75, 80, 86, 103, 109, 117, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 263, 282, 288, 290, 295, 354, 360, 365, 426, 428, 429, 627, 655], "conisder": 3, "pipelin": [3, 4, 8, 151, 202, 627, 628, 629, 630, 635], "replac": [3, 4, 7, 8, 38, 45, 50, 58, 68, 69, 75, 80, 97, 103, 109, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 231, 245, 247, 254, 292, 293, 295, 315, 352, 354, 360, 365, 393, 395, 401, 408, 413, 415, 417, 418, 426, 428, 429, 433, 434, 435, 436, 492, 494, 536, 628, 648, 652, 654], "produc": [3, 4, 19, 42, 43, 51, 53, 77, 129, 228, 231, 232, 302, 303, 324, 330, 336, 370, 372, 373, 382, 433, 453, 627, 635, 636, 637, 638, 639, 641, 652, 655], "download": [3, 8, 11, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 97, 99, 100, 101, 103, 104, 105, 155, 263, 290, 453, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "forc": [3, 4, 7, 8, 16, 17, 22, 23, 24, 26, 28, 97, 100, 101, 103, 104, 105, 172, 360, 634, 648, 649, 650], "robosetexperiencereplai": [3, 129, 130], "fk1": [3, 104], "v4": [3, 104, 151, 171, 202, 228, 267, 442, 443, 444, 445, 447, 448, 449, 450, 630, 633, 635, 651, 654], "expert": [3, 104], "fk1_microopenrandom_v2d": [3, 104], "func": [3, 97, 98, 99, 100, 101, 102, 103, 104, 105, 294], "obs_norm": 3, "norm": [3, 5, 9, 87, 107, 108, 142, 143, 198, 298, 353, 355, 356, 358, 359, 427, 430, 465, 472, 476, 477, 627, 633, 634, 635, 648, 649, 650], "os": [3, 66, 86, 106, 634, 646], "cpu_count": [3, 66, 86, 106], "num_chunk": [3, 97, 98, 99, 100, 101, 102, 103, 104, 105], "mp_start_method": [3, 97, 98, 99, 100, 101, 102, 103, 104, 105, 171, 180, 283, 634, 654], "fork": [3, 6, 97, 98, 99, 100, 101, 102, 103, 104, 105, 633, 634, 635, 636, 648, 649, 651, 654], "recreat": [3, 650], "customari": 3, "moreov": [3, 4], "fine": [3, 4, 35, 72, 81, 82, 122, 124, 129, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 232, 255, 429, 627, 637, 641, 651], "grain": [3, 4, 72, 81, 82, 122, 124, 129, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 232], "nomenclatur": 3, "compact": [3, 53, 78, 112, 113, 120], "propos": [3, 235, 247, 300, 325, 407, 416, 628, 636, 652], "replaybufferensembl": [3, 97, 127, 133, 140], "primit": [3, 4, 5, 103, 392, 393, 395, 396, 397, 399, 400, 401, 408, 412, 413, 414, 415, 417, 418, 627], "dummi": [3, 4, 182, 207, 451, 633, 637, 641, 655], "semant": [3, 76, 77, 150, 152, 651], "ident": [3, 4, 16, 17, 19, 58, 64, 66, 72, 73, 80, 81, 82, 87, 107, 108, 115, 124, 129, 141, 144, 147, 150, 151, 152, 159, 166, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 199, 200, 201, 202, 247, 275, 284, 293, 298, 329, 330, 353, 355, 356, 358, 359, 393, 395, 408, 413, 415, 417, 418, 427, 430, 433, 434, 435, 436, 621, 622, 634, 638, 648, 649], "another_kei": [3, 124], "renam": [3, 4, 42, 43, 51, 64, 66, 73, 77, 87, 107, 108, 124, 193, 198, 226, 266, 268, 285, 353, 355, 356, 358, 359, 427, 430, 633], "resiz": [3, 4, 105, 124, 235, 572, 634, 636, 637, 638, 652, 655], "comops": 3, "totensorimag": [3, 4, 105, 124, 235, 267, 586, 634, 636, 637, 652, 654, 655], "renametransform": [3, 4, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 235, 571], "rb0": [3, 124], "pixel": [3, 4, 8, 42, 105, 124, 144, 145, 146, 150, 152, 153, 177, 235, 237, 242, 247, 250, 252, 259, 261, 263, 267, 281, 288, 290, 305, 334, 335, 451, 453, 633, 634, 636, 637, 642, 648, 651, 652, 654, 655], "rb1": [3, 124], "pixels33": [3, 124], "data0": [3, 116, 124], "244": [3, 124, 263, 290], "data1": [3, 116, 124, 654], "_": [3, 9, 65, 70, 71, 72, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 116, 124, 144, 148, 155, 185, 186, 198, 207, 236, 243, 245, 246, 255, 259, 266, 281, 292, 295, 339, 353, 355, 356, 358, 359, 369, 381, 382, 386, 391, 392, 393, 395, 396, 400, 401, 408, 412, 413, 415, 417, 418, 427, 430, 433, 434, 435, 436, 455, 633, 634, 635, 636, 637, 643, 648, 649, 650, 652, 654], "parent": [3, 4, 28, 38, 45, 49, 50, 58, 60, 68, 69, 75, 80, 85, 87, 98, 109, 124, 133, 140, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 232, 235, 236, 239, 240, 241, 244, 247, 250, 251, 257, 259, 263, 271, 276, 277, 278, 279, 283, 284, 287, 288, 295, 318, 323, 354, 360, 365, 370, 389, 410, 412, 426, 428, 429, 437, 451, 453, 479, 525, 526, 633, 641, 650, 654, 655], "basic": [3, 4, 20, 165, 192, 476, 625, 627, 628, 635, 640, 641, 643, 648, 654, 655], "properti": [3, 4, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 231, 283, 284, 285, 292, 293, 295, 310, 319, 320, 327, 328, 332, 336, 347, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 365, 377, 392, 395, 410, 412, 414, 415, 426, 427, 428, 429, 430, 627, 639, 641, 650, 652], "input": [3, 4, 5, 16, 17, 19, 22, 23, 24, 26, 28, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 73, 74, 75, 76, 77, 80, 83, 85, 87, 88, 89, 90, 91, 92, 107, 108, 109, 116, 118, 132, 138, 141, 144, 147, 151, 159, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 257, 261, 262, 263, 264, 265, 266, 268, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 298, 300, 301, 302, 303, 305, 306, 307, 308, 311, 312, 315, 316, 317, 318, 320, 321, 322, 323, 324, 329, 330, 331, 332, 333, 340, 342, 343, 344, 345, 346, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 369, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 391, 392, 393, 394, 395, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 465, 469, 612, 619, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 645, 648, 649, 650, 654, 655], "send": [3, 4, 9, 21, 32, 87, 107, 108, 175, 181, 198, 353, 355, 356, 358, 359, 427, 430, 460, 625, 654], "receiv": [3, 4, 15, 18, 20, 21, 25, 27, 32, 33, 38, 45, 50, 58, 68, 69, 74, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 240, 284, 285, 293, 295, 324, 353, 354, 355, 356, 358, 359, 360, 365, 426, 427, 428, 429, 430, 439, 625, 627, 629, 633, 635, 640, 647, 650], "spawn": [3, 4, 5, 23, 29, 155, 166, 171, 180, 283, 634, 648, 649], "check_env_spec": [3, 4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 228, 253, 265, 286, 451, 625, 635, 648, 649, 650], "saniti": [3, 4, 8, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 635], "make_composite_from_td": [3, 85, 625, 650], "fall": [3, 5, 15, 18, 21, 25, 27, 32, 33, 64, 66, 73, 87, 99, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "bound": [3, 4, 5, 28, 38, 40, 42, 45, 50, 58, 68, 69, 75, 80, 88, 109, 141, 144, 147, 151, 159, 171, 172, 175, 176, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 238, 258, 292, 295, 297, 315, 340, 343, 344, 354, 360, 365, 369, 374, 375, 378, 379, 380, 381, 382, 385, 392, 393, 395, 396, 408, 412, 413, 415, 417, 418, 426, 428, 429, 625, 628, 633, 634, 635, 637, 648, 650, 654, 655], "unbound": [3, 4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 70, 72, 73, 76, 77, 85, 87, 89, 90, 91, 92, 107, 108, 124, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 207, 220, 229, 232, 243, 246, 265, 278, 299, 326, 353, 355, 356, 358, 359, 369, 381, 384, 386, 414, 427, 430, 625, 627, 645, 650, 652], "boundeddiscret": [3, 39, 42], "boundedcontinu": [3, 29, 39, 42, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 253, 256, 286], "unboundeddiscret": [3, 88, 172, 253, 625], "unboundedcontinu": [3, 88, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 220, 265, 278, 384, 389, 625], "implicitli": 3, "onehot": [3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 63, 76, 77, 85, 88, 89, 90, 91, 92, 142, 143, 150, 152, 153, 156, 157, 158, 166, 167, 169, 170, 177, 183, 184, 312, 342, 374, 379, 397, 399, 400, 401, 431, 625, 628], "multionehot": [3, 54, 55, 57, 397, 400, 401, 431, 625], "multicategor": [3, 55, 56, 57, 625], "binari": [3, 4, 8, 37, 38, 62, 183, 229, 233, 312, 342, 374, 375, 379, 380, 397, 400, 401, 431, 625, 645], "arbitrari": [3, 4, 36, 62, 72, 141, 144, 147, 151, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 231, 629, 633, 634, 650, 652], "nevertheless": [3, 4, 635, 638, 652], "similarli": [3, 4, 28, 38, 45, 50, 58, 68, 69, 75, 80, 109, 128, 133, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 257, 295, 329, 354, 360, 365, 383, 384, 400, 408, 426, 428, 429, 433, 627, 655], "possess": [3, 85, 99], "unsqueez": [3, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 87, 88, 89, 90, 91, 92, 122, 220, 229, 232, 235, 236, 281, 287, 586, 627, 633, 637, 648, 649, 650], "move": [3, 5, 38, 45, 50, 58, 68, 69, 75, 80, 85, 105, 109, 116, 118, 141, 144, 147, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 228, 239, 244, 263, 278, 284, 285, 288, 290, 292, 293, 295, 324, 354, 360, 365, 381, 426, 428, 429, 469, 633, 634, 636, 638, 655], "unbind": [3, 64, 65, 66, 72, 73, 81, 82, 87, 107, 108, 198, 257, 353, 355, 356, 358, 359, 377, 427, 429, 430, 627], "said": [3, 635], "neg": [3, 9, 16, 17, 19, 22, 23, 24, 26, 28, 65, 68, 81, 85, 121, 122, 204, 235, 250, 264, 275, 287, 354, 394, 403, 409, 412, 433, 435, 436, 629, 635, 648, 649, 650], "seen": [3, 4, 23, 24, 26, 28, 42, 43, 51, 77, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 244, 629, 633, 634, 636, 640, 648, 649, 652], "predict": [3, 4, 58, 74, 311, 313, 325, 326, 373, 387, 392, 394, 399, 402, 404, 405, 409, 412, 414, 426, 432, 633, 634, 640], "deprec": [3, 34, 37, 38, 40, 43, 45, 46, 50, 51, 52, 55, 57, 58, 61, 63, 64, 66, 68, 69, 73, 75, 80, 87, 90, 92, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 283, 285, 292, 295, 353, 354, 355, 356, 358, 359, 360, 365, 392, 394, 395, 397, 400, 401, 402, 408, 409, 412, 413, 414, 415, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 441, 655], "mont": [3, 192, 193, 194, 197, 200, 207, 392, 394, 409, 412, 426, 428, 627, 633], "carlo": [3, 192, 193, 194, 197, 200, 207, 392, 394, 409, 412, 426, 428, 627, 633], "mct": [3, 53], "act": [3, 4, 5, 129, 130, 173, 174, 285, 311, 330, 393, 395, 396, 408, 413, 415, 417, 418, 636, 637, 648, 649, 652, 654], "tradit": [3, 320, 627, 640, 648], "integ": [3, 16, 17, 19, 22, 30, 31, 34, 50, 54, 56, 58, 62, 68, 69, 74, 75, 87, 122, 129, 130, 131, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 200, 201, 202, 210, 211, 228, 231, 247, 251, 259, 276, 293, 302, 303, 324, 329, 330, 395, 400, 408, 415, 629, 637, 652], "advanc": [3, 4, 28, 65, 72, 81, 82, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 352, 627, 630, 638, 641, 652], "rebuild": [3, 53], "initi": [3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 41, 45, 46, 50, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 135, 141, 144, 147, 151, 159, 169, 170, 171, 172, 175, 180, 181, 182, 183, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 234, 253, 259, 263, 278, 285, 288, 293, 294, 295, 296, 297, 298, 299, 315, 316, 317, 321, 322, 326, 329, 330, 331, 332, 333, 340, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 377, 392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 623, 627, 628, 629, 633, 634, 636, 638, 639, 641, 645, 648, 650, 655], "pair": [3, 4, 33, 58, 64, 66, 68, 73, 80, 87, 99, 107, 108, 141, 144, 145, 146, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 268, 278, 283, 318, 353, 355, 356, 358, 359, 370, 378, 382, 401, 410, 415, 426, 427, 429, 430, 433, 434, 435, 436, 437, 628, 629, 633, 634, 635, 639, 640, 647, 650, 655], "term": [3, 74, 87, 107, 108, 116, 198, 208, 214, 255, 321, 322, 332, 333, 353, 355, 356, 358, 359, 391, 392, 401, 412, 427, 430, 475, 634, 635, 638, 639, 649], "pseudocod": [3, 4, 627], "next_stat": [3, 629], "associ": [3, 4, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 38, 42, 43, 45, 50, 51, 53, 58, 64, 66, 68, 69, 70, 73, 75, 77, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 283, 284, 295, 343, 353, 354, 355, 356, 357, 358, 359, 360, 365, 426, 427, 428, 429, 430, 623, 633, 652], "sens": [3, 5, 64, 66, 73, 87, 107, 108, 198, 207, 235, 353, 355, 356, 358, 359, 427, 430, 641, 650], "hard": [3, 4, 8, 135, 145, 146, 171, 407, 627, 634, 655], "know": [3, 4, 5, 10, 65, 72, 81, 82, 150, 152, 297, 410, 413, 426, 429, 466, 633, 634, 635, 636, 637, 638, 639, 640, 641, 648, 649, 652], "next_td": [3, 208, 214], "Of": [3, 4, 8, 626, 650, 655], "cours": [3, 4, 5, 626, 650, 655], "handi": [3, 4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 642], "undertaken": [3, 87, 629, 650], "link": [3, 7, 8, 147, 634, 643], "hash": [3, 50, 53, 68, 69, 75, 80, 87, 144, 159, 201, 558], "past": [3, 5, 235, 377, 634, 652], "node_map": [3, 53], "_index": [3, 68, 80], "Then": [3, 8, 16, 17, 19, 22, 23, 24, 26, 28, 197, 205, 291, 635, 647], "next_data": [3, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "data_map": [3, 53], "form": [3, 16, 17, 22, 38, 45, 50, 58, 65, 68, 69, 72, 75, 80, 81, 82, 97, 99, 100, 101, 102, 103, 104, 105, 109, 112, 113, 120, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 292, 293, 295, 316, 318, 321, 323, 354, 360, 365, 382, 391, 392, 394, 409, 412, 426, 428, 429, 472, 477, 627, 628, 639], "figur": [3, 4, 87, 159, 201, 633, 635, 636, 649, 650, 655], "flowchart": 3, "o": [3, 38, 45, 50, 58, 68, 69, 75, 80, 109, 111, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 322, 354, 360, 365, 426, 428, 429], "get_tre": [3, 53, 87], "vertex": [3, 87], "longer": [3, 87, 107, 108, 198, 209, 296, 353, 355, 356, 358, 359, 427, 430, 634, 636, 643, 648, 649, 652], "vertic": [3, 87], "branch": [3, 53, 87], "depth": [3, 72, 85, 141, 144, 147, 151, 159, 165, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 299, 302, 303, 305, 306, 307, 308, 313, 314, 324, 326, 329, 330, 331, 334, 335, 374, 523, 524, 527, 528, 529, 628, 634, 638, 640, 641, 647, 648, 649, 652], "until": [3, 4, 8, 28, 30, 109, 158, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 279, 284, 295, 428, 461, 635, 636, 643, 648, 649], "anymor": [3, 64, 66, 73, 87, 107, 108, 198, 285, 353, 355, 356, 358, 359, 381, 427, 430], "remov": [3, 7, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 94, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 265, 274, 285, 295, 353, 354, 355, 356, 358, 359, 360, 365, 410, 426, 427, 428, 429, 430, 648, 649, 654, 655], "utmost": 3, "post": [3, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 38, 45, 50, 58, 68, 69, 75, 80, 101, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429, 627], "grpo": [3, 200, 207, 426, 625], "commonli": [3, 122, 129, 130, 655], "emploi": [3, 333], "scarc": 3, "address": [3, 32, 352, 363, 364, 627, 652], "subdomain": 3, "extern": [3, 4, 243, 246, 293, 352, 363, 364, 645, 648, 655], "token": [3, 30, 66, 67, 74, 83, 86, 106, 108, 109, 159, 192, 193, 194, 196, 197, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 212, 214, 215, 216, 320, 352, 354, 357, 360, 365, 426, 429, 587, 645, 646], "dm": [4, 633, 655], "box": [4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 87, 88, 89, 90, 91, 92, 150, 152, 331, 410, 426, 429, 645], "lib": [4, 6, 7, 8, 10, 11, 16, 17, 19, 22, 28, 29, 30, 31, 70, 109, 141, 144, 147, 148, 151, 156, 159, 163, 164, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 235, 238, 247, 254, 255, 259, 261, 266, 268, 271, 278, 284, 291, 292, 295, 428, 451, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 619, 633, 634, 635, 636, 647, 649, 651, 652, 654, 655], "hope": [4, 12], "nn": [4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 35, 38, 44, 45, 50, 58, 68, 69, 70, 74, 75, 80, 87, 107, 108, 109, 141, 142, 143, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 240, 245, 247, 255, 263, 278, 284, 285, 288, 290, 295, 299, 301, 302, 303, 305, 306, 307, 308, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 326, 328, 329, 330, 331, 340, 341, 342, 350, 353, 354, 355, 356, 358, 359, 360, 365, 369, 370, 371, 372, 373, 374, 377, 378, 379, 381, 382, 383, 384, 386, 389, 391, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 528, 619, 628, 629, 633, 634, 635, 636, 637, 639, 640, 643, 647, 648, 649, 650, 651, 654], "organis": [4, 104, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 285, 634], "attribut": [4, 5, 8, 16, 17, 19, 22, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 141, 144, 147, 150, 151, 152, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 247, 257, 263, 285, 288, 292, 293, 295, 353, 354, 355, 356, 358, 359, 360, 365, 382, 392, 393, 395, 396, 397, 399, 401, 402, 403, 406, 408, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 633, 636, 650], "live": [4, 38, 45, 50, 58, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 247, 295, 354, 360, 365, 426, 428, 429, 552], "actual": [4, 5, 8, 15, 18, 20, 21, 25, 27, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 73, 76, 77, 85, 87, 88, 89, 90, 91, 92, 97, 99, 100, 101, 103, 104, 105, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 291, 353, 355, 356, 358, 359, 427, 430, 612, 627, 629, 633, 635, 637, 648, 649, 650], "care": [4, 9, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 68, 69, 75, 76, 77, 80, 85, 88, 89, 90, 91, 92, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 297, 298, 301, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 331, 334, 335, 338, 340, 343, 344, 346, 351, 373, 375, 377, 380, 385, 388, 453, 633, 635, 637, 648, 649, 650, 652], "parametr": [4, 333, 382, 393, 395, 400, 408, 415, 633, 635], "observation_spec": [4, 53, 109, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 229, 232, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 250, 252, 253, 254, 255, 259, 261, 263, 265, 267, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 291, 292, 293, 295, 299, 318, 323, 326, 428, 613, 619, 633, 635, 640, 647, 648, 649, 650, 655], "state_spec": [4, 109, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 229, 239, 244, 259, 284, 286, 287, 295, 299, 326, 428, 650, 655], "reward_spec": [4, 109, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 229, 232, 233, 238, 239, 243, 244, 246, 256, 265, 269, 270, 271, 273, 275, 282, 284, 286, 287, 293, 295, 299, 326, 428, 627, 635, 645, 648, 649, 650, 655], "done_spec": [4, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 243, 244, 246, 247, 265, 275, 282, 284, 286, 295, 428, 648, 649, 650, 655], "input_spec": [4, 87, 109, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 232, 239, 243, 244, 245, 257, 261, 265, 266, 271, 272, 275, 276, 277, 278, 282, 284, 285, 286, 289, 295, 428, 635, 650], "full_action_spec": [4, 87, 141, 144, 147, 151, 159, 169, 170, 171, 172, 175, 180, 181, 182, 183, 184, 192, 193, 194, 197, 200, 201, 202, 228, 244, 299, 326, 648, 649], "full_state_spec": [4, 53, 87, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 228, 244, 299, 326], "output_spec": [4, 87, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 239, 243, 244, 248, 255, 257, 265, 266, 272, 276, 282, 284, 285, 286, 293, 295, 428, 650], "full_observation_spec": [4, 87, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 200, 201, 202, 299, 326], "full_reward_spec": [4, 87, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 232, 244, 265, 648, 649], "full_done_spec": [4, 87, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 227, 232, 244, 265, 648, 649], "carri": [4, 28, 56, 86, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 278, 293, 410, 426, 429, 634, 636, 648, 649, 650, 652], "nontensor": [4, 61, 108, 197, 202, 253, 286, 625], "spec_lock": [4, 147], "modif": [4, 6, 38, 42, 43, 45, 50, 51, 58, 68, 69, 75, 77, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 250, 253, 295, 354, 360, 365, 410, 426, 428, 429, 627, 629, 635, 650], "children": [4, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 38, 42, 43, 45, 50, 51, 58, 68, 69, 75, 77, 80, 87, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "unlock": [4, 42, 43, 51, 64, 66, 73, 77, 87, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 353, 355, 356, 358, 359, 427, 430], "set_spec_lock_": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "reason": [4, 5, 9, 38, 45, 50, 58, 68, 69, 75, 80, 103, 109, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 263, 288, 295, 323, 354, 360, 365, 426, 428, 429, 627, 629, 633, 634, 635, 640, 641, 648, 650, 652], "cach": [4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 76, 77, 85, 86, 88, 89, 90, 91, 92, 97, 99, 100, 101, 103, 104, 105, 106, 122, 129, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 213, 226, 231, 243, 246, 263, 284, 285, 290, 300, 320, 352, 463, 627], "principl": [4, 627], "new_spec": 4, "eras": [4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 122, 129, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 285], "relock": 4, "previous": [4, 5, 53, 101, 635, 655], "importantli": [4, 378, 382], "action_s": 4, "With": [4, 87, 107, 108, 157, 158, 162, 198, 277, 353, 355, 356, 358, 359, 427, 430, 630, 634, 645, 647, 648, 649, 652, 655], "necessarili": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 655], "present": [4, 30, 38, 45, 50, 58, 64, 65, 66, 68, 69, 70, 72, 73, 75, 80, 85, 87, 97, 99, 103, 107, 108, 109, 121, 122, 124, 128, 141, 144, 147, 150, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 248, 268, 272, 278, 283, 285, 295, 303, 304, 305, 306, 307, 308, 314, 318, 321, 323, 333, 338, 340, 353, 354, 355, 356, 358, 359, 360, 365, 377, 381, 382, 383, 384, 392, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 623, 627, 630, 633, 643, 647, 648, 649, 652, 654], "0s": [4, 97, 103, 278, 636], "step_and_maybe_reset": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 627, 638, 645], "done_kei": [4, 34, 45, 47, 49, 53, 59, 78, 109, 112, 113, 120, 129, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 226, 231, 235, 247, 268, 276, 295, 428, 552, 648, 649], "_reset": [4, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 227, 229, 231, 232, 235, 243, 246, 254, 265, 280, 299, 326, 648], "data_": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "append": [4, 9, 12, 53, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 124, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 204, 207, 214, 231, 238, 239, 257, 268, 278, 285, 291, 317, 318, 322, 323, 374, 379, 627, 633, 634, 635, 636, 637, 645, 648, 649, 650, 651, 652, 654], "seed": [4, 16, 17, 19, 22, 28, 30, 31, 72, 81, 82, 104, 124, 141, 144, 147, 151, 159, 165, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 187, 192, 193, 194, 197, 200, 201, 202, 203, 229, 232, 243, 246, 253, 265, 285, 451, 472, 477, 532, 648], "determinist": [4, 16, 17, 19, 22, 23, 24, 26, 28, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 224, 239, 263, 278, 284, 285, 288, 290, 295, 304, 313, 334, 344, 354, 360, 365, 369, 378, 381, 382, 385, 393, 394, 410, 412, 426, 428, 429, 466, 628, 633, 634, 635, 636, 637, 639, 640, 643, 648, 650, 654, 655], "preced": [4, 58, 144, 235, 636], "risk": [4, 264], "overlap": [4, 81, 135], "tensordictmodul": [4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 45, 68, 70, 74, 80, 141, 142, 143, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 234, 240, 255, 301, 312, 318, 323, 326, 341, 342, 350, 351, 354, 360, 365, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 383, 384, 385, 387, 389, 393, 395, 396, 400, 401, 403, 404, 405, 406, 408, 410, 413, 415, 417, 418, 426, 429, 431, 432, 433, 434, 435, 436, 466, 528, 619, 625, 633, 635, 636, 640, 643, 647, 648, 649, 650, 651, 655], "trail": [4, 60, 199, 292, 645], "treat": [4, 58, 629, 639, 640], "brief": [4, 627, 635, 638, 640, 652], "deliveri": 4, "metaclass": [4, 147, 152], "flank": [4, 629, 636], "dual": 4, "union": [4, 26, 38, 42, 43, 45, 50, 51, 52, 56, 57, 58, 60, 62, 63, 68, 69, 75, 76, 77, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 329, 350, 354, 360, 365, 399, 401, 413, 426, 428, 429, 620, 623], "assess": [4, 16, 17, 19, 22, 23, 24, 26, 28, 42, 43, 51, 77, 163, 164, 188, 197, 633], "split_trajectori": [4, 16, 17, 19, 22, 23, 24, 26, 28, 97, 103, 122, 129, 130, 625], "adjac": [4, 34, 250, 377], "junction": 4, "inittrack": [4, 318, 323, 377, 559, 633, 636], "tutori": [4, 172, 206, 624, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 650, 651, 652, 653, 655], "scratch": [4, 9, 634, 650], "mere": [4, 22, 637], "batch_lock": [4, 141, 144, 147, 149, 151, 159, 171, 175, 180, 181, 192, 193, 194, 197, 200, 201, 202, 232, 278, 285, 650], "contrast": [4, 316, 339, 407, 652], "notabl": 4, "braxenv": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 266, 502, 625, 638], "jumanjienv": [4, 508, 625], "straightforward": [4, 20, 627, 633, 634, 638, 639, 640, 641, 652], "merg": [4, 65, 72, 81, 82, 97, 99, 100, 101, 102, 103, 104, 105, 650], "silent": [4, 38, 45, 50, 68, 69, 75, 80, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 297, 298, 301, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 331, 334, 335, 338, 340, 343, 344, 346, 351, 354, 373, 375, 377, 380, 385, 388], "_step": [4, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 251, 254, 255, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 288, 289, 291, 292, 295, 428], "temporari": [4, 633], "hold": [4, 284, 424, 425, 428, 627, 650, 652], "arm": 4, "unbatch": [4, 316, 321], "captur": [4, 297, 315, 340, 602, 627, 637], "break_when_all_don": [4, 141, 144, 147, 151, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "conditionalskip": [4, 546], "programmat": 4, "pretti": [4, 633, 638, 642, 652], "likewis": 4, "break_when_any_don": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 231, 283, 295, 301, 377, 649], "te": 4, "paragraph": 4, "dive": 4, "gym3": 4, "envpool": [4, 166, 167, 511], "simultan": [4, 26, 158, 166, 167, 171, 180, 627, 650], "scale": [4, 5, 35, 99, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 199, 200, 201, 202, 235, 255, 259, 270, 277, 281, 292, 293, 298, 313, 319, 343, 344, 348, 349, 370, 371, 372, 378, 382, 384, 392, 393, 395, 408, 412, 413, 414, 415, 469, 565, 575, 613, 623, 627, 628, 633, 634, 635, 636, 639, 649, 654], "varieti": [4, 12], "from_pixel": [4, 12, 142, 143, 145, 146, 150, 152, 153, 157, 158, 177, 235, 267, 451, 453, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 633, 634, 636, 638, 642, 643, 651, 652, 654, 655], "81": [4, 87, 107, 108, 129, 198, 353, 355, 356, 358, 359, 427, 430], "d": [4, 42, 43, 45, 51, 65, 68, 72, 77, 80, 81, 82, 100, 102, 104, 105, 106, 121, 122, 298, 316, 321, 354, 360, 365, 378, 382, 426, 429, 654], "privat": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 291, 650, 655], "absenc": 4, "total": [4, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 36, 54, 56, 62, 64, 65, 66, 70, 71, 72, 73, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 124, 130, 135, 194, 198, 205, 240, 353, 355, 356, 358, 359, 363, 364, 394, 409, 412, 426, 427, 430, 462, 464, 466, 472, 474, 476, 477, 612, 613, 632, 633, 634, 635, 636, 640, 648, 649, 651, 652, 653, 654], "accord": [4, 16, 17, 19, 22, 23, 24, 26, 28, 42, 43, 51, 53, 64, 66, 73, 74, 77, 87, 107, 108, 124, 127, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 183, 184, 192, 193, 194, 197, 198, 200, 201, 202, 259, 270, 319, 332, 343, 348, 349, 353, 355, 356, 358, 359, 427, 430, 431, 628, 629, 639, 640, 648, 650, 652], "inner": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 245, 285, 630, 634, 635, 649, 655], "kept": [4, 25, 27, 34, 128, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 226, 245, 272, 319, 348, 349, 640, 648], "wherev": 4, "lost": [4, 9, 291], "intern": [4, 53, 84, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 293, 352, 354, 360, 365, 627, 631], "face": [4, 6, 9, 10, 357, 360, 627, 638, 646, 655], "NOT": [4, 112, 113, 120, 130, 264], "right": [4, 7, 8, 34, 74, 122, 129, 202, 240, 360, 365, 634, 635, 637, 649, 650, 655], "preliminari": 4, "warranti": 4, "preclud": 4, "presenc": [4, 45, 68, 80, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 354, 360, 365, 426, 429, 640], "annihil": 4, "supersed": [4, 34], "pettingzoowrapp": [4, 625], "__not__": [4, 378, 393, 395, 408, 413, 415, 417, 418], "constrain": [4, 255, 318, 323, 412, 655], "li": 4, "fact": [4, 8, 9, 627, 633, 635, 638, 648, 649, 650, 651, 652, 655], "meaning": [4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 199, 474], "perfectli": [4, 630, 633, 637, 650], "meaningless": 4, "val": [4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 193, 293, 461, 640, 654], "agent0": [4, 412, 637], "agent1": [4, 412], "bool": [4, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 28, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 121, 122, 124, 125, 127, 128, 129, 130, 131, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 227, 228, 229, 231, 232, 235, 236, 240, 241, 243, 245, 246, 247, 248, 250, 253, 255, 257, 258, 259, 261, 263, 265, 266, 268, 270, 271, 272, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 290, 292, 293, 295, 296, 297, 298, 299, 301, 302, 303, 305, 306, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 329, 330, 331, 332, 333, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 368, 369, 374, 375, 377, 378, 379, 380, 381, 382, 383, 385, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 422, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 439, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 460, 461, 464, 465, 466, 468, 469, 472, 477, 478, 480, 481, 482, 484, 485, 486, 487, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 536, 537, 562, 564, 565, 575, 581, 586, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 623, 627, 634, 635, 637, 645, 646, 650, 654, 655], "500": [4, 633, 634], "note": [4, 5, 16, 17, 19, 22, 23, 24, 26, 28, 38, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 227, 243, 246, 283, 292, 293, 295, 300, 316, 318, 320, 321, 323, 340, 352, 353, 354, 355, 356, 358, 359, 360, 365, 378, 382, 394, 402, 412, 426, 427, 428, 429, 430, 625, 629, 634, 637, 639, 645, 647, 648, 649, 655], "launch": [4, 16, 17, 22, 23, 24, 26, 29, 97, 100, 171, 180, 352, 361], "bottleneck": [4, 9, 122, 129, 130], "great": [4, 8, 9, 637, 646, 648, 654], "speedup": [4, 9, 648, 655], "precis": [4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 226, 243, 246, 317, 322, 633, 635], "misspecifi": 4, "caus": [4, 8, 9, 16, 17, 19, 115, 117, 121, 122, 137, 141, 144, 147, 151, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 264, 426, 655], "breakag": 4, "rais": [4, 14, 16, 17, 19, 22, 23, 24, 25, 26, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 101, 103, 107, 108, 109, 115, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 183, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 249, 258, 268, 277, 278, 279, 283, 285, 292, 295, 297, 315, 340, 353, 354, 355, 356, 358, 359, 360, 361, 365, 395, 410, 415, 426, 427, 428, 429, 430, 461, 633, 635, 648, 649, 652], "mismatch": [4, 68, 394, 412, 426, 634], "subprocess": [4, 16, 17, 22, 148, 171, 180], "multithreadedenv": [4, 511, 625], "underneath": 4, "higher": [4, 5, 121, 122, 199, 208, 215, 238, 352, 354, 360, 365, 385, 429, 627, 633, 634, 635, 648, 652, 655], "cover": [4, 150, 152, 320, 626, 635, 638, 641, 642, 650, 654], "classic": [4, 156, 165, 174, 627, 634], "benchmark_batched_env": 4, "significantli": [4, 14, 23, 24, 26, 110, 129, 130, 235, 394, 412, 426, 629, 633, 634, 640, 649], "asyncenvpool": [4, 30, 175, 181], "pool": [4, 97, 98, 99, 100, 101, 102, 103, 104, 105, 141, 175, 181, 279], "concurr": [4, 141, 352, 357, 474, 627, 648, 649], "contrari": [4, 629], "permit": [4, 238, 250, 275, 287, 392, 394, 409, 412, 414], "job": [4, 8, 23, 24, 26, 29, 72, 81, 82, 124, 652, 654], "famili": [4, 108], "interest": [4, 378, 382, 628, 634, 635, 638, 649, 650, 655], "prefer": [4, 16, 17, 22, 26, 34, 35, 65, 72, 81, 82, 129, 130, 141, 175, 181, 203, 264, 272, 412, 417, 468, 628, 635, 648, 649, 652, 654], "lifecycl": [4, 352, 627], "processorasyncenvpool": 4, "inter": [4, 171, 175], "threadingasyncenvpool": 4, "executor": [4, 23, 24, 26, 181], "functool": [4, 16, 17, 19, 22, 30, 141], "s0": [4, 141], "clamp": [4, 141, 382, 385, 404, 472, 629, 648, 650], "env_index": [4, 141], "async_step_send": [4, 141, 175, 181], "s0_result": [4, 141], "async_step_recv": [4, 141, 175, 181], "close": [4, 14, 16, 17, 19, 22, 23, 24, 26, 30, 70, 109, 141, 151, 166, 195, 196, 199, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 255, 284, 293, 295, 392, 394, 409, 412, 426, 428, 451, 633, 634, 638, 645, 647, 648, 650, 654], "paradigm": [4, 22, 649], "decpodp": 4, "game": [4, 5, 6, 97, 144, 163, 164, 169, 170, 240, 303, 453, 637, 642], "thank": [4, 192, 214, 215, 429, 627, 633, 637, 638, 654], "carrier": [4, 635, 636, 638, 652], "particular": [4, 38, 45, 50, 58, 68, 69, 75, 80, 86, 87, 99, 100, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 285, 295, 354, 360, 365, 426, 428, 429, 629, 630, 634, 636, 638, 647, 649, 652], "thu": [4, 409, 649], "vma": [4, 185, 186, 451, 518, 648, 649], "robot": [4, 6, 8, 103, 263, 288, 290, 412, 637, 649], "vmasenv": [4, 451, 518, 625, 648, 649], "balanc": [4, 121, 122, 145, 146, 352, 627, 633, 634], "num_env": [4, 16, 17, 22, 28, 141, 150, 154, 167, 185, 186, 193, 194, 197, 203, 451, 505, 509, 648, 649], "n_agent": [4, 185, 186, 329, 330, 331, 341, 350, 431, 451, 629, 648, 649], "ground_rew": 4, "pos_rew": 4, "style": [4, 65, 72, 81, 82, 97, 99, 100, 101, 102, 103, 104, 105, 210, 477], "vari": [4, 150, 152, 153, 173, 174, 177, 185, 264, 629, 637, 649], "creation": [4, 171, 180, 215, 360, 426, 655], "info_spec": [4, 171], "agent_i_action_spec": 4, "agent_i_reward_spec": 4, "agent_i_observation_spec": 4, "categor": [4, 36, 37, 39, 40, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 141, 142, 143, 144, 147, 150, 151, 152, 153, 156, 157, 158, 159, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 197, 200, 201, 202, 227, 228, 229, 247, 265, 312, 320, 336, 339, 342, 354, 374, 375, 378, 379, 380, 397, 400, 401, 431, 534, 625, 636], "prefix": [4, 34, 38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 86, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 280, 283, 285, 295, 352, 353, 354, 355, 356, 358, 359, 360, 365, 378, 395, 410, 415, 426, 427, 428, 429, 430, 452, 636, 640, 645, 655], "exactli": [4, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 153, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 283, 285, 295, 316, 321, 336, 354, 360, 365, 395, 415, 426, 428, 429, 633, 636, 641, 648, 649], "action_kei": [4, 16, 17, 19, 22, 23, 24, 26, 28, 53, 141, 144, 147, 151, 159, 171, 172, 175, 176, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 226, 228, 229, 245, 255, 257, 297, 299, 315, 325, 326, 340, 377, 534, 629, 648, 649], "reward_kei": [4, 45, 47, 49, 53, 59, 78, 112, 113, 120, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 226, 295, 299, 326, 465, 469, 648, 649], "set_kei": [4, 247, 392, 394, 395, 397, 400, 401, 402, 408, 409, 410, 412, 413, 414, 415, 426, 429, 431, 437, 633, 648, 649], "awai": [4, 635, 638, 648, 649, 654], "leaf": [4, 16, 17, 19, 21, 22, 23, 24, 26, 28, 36, 37, 39, 40, 41, 42, 43, 46, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 77, 85, 87, 88, 89, 90, 91, 92, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 254, 276, 278, 284, 382], "autoresettransform": [4, 536], "invalid": [4, 38, 45, 50, 58, 68, 69, 75, 80, 109, 135, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 188, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 327, 328, 354, 360, 361, 365, 426, 428, 429, 646], "nan": [4, 231, 291, 536], "auto_reset": [4, 53, 141, 144, 147, 151, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 207, 231, 295, 650], "auto_reset_replac": [4, 231], "placehold": [4, 152, 153, 197, 247, 285, 291], "set_gym_backend": [4, 16, 17, 19, 22, 30, 141, 144, 147, 150, 151, 159, 171, 172, 175, 180, 181, 182, 191, 192, 193, 194, 197, 200, 201, 202, 231, 625, 638, 654], "autoresettinggymenv": [4, 231], "td_reset": [4, 231], "exclud": [4, 9, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 80, 85, 88, 89, 90, 91, 92, 99, 104, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 214, 215, 226, 231, 235, 248, 341, 357, 365, 394, 409, 412, 426, 648, 649, 652], "r": [4, 5, 53, 58, 87, 107, 108, 144, 194, 197, 198, 210, 212, 228, 229, 231, 238, 240, 241, 259, 273, 280, 283, 292, 293, 298, 301, 317, 353, 355, 356, 358, 359, 382, 391, 412, 427, 430, 432, 451, 627, 634, 650, 655], "3633e": [4, 231], "02": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 231, 293, 634, 643], "4877e": [4, 231], "2849e": [4, 231], "7584e": [4, 231], "6609e": [4, 231], "6166e": [4, 231], "8366e": [4, 231], "2761e": [4, 231], "5685e": [4, 231], "4102e": [4, 231], "8111e": [4, 231], "9959e": [4, 231], "0865e": [4, 231], "5644e": [4, 231], "2119e": [4, 231], "2542e": [4, 231], "03": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 231, 259, 280], "9952e": [4, 231], "4059e": [4, 231], "2094e": [4, 231], "9009e": [4, 231], "5140e": [4, 231], "3554e": [4, 231], "2920e": [4, 231], "7893e": [4, 231], "6429e": [4, 231], "3057e": [4, 231], "2867e": [4, 231], "6963e": [4, 231], "3818e": [4, 231], "2576e": [4, 231], "2679e": [4, 231], "1640e": [4, 231], "00": [4, 142, 143, 231, 632, 653], "6972e": [4, 231], "0212e": [4, 231], "5959e": [4, 231], "4637e": [4, 231], "3121e": [4, 231], "2168e": [4, 231], "5232e": [4, 231], "7704e": [4, 231], "7457e": [4, 231], "4127e": [4, 231], "1064e": [4, 231], "0854e": [4, 231], "5712e": [4, 231], "2189e": [4, 231], "5235e": [4, 231], "8289e": [4, 231], "0009e": [4, 231], "0257e": [4, 231], "8893e": [4, 231], "5872e": [4, 231], "9405e": [4, 231], "7766e": [4, 231], "0403e": [4, 231], "0626e": [4, 231], "2959e": [4, 231], "7263e": [4, 231], "2775e": [4, 231], "9564e": [4, 231], "0411e": [4, 231], "6769e": [4, 231], "6354e": [4, 231], "8698e": [4, 231], "1765e": [4, 231], "6292e": [4, 231], "5375e": [4, 231], "1820e": [4, 231], "7023e": [4, 231], "5836e": [4, 231], "9016e": [4, 231], "4826e": [4, 231], "6191e": [4, 231], "6387e": [4, 231], "8667e": [4, 231], "2056e": [4, 231], "1147e": [4, 231], "5991e": [4, 231], "0278e": [4, 231], "5219e": [4, 231], "3067e": [4, 231], "6617e": [4, 231], "3322e": [4, 231], "2629e": [4, 231], "4599e": [4, 231], "7298e": [4, 231], "5848e": [4, 231], "0148e": [4, 231], "5745e": [4, 231], "6982e": [4, 231], "7877e": [4, 231], "3527e": [4, 231], "7285e": [4, 231], "6668e": [4, 231], "0583e": [4, 231], "6956e": [4, 231], "3962e": [4, 231], "9845e": [4, 231], "5015e": [4, 231], "5903e": [4, 231], "9993e": [4, 231], "9418e": [4, 231], "0196e": [4, 231], "6557e": [4, 231], "2109e": [4, 231], "8997e": [4, 231], "1507e": [4, 231], "7363e": [4, 231], "0310e": [4, 231], "9574e": [4, 231], "8980e": [4, 231], "0090e": [4, 231], "forecast": 4, "awar": [4, 8, 42, 43, 51, 77, 109, 110, 115, 116, 117, 118, 131, 133, 137, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 284, 295, 318, 323, 352, 428, 634, 636], "detect": [4, 105, 108, 196, 200, 410, 420, 426, 429, 627, 629], "return_contigu": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 647], "tensordictbas": [4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 71, 73, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 135, 141, 144, 147, 149, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 226, 227, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 247, 248, 249, 250, 251, 254, 255, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 288, 289, 291, 292, 293, 295, 297, 299, 315, 318, 323, 325, 326, 340, 353, 354, 355, 356, 358, 359, 360, 365, 373, 375, 377, 380, 381, 382, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 472, 633, 648, 650], "envwithdynamicspec": 4, "max_count": 4, "_set_se": [4, 229, 232, 243, 246, 265, 650], "lazystackedtensordict": [4, 30, 53, 77, 87, 97, 107, 108, 116, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 207, 353, 355, 356, 358, 359, 427, 430, 647], "float32": [4, 16, 17, 19, 39, 42, 45, 47, 53, 64, 65, 66, 68, 73, 74, 78, 80, 81, 82, 85, 86, 87, 88, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 115, 116, 117, 121, 122, 129, 137, 141, 142, 143, 144, 147, 150, 151, 152, 157, 158, 159, 165, 168, 169, 170, 171, 172, 175, 178, 179, 180, 181, 182, 183, 185, 186, 192, 193, 194, 197, 198, 200, 201, 202, 220, 226, 228, 232, 243, 246, 247, 248, 253, 256, 259, 261, 265, 266, 268, 272, 275, 276, 278, 281, 286, 299, 301, 311, 312, 318, 323, 326, 340, 341, 342, 350, 353, 354, 355, 356, 358, 359, 360, 365, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 384, 386, 389, 392, 393, 395, 396, 397, 399, 400, 401, 408, 412, 413, 414, 415, 417, 418, 426, 427, 429, 430, 431, 548, 628, 645, 650], "exclusive_field": [4, 30, 53, 87, 97, 107, 108, 116, 141, 194, 197, 198, 207, 353, 355, 356, 358, 359, 427, 430], "stack_dim": [4, 30, 53, 87, 97, 107, 108, 116, 141, 194, 197, 198, 207, 219, 353, 355, 356, 358, 359, 427, 430, 485], "dramat": 4, "carefulli": [4, 205, 648, 649, 655], "against": [4, 6, 8, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 75, 76, 77, 80, 85, 88, 89, 90, 91, 92, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 369, 374, 375, 378, 379, 380, 381, 382, 393, 395, 408, 413, 415, 417, 418, 426, 428, 429, 635, 648, 649], "plain": [4, 9, 393, 395, 401, 408, 413, 415, 417, 418, 434, 435, 436, 638], "expens": [4, 31, 122, 129, 130, 451, 652], "absent": [4, 42, 43, 51, 77, 80, 99, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 272, 285], "torchvis": [4, 12, 263, 290, 455, 648, 654, 655], "callabl": [4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 124, 141, 144, 147, 148, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 225, 230, 232, 239, 240, 241, 247, 253, 278, 285, 286, 295, 296, 302, 303, 324, 331, 354, 360, 365, 382, 391, 410, 426, 428, 429, 451, 475, 477, 614, 615, 621, 622, 623, 634, 652], "bring": [4, 635, 638, 655], "kind": [4, 72, 85, 640, 648, 652], "consult": 4, "resize_par": 4, "revers": [4, 321], "order": [4, 12, 19, 21, 30, 31, 38, 45, 50, 58, 62, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 128, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 236, 243, 246, 253, 261, 275, 283, 285, 295, 339, 352, 354, 360, 365, 369, 374, 381, 383, 384, 386, 392, 393, 395, 396, 400, 401, 408, 412, 413, 414, 415, 417, 418, 426, 428, 429, 634, 648, 649], "chain": [4, 64, 65, 66, 72, 73, 81, 82, 87, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 159, 192, 198, 200, 201, 213, 214, 239, 245, 302, 303, 353, 355, 356, 358, 359, 384, 427, 430, 627, 655], "in_keys_inv": [4, 213, 217, 221, 238, 243, 244, 246, 253, 259, 260, 261, 265, 266, 268, 273, 282, 284, 286, 287, 543, 548, 549, 551, 633, 647, 650, 655], "append_transform": [4, 53, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 221, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 253, 254, 255, 262, 263, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 288, 289, 291, 292, 293, 295, 301, 318, 323, 428, 451, 627, 633, 636, 645, 648, 650, 652, 654, 655], "doubletofloat": [4, 551, 633, 635, 647], "float64": [4, 38, 45, 50, 58, 68, 69, 75, 80, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 141, 144, 145, 146, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 228, 239, 243, 246, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "think": [4, 108, 192, 194, 196, 197, 199, 205, 626, 627, 635, 648, 649, 655], "in_": 4, "out_": 4, "perspect": [4, 205, 312, 375, 402, 635, 637], "outer": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 285, 630, 633, 634, 655], "obs_standard": 4, "out_keys_inv": [4, 213, 217, 221, 238, 243, 244, 246, 253, 259, 260, 261, 265, 266, 273, 275, 282, 284, 286, 287, 543, 548, 549, 551, 650], "illustr": [4, 627, 633, 634, 639, 652], "schemat": [4, 629], "outermost": 4, "innermost": 4, "similar": [4, 38, 45, 50, 58, 60, 64, 66, 68, 69, 72, 73, 75, 80, 87, 103, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 289, 290, 292, 293, 295, 352, 353, 354, 355, 356, 358, 359, 360, 365, 370, 372, 378, 381, 382, 426, 427, 428, 429, 430, 627, 629, 633, 634, 635, 636, 637, 639, 640, 641, 642, 650, 652, 654, 655], "transform_action_spec": [4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 244, 259, 284, 286, 287, 295, 428], "spec_from_random_valu": 4, "_apply_transform": [4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 288, 289, 291, 292, 295, 428, 650, 655], "rand": [4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 65, 70, 71, 72, 76, 77, 81, 82, 85, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 116, 124, 142, 143, 157, 158, 165, 169, 170, 176, 183, 184, 229, 232, 243, 246, 265, 275, 299, 326, 378, 392, 393, 395, 396, 397, 399, 400, 401, 408, 410, 412, 413, 415, 417, 418, 426, 429, 650, 654, 655], "approach": [4, 65, 72, 81, 82, 87, 107, 108, 198, 209, 235, 259, 298, 320, 329, 330, 353, 355, 356, 358, 359, 363, 364, 365, 417, 427, 430, 477, 627, 633, 635, 640, 641, 648, 655], "did": [4, 72, 291, 439, 634, 635, 641, 652, 655], "_inv_apply_transform": [4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 228, 284, 295, 428, 650, 655], "actiondiscret": [4, 534], "rand_act": [4, 141, 144, 147, 151, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 207, 232, 285, 638], "action_discret": 4, "addonetoob": 4, "Is": [4, 284], "rewrit": [4, 284], "_call": [4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 245, 247, 248, 249, 250, 251, 254, 255, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 288, 289, 291, 292, 295, 428, 645, 650], "_inv_cal": [4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 228, 284, 295, 428], "overwrit": [4, 284], "till": [4, 284, 291], "encapsul": [4, 284, 638, 639, 640], "forget": [4, 284, 321], "edit": [4, 205, 284, 295, 641], "transform_output_spec": [4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 239, 243, 244, 248, 255, 257, 265, 266, 272, 276, 282, 284, 286, 293, 295, 428], "transform_input_spec": [4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 232, 239, 243, 244, 245, 257, 261, 265, 266, 271, 275, 276, 277, 278, 282, 284, 286, 289, 295, 428], "transform_observation_spec": [4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 235, 236, 237, 238, 239, 242, 243, 244, 247, 248, 250, 252, 254, 255, 257, 259, 261, 265, 266, 267, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 291, 292, 293, 295, 428, 650], "transform_state_spec": [4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 244, 259, 284, 286, 287, 295, 428], "transform_reward_spec": [4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 233, 238, 239, 243, 244, 248, 255, 256, 257, 265, 266, 269, 270, 271, 272, 273, 275, 276, 282, 284, 286, 287, 293, 295, 428, 627, 645], "rewardsum": [4, 109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 226, 284, 295, 428, 576, 648, 649], "undo": [4, 205], "addonetoact": 4, "subtract": [4, 208, 277], "manipul": [4, 5, 9, 145, 146, 263, 284, 288, 627], "third_transform": 4, "unexpect": [4, 16, 17, 19, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429, 655], "behviour": 4, "fortun": [4, 636, 637, 638, 639, 642], "alreadi": [4, 9, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 80, 85, 86, 87, 88, 89, 90, 91, 92, 97, 107, 108, 109, 115, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 278, 295, 296, 353, 354, 355, 356, 357, 358, 359, 360, 365, 382, 426, 427, 428, 429, 430, 433, 434, 435, 436, 627, 633, 635, 642, 648, 649], "catfram": [4, 377, 540, 634], "notic": [4, 135, 235, 629, 635, 643, 650], "parenthood": 4, "henc": [4, 31, 65, 227, 264, 329, 633, 635, 648, 649, 650], "transform2": 4, "transform3": 4, "last_two": 4, "isinst": [4, 171, 180, 285, 451, 461, 528, 650], "discret": [4, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 141, 144, 147, 150, 151, 152, 159, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 200, 201, 202, 228, 245, 253, 336, 339, 342, 399, 400, 401, 402, 628, 634, 639, 649], "might": [4, 64, 66, 67, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430, 457, 626, 633, 638, 655], "action_mask": [4, 144, 157, 158, 173, 174, 178, 179, 229, 535, 646], "unavail": [4, 173, 174], "probabl": [4, 5, 9, 74, 121, 122, 124, 127, 208, 209, 214, 215, 300, 301, 310, 312, 315, 316, 318, 320, 321, 323, 324, 327, 328, 336, 348, 349, 354, 357, 360, 365, 378, 382, 395, 401, 412, 415, 429, 627, 628, 629, 634, 637, 639, 654], "probabilistictensordictmodul": [4, 255, 382, 383, 629, 654], "tensordictsequenti": [4, 45, 68, 80, 301, 315, 318, 323, 340, 354, 360, 365, 374, 377, 383, 384, 389, 426, 429, 628, 633, 634, 636, 637, 639, 643, 647, 648, 651, 654], "maskedcategor": [4, 328, 625], "linear": [4, 16, 17, 19, 22, 28, 30, 31, 38, 45, 50, 58, 68, 69, 70, 75, 80, 87, 107, 108, 109, 141, 142, 143, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 255, 263, 278, 284, 285, 288, 290, 295, 299, 301, 302, 303, 305, 306, 307, 308, 312, 314, 315, 324, 326, 329, 330, 332, 333, 340, 342, 343, 344, 353, 354, 355, 356, 358, 359, 360, 365, 369, 370, 371, 372, 376, 377, 378, 379, 381, 384, 386, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 619, 628, 634, 647, 651, 654], "in_feat": 4, "out_feat": 4, "logit": [4, 66, 74, 311, 320, 327, 328, 336, 339, 354, 357, 360, 365, 375, 378, 400, 401, 627, 628], "dist": [4, 11, 320, 327, 328, 336, 382, 629, 639], "distribution_class": [4, 255, 370, 371, 372, 373, 378, 382, 384, 392, 393, 395, 400, 401, 408, 412, 413, 414, 415, 628, 633, 635, 639, 648, 649, 654], "wrap": [4, 6, 16, 17, 19, 22, 23, 24, 26, 28, 35, 38, 44, 45, 50, 58, 68, 69, 74, 75, 80, 101, 109, 141, 142, 143, 144, 147, 151, 152, 156, 157, 158, 159, 164, 167, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 184, 186, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 241, 283, 285, 295, 296, 318, 323, 351, 354, 357, 360, 365, 370, 371, 372, 377, 379, 382, 387, 410, 426, 428, 429, 431, 627, 628, 633, 634, 635, 636, 640, 643, 645, 648, 649, 655], "actionmask": [4, 144, 535], "your_base_env": 4, "mask_kei": [4, 34, 229, 264, 295, 354, 360, 365, 535], "itself": [4, 19, 38, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 231, 295, 353, 354, 355, 356, 358, 359, 360, 365, 410, 417, 426, 427, 428, 429, 430, 635, 638], "ey": 4, "report": [4, 142, 143, 157, 158, 476, 630, 642], "foremost": 4, "callback": [4, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 649], "ad": [4, 5, 16, 17, 19, 22, 30, 34, 38, 45, 50, 53, 58, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 87, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 121, 122, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 253, 271, 283, 285, 295, 298, 332, 333, 340, 353, 354, 355, 356, 358, 359, 360, 365, 391, 392, 394, 395, 397, 402, 409, 412, 415, 426, 427, 428, 429, 430, 431, 634, 636, 637, 639, 645, 648, 652, 654, 655], "tensordictrecord": [4, 625], "videorecord": [4, 12, 451, 625, 635, 642, 643, 648], "csvlogger": [4, 12, 451, 453, 519, 625, 634, 642, 643, 648], "wandblogg": [4, 522, 625, 642], "tensorboardlogg": [4, 521, 619, 625, 642], "tag": [4, 8, 12, 196, 197, 199, 451, 453, 455, 458, 623, 627, 642, 643, 645, 648], "mp4": [4, 451, 453, 455, 643, 648], "video_format": [4, 451, 453, 455, 519, 643, 648], "whc": 4, "cwh": 4, "exp": [4, 391, 629], "v5": [4, 16, 17, 19, 22, 30, 150, 152, 167, 247, 261, 637, 655], "grow": [4, 116, 627], "tediou": [4, 638], "workspac": [4, 87, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 253], "pixelrendertransform": [4, 625, 648], "stream": [4, 103, 110], "alik": [4, 451], "envcreat": [4, 19, 29, 171, 180, 283, 293, 451, 619, 620, 623, 625, 633, 634, 654, 655], "render_mod": [4, 451, 505, 509, 650], "rgb_arrai": [4, 451, 648, 649, 650], "uncom": [4, 642], "line": [4, 8, 38, 45, 50, 53, 58, 68, 69, 75, 80, 87, 97, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429, 630, 634, 642, 648, 649], "comment": [4, 630, 634, 654], "pixels_record": [4, 451], "mission": [4, 210], "irrespect": [4, 381, 382], "jumanji": [4, 141, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 508], "framework": [4, 5, 10, 29, 141, 142, 143, 144, 147, 151, 157, 158, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 316, 627, 645, 646, 654, 655], "Its": [4, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 292, 295, 354, 360, 365, 381, 426, 428, 429, 437], "success": [4, 97, 98, 99, 100, 101, 102, 103, 104, 105, 194, 196, 199, 200, 207, 235, 280, 315, 395, 417, 627, 634, 641, 643, 646, 650, 652, 654], "foundat": [4, 6, 173, 174, 483, 627, 635, 649], "inspir": [4, 637, 650], "gone": [4, 5, 6, 377], "concomittantli": 4, "problem": [4, 8, 9, 10, 19, 197, 426, 634, 635, 636, 641, 648, 649, 650, 652, 655], "decor": [4, 9, 223, 225, 296, 318, 323, 368, 410, 433, 434, 435, 436, 461, 627, 636, 654], "relev": [4, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 74, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 433, 434, 435, 436, 437, 460, 637, 650], "gym_backend": [4, 225, 625], "env1": [4, 301, 627, 647], "venv": 4, "python3": [4, 7, 8, 11], "site": [4, 7, 8, 104, 144, 225], "env2": [4, 627, 647], "_env": [4, 7, 150, 655], "classic_control": 4, "pendulumenv": [4, 53, 625, 650], "0x15147e190": 4, "0x1629916a0": 4, "mo_gymnasium": [4, 161, 191, 256], "side": [4, 5, 208, 209, 214, 215, 327, 354, 655], "v0": [4, 16, 17, 42, 43, 51, 64, 66, 73, 77, 87, 107, 108, 141, 144, 147, 151, 153, 156, 157, 158, 159, 160, 161, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 239, 256, 285, 292, 293, 353, 355, 356, 358, 359, 427, 430, 461, 619], "26": [4, 130, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 214, 215, 240], "fun": [4, 225, 296, 635, 648, 649], "reveal": 5, "curv": 5, "exploit": [5, 639], "cv": 5, "flip": [5, 158], "correspondingli": 5, "invers": [5, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 65, 70, 71, 72, 76, 77, 81, 82, 85, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 235, 243, 246, 248, 253, 259, 266, 268, 280, 282, 284, 286, 295, 390, 394, 400, 408, 412, 426, 428, 625, 650], "prescript": 5, "tune": [5, 35, 255, 429, 627, 648, 649, 651], "coeffici": [5, 35, 44, 74, 208, 214, 255, 394, 401, 409, 412, 415, 426, 429, 649], "bonu": [5, 199, 392, 394, 409, 412, 426, 627], "beta": [5, 65, 81, 121, 122, 400, 408, 409, 429, 488, 601, 602, 603, 605, 606, 607, 611, 633, 634, 652, 654], "reduc": [5, 7, 41, 121, 122, 135, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 226, 235, 241, 277, 293, 298, 300, 348, 429, 582, 625, 627, 634, 648], "downstream": [5, 629, 633], "formul": [5, 648, 649], "gradient": [5, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 285, 295, 300, 319, 328, 333, 336, 348, 349, 354, 360, 365, 382, 392, 394, 395, 396, 400, 401, 406, 408, 409, 410, 412, 413, 414, 415, 417, 418, 426, 428, 429, 432, 433, 434, 435, 436, 472, 477, 633, 635, 648, 649, 650], "easier": [5, 69, 627, 628, 633, 654], "local": [5, 8, 11, 14, 16, 17, 19, 20, 22, 23, 24, 26, 28, 30, 31, 32, 38, 45, 50, 58, 68, 69, 71, 75, 80, 101, 107, 109, 122, 129, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 285, 293, 295, 329, 330, 341, 350, 354, 360, 362, 365, 426, 428, 429, 431, 458, 460, 637, 642, 643, 648, 649], "optima": 5, "product": [5, 10, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 316, 317, 321, 322, 621, 622, 646], "sum": [5, 16, 17, 28, 38, 45, 56, 62, 80, 87, 107, 108, 135, 142, 143, 145, 146, 150, 152, 153, 157, 158, 166, 167, 177, 198, 199, 234, 256, 271, 327, 328, 348, 350, 353, 355, 356, 358, 359, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 409, 411, 412, 413, 414, 415, 417, 418, 426, 427, 429, 430, 432, 439, 465, 627, 629, 633, 634, 635, 637, 640, 643, 648, 649, 650, 655], "stat": [5, 259, 292, 293, 613, 623, 634, 635], "w": [5, 124, 144, 169, 170, 235, 237, 242, 267, 281, 316, 340, 412, 453, 572, 634, 652], "yield": [5, 16, 17, 19, 28, 30, 31, 38, 45, 50, 58, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 352, 354, 360, 365, 410, 426, 428, 429, 627, 633, 636, 640], "insight": [5, 193, 474, 637], "auxiliari": [5, 640], "credit": 5, "spars": [5, 45, 627, 636], "intermedi": [5, 16, 17, 45, 53, 68, 80, 234, 301, 318, 323, 354, 360, 365, 375, 426, 429, 633, 637, 651], "instrument": 5, "greatli": 5, "soccer": 5, "kick": 5, "ball": [5, 194], "likelihood": [5, 633], "score": [5, 74, 199, 337, 339, 360, 412, 627], "undesir": 5, "unintention": 5, "valuabl": 5, "idiosyncrat": 5, "subtask": 5, "hierarch": [5, 630], "explicit": [5, 16, 17, 19, 193, 194, 197, 207, 213, 214, 296, 357, 627, 652], "curios": 5, "magnitudin": 5, "domin": 5, "smaller": [5, 35, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 321, 400, 408, 635, 649], "addition": [5, 310], "timestep": [5, 74, 99, 268, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 648, 649], "realli": 5, "huge": [5, 330, 636], "std": [5, 259, 292, 297, 338, 476, 633, 655], "torchrl": [5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 632, 636, 638, 640, 641, 642, 643, 644, 647, 651, 652, 653], "unseen": 5, "extrins": 5, "wrong": [5, 122, 129, 205], "bonus": 5, "denser": 5, "prior": [5, 75, 344, 404, 649], "freshli": 5, "drop": [5, 128, 130, 226, 293, 352, 394, 412, 426], "meant": [5, 58, 165, 200], "encourag": [5, 171, 205, 339, 401, 412, 415, 477, 633, 634, 652], "measur": [5, 109, 115, 117, 121, 137, 142, 143, 157, 158, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 288, 289, 291, 292, 295, 394, 412, 426, 428, 474, 477, 635, 641], "novelti": 5, "revisit": 5, "diminish": 5, "decreas": [5, 35, 639], "ideal": [5, 192, 240, 259, 426, 627, 646, 650], "distil": 5, "nois": [5, 294, 333, 340, 367, 413, 417, 418, 466, 623, 633, 648], "exploratori": [5, 392, 394, 409, 412, 426], "misalign": 5, "trade": [5, 639], "unavoid": 5, "bootstrap": [5, 402, 433, 434, 440, 441, 633, 636], "noisi": [5, 332, 333, 367, 628], "unstabl": [5, 121, 122, 319, 348, 349], "inher": [5, 392, 412], "stochast": [5, 255, 313, 333, 334, 344, 393, 395, 398, 400, 401, 406, 408, 411, 413, 415, 477, 628, 635, 639, 649], "enemi": 5, "pomdp": [5, 652], "loos": [5, 382, 628, 634, 635], "nonexist": 5, "sequenc": [5, 16, 17, 19, 22, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 74, 76, 77, 80, 83, 85, 86, 87, 88, 89, 90, 91, 92, 103, 106, 107, 108, 114, 124, 125, 127, 133, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 166, 167, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 217, 221, 233, 234, 235, 236, 237, 242, 243, 245, 246, 250, 252, 253, 256, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 275, 277, 279, 280, 281, 282, 284, 286, 292, 293, 302, 303, 310, 312, 316, 320, 321, 324, 327, 328, 329, 330, 336, 342, 346, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 373, 383, 384, 398, 426, 427, 429, 430, 452, 453, 466, 467, 468, 470, 472, 627, 628, 633, 635, 636, 637, 647, 648, 649, 655], "lstm": [5, 278, 322, 323, 637], "rel": [5, 124, 278, 310, 347, 627, 633, 634, 648, 649, 652], "tend": 5, "stabl": [5, 10, 11, 121, 122, 168], "compens": 5, "descent": [5, 333], "minimum": [5, 88, 141, 171, 180, 269, 313, 347, 348, 349, 354, 360, 365, 385, 388, 391, 393, 395, 401, 410, 411, 415, 426, 429, 462, 629, 633, 635, 643, 648, 649], "manual": [5, 12, 23, 26, 28, 53, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 151, 152, 202, 211, 476, 627, 633, 636, 652], "deviat": [5, 259, 292, 293, 297, 299, 313, 326, 332, 333, 338, 339, 412, 417, 418, 429, 465, 633, 639, 649], "radic": 5, "stabil": [5, 121, 122, 251, 300, 392, 394, 409, 412, 414, 426], "stage": [5, 633, 650], "never": [5, 16, 17, 22, 30, 39, 88, 121, 122, 280, 320, 641, 654], "prevent": [5, 36, 37, 41, 42, 43, 46, 51, 54, 55, 56, 57, 62, 63, 70, 77, 113, 121, 122, 142, 143, 292, 293, 319, 348, 349, 352, 360, 365, 392, 394, 409, 412, 414, 426, 469, 627, 642, 652], "entir": [5, 16, 17, 19, 42, 103, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 235, 293, 329, 627, 635, 638, 650, 652], "submit": [5, 150, 232, 626, 654], "adequ": [5, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 635, 648, 649], "infeas": 5, "allevi": [5, 628], "prune": [5, 159, 201], "fire": [5, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "illeg": 5, "chess": [5, 144, 169, 170], "grasp": 5, "wherein": 5, "cumul": [5, 45, 271, 277, 299, 439, 635], "q": [5, 10, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 305, 306, 307, 308, 311, 312, 314, 341, 342, 350, 372, 375, 379, 380, 393, 395, 396, 397, 399, 400, 401, 402, 407, 408, 413, 415, 417, 418, 431, 625, 633, 640, 645], "flow": [5, 433, 627, 633, 635, 648, 649, 650, 652], "reparameter": [5, 310, 320, 328, 336], "soft": [5, 407, 415, 416, 477, 630, 648], "critic": [5, 9, 199, 370, 376, 392, 394, 395, 396, 400, 401, 408, 409, 412, 413, 414, 415, 417, 418, 426, 477, 531, 630, 633, 640], "clip": [5, 74, 205, 238, 269, 392, 394, 409, 412, 414, 417, 418, 426, 472, 477, 531, 630, 635, 649, 650], "oppos": [5, 86], "incorrect": [5, 129, 205, 412], "thought": [5, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 627], "region": [5, 122], "squash": [5, 636, 654], "tanh": [5, 302, 303, 316, 317, 319, 321, 322, 324, 330, 347, 348, 349, 385, 635, 639, 648, 649, 650, 651], "prob": [5, 208, 209, 214, 215, 320, 327, 328, 336, 339, 352, 354, 357, 360, 365, 635, 646, 649], "rememb": [5, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430, 648], "remap": 5, "origin": [5, 9, 45, 64, 66, 67, 68, 73, 74, 80, 83, 87, 107, 108, 110, 155, 192, 198, 244, 245, 255, 263, 285, 290, 295, 316, 320, 353, 354, 355, 356, 358, 359, 360, 365, 378, 381, 382, 393, 395, 407, 408, 410, 412, 413, 415, 417, 418, 426, 427, 429, 430, 627, 633, 637, 645, 647, 650, 655], "world": [6, 165, 352, 361, 387, 404, 627, 637, 642, 648, 649, 650, 655], "histor": 6, "ceas": 6, "farama": [6, 101, 160, 161, 173, 174, 635, 650], "gymwrapp": [6, 141, 144, 147, 151, 156, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 248, 272, 276, 291, 625, 635, 654], "feel": [6, 626, 643, 654], "free": [6, 8, 14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 87, 107, 108, 198, 226, 243, 246, 320, 353, 355, 356, 358, 359, 392, 404, 412, 427, 430, 630, 635, 643, 649, 654], "gladli": 6, "prepar": [7, 49, 100, 192, 195, 214, 215, 429, 627, 635], "conda": [7, 8, 626], "cmake": 7, "activ": [7, 8, 10, 53, 302, 303, 309, 313, 324, 329, 330, 394, 409, 412, 628, 630, 650, 654], "sim": 7, "bullet": 7, "headless": [7, 8, 156, 206, 645], "cluster": [7, 8, 9, 23, 28, 100, 626], "withbullet": 7, "forg": [7, 8], "aihabitat": [7, 153], "y": [7, 8, 45, 68, 72, 80, 87, 107, 108, 168, 198, 314, 329, 351, 353, 354, 355, 356, 358, 359, 360, 365, 426, 427, 429, 430, 523, 524, 527, 529, 633, 649, 652], "facebookresearch": [7, 100, 153], "subdirectori": 7, "verbos": [7, 30, 31, 109, 199, 352, 361, 428, 643, 645], "magnum_log": 7, "quiet": 7, "habitat_sim_log": 7, "readm": [7, 8, 185, 654], "md": [7, 8], "habitatenv": [7, 506, 625], "_has_habitat": 7, "available_env": [7, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 160, 163, 164, 168, 169, 170, 171, 172, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 197, 200, 201, 202, 655], "startswith": [7, 301, 629, 633, 640], "oserror": 7, "libllvmlit": 7, "ionstal": 7, "pointer": [7, 148, 410, 633], "llvmlite": 7, "var": [7, 8, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 283, 285, 293, 295, 354, 360, 365, 395, 410, 415, 426, 428, 429], "ld_preload": [7, 8], "bind": 7, "deactiv": [7, 8, 142, 143, 374, 393, 395, 401, 408, 410, 413, 415, 417, 418, 434, 435, 436], "importerror": [7, 8, 11, 646], "usr": [7, 8, 11], "x86_64": [7, 8], "linux": [7, 8], "gnu": [7, 8], "libopengl": [7, 8], "undefin": [7, 8, 11, 38, 41, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 283, 285, 295, 354, 360, 365, 395, 410, 415, 426, 428, 429, 637, 652], "symbol": [7, 8, 11], "_glapi_tls_curr": [7, 8], "mujoco_env": [7, 8], "libglvnd": [7, 8], "glx": [7, 8], "cos7": [7, 8], "reinstal": [7, 8], "xvfbwrapper": [7, 8], "sysroot": [7, 8], "lib64": [7, 8], "libgldispatch": [7, 8], "offici": [8, 99, 637], "stand": [8, 48, 145, 146, 171, 180, 647, 650], "joint": [8, 634], "contact": [8, 67, 648], "engin": [8, 32, 33, 177, 352, 361, 362, 365, 428, 645, 650], "biomechan": 8, "graphic": 8, "anim": [8, 649], "area": 8, "demand": [8, 642, 655], "articul": 8, "acquir": [8, 635], "deepmind": [8, 9, 10, 103, 141, 144, 145, 146, 147, 151, 159, 163, 164, 169, 170, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 247, 635, 638], "whomev": 8, "licenc": 8, "incorpor": [8, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 297, 315, 340, 417, 477, 636, 639, 650], "relianc": 8, "obsolet": 8, "legaci": [8, 34, 64, 66, 73, 87, 107, 108, 198, 208, 209, 214, 215, 353, 354, 355, 356, 358, 359, 360, 365, 427, 430], "pro": [8, 626], "tip": [8, 626], "glfw": [8, 633], "osmesa": 8, "egl": 8, "advic": [8, 103, 655], "sudo": [8, 626], "apt": [8, 649], "libglfw3": 8, "libglew2": 8, "libgl1": 8, "mesa": 8, "libosmesa6": 8, "workflow": [8, 159, 201, 352, 370, 371, 372, 627, 646], "glew": 8, "mesalib": 8, "anaconda": 8, "libgl": 8, "cos6": 8, "menpo": 8, "glfw3": 8, "mujoco_gl": 8, "pyopengl_platform": 8, "mkdir": 8, "earlier": [8, 629, 633, 635, 636, 648, 649, 652], "roboti": 8, "html": [8, 16, 17, 166, 168, 169, 170, 645], "wget": 8, "mujoco210": 8, "tar": [8, 100], "gz": 8, "xf": 8, "charg": [8, 16, 17, 22, 171, 180], "mjkei": 8, "txt": [8, 429], "mjlib_path": 8, "home": [8, 64, 66, 86, 106], "bin": [8, 312, 339, 375, 628], "libmujoco210": 8, "ld_library_path": 8, "mujoco_py_mujoco_path": 8, "mujoco_py_mjkey_path": 8, "reload": 8, "later": [8, 121, 122, 308, 378, 382, 633, 635, 637, 652], "older": [8, 296], "hack": [8, 633], "adatp": 8, "unnot": [8, 264], "mujoco_pi": 8, "cymj": 8, "linuxgpuextensionbuild": 8, "filenam": [8, 64, 66, 73, 87, 107, 108, 113, 198, 353, 355, 356, 358, 359, 427, 430, 634, 652], "troubleshoot": [8, 394, 409, 412], "gl": 8, "h": [8, 124, 235, 237, 242, 267, 281, 316, 317, 318, 321, 322, 323, 326, 453, 572, 634, 652], "eglshim": 8, "fatal": 8, "No": [8, 16, 17, 19, 22, 23, 24, 26, 28, 30, 32, 36, 37, 41, 46, 56, 57, 62, 63, 199, 627], "directori": [8, 64, 66, 73, 86, 87, 97, 99, 100, 101, 103, 104, 105, 107, 108, 111, 115, 198, 353, 355, 356, 358, 359, 427, 430, 458, 460, 627, 629, 630, 633, 639, 642, 648], "devel": 8, "ubuntu": [8, 155], "libglew": 8, "dev": 8, "cento": 8, "yum": 8, "glu": 8, "disappear": [8, 634, 636, 647], "libstdc": 8, "glibcxx_3": 8, "29": [8, 129, 130], "compil": [8, 16, 17, 19, 34, 38, 45, 50, 58, 68, 69, 72, 75, 80, 81, 82, 87, 107, 108, 109, 110, 114, 115, 116, 117, 118, 122, 125, 129, 130, 131, 136, 137, 139, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 296, 316, 317, 321, 322, 348, 352, 353, 354, 355, 356, 358, 359, 360, 361, 365, 426, 427, 428, 429, 430, 433, 484, 485, 486, 487, 491, 493, 494, 498], "libosmesa": 8, "libgcc": 8, "filenotfounderror": [8, 101], "errno": 8, "patchelf": 8, "fatalerror": 8, "gladloadgl": 8, "mj_env": 8, "912": 8, "glfwerror": 8, "65537": 8, "myscript": 8, "runtimeerror": [8, 9, 16, 17, 19, 22, 25, 30, 38, 41, 42, 43, 45, 50, 51, 58, 68, 69, 75, 77, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 258, 283, 285, 295, 354, 360, 361, 365, 395, 415, 426, 428, 429, 629, 655], "slurm": 8, "mjrendercontext": 8, "pyx": 8, "46": [8, 129, 142, 143], "114": 8, "_setup_opengl_context": 8, "opengl_context": 8, "130": 8, "offscreenopenglcontext": 8, "opengl": [8, 648, 649], "global": [8, 38, 45, 50, 58, 68, 69, 72, 75, 80, 81, 82, 109, 124, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 240, 283, 295, 341, 350, 354, 360, 363, 364, 365, 378, 382, 426, 428, 429, 431, 630, 633, 648, 649], "cuda_visible_devic": 8, "slurm_step_gpu": 8, "black": [8, 144, 648], "onscreen": 8, "101": 8, "lgl": 8, "libegl": 8, "x11": [8, 649], "xlib": 8, "libx11": 8, "xorg": 8, "attributeerror": [8, 16, 17, 22, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "nonetyp": 8, "glgeterror": 8, "this_dir": 8, "pwd": 8, "ln": 8, "libglut": 8, "sketch": [9, 630], "n_training_step": 9, "datapoint": [9, 86, 652], "n_data_per_train": 9, "no_grad": [9, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 255, 295, 300, 316, 317, 321, 322, 354, 360, 365, 426, 428, 429, 433, 434, 435, 436, 635, 636, 637, 649], "loss_fn": [9, 636, 640, 641, 654], "zero_grad": [9, 38, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 339, 353, 354, 355, 356, 358, 359, 360, 365, 426, 427, 428, 429, 430, 630, 633, 635, 636, 637, 640, 643, 648, 649, 650], "backpropag": [9, 142, 143, 157, 158, 171, 392, 393, 394, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 418, 426, 429, 431, 640, 649, 650], "differenti": [9, 86, 142, 143, 255, 395, 417, 433, 434, 435, 436, 598, 599, 600, 602, 608, 609, 610, 636, 639, 640, 648, 649, 650], "denomin": 9, "artifact": 9, "numer": [9, 72, 121, 122, 151, 202, 292, 319, 348, 349, 369, 374, 375, 378, 379, 380, 381, 382, 469, 635, 652, 655], "misconcept": 9, "freed": 9, "appear": [9, 12, 39, 62, 87, 88, 97, 103, 122, 129, 130, 147, 200, 207, 629, 650, 652], "compuat": 9, "fix": [9, 44, 171, 278, 393, 395, 411, 415, 634, 643, 650, 655], "retain_graph": [9, 142, 143], "discuss": [9, 10, 641, 648, 649], "inplac": [9, 38, 45, 50, 53, 58, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 353, 354, 355, 356, 357, 358, 359, 360, 365, 381, 426, 427, 428, 429, 430, 633], "forward": [9, 16, 17, 19, 22, 23, 24, 26, 28, 38, 45, 50, 58, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 259, 262, 263, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 288, 289, 291, 292, 295, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 325, 329, 330, 331, 332, 334, 335, 338, 340, 341, 343, 344, 346, 350, 351, 352, 354, 360, 365, 373, 375, 377, 378, 380, 381, 382, 385, 386, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 426, 428, 429, 431, 433, 434, 435, 436, 437, 625, 629, 636, 650, 654], "submodul": [9, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 278, 295, 318, 323, 354, 360, 365, 389, 410, 426, 428, 429], "param": [9, 38, 45, 50, 58, 68, 69, 74, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 165, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 239, 243, 244, 248, 255, 257, 265, 266, 272, 276, 282, 284, 286, 293, 295, 310, 312, 329, 330, 331, 347, 353, 354, 355, 356, 358, 359, 360, 365, 373, 378, 381, 384, 410, 421, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 633, 637, 643, 648, 649, 650, 651, 654], "grad": [9, 38, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 353, 354, 355, 356, 358, 359, 360, 365, 382, 426, 427, 428, 429, 430, 633, 635], "whose": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 74, 75, 76, 77, 80, 85, 88, 89, 90, 91, 92, 109, 141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 341, 354, 360, 365, 381, 426, 428, 429], "fit": [9, 69, 259, 278, 296, 352, 629, 630, 633], "jax": [9, 142, 143, 157, 158, 296], "improperli": 9, "underli": [9, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 354, 360, 410, 636, 638, 640, 642, 650], "tedeiou": 9, "priorit": [9, 65, 81, 121, 122, 395, 396, 397, 399, 400, 401, 408, 413, 415, 417, 418, 488, 633, 634, 641, 654], "amount": [9, 171, 340, 433, 634, 652], "costli": [9, 650], "constitut": [9, 634, 649, 650], "profil": 9, "frequent": [9, 53, 652], "program": [9, 400, 408, 637, 655], "functorch": [9, 11], "incl": 9, "suit": [9, 146, 635, 638, 654, 655], "mujoco_instal": 9, "valueerror": [9, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 361, 365, 426, 428, 429, 646], "bad": 9, "fds_to_keep": 9, "new_shap": 9, "permut": [9, 128, 261, 281, 637, 654, 655], "idea": [10, 121, 122, 413, 627, 630, 636, 639, 648, 649], "introductori": 10, "intro": [10, 635, 636], "dai": [10, 654], "2022": [10, 11, 300, 654], "spin": [10, 145, 146], "hug": [10, 357, 360, 627, 646], "syllabu": 10, "lectur": 10, "awesom": 10, "curat": 10, "succinct": [10, 639], "summari": [10, 259, 292, 293, 633, 634, 635, 636], "reddit": 10, "reagent": 10, "orient": [10, 105, 655], "baselines3": 10, "tf": 10, "bandit": [10, 168], "tensorflow": [10, 327, 328], "kera": 10, "acm": 10, "dopamin": 10, "prototyp": [10, 476, 477, 630, 637, 643], "salina": 10, "tianshou": 10, "eleg": 10, "rlpyt": 10, "rllib": 10, "industri": [10, 654], "grade": [10, 627], "cherri": 10, "jaxrl": 10, "mbrl": [10, 165, 628], "rlmeta": 10, "light": 10, "elegantrl": 10, "cloud": 10, "mtrl": 10, "baselin": 10, "689": 11, "_torchrl": 11, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 11, "colab": [11, 635, 636, 648, 649], "notebook": [11, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "24": [11, 104, 130, 150, 166, 167, 194, 205, 339, 377, 453, 648], "pip3": [11, 633, 635, 636, 648, 649], "url": [11, 107, 153, 645], "org": [11, 16, 17, 35, 65, 100, 101, 103, 105, 121, 122, 142, 143, 145, 146, 153, 157, 158, 163, 164, 166, 167, 168, 177, 185, 186, 235, 263, 288, 298, 304, 305, 306, 307, 308, 309, 312, 313, 314, 321, 326, 327, 328, 333, 334, 335, 339, 340, 341, 343, 344, 350, 375, 392, 393, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 411, 412, 414, 415, 416, 417, 433, 438, 446, 624, 644, 651], "whl": 11, "u": [11, 102, 316, 317, 321, 322, 650], "upgrad": 11, "lib_version_her": 11, "pyav": 12, "conveni": [12, 235, 352, 627, 635, 648, 649, 650, 652], "knob": 12, "dispos": 12, "clarifi": 12, "behind": [12, 272, 625], "ultim": [12, 319, 348, 349], "ffmpeg": 12, "whatev": [12, 354, 360, 365, 629, 633], "fed": [12, 649, 652], "feed": [12, 263, 290, 410, 426, 429, 628, 633, 648, 649, 652], "suppos": [12, 171, 466, 630, 655], "snippet": [12, 263, 288, 633], "gave": 12, "extrem": [12, 171, 180, 392, 394, 409, 412, 414, 426], "blurri": [12, 637], "stitch": 12, "my_exp": [12, 642], "pixels_onli": [12, 145, 146, 150, 152, 153, 177, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 633, 634, 642, 643, 654, 655], "my_video": [12, 642], "record_env": [12, 642, 643], "codec": 12, "h264": 12, "crf": 12, "preset": 12, "qualiti": [12, 199, 372, 412, 628], "allow_non": 13, "unwrap": [13, 247, 285, 461, 552], "seealso": 13, "timeout": [14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 171, 206, 210, 212, 352, 354, 360, 365], "close_env": [14, 16, 17, 19, 22, 23, 24, 26, 30], "shutdown": [14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 175, 181, 232, 352, 627, 633, 634, 652, 654], "init_updat": [14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31], "kwarg": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 37, 38, 39, 40, 42, 43, 45, 46, 50, 51, 52, 55, 57, 58, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 115, 116, 117, 118, 120, 121, 122, 124, 129, 130, 131, 133, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 222, 223, 229, 230, 232, 239, 263, 265, 274, 278, 283, 284, 285, 287, 289, 290, 292, 294, 295, 297, 299, 301, 302, 303, 305, 306, 307, 308, 311, 314, 315, 318, 319, 323, 324, 325, 326, 329, 330, 331, 336, 340, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 421, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 451, 453, 457, 458, 460, 464, 472, 476, 477, 614, 615, 620, 621, 622, 629, 635, 637, 649], "init": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 38, 45, 50, 58, 68, 69, 70, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 284, 292, 295, 329, 330, 331, 354, 357, 360, 365, 426, 428, 429, 433, 460, 627, 634, 635], "implic": [14, 23, 24, 26], "notimplementederror": [14, 23, 24, 26, 87, 633], "subclass": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 38, 39, 42, 45, 50, 68, 69, 75, 80, 88, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 230, 231, 284, 291, 297, 298, 301, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 331, 334, 335, 338, 340, 343, 344, 346, 351, 365, 373, 375, 377, 380, 381, 382, 383, 385, 388, 410, 412, 634, 636, 641, 650, 652], "policy_or_weight": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 45, 68, 80, 234, 351, 354, 360, 365, 374, 377, 379, 426, 429, 525, 636], "worker_id": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32], "upload": [14, 16, 17, 19, 22, 23, 24, 26, 28, 30], "extract": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 42, 43, 51, 77, 100, 122, 192, 206, 217, 231, 253, 282, 286, 376, 627, 633, 635, 654], "Will": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 64, 66, 73, 87, 107, 108, 122, 129, 166, 198, 353, 355, 356, 358, 359, 427, 430, 453], "_get_server_weight": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32], "typeerror": [14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "weight_updat": [14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 478, 480, 481, 482, 627, 634], "overwritten": [14, 16, 17, 19, 22, 23, 24, 26, 28, 30, 53, 97, 100, 101, 103, 104, 105, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 250], "localweightsupdaterbas": [14, 16, 17, 19, 22, 23, 24, 26, 28, 30], "remoteweightsupdaterbas": [14, 16, 17, 19, 22, 23, 24, 26, 28, 30], "get_server_weight": 15, "policy_weight": [15, 18, 20, 25, 27], "date": [15, 18, 144, 234, 456], "datacollectorbas": [15, 16, 18, 20, 21, 24, 25, 27, 32, 33, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 284, 295, 378, 382, 428, 475, 477, 614, 615, 619, 625], "all_worker_id": [15, 18, 20, 21, 25, 27, 32, 33], "scope": [15, 18, 20, 21, 25, 27, 32, 33, 87, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 637, 655], "classmethod": [15, 18, 20, 21, 25, 27, 30, 31, 32, 33, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 124, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 253, 288, 296, 303, 304, 338, 352, 353, 355, 356, 358, 359, 427, 430], "from_polici": [15, 18, 20, 21, 25, 27, 32, 33], "increment_vers": [15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 30, 31, 32, 33, 211], "increment": [15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 30, 31, 32, 33, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 200, 201, 202, 211, 259, 409, 627], "post_hook": [15, 18, 20, 21, 25, 27, 32, 33], "abc": [15, 18, 20, 21, 25, 27, 32, 33], "push_weight": [15, 18, 20, 21, 25, 27, 32, 33], "noth": [15, 18, 20, 21, 25, 27, 32, 53, 159, 201, 633, 635], "register_collector": [15, 18, 20, 21, 25, 27, 32, 33, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 354, 360, 365], "register_post_hook": [15, 18, 20, 21, 25, 27, 32, 33], "policy_factori": [16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 478, 480, 481, 482], "device_typ": [16, 19, 22, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 213, 263, 288, 290, 302, 303, 304, 305, 306, 307, 308, 314, 324, 329, 330, 332, 333, 338, 341, 381, 468, 617], "env_devic": [16, 17, 19, 22, 23, 24, 26, 28, 478, 480, 481, 482, 634], "create_env_kwarg": [16, 17, 19, 22, 28, 141, 148, 166, 171, 180, 283, 478, 480, 481, 482, 499, 633, 655], "collector_class": [16, 17, 23, 24, 26, 27, 28], "postproc": [16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 58, 268, 478, 480, 481, 482, 634, 652], "explorationtyp": [16, 17, 19, 22, 23, 24, 26, 28, 378, 410, 466, 628, 633, 634, 635, 636, 639, 648, 654], "interactiontyp": [16, 19, 22, 23, 24, 26, 28, 189, 224, 378, 382, 466], "preemptive_threshold": [16, 17, 22], "num_thread": [16, 17, 22, 64, 66, 73, 87, 107, 108, 151, 171, 180, 198, 202, 353, 355, 356, 358, 359, 427, 430], "num_sub_thread": [16, 17, 22, 171, 180], "set_trunc": [16, 17, 19, 22, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 478, 480, 481, 482], "use_buff": [16, 17, 19, 171, 180, 478, 480, 481, 482], "extend_buff": [16, 17, 19, 478, 480, 481, 482], "replay_buffer_chunk": 16, "trust_polici": [16, 17, 19, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 478, 480, 481, 482], "compile_polici": [16, 17, 19, 478, 480, 481, 482], "cudagraph_polici": [16, 17, 19, 478, 480, 481, 482], "no_cuda_sync": [16, 17, 19, 478, 480, 481, 482], "track_policy_vers": [16, 17, 19, 22, 30, 31, 211, 478, 480, 481, 482, 627], "datacollector": [16, 17, 19, 22, 28, 30, 31, 58, 412, 635, 641, 652], "recept": 16, "safe": [16, 17, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 73, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 122, 129, 198, 297, 340, 347, 348, 353, 355, 356, 358, 359, 369, 374, 375, 378, 379, 380, 381, 382, 384, 427, 430, 628, 654], "guard": [16, 17], "doc": [16, 17, 83, 153, 156, 157, 158, 168, 177, 460, 629, 634, 648, 649, 652], "env_mak": [16, 17, 19, 28, 70, 141, 619, 655], "2000": [16, 17, 19, 58, 86, 154, 339, 453, 652], "50": [16, 17, 19, 28, 33, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 67, 74, 76, 77, 85, 88, 89, 90, 91, 92, 97, 105, 109, 129, 130, 163, 164, 205, 295, 352, 357, 360, 365, 609, 636, 646, 652], "del": [16, 17, 19, 30, 633, 634, 635, 647, 648, 652, 654, 655], "int64": [16, 17, 19, 30, 34, 36, 37, 41, 46, 47, 53, 54, 55, 56, 57, 62, 63, 64, 66, 67, 68, 73, 74, 78, 81, 83, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 121, 129, 141, 144, 147, 151, 159, 162, 163, 164, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 207, 228, 232, 240, 247, 261, 268, 276, 312, 340, 342, 353, 355, 356, 358, 359, 374, 375, 378, 379, 380, 427, 430, 628, 650], "undergon": [16, 17, 19, 22, 23, 24, 26, 28, 86], "env_obs_kei": [16, 17, 19, 22, 23, 24, 26, 28], "mustn": [16, 17, 19, 22, 23, 24, 26, 28], "pickl": [16, 17, 19, 22, 23, 24, 26, 28, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 292, 293, 295, 354, 360, 365, 426, 428, 429], "exclus": [16, 17, 19, 22, 23, 24, 26, 28, 30, 31, 60, 72, 81, 82, 87, 93, 94, 97, 103, 107, 108, 122, 129, 130, 198, 204, 232, 248, 250, 316, 318, 321, 323, 327, 328, 353, 355, 356, 358, 359, 362, 374, 375, 379, 380, 416, 417, 418, 427, 430, 433, 434, 435, 436, 437, 460, 623, 628], "lifespan": [16, 17, 19, 22, 23, 24, 26, 30, 31, 634], "divis": [16, 17, 19, 22, 23, 24, 26, 38, 97, 103, 122, 129, 130, 293, 298, 649], "endless": [16, 17, 19, 22, 23, 24, 26, 207, 627], "sit": [16, 17, 19, 22, 23, 24, 26, 28, 475, 634], "cast": [16, 17, 19, 22, 23, 24, 26, 28, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 80, 85, 87, 88, 89, 90, 91, 92, 106, 107, 108, 109, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 157, 158, 159, 166, 167, 169, 170, 171, 172, 175, 177, 180, 181, 182, 183, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 246, 247, 248, 249, 251, 254, 255, 262, 263, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 295, 353, 354, 355, 356, 358, 359, 360, 365, 381, 394, 409, 412, 426, 427, 428, 429, 430, 648, 655], "deriv": [16, 17, 23, 24, 26, 28, 84, 87, 107, 108, 198, 310, 353, 355, 356, 358, 359, 427, 430, 472], "span": [16, 17, 19, 22, 23, 24, 26, 28, 103, 122, 129, 130, 493, 494], "n_step": [16, 17, 19, 22, 23, 24, 26, 28, 58, 295, 377, 563, 634, 635, 648, 649], "mainli": [16, 17, 19, 22, 23, 24, 26, 28, 74, 192, 193, 194, 197, 460, 628, 648, 649, 650], "round": [16, 17, 19, 22, 23, 24, 26, 28, 97, 144, 352, 491], "closest": [16, 17, 19, 22, 23, 24, 26, 28], "boolm": [16, 17, 22], "finish": [16, 17, 19, 22, 28, 30, 151, 202, 268, 655], "earli": [16, 17, 22, 58, 121, 122, 151, 202, 276, 354, 360, 365, 654], "harm": [16, 17, 22, 171, 180], "add_truncated_kei": [16, 17, 19, 22, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 285], "trust": [16, 17, 19, 141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 241, 323], "cudagraphmodul": [16, 17, 19, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "behaviour": [16, 17, 19, 45, 68, 80, 354, 360, 365, 426, 429, 636, 637, 654], "bypass": [16, 17, 19, 101, 639], "isaaclab": [16, 17, 19, 152, 156], "maniskil": [16, 17, 19], "crash": [16, 17, 19, 268], "multiprocessedweightupdat": [16, 17], "policyvers": [16, 17, 19, 22, 30, 31, 627], "mediat": [16, 17, 19, 22, 30], "get_policy_vers": [16, 17, 19, 22, 30, 31], "uuid": [16, 17, 19, 22, 30, 31, 211, 456, 634, 655], "disabl": [16, 17, 19, 22, 30, 31, 36, 37, 38, 41, 45, 46, 50, 54, 55, 56, 57, 58, 62, 63, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 285, 295, 319, 349, 354, 360, 365, 426, 428, 429, 451, 476, 633, 648, 649], "getattr_env": [16, 17, 19, 22, 30, 31], "attr": [16, 17, 19, 22, 30, 31], "getattr_polici": [16, 17, 19, 22, 30, 31], "getattr_rb": [16, 17, 19, 22, 30, 31], "ordereddict": [16, 17, 19, 22, 28, 30, 31, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 283, 285, 292, 293, 295, 354, 360, 365, 395, 415, 426, 428, 429], "worker0": [16, 17, 22], "state_dict0": [16, 17, 22], "worker1": [16, 17, 22], "state_dict1": [16, 17, 22], "policy_vers": [16, 17, 19, 22, 30, 31, 211, 627], "reset_idx": [16, 17, 22], "static_se": [16, 17, 19, 22, 28, 30, 31, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 285], "env_fn": [16, 17, 19, 22, 30, 31, 148, 621, 622], "env_fn_parallel": [16, 17, 19, 22, 30, 31], "300": [16, 17, 19, 22, 30, 31, 129, 130, 307, 308], "out_se": [16, 17, 19, 22, 30, 31, 655], "irrevers": [16, 17, 22], "pipe": [16, 17, 19, 22, 30, 171], "tqdm": [16, 17, 19, 22, 30, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 472, 633, 635, 636, 648, 649, 650], "ale_pi": [16, 17, 19, 22, 30, 637], "10000": [16, 17, 22, 28, 171, 298, 472, 477, 532, 636], "progress": [16, 17, 19, 22, 30, 31, 352, 464, 465, 466, 472, 474, 476, 477, 630, 634, 636, 655], "bar": [16, 17, 19, 22, 30, 115, 117, 137, 352, 373, 464, 465, 466, 472, 477, 630, 634], "pbar": [16, 17, 19, 22, 30, 97, 98, 99, 100, 101, 102, 103, 104, 105, 633, 635, 636, 648, 649, 650], "100_000": [16, 17, 19, 22, 30, 637, 643], "prec_wc": [16, 17, 19, 22, 30], "wc": [16, 17, 19, 22, 30], "write_count": [16, 17, 19, 22, 30, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 124, 474], "set_descript": [16, 17, 19, 22, 30, 633, 635, 636, 648, 649, 650], "remote_collector": [18, 28], "max_interv": 18, "_maybe_map_weight": [18, 21, 25, 27, 32], "_sync_weights_with_work": [18, 21, 25, 27, 32], "_skip_upd": 18, "interv": [18, 228, 280, 452, 453, 463, 475, 477, 634, 650], "raycollector": [18, 70, 625], "return_same_td": [19, 482], "interruptor": [19, 482], "cautious": [19, 412], "whole": [19, 38, 42, 43, 45, 50, 51, 58, 68, 69, 75, 77, 80, 86, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 283, 285, 295, 354, 360, 365, 378, 395, 415, 426, 428, 429, 462, 633, 635], "_interruptor": 19, "outsid": [19, 244, 283, 629, 642, 648, 649, 650], "start_collect": 19, "stop_collect": 19, "preeptiv": 19, "chunk": [19, 30, 31, 109, 639], "policy_state_dict": [19, 30, 31], "env_state_dict": [19, 30, 31], "256": [19, 30, 106, 163, 164, 253, 309, 630, 634, 635, 637, 648, 649], "weight_gett": 20, "vanillaweightsend": 20, "fetch": [20, 64, 66, 73, 87, 107, 108, 142, 143, 145, 146, 198, 255, 353, 355, 356, 358, 359, 427, 430, 639, 651, 652], "sender": 20, "update_weight": [20, 25, 27, 352, 475], "piec": [21, 114, 125, 136, 139, 140, 633, 634, 635, 642, 648, 649, 650, 652], "scheme": [21, 630, 655], "_push_weight": 21, "unchang": [21, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 245, 263, 278, 284, 285, 288, 290, 295, 315, 354, 360, 365, 381, 426, 428, 429, 453, 468, 633, 652], "__call__": [21, 38, 45, 50, 58, 67, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 382, 426, 428, 429, 630], "proxi": [21, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 73, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 198, 328, 336, 353, 355, 356, 358, 359, 378, 427, 430, 629], "weakref": [21, 53, 87], "exporationtyp": [23, 24, 26], "collector_kwarg": [23, 24, 26, 28], "num_workers_per_collector": [23, 24, 26, 28], "slurm_kwarg": [23, 24, 26], "update_after_each_batch": [23, 24, 26, 28], "max_weight_update_interv": [23, 24, 26, 28], "tcp_port": [23, 24, 26, 29], "respect": [23, 24, 26, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 229, 233, 239, 243, 246, 257, 263, 264, 273, 278, 284, 285, 288, 290, 295, 316, 320, 321, 329, 344, 354, 360, 365, 381, 386, 392, 394, 409, 412, 414, 426, 428, 429, 433, 435, 436, 467, 629, 635, 636, 648, 649], "subnod": [23, 24, 26, 28], "readi": [23, 26, 28, 30, 31, 192, 352, 626, 634, 635, 637, 639, 642, 652, 654], "fashion": [23, 26, 28, 64, 66, 73, 87, 107, 108, 130, 198, 353, 355, 356, 358, 359, 427, 430], "distributed_back": [23, 24], "ucc": [23, 24], "submitit_delai": [23, 29], "former": [23, 24, 26, 34, 38, 45, 50, 65, 68, 69, 72, 75, 80, 81, 82, 99, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 297, 298, 301, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 331, 334, 335, 338, 340, 343, 344, 346, 351, 373, 375, 377, 380, 385, 388, 633], "whilst": [23, 24, 26, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "homonym": [23, 24, 26, 650], "visit": [23, 24, 26, 87, 197], "facebookincub": [23, 24, 26], "tcp": [23, 24, 26, 29], "port": [23, 24, 26, 29, 32, 183, 352, 363, 364], "10003": [23, 24, 26, 29], "distributedweightupdat": 23, "liter": [24, 87, 107, 141, 187, 192, 193, 194, 196, 197, 200, 204, 205, 207, 211, 352, 353, 355, 356, 358, 359, 360, 365, 368, 426, 429], "update_interv": 24, "frequenc": [24, 339, 365, 477, 633], "restart": 25, "rank": [25, 87, 107, 108, 135, 198, 299, 353, 355, 356, 358, 359, 363, 364, 427, 430], "visible_devic": 26, "tensorpipe_opt": 26, "tensorpiperpcbackendopt": 26, "rpcweightupdat": 26, "collector_info": 27, "collector_rref": 27, "ray_init_config": [28, 31, 70], "remote_config": [28, 30, 31, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "num_collector": [28, 621, 622, 633, 634], "coordin": [28, 242, 627], "autodetect": 28, "num_cpu": [28, 31, 70, 213, 357], "num_gpu": [28, 31, 70, 213, 357], "equat": [28, 68, 87, 103, 151, 202, 292, 293, 340, 391, 394, 416, 426, 635, 638, 650], "exce": [28, 652], "indefinit": [28, 96], "rayreplaybuff": [28, 65, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 625], "enfoc": 28, "rayweightupdat": 28, "distributed_collector": [28, 70], "add_collector": 28, "local_polici": 28, "stop_remote_collector": 28, "num_job": 29, "tcpport": 29, "submitit_main_conf": 29, "slurm_cpus_per_task": 29, "slurm_gpus_per_nod": 29, "slurm_partit": 29, "timeout_min": 29, "submitit_collection_conf": 29, "delai": [29, 417, 640], "jump": [29, 638], "host": [29, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "satellit": 29, "rendezv": 29, "hang": [29, 627], "forev": 29, "default_config": [29, 304, 309, 338, 373], "default_slurm_conf_main": 29, "default_slurm_conf": 29, "dialog_turns_per_batch": [30, 31], "yield_only_last_step": [30, 31], "yield_completed_trajectori": [30, 31], "total_dialog_turn": [30, 31, 109], "async_env": [30, 31], "flatten_data": [30, 31], "queue": [30, 175, 292, 354, 360, 365, 428, 627, 652, 654], "simplifi": [30, 33, 65, 223, 357, 627, 639, 650, 652], "vllm": [30, 32, 33, 200, 352, 361, 362, 363, 364, 365, 645], "vllmwrapper": [30, 192, 200, 354, 360, 627, 646], "mocking_class": [30, 283], "dummystrdataload": 30, "llmenv": [30, 195, 203, 207], "llm_model": 30, "gpt2": [30, 67, 74, 83, 86, 159, 201, 304, 309, 338, 357, 360, 365, 627], "get_token": 30, "pad_token": [30, 67, 83, 214, 215, 429], "eos_token": [30, 67, 196, 214, 215, 429], "from_dataload": [30, 192, 193, 194, 197, 200, 207], "from_text": [30, 108, 200, 207, 429, 627], "group_repeat": [30, 192, 193, 194, 197, 200, 203, 207], "attention_mask": [30, 64, 66, 67, 73, 74, 83, 86, 106, 200, 360, 365], "nontensorstack": [30, 53, 60, 108, 116, 141, 144, 159, 194, 197, 201, 207, 217, 253, 282, 286], "plsgqejeyd": 30, "text_respons": [30, 194, 197, 199, 200, 202, 205, 210, 212, 429, 627, 645], "ec": 30, "tjbjz3perwhz": 30, "tokens_respons": [30, 200], "as_remot": [30, 31, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "cl": [30, 31, 65, 70, 71, 72, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 124, 198, 353, 355, 356, 358, 359, 427, 430, 634], "quantiti": [30, 31, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "reserv": [30, 31, 65, 70, 71, 72, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 124, 198, 353, 355, 356, 358, 359, 427, 430, 630], "alia": [30, 38, 45, 50, 58, 65, 68, 69, 70, 71, 72, 75, 80, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 115, 116, 117, 118, 124, 131, 133, 137, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 411, 412, 413, 414, 415, 417, 418, 426, 428, 429, 431, 437], "get_policy_model": [30, 31], "rayllmcollector": [30, 627], "is_initi": [30, 31, 357, 627], "sync_it": 31, "lightweight": [31, 637, 642], "dialog": [31, 109], "yeild": 31, "block": [31, 33, 106, 114, 140, 156, 197, 199, 212, 352, 627, 628, 633, 636, 637, 640, 641, 648, 652], "idl": [31, 171], "somehwat": 31, "v2": [32, 33, 87, 107, 108, 157, 158, 178, 179, 198, 353, 355, 356, 358, 359, 422, 427, 430, 442, 443, 444, 445, 447, 448, 449, 450, 636], "master_address": [32, 363, 364], "master": [32, 35, 352, 363, 364, 648, 649], "localhost": [32, 183, 363, 364], "master_port": [32, 363, 364], "model_metadata": [32, 33], "vllm_tp_size": 32, "vllmupdaterv2": 32, "asyncvllm": [32, 361, 365, 627], "vllm_engin": [32, 33], "Not": [32, 54, 55, 72, 142, 143, 157, 283, 318, 323, 360, 627], "reliabl": [32, 627], "get_model_metadata": [32, 33, 352], "transformerswrapp": [32, 33, 192, 214, 215, 354, 357, 365, 429, 627, 646], "rlvllmengin": [33, 352, 362], "vllmupdat": [33, 627], "get_tp_siz": [33, 352], "push": [33, 429], "push_weights_from_transform": 33, "transformers_model": [33, 646], "pretrainedmodel": 33, "push_weights_from_transformers_optim": 33, "rollout_tensordict": 34, "nestedkei": [34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 68, 73, 76, 77, 78, 80, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 122, 129, 130, 141, 144, 147, 151, 159, 171, 172, 175, 176, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 208, 214, 215, 217, 221, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 292, 293, 295, 297, 301, 312, 315, 340, 342, 353, 354, 355, 356, 358, 359, 360, 365, 373, 377, 382, 394, 397, 409, 412, 427, 428, 430, 431, 451, 453, 465], "as_nest": 34, "x": [34, 45, 58, 68, 69, 72, 74, 75, 80, 87, 103, 107, 108, 130, 159, 198, 201, 253, 255, 281, 286, 296, 298, 300, 301, 303, 312, 314, 316, 317, 318, 321, 322, 323, 324, 326, 329, 330, 351, 353, 354, 355, 356, 358, 359, 360, 365, 374, 378, 379, 388, 391, 426, 427, 429, 430, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 472, 627, 633, 637, 648, 650, 652, 654], "durat": [34, 649], "meta": [34, 64, 66, 73, 85, 87, 99, 107, 108, 149, 153, 198, 353, 355, 356, 358, 359, 392, 394, 409, 412, 414, 427, 430, 627, 630, 635, 648, 649, 652], "aren": [34, 277, 636], "eventu": [34, 341, 636, 650], "recov": [34, 87, 99, 101, 103, 104, 105, 107, 108, 129, 130, 198, 353, 355, 356, 358, 359, 383, 400, 408, 427, 430, 647], "layout": [34, 354, 357, 360, 365], "to_padded_tensor": 34, "nested_tensor": [34, 150, 152], "stride": [34, 38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 302, 303, 305, 306, 314, 329, 354, 360, 365, 426, 428, 429, 523, 634, 648, 654], "jag": 34, "focu": [34, 633, 634, 635, 637, 639, 640, 641, 648], "team": [34, 648, 649, 654], "cat": [34, 53, 87, 107, 108, 198, 207, 353, 355, 356, 358, 359, 386, 393, 395, 396, 408, 413, 415, 417, 418, 427, 430, 648, 652, 654], "arang": [34, 36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 122, 129, 130, 228, 312, 327, 328, 374, 462, 628, 652], "obs_": 34, "trajectory_id": 34, "int32": [34, 38, 39, 53, 82, 88, 97, 103, 129, 157, 158, 169, 170, 182, 220, 377], "data_split": 34, "got": [34, 641], "init_kl_coef": 35, "horizon": [35, 163, 164, 185, 186, 299, 326, 635], "kl": [35, 44, 74, 192, 208, 209, 214, 215, 255, 404, 409, 426, 429, 627], "describ": [35, 64, 66, 73, 85, 87, 107, 108, 176, 198, 236, 347, 348, 353, 355, 356, 358, 359, 397, 427, 430, 456, 629, 633, 635, 648, 649, 650, 655], "ziegler": 35, "et": [35, 299, 627], "relax": [35, 451], "penalti": [35, 74, 199, 204, 208, 354, 360, 365, 406, 409], "strai": [35, 74], "greater": [35, 97, 122, 129, 130, 240, 256, 257, 318, 323, 395, 633, 634], "increas": [35, 113, 235, 279, 300, 340, 394, 412, 426, 429, 648, 649], "pull": [35, 53, 87, 193, 652], "toward": [35, 121, 122, 290], "aggress": [35, 121, 122, 429], "kl_coef": [35, 44, 74], "arxiv": [35, 65, 100, 103, 105, 121, 122, 142, 143, 145, 146, 157, 158, 163, 164, 166, 167, 177, 185, 186, 235, 263, 288, 298, 304, 305, 306, 307, 308, 309, 312, 313, 314, 321, 326, 333, 334, 335, 339, 340, 341, 343, 344, 350, 375, 392, 393, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 411, 412, 415, 416, 417, 433, 438, 446, 651], "pdf": [35, 235, 304, 305, 306, 307, 308, 312, 339, 340, 375, 395, 402, 406, 413, 416, 417, 433, 438, 446], "1909": 35, "08593": 35, "lm": 35, "blob": 35, "lm_human_prefer": 35, "train_polici": 35, "kl_valu": 35, "coef": [35, 208, 255], "newest": 35, "int8": [36, 147, 162, 173, 174, 233], "encod": [36, 37, 38, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 73, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 142, 143, 147, 150, 151, 152, 153, 156, 157, 158, 166, 167, 169, 170, 177, 183, 184, 198, 202, 228, 245, 335, 336, 339, 343, 353, 354, 355, 356, 358, 359, 360, 365, 391, 427, 430, 634, 635, 636, 639, 650, 652], "null": [36, 39, 40, 42, 43, 45, 51, 52, 60, 61, 65, 76, 77, 81, 85, 88, 89, 90, 91, 92, 192, 200, 233, 253], "denot": [36, 649], "clariti": [36, 53, 285], "assert_is_in": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "cardin": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 87, 88, 89, 90, 91, 92, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 312, 342, 374, 375, 380, 635], "outcom": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 310, 327, 328, 347, 410, 426, 429, 648], "cartesian": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "clear_device_": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "is_in": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 655], "np": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 110, 151, 198, 202, 291, 353, 355, 356, 358, 359, 385, 427, 430, 451, 637, 648, 650], "ndarrai": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 151, 198, 202, 340, 353, 355, 356, 358, 359, 385, 427, 430, 451, 637, 648], "ignore_devic": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "arrai": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 65, 74, 76, 77, 85, 87, 88, 89, 90, 91, 92, 107, 108, 110, 121, 141, 144, 147, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 207, 247, 316, 317, 321, 322, 353, 355, 356, 358, 359, 427, 430, 633, 648], "use_mask": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 173, 174], "erase_memoize_cach": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "memoiz": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 151, 202], "memoize_encod": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "compliant": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "singleton": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 199, 302, 303, 324, 345, 346, 625, 629, 645], "start_dim": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "end_dim": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "implements_for_spec": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "torch_funct": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "index_typ": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 60, 61, 76, 77, 85, 88, 89, 90, 91, 92], "tensor_to_index": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "exanpl": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "one_hot": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 312, 328, 342], "categ": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 378], "to_categorical_spec": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "idx_one_hot": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "idx_categ": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "to_categor": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "make_neg_dim": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "convert": [36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 110, 141, 142, 143, 144, 147, 150, 151, 152, 153, 156, 157, 158, 159, 166, 167, 169, 170, 171, 172, 175, 177, 180, 181, 182, 183, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 243, 246, 263, 278, 284, 285, 288, 290, 292, 293, 295, 353, 354, 355, 356, 358, 359, 360, 365, 381, 391, 410, 426, 427, 428, 429, 430, 627, 633, 634, 635, 650, 652], "shortcut": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 650, 655], "ndimens": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 633], "violat": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 628], "project": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 69, 76, 77, 85, 88, 89, 90, 91, 92, 245, 297, 321, 340, 369, 374, 375, 378, 379, 380, 381, 382, 460, 522, 628, 630, 654, 655], "uniformli": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 121, 122, 123, 410, 426, 429, 655], "normal": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 71, 76, 77, 85, 88, 89, 90, 91, 92, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 259, 292, 293, 297, 298, 302, 303, 319, 324, 327, 328, 348, 349, 378, 382, 394, 395, 409, 412, 428, 429, 466, 469, 623, 627, 628, 630, 636, 639, 649, 655], "drawn": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 278, 315, 378, 382, 635, 648, 649], "set_provisional_n": [36, 37, 41, 46, 54, 55], "temporarili": [36, 37, 41, 46, 54, 55, 113, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 641, 652], "dest": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 80, 85, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 263, 288, 290, 381], "to_numpi": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "transformed_in": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92, 347, 623], "check_spec_encod": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "to_one_hot": [36, 37, 41, 46, 54, 55, 56, 57, 62, 63], "hot": [36, 37, 41, 46, 54, 55, 56, 57, 62, 63, 142, 143, 150, 152, 153, 156, 157, 158, 163, 164, 166, 167, 169, 170, 173, 174, 177, 183, 184, 185, 186, 228, 245, 312, 336, 337, 342, 374, 375, 379, 380, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 426, 429, 431, 636], "categ_sampl": [36, 37, 41, 46, 56, 57, 62, 63], "onehot_sampl": [36, 37, 41, 46, 56, 57], "to_one_hot_spec": [36, 37, 41, 46, 54, 55, 56, 57, 62, 63], "categoricalbox": [36, 37, 41, 46, 56, 57, 62, 63, 172], "type_check": [36, 37, 39, 40, 41, 42, 43, 46, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 76, 77, 85, 88, 89, 90, 91, 92], "update_mask": [36, 37, 41, 46, 54, 55, 56, 57, 62, 63], "unmask": [36, 37, 41, 46, 54, 55, 56, 57, 62, 63, 327], "ts": [36, 37, 41, 46, 54, 55, 56, 57, 62, 63], "num_bit": 38, "convert_to_binari": 38, "decim": 38, "1001": 38, "bit": [38, 253, 635, 636, 638, 648, 649, 652], "heavysid": 38, "binary_to_decim": 38, "add_modul": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "fn": [38, 45, 50, 58, 67, 68, 69, 75, 80, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 286, 295, 354, 360, 365, 426, 428, 429, 590, 621, 622], "recurs": [38, 42, 43, 45, 50, 51, 58, 68, 69, 75, 77, 80, 87, 93, 94, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 353, 354, 355, 356, 358, 359, 360, 365, 410, 426, 427, 428, 429, 430, 637], "init_weight": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "m": [38, 45, 50, 54, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 245, 295, 301, 354, 360, 365, 382, 426, 428, 429, 627, 634, 650], "fill_": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429, 634, 636], "net": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 306, 308, 311, 314, 330, 354, 360, 365, 392, 393, 395, 401, 408, 412, 413, 414, 415, 426, 428, 429, 523, 524, 527, 529, 619, 634, 650, 651, 654], "bia": [38, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 253, 263, 278, 283, 284, 285, 288, 290, 295, 298, 302, 303, 305, 306, 307, 308, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 330, 332, 333, 340, 353, 354, 355, 356, 358, 359, 360, 365, 381, 388, 390, 391, 395, 410, 415, 426, 427, 428, 429, 430, 629, 633, 634, 635, 636, 649], "requires_grad": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 142, 143, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 255, 283, 285, 295, 339, 354, 360, 365, 382, 395, 415, 426, 428, 429, 502], "bfloat16": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "datatyp": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429, 652], "member": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 410, 426, 428, 429, 453], "xdoctest": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 253, 263, 278, 283, 284, 285, 288, 290, 295, 354, 360, 365, 381, 395, 410, 415, 426, 428, 429], "buf": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "20l": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 410, 426, 428, 429], "1l": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 410, 426, 428, 429], "5l": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 410, 426, 428, 429], "doubl": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 243, 244, 246, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 397, 402, 407, 413, 416, 426, 428, 429, 431, 633, 634, 635, 636, 655], "eval": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 285, 292, 295, 300, 354, 360, 365, 394, 412, 426, 428, 429, 628, 633, 634, 635], "evalu": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 152, 159, 163, 164, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 240, 285, 295, 300, 310, 327, 328, 336, 349, 354, 360, 365, 413, 426, 428, 429, 614, 615, 634, 635, 643], "dropout": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 285, 295, 300, 301, 316, 318, 321, 323, 324, 354, 360, 365, 426, 428, 429, 524, 628, 636], "batchnorm": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 285, 295, 298, 354, 360, 365, 426, 428, 429], "comparison": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 285, 295, 354, 360, 365, 410, 426, 428, 429, 627, 633, 634], "extra_repr": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "recip": [38, 45, 50, 67, 68, 69, 75, 80, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 297, 298, 301, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 331, 334, 335, 338, 340, 343, 344, 346, 351, 373, 375, 377, 380, 385, 388], "get_buff": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "get_submodul": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "qualifi": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "referenc": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "resolv": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "get_extra_st": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 292, 293, 295, 354, 360, 365, 426, 428, 429], "set_extra_st": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 292, 293, 295, 354, 360, 365, 426, 428, 429], "picklabl": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 292, 293, 295, 354, 360, 365, 426, 428, 429], "get_paramet": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "net_b": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "net_c": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "conv": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 302, 303, 354, 360, 365, 426, 428, 429, 634], "conv2d": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 303, 305, 306, 314, 329, 354, 360, 365, 426, 428, 429], "kernel_s": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 302, 303, 305, 306, 314, 329, 334, 354, 360, 365, 426, 428, 429, 523, 634, 654], "diagram": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429, 627], "degre": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 241, 295, 354, 360, 365, 426, 428, 429], "named_modul": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "half": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429, 633], "ipu": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "strict": [38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 283, 285, 295, 353, 354, 355, 356, 358, 359, 360, 365, 395, 415, 426, 427, 428, 429, 430, 637], "descend": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 283, 285, 295, 354, 360, 365, 395, 415, 426, 428, 429], "get_swap_module_params_on_convers": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 283, 285, 295, 354, 360, 365, 395, 415, 426, 428, 429], "persist": [38, 45, 48, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 253, 283, 285, 295, 354, 360, 365, 395, 415, 426, 428, 429], "preserv": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 283, 285, 295, 354, 360, 365, 381, 395, 415, 426, 428, 429], "missing_kei": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 283, 285, 295, 354, 360, 365, 395, 415, 426, 428, 429], "unexpected_kei": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 283, 285, 295, 354, 360, 365, 395, 415, 426, 428, 429], "namedtupl": [38, 45, 50, 58, 68, 69, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 283, 285, 295, 353, 354, 355, 356, 358, 359, 360, 365, 395, 415, 426, 427, 428, 429, 430], "l": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 316, 321, 354, 360, 365, 426, 428, 429, 432, 635, 650], "idx": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "mtia": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "named_buff": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "remove_dupl": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 410, 426, 428, 429], "prepend": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 410, 426, 428, 429, 637], "running_var": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "named_children": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "conv4": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "conv5": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "memo": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "named_paramet": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 255, 295, 354, 360, 365, 410, 426, 428, 429], "register_backward_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "removablehandl": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "favor": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 292, 295, 354, 360, 365, 426, 428, 429, 635], "register_full_backward_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "register_buff": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "running_mean": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "alongsid": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429, 627, 642], "num_featur": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 298, 354, 360, 365, 426, 428, 429], "register_forward_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 312, 342, 354, 360, 365, 426, 428, 429], "with_kwarg": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "always_cal": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "register_module_forward_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "regardless": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 394, 409, 412, 426, 428, 429, 627], "register_forward_pre_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "invok": [38, 45, 50, 58, 68, 69, 71, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "And": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429, 640], "forward_pr": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "register_module_forward_pre_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "ordinarili": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "grad_input": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "grad_output": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "technic": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429, 634, 636, 637, 639], "caller": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "register_module_full_backward_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "register_full_backward_pre_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "backward_pr": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "register_module_full_backward_pre_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "register_load_state_dict_post_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "incompatible_kei": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "thrown": [38, 45, 50, 58, 68, 69, 75, 76, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429, 652], "register_load_state_dict_pre_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "local_metadata": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "error_msg": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "noqa": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 156, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429, 637], "b950": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "register_modul": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429, 630], "register_paramet": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "register_state_dict_post_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "register_state_dict_pre_hook": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "keep_var": [38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 283, 285, 295, 353, 354, 355, 356, 358, 359, 360, 365, 395, 415, 426, 427, 428, 429, 430], "requires_grad_": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429, 637], "autograd": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 283, 285, 295, 354, 360, 365, 395, 415, 426, 428, 429], "freez": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 292, 293, 295, 354, 360, 365, 426, 428, 429], "finetun": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "gan": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "set_submodul": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "share_memori": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 148, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429, 633], "share_memory_": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429, 654], "destin": [38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 234, 243, 244, 246, 253, 283, 285, 288, 292, 295, 353, 354, 355, 356, 358, 359, 360, 365, 395, 415, 426, 427, 428, 429, 430, 453], "averag": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 283, 285, 292, 293, 295, 340, 354, 360, 365, 395, 403, 404, 415, 426, 428, 429, 469, 627, 633, 635], "shallow": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 283, 285, 295, 354, 360, 365, 395, 415, 426, 428, 429, 636], "detach": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253, 283, 285, 295, 354, 360, 365, 395, 406, 410, 415, 417, 426, 428, 429, 433, 434, 435, 436, 633], "non_block": [38, 45, 50, 58, 64, 66, 68, 69, 73, 75, 80, 87, 107, 108, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 353, 354, 355, 356, 358, 359, 360, 365, 381, 426, 427, 428, 429, 430], "memory_format": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "channels_last": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "tri": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 352, 354, 360, 365, 381, 426, 428, 429, 642], "pin": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "4d": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "ignore_w": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "1913": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "3420": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "5113": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "2325": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "torch_doctest_cuda1": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "gpu1": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "1914": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "5112": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "2324": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "float16": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 317, 322, 354, 360, 365, 381, 426, 428, 429], "cdoubl": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "3741": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "j": [38, 45, 50, 58, 65, 68, 69, 75, 80, 109, 121, 122, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429, 630, 636, 640], "2382": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "5593": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "4443": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "complex128": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "6122": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "1150": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 239, 263, 278, 284, 285, 288, 290, 295, 354, 360, 365, 381, 426, 428, 429], "to_empti": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "dst_type": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "xpu": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "set_to_non": [38, 45, 50, 58, 68, 69, 75, 80, 109, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 295, 354, 360, 365, 426, 428, 429], "upper": [39, 127, 258], "continuousbox": [39, 42, 88, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 220, 253, 256, 278, 286], "provision": [41, 365], "descript": [42, 156, 185, 210, 231, 634, 635], "akin": 42, "unnam": [42, 43, 51, 77], "compositespec": [42, 625, 645, 650, 655], "constraint": [42, 165, 348, 635, 648, 649], "data_cl": 42, "tensorclass": [42, 64, 66, 73, 87, 106, 107, 108, 115, 117, 137, 198, 353, 354, 355, 356, 358, 359, 365, 427, 430, 627], "step_mdp_stat": 42, "pixels_spec": 42, "observation_vector_spec": 42, "composite_spec": 42, "observation_vector": [42, 236, 633], "_nodefault": [42, 43, 51, 77], "is_empti": [42, 43, 51, 77, 650], "include_nest": [42, 43, 51, 77], "leaves_onli": [42, 43, 51, 77], "is_leaf": [42, 43, 51, 77], "step_mdp_static_onli": [42, 43, 51, 77], "_compositespecitemsview": [42, 43, 51, 77], "_compositespeckeysview": [42, 43, 51, 77], "reflect": [42, 43, 51, 77, 152, 173, 174, 226, 253, 291, 410, 426, 429, 612, 634, 635, 636, 649], "lock_": [42, 43, 51, 77], "propag": [42, 43, 51, 77, 392, 394, 395, 396, 400, 401, 408, 409, 412, 413, 414, 415, 417, 418, 433, 434, 435, 436, 627, 635, 636, 648, 649], "succeed": [42, 43, 51, 77, 253, 286], "pop": [42, 43, 51, 77, 214, 239], "keyerror": [42, 43, 51, 77, 193, 194, 197, 285, 412], "refine_nam": [42, 43, 51, 77], "lift": [42, 43, 51, 77, 103], "coexist": [42, 43, 51, 77], "nice": [42, 43, 51, 77, 635, 638, 641], "ellipsi": [42, 43, 51, 77], "greedili": [42, 43, 51, 77, 639], "spec_refin": [42, 43, 51, 77], "selected_kei": [42, 43, 51, 77, 272, 633], "unlock_": [42, 43, 51, 77], "_compositespecvaluesview": [42, 43, 51, 77], "multipli": [44, 199, 200, 207, 300, 316, 321, 392, 393, 394, 395, 401, 409, 411, 412, 413, 415, 426, 469, 633, 648], "calcul": [44, 74, 194, 268, 316, 392, 394, 399, 409, 412, 414, 417, 426, 433, 474], "reassign": 45, "reward2go": [45, 625], "reward_key_out": 45, "time_dim": [45, 433, 435, 436, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450], "unrol": [45, 403, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450], "discount": [45, 58, 103, 148, 268, 295, 393, 399, 402, 403, 405, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 629, 634, 635, 648, 649], "lastrewardtotraj": 45, "last_reward_to_traj": 45, "new_tensordict": 45, "is_tdmodule_compat": [45, 68, 80, 354, 360, 365, 426, 429], "reset_out_kei": [45, 68, 80, 354, 360, 365, 426, 429], "orign": [45, 68, 80, 87, 107, 108, 198, 353, 354, 355, 356, 358, 359, 360, 365, 426, 427, 429, 430], "mod": [45, 68, 80, 240, 255, 301, 318, 323, 354, 360, 365, 377, 382, 385, 426, 429, 636, 637, 643], "select_out_kei": [45, 68, 80, 354, 360, 365, 392, 393, 395, 396, 400, 401, 408, 412, 413, 415, 417, 418, 426, 429, 637], "reset_parameters_recurs": [45, 68, 80, 354, 360, 365, 410, 426, 429], "relu": [45, 68, 80, 165, 299, 309, 326, 354, 360, 365, 391], "old_param": [45, 68, 80, 354, 360, 365], "bork": [45, 68, 80, 354, 360, 365], "dork": [45, 68, 80, 354, 360, 365], "reset_paramet": [45, 68, 80, 331, 332, 333, 354, 360, 365], "from_modul": [45, 68, 80, 87, 107, 108, 198, 312, 353, 354, 355, 356, 358, 359, 360, 365, 381, 384, 427, 430, 654], "out_keys_sourc": [45, 68, 80, 354, 360, 365, 426, 429], "rubric": [45, 68, 80, 259, 354, 360, 365, 384, 426, 429], "revert": [45, 68, 80, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 354, 360, 365, 426, 429, 639, 652], "seq": [45, 68, 80, 301, 316, 318, 321, 323, 354, 360, 365, 377, 426, 429, 636, 637, 643, 647], "z": [45, 68, 80, 317, 354, 360, 365, 426, 429], "shift_kei": [47, 49, 59, 78], "is_full_kei": [47, 49, 59, 78], "is_ful": [47, 49, 59, 78], "tempfil": [47, 64, 65, 66, 70, 71, 72, 73, 78, 81, 82, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 115, 124, 198, 353, 355, 356, 358, 359, 427, 430, 619, 633, 634, 636, 637, 641, 648, 651, 652], "register_save_hook": [47, 65, 70, 71, 72, 78, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "temporarydirectori": [47, 64, 65, 66, 70, 71, 72, 73, 78, 81, 82, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 124, 198, 353, 355, 356, 358, 359, 427, 430, 633, 634, 636, 637, 641, 648, 651, 652], "tmpdir": [47, 65, 70, 71, 72, 78, 81, 82, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 633, 634, 637, 648], "rb_load": [47, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "register_load_hook": [47, 65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "filesystem": [48, 652], "ted2nest": [49, 625], "stackedcomposit": [51, 625], "tensordictmap": [53, 625], "observation_kei": [53, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "excluded_kei": [53, 248], "consolid": [53, 80, 94, 117], "lazili": [53, 87, 107, 108, 116, 198, 330, 353, 355, 356, 358, 359, 427, 430, 650], "from_tensordict_pair": [53, 80], "querymodul": [53, 80], "get_keys_from_env": 53, "cattensor": [53, 97, 98, 99, 100, 101, 102, 103, 104, 105, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 541, 633, 647, 650, 655], "unsqueezetransform": [53, 235, 591, 650, 652], "oracl": 53, "obs_kei": 53, "state_kei": [53, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "reset_st": 53, "rollout0": 53, "rollout1": 53, "rollout1b": 53, "collaps": 53, "max_length": [53, 64, 66, 67, 83, 86, 87, 106, 207, 217, 282, 637, 643], "valid_path": [53, 87], "assert_clos": 53, "subtre": [53, 87], "intersect": [53, 296], "Or": [53, 178, 179, 329], "rollout_from_path": [53, 87], "plot": [53, 87, 633, 635, 636, 648, 649, 650], "_nestedkei": [53, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "return_nod": 53, "diverg": [53, 192, 208, 209, 214, 215, 255, 378, 382, 404, 409, 426, 429, 627], "endpoint": 53, "r0": [53, 633], "123": [53, 87], "392": [53, 87], "989": [53, 87], "809": [53, 87], "847": [53, 87], "r1": 53, "235": 53, "td_root": [53, 87], "node_data": [53, 87], "node_id": [53, 87], "nontensordata": [53, 60, 87, 97, 103, 107, 108, 144, 169, 170, 198, 207, 217, 253, 282, 286, 353, 355, 356, 358, 359, 427, 430, 451], "_parent": [53, 87], "0x716eeb78fbf0": 53, "0x": 53, "4341220243998689835": 53, "6745467818783115365": 53, "win": [53, 87, 354], "to_str": [53, 87], "node_format_fn": [53, 87], "indent": [53, 87], "rollouts_data": [53, 87], "456": [53, 87], "359": [53, 87], "3094": [53, 87], "75": [53, 87, 104, 129, 598], "948": [53, 87], "68": [53, 87, 129], "9045": [53, 87], "rollout_data": [53, 87], "nvec": [54, 56], "remove_singleton": 54, "ax": [54, 332, 333, 648], "neither": [54, 55, 56, 57, 103, 183, 650], "use_regist": [56, 62], "mone_hot": [56, 57], "boxlist": [56, 57], "gamma": [58, 268, 295, 326, 392, 393, 395, 396, 397, 399, 401, 402, 403, 405, 408, 410, 412, 413, 414, 415, 417, 418, 419, 421, 426, 429, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 531, 563, 573, 619, 629, 633, 634, 635, 648, 649, 654], "sutton": [58, 629, 648, 649], "1988": 58, "tempor": [58, 121, 318, 323, 326, 434, 435, 440, 441], "44": [58, 129], "ahead": [58, 214, 295, 655], "bias": [58, 121, 122, 316, 317, 321, 322, 388, 629, 633], "mitig": [58, 235], "multisteptransform": [58, 563, 625], "99": [58, 268, 292, 326, 405, 421, 432, 439, 563, 573, 596, 597, 605, 608, 619, 633, 634, 635, 637, 640, 643, 648, 649, 654], "nontermin": 58, "original_reward": 58, "newli": [58, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 627], "OR": 58, "row": [59, 79, 157, 158, 256], "example_data": [60, 108, 197, 200, 207], "feature_dim": 60, "conform": 60, "templat": [60, 108, 192, 193, 194, 197, 214, 215, 216, 360, 365, 454], "randomli": [60, 103, 128, 182, 205, 229, 258, 259, 278, 315, 378, 382, 639, 648, 649, 650, 652], "unidimension": 62, "action_valu": [62, 311, 312, 342, 374, 375, 379, 380, 395, 401, 410, 426, 429, 431, 628, 636, 637, 639, 643], "keepdim": [62, 627], "chosen_action_valu": [62, 341, 342, 350, 379, 380, 431, 628, 636, 639], "priori": 62, "uniqu": [62, 87, 129, 130, 159, 163, 164, 199, 201, 235, 247, 277, 278, 279, 283, 377, 460, 627, 641, 652], "tensor_spec": [62, 176, 227, 229, 400, 401, 412, 414], "one_hot_sampl": [62, 63], "chosen_data": [64, 106], "rewarddata": [64, 106, 625], "rejected_data": [64, 106], "copy_exist": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "return_earli": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "share_non_tensor": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "robust_kei": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "memmap": [64, 66, 73, 87, 107, 108, 115, 171, 180, 198, 292, 353, 355, 356, 358, 359, 427, 430, 453, 455, 468], "from_dataset": [64, 66, 106], "dataset_nam": [64, 66, 74, 86, 106, 168], "550": [64, 66, 74, 86, 106, 129, 130], "root_dir": [64, 66, 86, 106], "from_disk": [64, 66, 86, 106], "carperai": [64, 66, 74, 86], "openai_summarize_comparison": [64, 66, 86], "load_from_disk": [64, 66, 86, 106], "load_dataset": [64, 66, 86, 106], "92534": 64, "input_id": [64, 66, 67, 73, 74, 83, 86, 106, 159, 200, 201], "end_scor": [64, 73, 74, 106], "sub_data": [64, 66], "from_tensordict": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "non_tensordict": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "getattr": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "load_memmap": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "load_": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "load_memmap_": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "robust": [64, 66, 73, 87, 107, 108, 198, 264, 298, 353, 355, 356, 358, 359, 427, 430, 627], "decod": [64, 66, 73, 87, 107, 108, 159, 198, 201, 221, 334, 352, 353, 354, 355, 356, 358, 359, 360, 365, 427, 430, 627], "emit": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "fromkei": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "saved_td": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "td_load": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "fake": [64, 66, 73, 87, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 353, 355, 356, 358, 359, 427, 430, 633, 634, 637], "_subclass": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "faketensormod": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "faketensor": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "from_flatten": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "attemptedli": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "existsok": [64, 66, 73, 87, 107, 108, 115, 198, 353, 355, 356, 358, 359, 427, 430], "mimic": [64, 66, 73, 87, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 353, 355, 356, 358, 359, 427, 430], "non_tensor": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "charact": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430, 635, 637], "cross": [64, 66, 73, 87, 107, 108, 198, 299, 320, 353, 354, 355, 356, 358, 359, 360, 365, 427, 430], "tensordictfutur": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "serialis": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "deepli": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "memmap_": [64, 66, 73, 87, 107, 108, 198, 292, 353, 355, 356, 358, 359, 427, 430], "memmap_lik": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "contentless": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "1_000_000": [64, 65, 66, 70, 71, 72, 73, 81, 82, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 124, 129, 198, 353, 355, 356, 358, 359, 427, 430, 633, 636, 648], "alloc": [64, 66, 73, 87, 107, 108, 117, 198, 213, 310, 327, 328, 352, 353, 355, 356, 358, 359, 427, 430, 627, 633], "memmap_refresh_": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "refresh": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430, 643, 648, 649], "saved_path": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "setattr": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "tent": [64, 66, 73, 86, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "to_tensordict": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "retain_non": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "discrard": [64, 66, 73, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "alpha": [65, 81, 121, 122, 302, 303, 305, 306, 307, 308, 314, 329, 393, 395, 401, 411, 413, 415, 417, 488, 598, 608, 633, 652, 654], "ep": [65, 81, 121, 122, 259, 292, 293, 298, 340, 394, 416, 426, 469, 488, 565, 575, 596, 597, 599, 600, 601, 602, 603, 606, 607, 608, 611, 629, 633, 634, 636, 637, 640, 643], "1e": [65, 81, 121, 122, 259, 292, 293, 298, 310, 313, 347, 565, 575, 596, 597, 599, 600, 602, 603, 604, 606, 607, 608, 609, 611, 633, 634, 635, 649], "08": [65, 81, 121, 122, 565, 575, 596, 597, 602, 603, 606, 607, 608, 611], "pin_memori": [65, 72, 81, 82, 97, 99, 100, 101, 102, 103, 104, 105, 262, 633, 654], "schaul": [65, 121, 122], "quan": [65, 121, 122], "antonogl": [65, 121, 122], "silver": [65, 121, 122], "2015": [65, 121, 122, 240], "ab": [65, 100, 103, 105, 121, 122, 142, 143, 145, 146, 157, 158, 163, 164, 166, 167, 177, 185, 186, 234, 263, 288, 292, 298, 304, 309, 313, 314, 321, 326, 333, 334, 335, 341, 343, 344, 350, 392, 393, 397, 398, 399, 400, 403, 404, 405, 407, 408, 411, 412, 415, 651], "1511": [65, 121, 122, 314], "05952": [65, 121, 122], "expon": [65, 81, 121, 122], "\u03b1": [65, 81], "delta": [65, 81, 316, 321, 347, 378, 382, 625, 629, 648], "1_000": [65, 72, 81, 82, 648, 652], "mini": [65, 72, 81, 82, 97, 99, 100, 101, 102, 103, 104, 105, 649], "decid": [65, 72, 81, 82, 648, 654], "incompat": [65, 72, 81, 82, 414, 652], "drop_last": [65, 72, 81, 82, 128, 130, 492], "notion": [65, 72, 81, 82, 339], "caution": [65, 72, 81, 82, 128, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 655], "codebas": [65, 72, 81, 82, 650], "return_info": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 121, 122, 124, 652], "tensordictprioritizedreplaybuff": [65, 625, 654], "_weight": [65, 81, 121, 122], "update_prior": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 121, 122, 124, 468, 630, 634, 652, 654], "36278465": 65, "invert": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 124, 390, 635], "default_remote_class_config": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "overriden": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "randomsampl": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 489, 633, 648], "td_error": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 395, 396, 397, 399, 400, 401, 402, 408, 410, 413, 415, 417, 418, 426, 429, 431, 633, 652, 654], "update_tensordict_prior": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 633, 652, 654], "empty_write_count": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "insert_transform": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 193, 194, 197, 230, 285], "insert": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 124, 125, 135, 136, 139, 140, 193, 194, 197, 214, 230, 235, 239, 275, 285, 287, 627], "__iter__": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 207], "set_sampl": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "set_storag": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "set_writ": [65, 70, 71, 72, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124], "prompt_rindex": [66, 67, 74], "promptdatatldr": 66, "116722": 66, "prompt": [67, 74, 108, 109, 192, 193, 194, 195, 197, 199, 200, 205, 207, 210, 212, 352, 353, 355, 357, 358, 359, 360, 365, 426, 428, 646], "return_tensordict": [67, 83], "tensodict": [67, 83], "valid_sampl": 67, "eough": 67, "toknen": 67, "meet": 67, "criterion": 67, "autotoken": [67, 83, 86, 108, 192, 193, 194, 196, 197, 204, 205, 209, 210, 212, 214, 215, 360, 365, 429, 627, 645, 646], "from_pretrain": [67, 74, 83, 108, 159, 194, 197, 201, 205, 210, 212, 214, 215, 352, 357, 360, 365, 429, 627, 645, 646], "enough": [67, 636, 652], "inde": [67, 245, 635, 637, 650], "index_kei": [68, 80], "hash_kei": 68, "_hash": 68, "hash_modul": [68, 75, 80], "siphash": [68, 69, 80, 159, 201], "hash_to_int": 68, "hashtoint": 68, "query_modul": [68, 80], "key1": [68, 80, 87, 107, 108, 198, 236, 275, 353, 355, 356, 358, 359, 427, 430, 462, 470, 654], "key2": [68, 80, 87, 107, 108, 198, 236, 275, 353, 355, 356, 358, 359, 427, 430, 462, 470, 654], "write_hash": 68, "n_compon": 69, "dtype_cast": 69, "as_tensor": [69, 75, 637], "init_method": 69, "emb": [69, 636], "sklearn": [69, 102, 168], "byte": [69, 75, 109, 110, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 288, 289, 291, 292, 295, 428], "builtin": [69, 75], "pythonhashse": [69, 75], "todo": 69, "replay_buffer_cl": 70, "optiona": 70, "transform_factori": [70, 72, 81, 82], "asyncio": [70, 141], "ray_buff": 70, "object_store_memori": 70, "600": [70, 74], "await": 70, "invoc": 71, "friendli": [71, 633], "include_info": [71, 81, 82, 97, 98, 99, 100, 101, 102, 103, 104, 105], "storagecheckpointerbas": [72, 131], "roundrobinwrit": [72, 97, 98, 99, 100, 101, 102, 103, 104, 105, 491], "_pytre": [72, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430, 652], "tree_map": [72, 87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430, 652], "assert0": [72, 652], "ref_model": [74, 209, 214, 215], "reward_model": [74, 387], "max_new_token": [74, 354, 357, 360, 365, 627, 646], "score_clip": 74, "kl_schedul": 74, "klcontrollerbas": 74, "num_step": [74, 637], "causal": [74, 360], "sentenc": [74, 196], "frozen": [74, 255, 292, 293], "gpt2rewardmodel": 74, "get_dataload": [74, 625], "promptdata": [74, 625], "gpt2lmheadmodel": 74, "dl": [74, 207], "block_siz": [74, 106], "tensorclass_typ": [74, 106], "openai_summarize_tldr": 74, "config_class": 74, "model_path": 74, "rollout_from_model": 74, "rollout_from_data": 74, "reward_kl": [74, 255], "reward_raw": 74, "sample_log_prob": [74, 255, 370, 371, 372, 378, 382, 384, 412], "create_rollout_td": 74, "log_prob": [74, 208, 214, 310, 320, 327, 328, 336, 339, 349, 354, 357, 360, 365, 382, 395, 401, 415, 429, 629, 646], "log_ratio": 74, "replic": [74, 629], "rindex": 74, "eo": [74, 199, 365], "generation_config": 74, "generationconfig": 74, "ti": [74, 442, 443, 444, 445, 447, 448, 449, 450, 634], "log_probs_gen": 74, "logprobs_of_label": 74, "hash_a": 75, "4669941682990263259": 75, "3778166555168484291": 75, "9122128731510687521": 75, "hash_b": 75, "heterogen": [76, 77, 116, 141, 144, 147, 151, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 329, 330, 633, 634], "220": 78, "resembl": 80, "tensormap": 80, "collat": [80, 124, 193, 194, 197], "subtyp": 80, "embedding_storag": 80, "tensor_dict_storag": 80, "new_index": 80, "key3": 80, "retrieve_valu": 80, "storage_constructor": 80, "write_fn": 80, "tensordictstorag": 80, "thumb": [80, 171, 635], "lazydynamicstorag": 80, "fixedstorag": 80, "randomprojectionhash": 80, "priority_kei": [81, 82, 98, 121, 395, 397, 400, 401, 402, 408, 410, 413, 415, 417, 418, 426, 429, 431, 652, 654], "reduct": [81, 121, 122, 135, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 406, 408, 409, 411, 412, 413, 414, 415, 417, 418, 426, 429, 465, 488, 531], "prioritizedreplaybuff": [81, 625, 654], "min": [81, 121, 122, 135, 340, 393, 394, 395, 401, 411, 413, 415, 426, 465, 634, 635], "median": [81, 121, 122, 135, 151, 157, 158, 202, 228, 378, 382], "huggingfac": [83, 100, 105, 199, 360, 376], "co": [83, 199, 247, 352, 627, 650], "pad_trunc": 83, "am": 83, "me": [83, 205, 210, 645], "reassur": 83, "ok": 83, "_encode_memo_dict": 85, "primarili": [85, 264, 627, 639], "educ": 85, "guess": 85, "knowledg": [85, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 640, 642], "tokenizer_fn": 86, "tensordicttoken": [86, 625], "pre_tokenization_hook": 86, "valid_s": 86, "tokenizer_class": 86, "tokenizer_model_nam": 86, "tokein": 86, "elementwis": 86, "vocabulari": [86, 159, 200, 201, 217, 282, 320], "loader": [86, 635], "185068": 86, "dataset_to_tensordict": 86, "data_dir": 86, "batch_dim": [86, 87, 107, 108, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 198, 200, 201, 202, 353, 355, 356, 358, 359, 427, 430, 623], "valid_mask_kei": 86, "batch_dimens": 86, "filder": 86, "from_dict": [86, 87, 107, 108, 198, 207, 353, 355, 356, 358, 359, 427, 430], "data_memmap": 86, "ref": 87, "branching_act": 87, "prev_act": 87, "edg": [87, 637], "travers": [87, 213], "breadth": 87, "bf": 87, "from_ani": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "auto_batch_s": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "opinion": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "obj": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "from_dataclass": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "from_namedtupl": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "from_tupl": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "from_struct_arrai": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "hdf5": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "from_h5": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "dest_cl": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "as_tensorclass": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "deleg": [87, 107, 108, 198, 213, 353, 355, 356, 358, 359, 427, 430, 650], "convers": [87, 107, 108, 142, 143, 157, 158, 192, 194, 197, 198, 214, 215, 223, 353, 355, 356, 358, 359, 426, 427, 430, 627, 629, 645, 646], "persistenttensordict": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "h5": [87, 104, 105, 107, 108, 113, 198, 353, 355, 356, 358, 359, 427, 430], "as_modul": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "use_state_dict": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "lazy_stack": [87, 107, 108, 109, 198, 353, 355, 356, 358, 359, 427, 429, 430, 627, 647], "expand_ident": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "ensebml": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "tensordictparam": [87, 107, 108, 198, 329, 330, 353, 355, 356, 358, 359, 382, 427, 430], "densli": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "dens": [87, 107, 108, 141, 198, 327, 328, 353, 355, 356, 358, 359, 427, 430, 627], "reinstanti": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "tempt": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "empty_modul": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "n_model": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "exec_modul": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "to_modul": [87, 107, 108, 198, 312, 353, 355, 356, 358, 359, 381, 384, 427, 430, 633, 654], "backprop": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "named_tupl": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "a_tensor": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "a_str": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "nt": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "to_namedtupl": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "genericdict": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "from_pytre": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "biject": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "castabl": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "surject": [87, 107, 108, 198, 353, 355, 356, 358, 359, 391, 427, 430], "weird": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "weirdlookingclass": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "weird_kei": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "pytree_recon": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "to_pytre": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "from_remote_init": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "processgroup": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "sent": [87, 107, 108, 110, 115, 117, 137, 198, 292, 353, 355, 356, 358, 359, 427, 430, 627], "init_remot": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "src": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "struct_arrai": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "rex": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "fido": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "27": [87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 129, 130, 142, 143, 171, 180, 198, 240, 353, 355, 356, 358, 359, 427, 430], "u10": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "ag": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "i4": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "f4": [87, 107, 108, 144, 198, 353, 355, 356, 358, 359, 427, 430], "x_recon": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "to_struct_arrai": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "my_tupl": [87, 107, 108, 198, 353, 355, 356, 358, 359, 427, 430], "fully_expand": 87, "get_vertex_by_hash": 87, "get_vertex_by_id": 87, "is_termin": 87, "make_nod": 87, "maybe_dense_stack": [87, 107, 108, 198, 207, 353, 355, 356, 358, 359, 427, 430], "node_observ": 87, "bag": 87, "num_children": 87, "num_vertic": 87, "count_repeat": 87, "recustruct": 87, "plotli": 87, "make_label": 87, "visual": [87, 263, 288, 290, 453, 635, 648, 650], "unsupport": 87, "selected_act": 87, "mctsforest": [87, 159, 201, 625], "key_typ": 87, "recurse_through_entri": 94, "recurse_through_stack": 94, "dataset_id": [97, 99, 100, 101, 103, 104, 105], "num_proc": 97, "slice_len": [97, 103, 122, 129, 130, 453, 493, 494, 636], "strict_len": 97, "arari": 97, "2600": 97, "million": 97, "consequ": [97, 113, 321, 641], "50x10": 97, "available_dataset": [97, 98, 99, 100, 101, 102, 103, 104, 105, 129, 130], "ataridqn": 97, "immutabledatasetwrit": [97, 98, 99, 100, 101, 102, 103, 104, 105], "shorter": [97, 103, 122, 129, 130], "Be": [97, 103, 122, 129, 130], "game_nam": 97, "krull": 97, "1d": [97, 121, 122, 129, 130, 135], "cheapli": 97, "invalid_rang": 97, "999998": 97, "999999": 97, "add_count": 97, "valueestim": [97, 392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 421, 426, 429, 431, 625, 629, 633, 648, 649], "convolut": [97, 302, 303, 305, 306, 329, 345, 523, 637, 639], "2657628": 97, "2657629": 97, "2657630": 97, "2657631": 97, "2657632": 97, "2657633": 97, "2657634": 97, "2657635": 97, "2657636": 97, "2657637": 97, "2657638": 97, "2657639": 97, "2657640": 97, "2657641": 97, "2657642": 97, "2657643": 97, "2657644": 97, "2657645": 97, "2657646": 97, "2657647": 97, "2657648": 97, "2657649": 97, "2657650": 97, "2657651": 97, "2657652": 97, "2657653": 97, "2657654": 97, "2657655": 97, "2657656": 97, "2657657": 97, "2657658": 97, "2657659": 97, "2657660": 97, "2657661": 97, "2657662": 97, "2657663": 97, "2657664": 97, "2657665": 97, "2657666": 97, "2657667": 97, "2657668": 97, "2657669": 97, "2657670": 97, "2657671": 97, "2657672": 97, "2657673": 97, "2657674": 97, "2657675": 97, "2657676": 97, "2657677": 97, "2657678": 97, "2657679": 97, "2657680": 97, "2657681": 97, "2657682": 97, "2657683": 97, "2657684": 97, "2657685": 97, "2657686": 97, "2657687": 97, "2657688": 97, "2657689": 97, "2657690": 97, "2657691": 97, "1995687": 97, "1995688": 97, "1995689": 97, "1995690": 97, "1995691": 97, "1995692": 97, "1995693": 97, "1995694": 97, "1995695": 97, "1995696": 97, "1995697": 97, "1995698": 97, "1995699": 97, "1995700": 97, "1995701": 97, "1995702": 97, "1995703": 97, "1995704": 97, "1995705": 97, "1995706": 97, "1995707": 97, "1995708": 97, "1995709": 97, "1995710": 97, "1995711": 97, "1995712": 97, "1995713": 97, "1995714": 97, "1995715": 97, "1995716": 97, "1995717": 97, "1995718": 97, "1995719": 97, "1995720": 97, "1995721": 97, "1995722": 97, "1995723": 97, "1995724": 97, "1995725": 97, "1995726": 97, "1995727": 97, "1995728": 97, "1995729": 97, "1995730": 97, "1995731": 97, "1995732": 97, "1995733": 97, "1995734": 97, "1995735": 97, "1995736": 97, "1995737": 97, "1995738": 97, "1995739": 97, "1995740": 97, "1995741": 97, "1995742": 97, "1995743": 97, "1995744": 97, "1995745": 97, "1995746": 97, "1995747": 97, "1995748": 97, "1995749": 97, "1995750": 97, "_max_run": 97, "dataset_asterix": 97, "asterix": 97, "dataset_pong": 97, "sample_from_al": [97, 124, 127], "buffer_id": [97, 127, 133], "hidden": [97, 171, 180, 234, 305, 313, 316, 317, 318, 321, 322, 323, 334, 335, 343, 344, 370, 371, 372, 373, 381, 384, 394, 409, 412, 628, 636, 647, 654], "data_path": [97, 98, 99, 100, 101, 102, 103, 104, 105], "data_path_root": [97, 98, 99, 100, 101, 102, 103, 104, 105], "delet": [97, 98, 99, 100, 101, 102, 103, 104, 105, 236, 275, 460], "chunksiz": [97, 98, 99, 100, 101, 102, 103, 104, 105], "max_tasks_per_child": [97, 98, 99, 100, 101, 102, 103, 104, 105], "worker_thread": [97, 98, 99, 100, 101, 102, 103, 104, 105], "index_with_gener": [97, 98, 99, 100, 101, 102, 103, 104, 105], "num_fram": [97, 98, 99, 100, 101, 102, 103, 104, 105], "unitari": [97, 98, 99, 100, 101, 102, 103, 104, 105, 650], "minariexperiencereplai": [97, 98, 99, 100, 102, 103, 104, 105], "1000000": [97, 98, 99, 100, 101, 102, 103, 104, 105, 477, 598], "distance_from_origin": [97, 98, 99, 100, 101, 102, 103, 104, 105], "forward_reward": [97, 98, 99, 100, 101, 102, 103, 104, 105], "qpo": [97, 98, 99, 100, 101, 102, 103, 104, 105], "qvel": [97, 98, 99, 100, 101, 102, 103, 104, 105], "reward_ctrl": [97, 98, 99, 100, 101, 102, 103, 104, 105, 151, 171, 202], "reward_forward": [97, 98, 99, 100, 101, 102, 103, 104, 105], "reward_surv": [97, 98, 99, 100, 101, 102, 103, 104, 105], "x_posit": [97, 98, 99, 100, 101, 102, 103, 104, 105, 151, 171, 202], "x_veloc": [97, 98, 99, 100, 101, 102, 103, 104, 105, 151, 171, 202], "y_posit": [97, 98, 99, 100, 101, 102, 103, 104, 105], "y_veloc": [97, 98, 99, 100, 101, 102, 103, 104, 105], "achieved_go": [97, 98, 99, 100, 101, 102, 103, 104, 105], "desired_go": [97, 98, 99, 100, 101, 102, 103, 104, 105], "_collate_id": [97, 98, 99, 100, 101, 102, 103, 104, 105], "0x120e21dc0": [97, 98, 99, 100, 101, 102, 103, 104, 105], "cat_tensor": [97, 98, 99, 100, 101, 102, 103, 104, 105], "cat_next_tensor": [97, 98, 99, 100, 101, 102, 103, 104, 105], "new_storag": [97, 98, 99, 100, 101, 102, 103, 104, 105], "31": [97, 98, 99, 100, 101, 102, 103, 104, 105, 129, 157, 158], "full_storag": [97, 98, 99, 100, 101, 102, 103, 104, 105], "0x168406fc0": [97, 98, 99, 100, 101, 102, 103, 104, 105], "from_env": 99, "use_truncated_as_don": 99, "direct_download": 99, "terminate_on_end": 99, "env_kwarg": [99, 104, 105, 232, 537, 621, 622, 633], "reconstruct": [99, 129, 130, 404, 633, 655], "get_dataset": 99, "qlearning_dataset": 99, "fewer": [99, 122, 129], "unexpectedli": 99, "traj_split": 99, "observationnorm": [99, 292, 293, 565, 623, 633, 634, 635, 636, 654], "maze2d": 99, "umaz": 99, "loc": [99, 141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 200, 201, 202, 255, 259, 270, 292, 293, 319, 348, 349, 370, 371, 372, 378, 382, 384, 392, 393, 395, 408, 412, 413, 414, 415, 565, 575, 613, 623, 628, 633, 634, 635, 636, 639, 649, 654], "gen": 100, "dgrl": 100, "accompani": [100, 232, 276], "gap": 100, "2312": 100, "05742": 100, "gen_dgrl": 100, "procgen": 100, "bigfish": 100, "bossfight": 100, "1m_e": 100, "1m_": 100, "comma": [100, 637], "npy": 100, "mmap": [100, 104, 105], "minut": 100, "internet": [100, 105], "connect": [100, 105, 183], "load_from_local_minari": 101, "minari": 101, "websit": [101, 103, 645], "currenrtli": 101, "minari_data": 101, "door": 101, "torchrl_logg": [101, 643, 645], "28": [101, 129, 130, 329], "door_body_po": 101, "dua": 102, "graff": 102, "2017": 102, "uci": [102, 144], "archiv": 102, "ic": 102, "edu": 102, "ml": [102, 183, 184, 352], "adult_num": [102, 168], "adult_onehot": [102, 168], "mushroom_num": [102, 168], "mushroom_onehot": [102, 168], "covertyp": [102, 168], "shuttl": [102, 168], "magic": [102, 168, 637, 638], "shuffl": [103, 128, 130, 193, 194, 197, 492, 649], "embodi": [103, 651], "institut": 103, "demonstr": [103, 627, 635, 637, 641, 645, 646, 648, 649, 650, 652, 655], "527": 103, "skill": 103, "160266": 103, "googl": [103, 104, 142, 143, 163, 164, 169, 170, 197, 199, 298, 635, 636, 645, 648, 649], "open_x_embodi": 103, "2310": [103, 177], "08864": 103, "language_instruct": 103, "get_non_tensor": 103, "nor": [103, 183], "insuffici": 103, "chosen": [103, 185, 186, 277, 278, 341, 342, 350, 380, 453, 628, 642], "openx": 103, "__will": 103, "change__": 103, "crop": [103, 237, 264, 453, 547], "modal": [103, 354, 360, 365, 633], "cmu_stretch": [103, 453], "is_init": [103, 105, 234, 254, 318, 323, 340, 377, 389, 433, 636, 637], "language_embed": 103, "512": [103, 314], "green": [103, 648], "garbag": 103, "lid": 103, "roboset": 104, "roboh": [104, 177, 515], "concis": [104, 640], "23": [104, 130, 240, 296], "totensor": 105, "image_s": 105, "v": [105, 292, 316, 317, 321, 322, 370, 400, 408, 415, 633, 634], "npz": 105, "2206": [105, 166, 167], "04779": [105, 393, 399], "vd4rl": 105, "squar": [105, 237, 242, 319, 348, 349, 394, 412, 426, 453, 627], "rectangular": [105, 302, 303], "walker_walk": 105, "64px": 105, "height": [105, 237, 242, 267, 542, 547], "veloc": [105, 141, 144, 145, 146, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 235, 648, 649, 650, 655], "infinit": [106, 163, 164, 185, 186, 193, 194, 197, 207, 293, 641, 652], "pairwisedataset": [106, 625], "function_cal": 107, "_wrap_td_method": 107, "wrapped_func": 107, "0x7f6bb6924670": 107, "mime_typ": 107, "function_nam": 107, "function_arg": 107, "contentbas": 108, "is_complet": 108, "tool_cal": 108, "tool_respons": [108, 210, 212, 627], "apply_chat_templ": [108, 192, 210, 212, 429, 627, 645], "autoprocessor": 108, "add_generation_prompt": [108, 214, 215, 429, 627], "chat_templ": [108, 216, 360, 365, 429, 627], "chat_template_nam": [108, 360, 365, 429, 627], "continue_final_messag": 108, "return_tensor": [108, 214], "return_dict": [108, 215, 627], "return_assistant_tokens_mask": [108, 214, 215, 627], "chat": [108, 192, 193, 194, 197, 206, 210, 212, 214, 215, 216, 360, 365, 429, 627, 646], "pretrainedtoken": [108, 192, 203, 360, 365], "im_start": [108, 194, 197, 210, 212, 627], "assist": [108, 192, 194, 197, 205, 209, 210, 212, 214, 215, 360, 365, 426, 429, 636, 645, 646], "preval": 108, "messag": [108, 192, 205, 627, 646], "pt": [108, 214, 455, 519, 630], "assistant_mask": [108, 627], "qwen": [108, 194, 197, 205, 210, 212, 352, 360, 361, 362, 365, 429, 627, 645, 646], "dialogpt": [108, 627], "falcon": [108, 627], "deepseek": [108, 627], "chatml_format": [108, 360, 365, 429, 627], "default_spec": [108, 353, 355, 356, 358, 359], "set_list_to_stack": [108, 197, 210, 212, 214, 215, 627, 645], "foo": [108, 115, 117, 137, 373, 652, 655], "from_chat": [108, 192, 214, 215, 360, 365, 429, 627, 646], "qwen2": [108, 194, 197, 205, 210, 212, 352, 361, 362, 365, 627, 645, 646], "7b": [108, 352, 627, 645], "nyou": [108, 197], "im_end": [108, 194, 205, 210, 212, 627, 645], "nwrite": 108, "capit": [108, 300, 645, 646], "franc": [108, 645, 646], "germani": 108, "pari": [108, 197, 645], "berlin": 108, "answer": [108, 194, 196, 197, 199, 205, 627, 645], "topk_siz": 109, "prompt_kei": [109, 199, 428], "rewards_kei": [109, 428], "k": [109, 299, 301, 316, 317, 321, 322, 354, 360, 365], "lazystackstorag": [109, 485], "samplerwithoutreplac": [109, 135, 492, 635, 649, 652], "topk": 109, "selector": [109, 645], "_td": [109, 148, 403], "25": [109, 240, 531, 633], "wrote": 109, "top3": 109, "r3": 109, "as_padded_tensor": [109, 200, 207, 215, 354, 360, 365], "transformthatmeasuresbyt": [109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 288, 289, 291, 292, 295, 428], "bytes_in_td": [109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 229, 231, 232, 234, 235, 236, 239, 240, 241, 244, 247, 248, 249, 251, 254, 255, 262, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 288, 289, 291, 292, 295, 428], "transform_done_spec": [109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 244, 275, 282, 284, 286, 295, 428], "transform_env_batch_s": [109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 239, 284, 295, 428], "transform_env_devic": [109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 244, 284, 295, 428], "transform_full_done_spec": [109, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 232, 239, 243, 244, 248, 255, 257, 265, 266, 272, 276, 282, 284, 286, 293, 295, 428], "compress": [110, 111, 625], "verifi": [110, 193, 412, 627], "attach": [110, 115, 116, 117, 118, 131, 133, 137, 634], "entiti": [110, 115, 116, 117, 118, 131, 133, 137], "to_bytestream": 110, "data_to_bytestream": 110, "checkpoint_fil": 113, "h5_kwarg": 113, "iff": 113, "suffix": [113, 466], "h5py": 113, "create_dataset": 113, "immut": [114, 141, 144, 147, 151, 159, 171, 175, 180, 181, 192, 193, 194, 197, 200, 201, 202, 266, 285], "scratch_dir": [115, 633, 634, 636, 641, 648, 651, 652], "mistak": [115, 117, 137], "overewritten": 115, "tensorstoragecheckpoint": 115, "pathlib": [115, 472, 476, 477, 637], "main_ckpt_dir": 115, "rb_memmap": 115, "10_000_000": 115, "myclass": [115, 117, 137], "lazystacktensordict": 116, "heterougen": 116, "linearli": 116, "densifi": 116, "unlimit": [116, 118], "st": 116, "expans": [117, 410, 426, 429], "zero_": [117, 137, 220], "liststoag": 119, "max_capac": [121, 122, 488, 633, 652], "max_priority_within_buff": [121, 122], "proport": [121, 652], "magnitud": [121, 122, 633, 648], "focus": [121, 122, 633, 640], "p_i": [121, 122], "delta_i": [121, 122], "epsilon": [121, 122, 259, 297, 315, 340, 416, 469, 634, 635, 636, 639], "frac": [121, 122, 316, 317, 321, 322, 635], "sum_j": [121, 122], "p_j": [121, 122], "w_i": [121, 122], "cdot": [121, 122, 429], "unbias": [121, 122], "anneal": [121, 122, 340, 634, 639, 648], "guidelin": [121, 122], "math": [121, 122, 416], "benefit": [121, 122, 626, 627, 638, 646, 648, 649, 652], "data_0": 121, "data_1": 121, "smoothen": 121, "tdrb": 121, "pack": [121, 316, 321, 360, 635, 638, 655], "nd": [121, 122], "sum_tre": [121, 122], "min_tre": [121, 122], "end_kei": [122, 129, 130, 493, 494, 636], "cache_valu": [122, 129, 130, 493, 494, 636], "closer": [122, 654], "readili": [122, 129, 130, 382], "conjunct": [122, 129, 130, 634], "buffer0": [122, 129], "immutablewrit": [122, 129], "buffer1": [122, 129], "other_sampl": [122, 129], "short": [122, 129, 130, 141, 142, 143, 144, 147, 151, 157, 158, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 321, 322, 360, 634, 635, 638, 639, 649, 652], "tolist": [122, 627], "120110917137936e": 122, "06": [122, 310, 347, 599, 609], "storageensembl": [124, 127, 495], "samplerensembl": 124, "writerensembl": [124, 133], "num_buffer_sampl": [124, 127], "ensembl": [124, 127, 133, 134, 140, 381, 413, 495, 496], "forbidden": 124, "0x13a2ef430": 124, "0x13a2f9310": 124, "interpolationmod": 124, "bilinear": [124, 267, 572], "0x13a2f9220": 124, "0x13a2f9f70": 124, "0x13a2d9b50": 124, "0x13a2f95b0": 124, "0x128648260": 124, "roundrobin": [125, 136], "incomplet": [128, 130, 205], "fresh": [128, 207], "haven": [128, 651], "remain": [128, 205, 211, 234, 244, 245, 255, 277, 333, 627, 640], "draw": [128, 315], "use_gpu": [129, 130, 493, 494], "slicesamplerwithoutreplac": [129, 494, 652], "acceler": [129, 130, 151, 202, 648, 649], "ep_1": [129, 130], "ep_2": [129, 130], "73": 129, "74": 129, "76": 129, "77": 129, "42": [129, 324, 339, 392, 393, 395, 396, 400, 408, 415], "43": 129, "45": 129, "67": [129, 647], "69": 129, "70": 129, "71": 129, "80": [129, 142, 143], "82": 129, "83": 129, "78": 129, "79": 129, "320": [129, 130, 145, 146], "700": [129, 130], "dataid": [129, 130], "counter": [130, 211, 240, 283, 377, 464, 630, 637], "request": [130, 232, 264, 352, 627], "51": 130, "__len__": 131, "rank_kei": 135, "get_insert_index": 135, "themselv": [141, 300, 634], "maybe_dens": 141, "maker": [141, 623, 634], "min_get": [141, 175, 181], "sort": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 236, 340], "another_act": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "discretebox": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "mutabl": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "action_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 635, 649], "had": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 639, 641], "all_act": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "any_don": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "_callabletransform": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 200, 201, 202], "auto_specs_": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "action_spac": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 247, 312, 342, 374, 375, 379, 380, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 426, 429, 431, 636, 637, 639, 643], "discrep": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 392, 394, 396, 397, 409, 412, 414, 431], "broken": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202], "check_dtyp": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202], "rng": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 187, 192, 193, 194, 197, 200, 201, 202, 650], "done_keys_group": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "another_don": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "done_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "empty_cach": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 213, 285], "env_batch_s": [141, 175, 181], "fake_tensordict": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 634, 637], "envnam": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "full_action_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 648, 649], "full_done_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "full_observation_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "full_reward_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "pipeline_st": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "full_state_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "input_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "is_spec_lock": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "maybe_reset": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "speak": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 241, 382, 633], "observation_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "output_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "register_gym": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 638], "entry_point": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "info_kei": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "reward_threshold": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "nondeterminist": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "max_episode_step": [141, 144, 147, 150, 151, 152, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "order_enforc": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "autoreset": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "disable_env_check": [141, 144, 147, 150, 151, 159, 166, 167, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 505, 509], "apply_api_compat": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "nasium": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 223], "dmcontrolenv": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 453, 503, 625, 633, 638, 647, 655], "dmc": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "cheetah": [141, 144, 145, 146, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 453, 633], "removeemptyspec": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 570], "threshold": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 315, 393, 394, 426, 627, 635], "learnt": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 619], "checker": [141, 144, 147, 150, 151, 159, 166, 167, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "stepapicompat": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "deem": [141, 144, 147, 151, 159, 163, 164, 171, 172, 175, 180, 181, 182, 185, 186, 192, 193, 194, 197, 200, 201, 202], "task_nam": [141, 144, 145, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 503], "envgym": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0855": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0215": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0881": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0412": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "1101": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0080": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0254": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0424": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "9609e": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "9776e": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "04": [141, 144, 147, 151, 155, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 280, 293], "6347e": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "3842e": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "5338e": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "3064e": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0381e": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "6656e": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "05": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 280, 298, 412, 650], "0204e": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0833": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0275": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0612": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0770": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "1256": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0082": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0186": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0476": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "2221": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "2256": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "5930": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "6937": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "5865": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "5479": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0187": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "6825": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "5224": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0018": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "1005": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0335": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 241], "0268": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0133": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0627": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0074": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0488": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0353": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0075": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0069": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0098": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0058": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0033": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0157": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0004": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 280], "0381": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0452": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "11355747": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "04257728": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "00408397": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "04155852": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0389733": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "01409826": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0978704": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "08808327": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "03970837": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "00535434": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "02353762": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "05116226": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "02788907": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "06848346": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "05154399": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "0371798": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "05128025": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "dydact": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "ant": [141, 142, 143, 144, 147, 151, 154, 156, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 651], "gym_env": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 654], "reset_kei": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 235, 271, 277, 278, 279, 582, 648], "multitask": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "multiag": [141, 144, 147, 151, 159, 162, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 227, 330, 341, 350, 394, 409, 412, 431], "another_reward": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "reward_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "auto_cast_to_devic": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 649], "soon": [141, 144, 147, 151, 159, 171, 172, 173, 174, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "__sort": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "as__": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "categorical_action_encod": [141, 142, 143, 144, 147, 150, 151, 152, 153, 156, 157, 158, 159, 166, 167, 171, 172, 175, 177, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 223, 240, 502, 505, 509, 637], "argmaxmodul": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "argmax": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 312, 342, 375, 380, 637, 639], "n_act": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 255, 392, 393, 395, 396, 397, 399, 400, 401, 408, 412, 413, 414, 415, 417, 418, 640], "ourselv": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 635, 655], "emul": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "epoch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 472, 476, 630, 635, 648, 649], "input_td": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "rollout_td": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "state_spec_unbatch": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "prevail": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 227, 236, 271, 354], "next_tensordict": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 226, 232, 236, 248, 249, 250, 262, 265, 266, 272, 275, 288, 292, 627], "precomput": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202], "_stepmdp": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 226], "exclude_act": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 226], "reset_data": [141, 144, 147, 151, 159, 171, 172, 175, 180, 181, 182, 192, 193, 194, 197, 200, 201, 202, 627, 655], "2106": [142, 143, 398, 417], "13281": [142, 143], "cache_clear_frequ": [142, 143, 502], "leak": [142, 143, 352], "frame_skip": [142, 143, 145, 146, 150, 151, 152, 153, 157, 158, 160, 161, 166, 167, 177, 202, 251, 464, 466, 477, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 532, 556, 612, 630, 633, 634, 635, 654], "allow_done_after_reset": [142, 143, 145, 146, 147, 150, 152, 153, 156, 157, 158, 166, 167, 169, 170, 177, 183, 184, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518], "toler": [142, 143, 145, 146, 150, 152, 153, 156, 157, 158, 166, 167, 169, 170, 177, 183, 184, 213, 310, 347, 352, 627], "is_avail": [142, 143, 633, 634, 635, 636, 648, 649, 651], "87": [142, 143], "acrobot": [142, 143, 145, 146, 655], "advant": [142, 143, 157, 158], "timer": [142, 143, 151, 157, 158, 202, 585], "timeit": [142, 143, 157, 158, 637], "310": [142, 143], "ms": [142, 143, 157, 158], "268": [142, 143], "433": [142, 143], "213": [142, 143], "8605": [142, 143], "pipelineenv": 143, "get_environ": 143, "san": 144, "fen": [144, 169, 170], "pgn": 144, "legal": [144, 229], "board": [144, 182], "include_san": 144, "algebra": [144, 650], "notat": 144, "include_fen": 144, "forsyth": 144, "edward": 144, "include_pgn": 144, "portabl": [144, 642], "include_legal_mov": 144, "include_hash": 144, "mask_act": 144, "subset": [144, 650, 651], "29275": 144, "rnbqkbnr": [144, 169, 170], "pppppppp": [144, 169, 170], "kqkq": [144, 169, 170], "legal_mov": 144, "219": 144, "5p2": 144, "ppppp1pp": 144, "event": [144, 320, 327, 328, 336, 442, 443, 444, 445, 447, 448, 449, 450, 652], "white": 144, "96": 144, "kq": 144, "5n2": 144, "rnbqkb1r": 144, "nf3": 144, "na6": 144, "c4": 144, "f6": 144, "h4": 144, "rb8": 144, "na3": 144, "ra": 144, "get_legal_mov": 144, "dm_control": [145, 146, 503, 633, 647, 655], "2006": [145, 146, 240, 393, 399], "12983": [145, 146], "240": [145, 146, 654], "swingup": [145, 146, 655], "swingup_spars": [145, 146], "ball_in_cup": [145, 146], "catch": [145, 146, 637], "balance_spars": [145, 146], "three_pol": [145, 146], "two_pol": [145, 146], "finger": [145, 146], "turn_easi": [145, 146], "turn_hard": [145, 146], "fish": [145, 146], "upright": [145, 146, 634], "swim": [145, 146], "hopper": [145, 146], "hop": [145, 146], "humanoid": [145, 146, 171, 180, 647], "walk": [145, 146, 171, 180, 634, 647], "run_pure_st": [145, 146], "bring_bal": [145, 146], "bring_peg": [145, 146], "insert_bal": [145, 146], "insert_peg": [145, 146], "point_mass": [145, 146], "reacher": [145, 146], "swimmer": [145, 146], "swimmer6": [145, 146], "swimmer15": [145, 146], "walker": [145, 146], "dog": [145, 146], "trot": [145, 146], "humanoid_cmu": [145, 146], "lqr": [145, 146], "lqr_2_1": [145, 146], "lqr_6_2": [145, 146], "quadrup": [145, 146], "escap": [145, 146], "stacker": [145, 146], "stack_2": [145, 146], "stack_4": [145, 146], "deviceless": 147, "run_type_check": [147, 165], "hint": 147, "counterenv": 147, "creator": [148, 614, 615, 621, 622, 623], "substitut": [148, 277, 292, 639], "vecnorm": [148, 293, 596, 597, 623], "env_creat": [148, 633], "test_env1": 148, "observation_count": [148, 655], "test_env2": 148, "ps": 148, "p1": 148, "p2": 148, "9934": 148, "make_vari": [148, 283], "variant": [148, 283, 300, 628], "trajcount": [148, 588], "env_creator_pendulum": 148, "env_creator_cartpol": 148, "env_str": 149, "device_map": 149, "registri": [150, 183], "asyncvectorenv": 150, "pixel_observ": [150, 152, 153, 177], "pixelobservationwrapp": [150, 152, 153, 177], "adventur": [150, 152], "airraid": [150, 152, 655], "alien": [150, 152], "time_limit": 150, "timelimit": [150, 163, 164, 185, 186], "default_info_dict_read": [150, 151, 152, 171, 202], "reader": [150, 151, 152, 171, 202, 634], "set_info_dict_read": [150, 151, 152, 171, 202, 638], "info_dict": [150, 151, 152, 171, 202], "gymlikeenv": [150, 152, 202, 625], "auto_register_info_dict": [150, 151, 152, 171, 202], "multibinari": [150, 152], "multidiscret": [150, 152], "rag": [150, 152], "gym_conversion_exampl": [150, 152], "info_dict_read": [151, 171, 202], "ignore_priv": [151, 202], "baseinfodictread": [151, 202], "tensordictprim": [151, 171, 202, 301, 318, 323, 389, 583, 628, 636], "succe": [151, 171, 202], "underscor": [151, 202], "primer": [151, 192, 193, 194, 197, 200, 202, 207, 213, 278, 301, 318, 323, 389, 636], "halfcheetah": [151, 171, 202, 228, 267, 630, 633, 654], "reward_run": [151, 171, 202], "raise_if_clos": [151, 202], "fast_encod": [151, 202], "memoize_cach": [151, 202], "adaptive_autorang": [151, 202], "4f": [151, 202, 429, 635, 636, 650], "fp": [151, 202, 453, 458, 460], "10141": [151, 202], "5742fp": [151, 202], "10576": [151, 202], "8388fp": [151, 202], "read_act": [151, 202], "read_don": [151, 202], "nonsens": [151, 202], "fallback": [151, 202, 352], "read_ob": [151, 202], "dictat": [151, 202, 256, 378, 382, 412, 633, 650], "read_reward": [151, 202], "hoc": [151, 171, 202, 639], "dict_read": [151, 202], "my_info_kei": [151, 202], "some_env": [151, 202], "vecenv": 152, "vectorenv": 152, "convert_actions_to_numpi": [152, 505, 509], "missing_obs_valu": [152, 291, 505, 509], "vecgymenvtransform": [152, 595], "secur": [153, 645], "habitat3": 153, "ai": [153, 627, 651], "habitatrenderpick": 153, "isaacgym": [154, 155, 507], "isaacgymwrapp": [154, 625], "isaacgymenv": [155, 507, 625], "webpag": 155, "isaac": [155, 156], "essenc": [155, 638], "scripts_isaaclab": 156, "managerbasedrlenv": 156, "app": 156, "applaunch": 156, "argpars": [156, 620, 623], "parser": [156, 196, 620, 623, 627], "argumentpars": 156, "add_app_launcher_arg": 156, "args_cli": 156, "hydra_arg": 156, "parse_known_arg": 156, "app_launch": 156, "isaaclab_task": 156, "f401": 156, "manager_bas": 156, "ant_env_cfg": 156, "antenvcfg": 156, "isaac_lab": 156, "cfg": [156, 523, 524, 527, 528, 529, 612, 613, 614, 615, 616, 617, 618, 619, 620, 623, 630], "instadeepai": [157, 158], "2306": [157, 158, 293], "09884": [157, 158], "snake": [157, 158, 194], "grid": [157, 158, 453], "bodi": [157, 158], "body_st": [157, 158], "fruit_posit": [157, 158], "col": [157, 158], "head_posit": [157, 158], "tail": [157, 158], "game2048": [157, 158], "maze": [157, 158], "cleaner": [157, 158, 646], "cvrp": [157, 158], "multicvrp": [157, 158], "minesweep": [157, 158], "rubikscub": [157, 158], "knapsack": [157, 158], "sudoku": [157, 158], "tsp": [157, 158], "connector": [157, 158], "mmst": [157, 158], "graphcolor": [157, 158], "partli": [157, 158], "scrambl": [157, 158], "robotwarehous": [157, 158], "tetri": [157, 158], "binpack": [157, 158], "jobshop": [157, 158], "0x1fca91910": 157, "122": [157, 158, 655], "0x1ff9baee0": 157, "134": [157, 158], "0x1ff9ba7c0": 157, "172": [157, 158], "jit": 158, "eager": [158, 362], "tdreset": [158, 295, 647], "whichev": 158, "overview": [159, 201, 635, 637, 640, 648, 649, 654], "vocab_s": [159, 200, 201, 587], "hashing_modul": [159, 201], "text_output": [159, 201], "batch_decod": [159, 201], "text_kei": [159, 201, 354, 357, 360, 365], "gpt2token": [159, 201], "make_tensordict": [159, 201], "mo": [160, 161], "minecart": [160, 161], "mo_gym": [161, 256], "qualnam": 162, "group_map": [162, 163, 164, 169, 170, 173, 174, 183, 184, 185, 186, 188, 648], "constructiuon": [162, 173, 174], "premad": [162, 163, 164, 173, 174, 185, 186, 431], "all_in_one_group": [162, 169, 170, 188], "agent_0": [162, 173, 174, 183, 188, 275], "agent_1": [162, 173, 174, 183, 188, 275], "agent_2": [162, 173, 174, 183, 188], "agent_3": [162, 183], "one_group_per_ag": [162, 173, 174], "meltingpot": [163, 164, 510], "2211": [163, 164], "13746": [163, 164], "melt": [163, 164], "pot": [163, 164], "novel": [163, 164, 640], "social": [163, 164], "familiar": [163, 164, 634, 645, 649, 655], "unfamiliar": [163, 164], "broad": [163, 164], "cooper": [163, 164, 648, 649], "decept": [163, 164], "reciproc": [163, 164], "stubborn": [163, 164], "substrat": [163, 164], "ml_collect": 163, "config_dict": 163, "configdict": 163, "categorical_act": [163, 164, 169, 170, 173, 174, 178, 179, 183, 184, 185, 186], "marlgroupmaptyp": [163, 164, 169, 170, 173, 174, 183, 184, 185, 186, 188, 625, 648], "agent_nam": [163, 164, 185, 186, 188], "agent_names_to_indices_map": [163, 164, 185, 186], "env_torchrl": [163, 164], "commons_harvest__open": [163, 164], "rgb": [163, 164], "144": [163, 164], "192": [163, 164], "collective_reward": [163, 164], "ready_to_shoot": [163, 164], "88": [163, 164, 178, 179], "substrate_config": 164, "get_config": 164, "mp_env": 164, "build_from_config": 164, "default_player_rol": 164, "mymbenv": [165, 299, 326], "world_model": [165, 299, 326, 404], "hidden_observ": [165, 299, 326], "worldmodelwrapp": [165, 299, 326], "activation_class": [165, 299, 302, 303, 305, 306, 307, 308, 313, 314, 324, 326, 329, 330, 523, 524, 634, 639, 648, 649, 654], "activate_last_lay": [165, 299, 308, 324, 326, 524], "sail": [166, 167], "sg": [166, 167], "10558": [166, 167], "readthedoc": [166, 169, 170], "en": [166, 169, 170], "python_interfac": 166, "envpoolmixin": 167, "env_bas": 167, "task_id": 167, "env_typ": 167, "gym_reset_return_info": 167, "envpool_env": 167, "www": [168, 327, 328], "fetch_openml": 168, "106": 168, "openspiel": [169, 170, 513], "open_spiel": [169, 170], "game_str": 169, "return_st": [169, 170, 173, 174], "4672": [169, 170], "current_play": [169, 170], "674": 169, "2048": [169, 170], "add_nois": [169, 170], "amazon": [169, 170], "backgammon": [169, 170], "restor": [169, 170, 627], "td_restor": [169, 170], "pyspiel": 170, "load_gam": 170, "new_initial_st": 170, "3009": 170, "my_env_fun": [171, 180], "custom_attribute_list": [171, 180], "custom_attribut": [171, 180], "custom_method_list": [171, 180], "custom_method": [171, 180], "deploi": [171, 180, 232, 637], "slight": [171, 180, 634], "share_individual_td": [171, 180], "shared_memori": [171, 180], "policy_proof": [171, 180], "ll": [171, 180, 240, 316, 317, 321, 322, 633, 634, 635, 636, 638, 639, 640, 641, 643, 645, 649, 655], "serial_for_singl": [171, 180, 634], "circular": [171, 180, 633], "list_of_kwarg": [171, 180], "com_veloc": [171, 180], "head_height": [171, 180], "joint_angl": [171, 180], "torso_vert": [171, 180], "batched_pipe_timeout": 171, "stringent": [171, 635, 648, 649], "penv": [171, 283], "env_fix": 171, "influenc": 171, "update_kwarg": [171, 180], "th": [172, 250, 287, 316, 321, 650], "thdot": [172, 650], "max_spe": [172, 650], "max_torqu": [172, 650], "gen_param": [172, 650], "gravit": [172, 650], "torqu": [172, 650], "pettingzoo": [173, 174, 514, 648, 649], "pet": [173, 174], "zoo": [173, 174], "__": [173, 174], "aecenv": [173, 174], "dead": [173, 174], "done_on_ani": [173, 174, 648], "compulsori": [173, 174], "adversary_0": [173, 174], "adversari": [173, 174, 406, 648], "sisl": 173, "multiwalker_v9": 173, "aec": [173, 174], "n_piston": [173, 174], "pistonball_v6": [173, 174], "piston": [173, 174], "piston_0": [173, 174], "piston_1": [173, 174], "piston_20": [173, 174], "tictactoe_v3": [173, 174], "player": [173, 174, 182], "player_1": [173, 174], "player_2": [173, 174], "butterfli": 174, "parallel_env": [174, 633, 654, 655], "_setup": [175, 181], "async_reset_send": [175, 181], "async_reset_recv": [175, 181], "cube": 176, "expos": [177, 243, 246, 383, 394, 412, 627, 634], "vikashplu": 177, "wiki": 177, "06828": 177, "from_depth": 177, "smacv2": [178, 179, 516], "starcraft": [178, 179], "challeng": [178, 179, 638, 650, 651], "10gen_terran": [178, 179], "10gen_zerg": [178, 179], "10gen_protoss": [178, 179], "3m": [178, 179], "8m": [178, 179], "25m": [178, 179], "5m_vs_6m": [178, 179], "8m_vs_9m": [178, 179], "10m_vs_11m": [178, 179], "27m_vs_30m": [178, 179], "mmm": [178, 179], "mmm2": [178, 179], "2s3z": [178, 179], "3s5z": [178, 179], "3s5z_vs_3s6z": [178, 179], "3s_vs_3z": [178, 179], "3s_vs_4z": [178, 179], "3s_vs_5z": [178, 179], "1c3s5z": [178, 179], "2m_vs_1z": [178, 179], "corridor": [178, 179], "6h_vs_8z": [178, 179], "2s_vs_1sc": [178, 179], "so_many_banel": [178, 179], "bane_vs_ban": [178, 179], "2c_vs_64zg": [178, 179], "old": [178, 179, 285, 293, 409, 655], "smac": [178, 179], "map_nam": [178, 179], "176": [178, 179], "battle_won": [178, 179], "dead_al": [178, 179], "dead_enemi": [178, 179], "episode_limit": [178, 179], "322": [178, 179, 205], "procedur": [178, 179, 352], "distribution_config": [178, 179], "n_unit": [178, 179], "n_enemi": [178, 179], "team_gen": [178, 179], "dist_typ": [178, 179], "weighted_team": [178, 179], "unit_typ": [178, 179], "marin": [178, 179], "maraud": [178, 179], "medivac": [178, 179], "exception_unit_typ": [178, 179], "start_posit": [178, 179], "surrounded_and_reflect": [178, 179], "map_x": [178, 179], "map_i": [178, 179], "capability_config": [178, 179], "131": [178, 179], "starcraft2env": 179, "tic": 182, "tac": 182, "toe": 182, "single_play": 182, "player1": 182, "desired_batch_s": 182, "player0": 182, "uniti": [183, 184], "technolog": [183, 184], "llapi": [183, 184], "mlagents_env": [183, 184], "unityenviron": [183, 184], "file_nam": 183, "registered_nam": 183, "3dball": 183, "group_0": 183, "vectorsensor_size8": 183, "continuous_act": [183, 185, 186, 451, 648, 649], "agent_10": 183, "agent_11": 183, "agent_4": 183, "agent_5": 183, "agent_6": 183, "agent_7": 183, "agent_8": 183, "agent_9": 183, "group_reward": 183, "proroklab": [185, 186], "vectorizedmultiagentsimul": [185, 186], "2207": [185, 186], "03530": [185, 186], "basescenario": 185, "defaultt": 185, "sparsiti": 185, "unbatched_action_spec": [185, 186], "unbatched_observation_spec": [185, 186], "unbatched_reward_spec": [185, 186], "het_spec": [185, 186], "het_specs_map": [185, 186], "flock": [185, 186, 451], "agent_collision_rew": [185, 186], "agent_distance_rew": [185, 186], "ca": 188, "environment4": 188, "get_group_map": 188, "sumbodul": 191, "blank": [192, 627], "canva": [192, 627], "fundament": [192, 627, 641], "histori": [192, 193, 194, 196, 197, 200, 205, 206, 209, 210, 212, 214, 215, 353, 354, 357, 360, 365, 429, 625, 645], "intention": [192, 627], "data_kei": [192, 193, 194, 197, 200, 213], "dialogu": [192, 627], "klrewardtransform": [192, 208, 214, 215, 560, 627], "pythoninterpret": [192, 627], "dataloadingprim": [192, 193, 200, 213, 278, 627], "addthinkingprompt": [192, 627], "input_mod": [192, 193, 194, 196, 197, 214, 215, 354, 357, 360, 365, 627, 646], "system_prompt": [192, 193, 194, 197, 210, 212, 627, 645], "template_kwarg": [192, 193, 194, 197], "system_rol": [192, 627], "user_rol": [192, 627], "policy_rol": 192, "response_kei": 192, "datasetchatenv": 192, "gsm8kenv": [192, 193, 196, 203, 205, 627], "ifevalenv": [192, 193, 627], "hello": [192, 214, 215, 352, 360, 361, 365, 429, 627], "response_data": 192, "next_ob": [192, 259, 433, 434, 435, 436, 654], "rlvr": 193, "batch_size_dl": [193, 194, 197, 203], "apply_templ": [193, 194, 197, 210, 212, 645], "conflict": [193, 354, 360, 365], "ray_backend": [193, 194, 197], "dataloader_actor_nam": [193, 194, 197], "thin": [193, 202, 627, 629], "chatenv": [193, 194, 197, 202, 210, 212, 625, 645], "bucket": 193, "reset_dataload": [193, 194, 197, 207, 213], "set_missing_toler": [193, 194, 197, 213, 285], "gsm8k": [194, 195, 203, 627], "compute_reward": [194, 197], "gsm8k_dataload": 194, "3b": [194, 197, 205, 210, 212, 352, 361, 362, 365], "question": [194, 197, 645, 652, 654], "bought": 194, "sandwich": 194, "he": 194, "paid": 194, "breed": 194, "mari": 194, "saw": [194, 642, 650, 652], "reward_answ": [194, 196, 627], "reward_contain": [194, 196, 627], "reward_right": [194, 196, 627], "reward_think": [194, 196, 627], "snak": 194, "set_done_if_answ": [196, 199, 627], "make_gsm8k_env": 196, "extract_tag": [196, 627], "pars": [196, 216, 645, 652], "xml": [196, 627], "ifev": [197, 199, 627], "ifeval_dataload": 197, "pprint": [197, 627], "instruction_id_list": [197, 199], "detectable_cont": 197, "number_placehold": 197, "num_highlight": 197, "num_": 197, "respond": 197, "plan": [197, 299, 325, 326], "week": 197, "europ": 197, "trip": 197, "london": 197, "rome": 197, "cap": [197, 635, 652], "restaur": 197, "prompt_level_strict_acc": [198, 199], "inst_level_strict_acc": [198, 199], "prompt_level_loose_acc": [198, 199], "inst_level_loose_acc": [198, 199], "instruction_ids_kei": 199, "keyword_args_kei": 199, "id_kei": 199, "response_column": 199, "score_kei": 199, "ifeval_scor": 199, "aggregate_reward": 199, "ifevalscoredata": [199, 627], "format_weight": 199, "scorer": 199, "IF": 199, "column": 199, "think_block": 199, "answer_block": [199, 627], "langdetect": 199, "nltk": 199, "immutabledict": 199, "default_reward_aggreg": [199, 627], "tier": 199, "metric": [199, 394, 412, 426, 465, 474, 476, 477, 629, 630, 633], "formula": [199, 255, 319, 348, 349, 392, 394, 409, 412, 426, 629, 635], "format_scor": [199, 627], "quality_bonu": 199, "structure_multipli": 199, "complexity_scal": 199, "incent": 199, "cot": [200, 627], "token_kei": 200, "str_kei": 200, "attention_kei": 200, "assign_reward": 200, "has_attent": 200, "assign_don": 200, "batchless": 200, "eos_token_id": [200, 360], "pretrainedtokenizerbas": [200, 217, 282], "stack_method": [200, 207, 213], "as_nested_tensor": [200, 207, 354, 360, 365], "bert": [200, 217, 282], "uncas": [200, 217, 282], "tokens_in": 200, "tokens_out": 200, "mlgym": [202, 204, 627], "get_library_nam": 202, "prisonersdilemma": 204, "reward_wrong_format": 204, "mlgymenv": [204, 627], "wrongli": 204, "cond": [205, 240, 241, 546], "random_prompt": 205, "edit_last_turn": 205, "zero_reward": 205, "undo_don": 205, "egocentr": 205, "reconsid": 205, "But": [205, 647], "wrong_answ": 205, "natalia": 205, "sold": 205, "48": 205, "friend": 205, "april": 205, "she": [205, 652], "72": 205, "altogeth": [205, 241], "undon": 205, "correct_answ": 205, "allowed_domain": [206, 645], "tool_nam": [206, 210, 212], "web": [206, 637, 645], "brows": [206, 645], "browser": [206, 645], "click": [206, 645], "llm_tool": 206, "clean": [206, 352, 357, 627], "use_ray_servic": [207, 209, 214], "mappabl": 207, "dataloader_factori": [207, 213], "unrel": 207, "raydataloadingprim": 207, "endless_dataload": [207, 213], "set_capture_non_tensor_stack": 207, "dummydataload": 207, "generate_random_str": 207, "ascii_lowercas": 207, "__next__": 207, "zxwvupirska": 207, "stringa": 207, "zxwvupirsk": 207, "roll": 207, "init_st": 207, "nngcmflsana": 207, "vrrbnhzpmga": 207, "nngcmflsan": 207, "vrrb": 207, "dummytensordataload": 207, "generate_random_tensor": 207, "pad_tensor": 207, "padding_length": 207, "data_spec": 207, "set_attr": 207, "gen_log_probs_full_kei": [208, 214], "ref_log_probs_full_kei": [208, 214], "ref_log_prob": [208, 214, 215, 429], "kl_kei": [208, 214], "kl_penalti": [208, 214], "add_to_reward": [208, 214], "coeff": [208, 214, 394, 409, 412], "padding_sid": [208, 209, 214, 215, 327, 354, 360, 365], "retrievelogprob": [208, 209, 214, 429], "retrievekl": [208, 209, 215], "pad_output": [208, 214, 215, 354, 357, 360, 365, 646], "gen_log_prob": [208, 214], "pad_sequ": [208, 209, 214, 215], "kl_transform": 208, "gen_log_probs_kei": 208, "ref_log_probs_kei": 208, "chathistori": [209, 214, 215, 360, 365, 627], "llmwrapperbas": [209, 214, 215, 360, 365, 426, 627], "ref_model_factori": [209, 214], "assistant_onli": [209, 214, 215, 429], "servic": [209, 214, 352, 361, 627], "actor_nam": [209, 213, 214, 357], "gen_model": [209, 214], "klcomput": [209, 214, 215], "tool_schema": 210, "mcp": 210, "protocol": 210, "pattern": [210, 627, 630], "schema": 210, "add_numb": 210, "add_schema": 210, "successfulli": [210, 212, 627, 645, 646], "version_typ": 211, "period": [211, 298], "llmcollector": [211, 214, 354, 360, 365, 627], "tracker": [211, 254], "new_weight": 211, "current_vers": 211, "uuid4": 211, "nprint": 212, "reus": [213, 300, 305, 460, 627], "create_dataload": 213, "primer1": 213, "primer2": 213, "missing_toler": [213, 217, 282], "reset_par": [213, 284], "set_contain": [213, 284], "from_collector": 214, "get_new_vers": [214, 354, 357, 360, 365], "gen_model_factori": 214, "consciou": [214, 215], "identif": [214, 215], "history_kei": [214, 360, 365], "tokenizer_kwarg": [214, 215, 354, 360, 365, 429], "assit": [214, 215, 429], "rayretrievekl": 214, "optconfig": [214, 215, 429], "optforcausallm": [214, 215, 429], "weather": [214, 215, 429], "facebook": [214, 215, 429], "opt": [214, 215, 429, 627], "125m": [214, 215, 429], "return_log_prob": [214, 215, 255, 360, 365, 370, 371, 372, 378, 382, 384, 414, 429, 527, 628, 635, 639, 646, 648, 649, 654], "log_probs_kei": [214, 215, 354, 357, 360, 365], "chat_histori": [214, 215, 360, 365], "log_probs_full_kei": 215, "batchabl": 215, "use_raw_nontensor": [217, 253, 282, 286], "additional_token": [217, 282], "skip_special_token": [217, 282, 354, 360, 365], "add_special_token": [217, 282], "return_attention_mask": [217, 282], "call_before_reset": [217, 282], "test_input_spec": [217, 286], "list_of_tensordict": [218, 219], "unsqueeze_null_shap": 220, "dynamic_shap": 220, "model_bas": [221, 222, 299, 326], "model_based_env": [221, 403], "dreamerenv": [221, 403, 625], "model_based_env_ev": 221, "spec_typ": 223, "convert_specnam": 223, "remap_state_to_observ": 223, "spectyp": 223, "unus": 223, "probabilistictdmodul": [224, 324, 378, 382, 432, 466], "keep_oth": [226, 650], "exclude_reward": 226, "exclude_don": 226, "next_": 226, "write_full_fals": 227, "_terminated_or_trunc": 227, "num_interv": [228, 534], "out_action_kei": [228, 534], "samplingstrategi": 228, "optino": 228, "intenum": 228, "action_disc": 228, "masker": 229, "finit": [229, 249, 339, 639, 652], "maskedenv": 229, "ones_lik": [229, 327], "scatter": 229, "fill_float": [231, 536], "fill_int": [231, 536], "fill_bool": [231, 536], "someenvclass": 231, "autoresetenv": 231, "fooenv": 231, "sign": [231, 273, 433, 648], "envtyp": 231, "reshape_fn": [232, 537, 637], "reset_func": [232, 537], "tensordict_batch_s": 232, "tensordict_reset": [232, 650], "biner": 233, "burn_in": [234, 539], "burn": 234, "burnt": 234, "gru_modul": [234, 318, 389], "input_s": [234, 278, 316, 317, 318, 321, 322, 323, 389, 636, 637], "hidden_s": [234, 278, 316, 317, 318, 321, 322, 323, 389, 636, 637], "default_recurrent_mod": [234, 318, 323], "burn_in_transform": 234, "gru": [234, 278, 317, 318, 389, 637], "num_lay": [234, 316, 318, 321, 323, 334, 335, 389, 637], "86": 234, "3008": 234, "0344": 234, "padding_valu": [235, 327, 328, 354, 360, 365], "as_invers": 235, "movement": [235, 412], "1312": 235, "5602": 235, "consumpt": [235, 625], "pictur": 235, "pixels_trsf": [235, 652], "grayscal": [235, 557, 634, 636, 637, 652, 655], "data_exclud": [235, 652], "make_rb_transform_and_sampl": 235, "sampler_kwarg": 235, "redund": [235, 627, 636], "del_kei": [236, 275, 288, 647, 650], "unsqueeze_if_oor": 236, "observation_posit": 236, "observation_veloc": 236, "center": [237, 339, 453, 608], "width": [237, 242, 267, 542, 547], "scalar": [238, 269, 297, 306, 308, 315, 332, 333, 340, 388, 392, 393, 394, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 426, 429, 431, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 465, 628, 634, 640, 650], "rewardsc": [239, 285, 575, 633, 634, 636], "rewardclip": [239, 574], "transform_list": 239, "condition": 240, "switch": [240, 285, 293, 319, 349, 451, 630, 646], "met": [240, 241, 391, 648, 650], "unalt": 240, "criteria": [240, 360], "policy_switch": 240, "step_count_tot": 240, "step_count_main": 240, "0322": 240, "1540": 240, "0111": 240, "3190": 240, "0299": 240, "1544": 240, "0181": 240, "3280": 240, "0276": 240, "1550": 240, "0255": 240, "3414": 240, "0253": 240, "1558": 240, "0334": 240, "3596": 240, "0230": 240, "1569": 240, "0422": 240, "3828": 240, "0206": 240, "1582": 240, "0519": 240, "4117": 240, "1598": 240, "0629": 240, "4469": 240, "0156": 240, "1617": 240, "0753": 240, "4891": 240, "0130": 240, "1639": 240, "0895": 240, "5394": 240, "0104": 240, "1665": 240, "1058": 240, "5987": 240, "0076": 240, "1696": 240, "1246": 240, "6685": 240, "0047": 240, "1732": 240, "1463": 240, "7504": 240, "0016": 240, "1774": 240, "1715": 240, "8459": 240, "0020": 240, "0150": 240, "1884": 240, "6117": 240, "0017": 240, "2071": 240, "3838": 240, "0105": 240, "2115": 240, "5110": 240, "exectu": 241, "palliat": [241, 639], "inner_count": 241, "middle_env": 241, "middle_count": 241, "auto_unwrap": [241, 285, 461, 501], "9670": 241, "2546": 241, "9669": 241, "9802": 241, "1981": 241, "1601": 241, "9926": 241, "1214": 241, "5556": 241, "9994": 241, "7622": 241, "9984": 241, "0561": 241, "7933": 241, "9895": 241, "1445": 241, "7779": 241, "dtype_in": 243, "dtype_out": 243, "scan": [243, 246, 383, 384], "resp": [243, 246], "not_transform": [243, 246], "orig_devic": 244, "unspecifi": 244, "num_actions_effect": 245, "max_act": 245, "include_forward": 245, "num_act": [245, 303, 401, 550, 637, 639], "action_out": 245, "eol_kei": [247, 552], "lives_kei": [247, 552], "eol_attribut": [247, 552], "breakout": 247, "210": [247, 261], "160": [247, 261], "eol_transform": 247, "eol": 247, "dqnloss": [247, 392, 393, 395, 396, 399, 401, 402, 403, 407, 408, 410, 412, 413, 414, 415, 416, 417, 418, 419, 426, 429, 431, 616, 625, 629, 634, 636, 637, 643], "register_kei": 247, "loss_or_advantag": 247, "lossmodul": [247, 472, 477, 618, 619, 625, 629], "valueestimatorbas": [247, 410, 426, 429, 625], "first_dim": 250, "last_dim": 250, "allow_positive_dim": [250, 275, 287], "frameskip": 250, "repeatedli": [251, 635, 649], "hash_fn": 253, "repertoir": 253, "reproducible_hash": 253, "unarytransform": [253, 590], "observation_str": 253, "tobyt": [253, 286], "observation_hash": 253, "x08": 253, "x8b": 253, "xbexav": 253, "xbf": 253, "x00": 253, "xee": 253, "xb5": 253, "x17": 253, "x8f": 253, "xbe": [253, 286], "x88": 253, "xccu": 253, "xc0vr": 253, "get_input_from_hash": 253, "hash_tensor": 253, "init_kei": [254, 377], "log_prob_kei": [255, 357, 382, 629], "pi_curr": 255, "pi_0": 255, "overfit": 255, "probabilist": [255, 378, 392, 412, 625, 635, 654], "get_dist": [255, 354, 357, 360, 365, 382, 383], "normalparamextractor": [255, 370, 371, 372, 378, 384, 392, 393, 395, 401, 408, 412, 413, 414, 415, 417, 418, 628, 635, 639, 649, 654], "probabilisticactor": [255, 370, 371, 372, 373, 392, 393, 395, 398, 400, 401, 408, 411, 412, 413, 414, 415, 417, 418, 628, 633, 635, 639, 648, 649], "tanhnorm": [255, 370, 371, 372, 378, 384, 392, 393, 395, 408, 412, 413, 414, 415, 417, 418, 527, 625, 635, 649, 654], "apply_": 255, "copy_": [255, 633], "mogymwrapp": [256, 625], "mo_env": 256, "sea": 256, "treasur": 256, "so_env": 256, "stack_reward": [257, 562], "stack_observ": [257, 562], "auto_batch_size_": 257, "macro": [257, 377], "trial": 258, "standard_norm": [259, 270, 292, 293, 565, 575, 633, 634, 636], "affin": [259, 270, 292, 293], "recover": 259, "set_default_tensor_typ": 259, "doubletensor": 259, "isclos": 259, "init_stat": [259, 633, 634, 635, 636], "3752e": 259, "5087e": 259, "9294e": 259, "9636": 259, "5608": 259, "6408": 259, "num_it": [259, 634, 635], "reduce_dim": [259, 633, 634, 635, 636], "cat_dim": [259, 633, 634, 635, 636], "keep_dim": [259, 377, 634, 636], "statist": [259, 292, 293, 298, 352, 361, 414, 476, 477, 623, 633, 634, 635, 655], "gaussian": [259, 278, 297, 299, 326, 332, 333, 338, 635, 637, 648], "empir": [259, 299, 326, 378, 382, 633, 635, 649], "3d": [259, 302], "reorder": 261, "in_keys_in": [261, 287], "channel": [261, 281, 329, 334, 335, 634], "r3m": [263, 568, 651], "resnet": [263, 288, 290], "ego4d": [263, 288, 290], "univers": [263, 288, 290, 360, 638], "suraj": [263, 288], "nair": [263, 288], "aravind": [263, 288], "rajeswaran": [263, 288], "vikash": [263, 288, 290], "kumar": [263, 288, 290], "chelsea": [263, 288], "finn": [263, 288], "abhinav": [263, 288], "gupta": [263, 288], "2203": [263, 288, 326, 651], "12601": [263, 288, 651], "_init": [263, 288, 633], "resnet50": [263, 290, 651], "model_nam": [263, 288, 290, 352, 361, 362, 456, 568], "resnet34": 263, "resnet18": [263, 568], "r3m_vec": [263, 651], "stack_imag": [263, 290], "tread": [263, 290], "hub": [263, 290, 638], "resnet50_weight": [263, 290], "imagenet1k_v1": [263, 290], "download_path": [263, 290], "tensor_pixels_kei": [263, 290], "sub_seq_len": 264, "sample_dim": [264, 633], "hesit": 264, "mix": [264, 341, 350, 431, 627, 633, 648, 649], "improp": 264, "dummyenv": 265, "another_oth": 265, "other_reward": 265, "create_copi": 266, "stuff": [266, 641], "newnam": 266, "r2g": 268, "reward_to_go": 268, "bernoulli_": 268, "9010": 268, "9404": [268, 439], "9701": [268, 439], "9900": [268, 439], "0000": [268, 279, 280, 315, 339, 385, 439], "clamp_min": [269, 574], "clamp_max": [269, 574], "clip_min": 269, "clip_max": 269, "episode_": 271, "reward1": 271, "reward2": 271, "episode_reward": [271, 648, 649], "keep_reward": 272, "keep_don": 272, "logical_or": 273, "in_key_inv": 275, "unstack": 275, "update_don": [276, 581], "disjunct": 276, "recognis": 276, "target_return": [277, 582], "default_valu": [278, 389], "expand_spec": 278, "single_default_valu": 278, "call_before_env_reset": 278, "unit": [278, 299, 313, 316, 317, 334, 335, 343, 344, 635], "scala": 278, "mykei": 278, "__unless": 278, "exists__": 278, "get_primers_from_modul": [278, 301, 318, 323, 625], "recurrent_st": [278, 318, 323, 389, 636], "10th": 279, "0216": 279, "1149": 279, "1990": 279, "2749": 279, "3281": 279, "9290": 279, "3702": 279, "8978": 279, "time_kei": [280, 585], "elaps": [280, 642], "monitor": [280, 352, 354, 360, 365, 394, 412, 474, 476, 627, 638], "expend": 280, "_polici": 280, "time_reset": 280, "time_polici": 280, "time_step": [280, 322, 377], "0882": 280, "0002": 280, "5797e": 280, "6289e": 280, "7990e": 280, "0824e": 280, "0837e": 280, "6056e": 280, "2016e": 280, "1062e": 280, "7009e": 280, "from_int": [281, 586], "shape_toler": [281, 586], "ri": 281, "traj_count": [283, 588], "traj": 283, "countingenv": 283, "make_env_c0": 283, "make_env_c1": 283, "smoothli": [285, 298], "add_1": 285, "cache_spec": [285, 501], "shown": [285, 330, 627, 628, 637, 645, 647, 648, 649, 652], "inv_fn": 286, "unari": 286, "durin": 286, "ommit": 286, "observation_trsf": 286, "xbc": 286, "x7f": 286, "x859": 286, "x81": 286, "x9a": 286, "xbd": 286, "xb8t8": 286, "test_output_spec": 286, "danger": 287, "vc1": [288, 592], "vc1_vec": 288, "untrain": 288, "make_noload_model": 288, "vip": [289, 290, 593, 594, 651], "implicit": [290, 400, 408, 652], "jason": 290, "ma": 290, "shagun": 290, "sodhani": 290, "dinesh": 290, "jayaraman": 290, "osbert": 290, "bastani": 290, "ami": 290, "zhang": 290, "vip_vec": 290, "final_nam": 291, "sb3": 291, "terminal_obs_read": 291, "vecnormv2": [292, 597], "new_api": [292, 293], "to_observation_norm": [292, 293], "frozen_copi": [292, 293], "shared_td": 292, "race": 292, "decai": [292, 293, 297, 315, 416, 469, 596, 597, 633, 634, 636, 655], "underflow": [292, 469], "build_td_for_shared_vecnorm": 292, "memmori": 292, "td_share": 292, "unfreez": [292, 293], "train_env": 292, "eval_env": 292, "9999": 293, "shared_data": 293, "reduce_batch_dim": 293, "varianc": [293, 298, 299, 300, 319, 348, 349, 412, 629, 633, 635, 649], "vs": [293, 296, 354, 360, 365], "weigh": 293, "_cast_int_to_float": 293, "env_trsf": 293, "observation_norm": 293, "reward_norm": [293, 469], "unnorm": [293, 320, 327, 328, 336], "7967": 293, "1238": 293, "5911": 293, "5275": 293, "8585": 293, "5028": 293, "2505": 293, "3169": [293, 385], "1332": 293, "1235": 293, "6596e": 293, "3072e": 293, "9170e": 293, "9255e": 293, "9131e": 293, "4671e": 293, "3760e": 293, "2058e": 293, "3484e": 293, "6185e": 293, "1456": 293, "1862": 293, "2053": 293, "2605": 293, "4046": 293, "5185": 293, "8023": 293, "1364": 293, "6183": 293, "5406": 293, "0920": 293, "1492": 293, "2702": 293, "3917": 293, "5001": 293, "7947": 293, "0160": 293, "3347": 293, "9082": 293, "9679": 293, "2199": 293, "2918": 293, "1668": 293, "2083": 293, "4981": 293, "5046": 293, "7950": 293, "9791": 293, "1484": 293, "4182": 293, "2201": 293, "0403": 293, "5206": 293, "7791": 293, "8282": 293, "2279": 293, "2907": 293, "4929": 293, "7793": 293, "8626": 293, "1832": 293, "local_env": 293, "testifi": 293, "4307": 293, "9613": 293, "state_dim": [294, 304, 309, 338, 343, 344, 373], "action_dim": [294, 304, 305, 307, 309, 338, 373, 633, 647], "gsde": [294, 413, 623], "gsdemodul": 294, "rb_transform": [295, 563], "resist": 295, "insensit": 295, "sensit": [295, 634, 636], "_orig": 295, "95": [295, 326, 421, 635, 636], "window": [295, 377, 648, 652, 654], "module_nam": [296, 410, 426, 429], "from_vers": 296, "to_vers": 296, "class_method": 296, "import_modul": 296, "get_class_that_defined_method": 296, "module_set": 296, "setters_dict": 296, "setter": 296, "setter_dict": 296, "po": 297, "sigma_init": [297, 648], "sigma_end": [297, 648], "annealing_num_step": [297, 315, 340, 633, 634, 636, 637, 639, 643, 648], "sigma": [297, 316, 317, 319, 321, 322, 340, 348, 349, 429, 635, 648], "omiss": [297, 315, 340], "momentum": [298, 608, 610], "max_r": 298, "max_d": 298, "warmup_step": 298, "batchrenorm": 298, "1702": 298, "03275": 298, "corenet": 298, "enhanc": [298, 630], "warmup": 298, "phase": [298, 300, 649, 652], "outlier": 298, "warm": 298, "renorm": 298, "entropi": [299, 320, 327, 336, 392, 393, 394, 395, 400, 401, 408, 409, 411, 412, 413, 415, 417, 418, 426, 427, 476, 477, 630, 649], "botev": 299, "2013": 299, "cem": 299, "maximis": [299, 305, 307, 326, 634, 635, 649], "modelbasedenv": [299, 326], "planning_horizon": [299, 326], "mpc": [299, 325, 326], "num_candid": [299, 326], "candid": [299, 326], "top_k": [299, 326, 354, 360, 365], "modelbasedenvbas": [299, 325, 326, 625], "safemodul": [299, 325, 370, 372, 382, 392, 393, 395, 400, 401, 408, 412, 413, 414, 415, 417, 418, 614, 615, 619, 625, 654], "hausknecht": 300, "wagen": 300, "consistentdropoutmodul": [300, 628], "conceptu": 300, "devianc": 300, "set_exploration_typ": [300, 410, 466, 625, 628, 635, 636, 637, 639, 648, 654], "_main_async_collector": 300, "asyncdatacollector": [300, 478, 625], "ditto": 300, "consistentdropout": 301, "input_shap": 301, "batcht": 301, "make_tensordict_prim": [301, 318, 323, 636], "input_dtyp": 301, "get_default_dtyp": [301, 469], "mask_6127171760": 301, "env0": [301, 655], "elu": [302, 303, 305, 306, 307, 308, 313, 314, 329, 634, 654], "activation_kwarg": [302, 303, 324, 523, 524], "norm_class": [302, 303, 305, 306, 324, 523, 524], "norm_kwarg": [302, 303, 324, 523, 524], "bias_last_lay": [302, 303, 305, 306, 307, 308, 314, 324, 523, 524], "aggregator_class": [302, 303, 305, 306, 523, 634, 636, 654], "squashdim": [302, 303, 305, 314, 329, 654], "aggregator_kwarg": [302, 303, 305, 306, 523, 634, 636], "squeeze_output": [302, 303, 305, 306, 523, 634, 636], "cell": [302, 303, 316, 317, 318, 321, 322, 323, 324, 329, 330, 635, 637, 638, 639, 640, 641, 642, 643], "kernel": [302, 303, 329], "cnet": [302, 303], "conv3d": 302, "lazyconv2d": [303, 305, 306, 314, 329], "default_atari_dqn": [303, 637], "semin": 303, "transformer_config": [304, 338, 373], "decisiontransform": [304, 338], "dtconfig": [304, 309, 338], "2202": [304, 309, 411], "05607": [304, 309, 411], "return_to_go": [304, 309, 338, 373], "conv_net_kwarg": [305, 306], "mlp_net_kwarg": [305, 306, 307], "use_avg_pool": [305, 306], "WITH": [305, 306, 307, 308, 340, 416], "1509": [305, 306, 307, 308, 326, 340, 397, 407, 416], "02971": [305, 306, 307, 308, 340, 416], "ndims_in": 305, "avgpool": [305, 306], "lazylinear": [305, 306, 307, 308, 314, 324, 628, 635, 639, 650, 651], "2304": 305, "adaptiveavgpool2d": [306, 634, 636], "output_s": [306, 634, 636], "squeeze2dlay": 306, "400": [307, 308, 649], "mlp_net_kwargs_net1": 308, "mlp_net_kwargs_net2": 308, "mlp1": 308, "mlp2": 308, "desdescrib": 309, "n_embd": 309, "n_layer": [309, 316, 321], "n_head": 309, "n_inner": 309, "n_posit": 309, "resid_pdrop": 309, "attn_pdrop": 309, "gpt2config": 309, "atol": [310, 347], "rtol": [310, 347], "batch_shap": [310, 336, 347], "event_shap": [310, 347], "absolut": [310, 347, 633], "_instanc": 310, "densiti": [310, 327, 328, 336, 349], "mass": [310, 327, 328, 336, 349, 650], "rsampl": [310, 320, 328, 336, 382], "sample_shap": [310, 320, 327, 328, 336], "softmax": [311, 328, 336, 374, 375], "var_num": [312, 342, 374, 375, 380], "action_value_kei": [312, 342, 374, 375, 379, 380, 395, 410, 426, 429, 431], "action_mask_kei": [312, 315, 342, 374, 375, 379, 380], "1707": [312, 375, 402, 412], "06887": [312, 375, 402], "mult": [312, 330, 342, 374, 375, 379, 380], "tensordict_modul": [312, 316, 317, 321, 322, 342, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392, 393, 395, 396, 400, 401, 408, 412, 413, 414, 415, 417, 418, 628], "nbin": [312, 374, 628], "customdistributionalqv": 312, "log_softmax": [312, 374], "qvalue_actor": [312, 342, 374, 379, 628], "std_bia": 313, "std_min_val": 313, "belief": [313, 334, 343, 344], "1912": [313, 403, 404, 405], "01603": [313, 403, 404, 405], "softplu": [313, 388, 390, 391], "out_features_valu": 314, "cnn_kwarg": [314, 634], "mlp_kwarg": [314, 634], "duel": 314, "cnn": [314, 329, 634, 637, 639, 654], "06581": 314, "greedi": [315, 342, 354, 360, 365, 375, 380, 634, 636, 637, 639], "eps_init": [315, 340, 634, 636, 637, 639, 643], "eps_end": [315, 340, 634], "explorative_polici": [315, 340], "9055": 315, "9277": 315, "6295": 315, "2532": 315, "grad_fn": [315, 369, 382], "addbackward0": 315, "batch_first": [316, 321, 636], "bidirect": [316, 321, 636], "cudnn": [316, 317, 318, 321, 322, 323, 636, 637], "rnn": [316, 317, 318, 321, 322, 323, 368, 401, 415, 433, 636, 637, 639], "device_count": [316, 317, 321, 322, 655], "n_in": [316, 317, 321, 322], "n_out": [316, 317, 321, 322], "h0": [316, 317, 321, 322], "h1": [316, 317, 321, 322], "vectoris": [316, 317, 321, 322], "call_gru": [316, 317], "h_out": [316, 317, 321, 322], "batched_cal": [316, 317, 321, 322], "gate": [316, 317, 321], "r_t": 316, "w_": [316, 317, 321, 322], "ir": [316, 317], "x_t": [316, 321], "b_": [316, 317, 321, 322], "hr": [316, 317, 321], "h_": [316, 317, 321], "z_t": 316, "iz": [316, 317], "hz": [316, 317], "n_t": 316, "odot": [316, 317, 321, 322], "hn": [316, 317, 321], "h_t": [316, 321], "sigmoid": [316, 317, 321, 322], "hadamard": [316, 317, 321, 322], "multilay": [316, 321], "_t": [316, 321, 649, 650], "ge": [316, 321], "bernoulli": [316, 321], "b_ih": [316, 317, 321, 322, 323], "b_hh": [316, 317, 321, 322, 323], "h_0": [316, 321, 322], "pack_padded_sequ": [316, 321], "pack_sequ": [316, 321], "num": [316, 321, 643], "_layer": [316, 321], "_size": [316, 317, 321, 322], "h_n": [316, 321], "packedsequ": [316, 321], "weight_ih_l": [316, 321], "learnabl": [316, 317, 321, 322], "w_ir": 316, "w_iz": 316, "w_in": 316, "num_direct": [316, 321], "weight_hh_l": [316, 321], "w_hr": 316, "w_hz": 316, "w_hn": 316, "bias_ih_l": [316, 321], "b_ir": 316, "b_iz": 316, "b_in": 316, "bias_hh_l": [316, 321], "b_hr": 316, "b_hz": 316, "b_hn": 316, "mathcal": [316, 317, 321, 322], "sqrt": [316, 317, 321, 322, 340], "seq_len": [316, 321], "subtli": 316, "matrix": [316, 321, 332, 333], "hx": [316, 317, 321, 322], "lstmcell": [317, 323, 637], "gru_cel": 317, "weight_ih": [317, 322], "weight_hh": [317, 322], "bias_ih": [317, 322], "bias_hh": [317, 322], "rocm": [317, 322], "embedd": [318, 323], "grucel": [318, 381], "python_bas": [318, 323], "custom_kei": [318, 323], "hasn": [318, 323], "set_recurrent_mod": [318, 323, 636], "recurrent_mod": [318, 323, 368], "rs": [318, 633], "gru_module_train": 318, "policy_train": [318, 429], "traj_td": 318, "make_cudnn_bas": [318, 323], "make_python_bas": [318, 323, 637], "supplementari": [318, 323, 635, 655], "That": [318, 323, 635, 648], "dealt": [318, 323], "poorli": [318, 323], "meth": [318, 323, 410, 650], "data_collector": [318, 323, 634], "upscal": [319, 348, 349], "tanh_loc": [319, 348, 349], "event_dim": [319, 347, 348], "poor": [319, 348, 349], "explos": [319, 348, 349], "ignore_index": 320, "50000": 320, "inf": [320, 327, 328], "test_distribut": 320, "clear_cach": 320, "masked_dist": 320, "masked_logit": 320, "position_level_mask": 320, "proj_siz": 321, "c0": [321, 322], "c1": [321, 322], "call_lstm": [321, 322], "c_out": [321, 322], "i_t": 321, "ii": [321, 322], "hi": [321, 322, 360, 365, 627], "f_t": 321, "hf": [321, 322, 627], "g_t": 321, "ig": [321, 322], "hg": [321, 322], "o_t": 321, "ho": [321, 322], "c_t": 321, "c_": 321, "1402": 321, "1128": 321, "c_0": [321, 322], "proj": 321, "c_n": 321, "w_ii": 321, "w_if": 321, "w_ig": 321, "w_io": 321, "w_hi": 321, "w_hf": 321, "w_hg": 321, "w_ho": 321, "b_ii": 321, "b_if": 321, "b_ig": 321, "b_io": 321, "b_hi": 321, "b_hf": 321, "b_hg": 321, "b_ho": 321, "weight_hr_l": 321, "_revers": 321, "analog": [321, 639], "cn": 321, "lstm_cell": 322, "h_1": 322, "c_1": 322, "cx": 322, "recurrent_state_h": 323, "recurrent_state_c": 323, "triplet": [323, 379, 380], "lstm_modul": 323, "rs_h": 323, "rs_c": 323, "single_bias_last_lay": [324, 524], "layer_class": [324, 524], "layer_kwarg": [324, 524], "perceptron": [324, 524, 639], "noisylinear": [324, 332, 625, 634], "noisylazylinear": [324, 625], "mpcplanner": 325, "tensordict_out": [325, 354, 360, 365, 655], "mppi": 326, "covari": 326, "william": [326, 414], "aldrich": 326, "theodor": 326, "01149": 326, "hansen": 326, "wang": 326, "su": 326, "04955": 326, "valueoper": [326, 370, 371, 372, 392, 393, 394, 395, 396, 401, 408, 409, 412, 413, 414, 415, 417, 418, 529, 619, 628, 633, 635, 640], "tdlambdaestim": [326, 625, 633], "value_net": [326, 397, 399, 414, 433, 434, 435, 436, 635, 637, 639, 640, 643], "adv": 326, "lmbda": [326, 421, 433, 436, 438, 444, 445, 446, 449, 450, 629, 633, 635, 649], "temperatur": [326, 352, 354, 360, 365, 393, 400, 408, 627], "neg_inf": [327, 328], "use_cross_entropi": 327, "api_doc": [327, 328], "tf_agent": [327, 328], "sparse_mask": [327, 328], "cross_entropi": 327, "1203": [327, 328], "0928": [327, 328], "0831": [327, 328], "1972": [327, 328], "grad_method": [328, 336], "reparamgradientstrategi": [328, 336], "passthrough": [328, 336], "relaxedonehot": [328, 336], "sample_non_valid": 328, "zeros_lik": [328, 650], "share_param": [329, 330, 331, 648, 649], "use_td_param": [329, 330, 331], "get_stateful_net": [329, 330, 331, 410, 426, 429, 628, 629], "from_stateful_net": [329, 330, 331, 410, 426, 429, 629], "homogen": [329, 330, 648, 649], "_empty_net": [329, 330], "roughli": [329, 330, 654], "agent_network": [329, 330], "modulelist": [329, 330], "2592": 329, "decentr": 329, "n_agent_input": [330, 331, 648, 649], "n_agent_output": [330, 331, 648, 649], "toech": 330, "centalis": 330, "agent_dim": 331, "vmap_random": [331, 410, 420, 426, 429, 629], "stateful_net": [331, 410, 426, 429], "Such": [331, 410, 426, 429], "multiagentmlp": [331, 648, 649], "snet": 331, "hasattr": [331, 627, 633], "kaiming_normal_": 331, "std_init": [332, 333], "initialize_paramet": 332, "isol": [332, 410, 426, 429, 627, 637], "1706": [333, 350], "10295v3": 333, "induc": [333, 382], "aid": 333, "1803": [334, 335, 341], "10122": [334, 335], "rnn_hidden": 334, "latent": 335, "ordin": [337, 625], "parametris": [337, 339], "inres": 338, "mu": [338, 340, 635], "impos": [339, 628], "proxim": [339, 412, 476, 532, 630, 635, 649], "atom": 339, "tang": 339, "agraw": 339, "2020": 339, "1901": 339, "10500": 339, "discretis": 339, "num_atom": 339, "num_sampl": [339, 354, 357, 360, 365], "middl": 339, "optimis": [339, 648, 649], "minimis": 339, "penalis": 339, "0308": 339, "1586": 339, "4727": 339, "2260": 339, "1120": 339, "histogram": 339, "return_typ": 339, "hist": [339, 652], "158": 339, "478": 339, "228": 339, "112": 339, "bin_edg": 339, "8000": 339, "6000": 339, "4000": 339, "ornstein": [340, 633, 637], "uhlenbeck": [340, 633, 637], "ou": [340, 633], "correl": 340, "noise_t": 340, "noise_": 340, "theta": [340, 635, 650], "sigma_t": 340, "sigma_": 340, "ou_prev_nois": 340, "ou_step": 340, "x0": 340, "sigma_min": 340, "n_steps_ann": 340, "is_init_kei": 340, "_ou_prev_nois": 340, "_ou_step": 340, "state_shap": [341, 431], "mixing_embed_dim": [341, 431], "qmix": [341, 648, 649], "mixer": [341, 350, 431], "monoton": 341, "hyper": 341, "11485": 341, "qmixerloss": [341, 350], "qmix_vdn": [341, 350], "vdn": [341, 350], "hidden_dim": [343, 344], "scale_lb": [343, 344, 527], "posterior": [343, 404], "rssm": [343, 344, 404], "1811": [343, 344], "04551": [343, 344], "obs_embed": 343, "rnn_hidden_dim": 344, "dream": 344, "safe_tanh": 348, "tanhtransform": 348, "overflow": [348, 369, 374, 375, 378, 379, 380, 381, 382], "get_mod": [348, 382], "decomposit": 350, "05296": 350, "hide": [351, 635, 648, 649], "satisfi": [351, 628], "vmap_dim": 351, "lam": 351, "sample_in": 351, "sample_in_td": 351, "vm": 351, "engine_arg": 352, "asyncenginearg": [352, 361], "num_replica": [352, 361, 365, 627], "actor_class": 352, "enable_prefix_cach": 352, "replica": [352, 361, 365, 627], "unifi": [352, 365, 627, 630, 646, 655], "placement": [352, 627], "vllm_async": 352, "samplingparam": [352, 627], "num_devic": [352, 361, 362, 627], "max_model_len": [352, 627], "4096": [352, 627], "sampling_param": [352, 361, 627], "max_token": [352, 354, 360, 365, 627], "tensor_parallel_s": 352, "actor_index": 352, "cleanup": [352, 365, 627], "grace": 352, "fault": [352, 627], "resili": 352, "collective_rpc": 352, "create_load_balanc": 352, "kv": 352, "robin": [352, 491], "loadbalanc": 352, "rout": 352, "smart": 352, "lb": 352, "selected_actor_index": 352, "select_actor": 352, "hierarchi": 352, "prefix_length": 352, "overload_threshold": 352, "prompt_token_id": 352, "use_tqdm": 352, "lora_request": 352, "prompt_adapter_request": 352, "guided_options_request": 352, "timeout_second": 352, "requestoutput": 352, "tokensprompt": 352, "lora": 352, "get_cache_usag": 352, "fraction": [352, 392, 394, 412], "get_master_address": 352, "get_master_port": 352, "get_num_unfinished_request": 352, "unfinish": 352, "get_random_actor_index": 352, "init_weight_update_group": 352, "asyncvllmengineservic": 352, "asyncllmengin": 352, "parameter_nam": 352, "logprob": [354, 360, 365, 627, 646], "input_kei": [354, 360, 365, 646], "attention_mask_kei": [354, 360, 365], "generate_kwarg": [354, 357, 360, 365, 627, 646], "num_return_sequ": [354, 360, 365], "top_p": [354, 360, 365], "nucleu": [354, 360, 365], "repetition_penalti": [354, 360, 365], "do_sampl": [354, 360, 365], "num_beam": [354, 360, 365], "beam": [354, 360, 365], "length_penalti": [354, 360, 365], "early_stop": [354, 360, 365], "stop_sequ": [354, 360, 365], "resolut": [354, 360, 365, 385], "pad_model_input": [354, 360, 365], "tokens_kei": [354, 357, 360, 365], "masks_kei": [354, 357, 360, 365], "ref_batch": [354, 360, 365], "min_batch_s": [354, 360, 365], "max_batch_s": [354, 360, 365], "batching_timeout": [354, 360, 365], "ref_transformers_wrapp": [354, 365], "ref_vllm_wrapp": [354, 360], "cleanup_batch": [354, 357, 360, 365, 627], "flush": [354, 360, 365], "cancel": [354, 360, 365], "pend": [354, 360, 365], "_batch_queu": [354, 360, 365], "logits_onli": [354, 360, 365], "get_batching_st": [354, 357, 360, 365], "logits_kei": [354, 360, 365], "llmmaskedcategor": [354, 625], "alter": [354, 357, 360, 365, 377, 410, 628], "weak": [354, 360, 365], "all_attention_mask": [356, 360, 365, 646], "all_assistant_mask": [356, 360, 365, 646], "max_concurr": [357, 627], "validate_model": 357, "automodelforcausallm": [357, 360, 646], "remote_wrapp": 357, "tensordict_input": 357, "dist_params_kei": 357, "dist_sample_kei": 357, "get_dist_with_prompt_mask": [357, 365], "wast": 360, "simpler": [360, 634, 638, 646], "unsur": 360, "overlong": 360, "tokenization_util": [360, 365], "output_scor": 360, "discourag": [360, 365, 635, 650], "pad_token_id": 360, "bad_words_id": 360, "force_words_id": 360, "no_repeat_ngram_s": 360, "gram": 360, "encoder_repetition_penalti": 360, "num_beam_group": 360, "diversity_penalti": 360, "return_dict_in_gener": 360, "ref_categorical_sequenti": [360, 365], "repeat_interleave_caus": 360, "sequence_length": [360, 373], "_create_block_diagonal_attention_mask": 360, "make_ray_work": 362, "enforce_eag": 362, "rayllmwork": 362, "localllmwrapp": 362, "world_siz": [363, 364], "statelessprocessgroup": [363, 364], "plane": [363, 364], "pyncclcommun": [363, 364], "async_engin": [365, 627], "presence_penalti": 365, "frequency_penalti": 365, "ignore_eo": 365, "prompt_logprob": 365, "detoken": 365, "include_stop_str_in_output": 365, "spaces_between_special_token": 365, "sampling_typ": 365, "temperature_last": 365, "top_p_last": 365, "top_k_last": 365, "assistant_mask_kei": 365, "set_token": 365, "defer": 365, "translat": [369, 378], "character": [369, 374, 378, 379, 381, 652], "td_modul": [369, 370, 371, 372, 378, 381, 382, 384, 386, 639, 654], "3635": 369, "0340": 369, "1476": 369, "3911": 369, "1664": 369, "5455": 369, "2247": 369, "4583": 369, "2916": 369, "2160": 369, "5337": 369, "5193": 369, "addmmbackward0": 369, "actorvalueoper": [370, 394, 409, 412, 628, 639], "get_policy_oper": [370, 371, 372, 394, 409, 412, 628], "standalon": [370, 371, 372, 637, 639], "tdmodul": [370, 371, 372, 619], "get_critic_oper": 370, "common_oper": [370, 372], "policy_oper": [370, 371, 372], "value_oper": [370, 371, 372], "module_hidden": [370, 372], "td_module_hidden": [370, 372], "module_act": [370, 372], "td_module_act": [370, 371, 372], "module_valu": [370, 371, 372], "td_module_valu": [370, 371, 372], "state_action_valu": [370, 386, 393, 395, 400, 408, 415, 432, 619, 628, 633, 648, 654], "td_clone": [370, 371, 372], "tensordictmodulewrapp": [370, 614, 615, 619], "get_policy_head": [370, 371, 372], "safesequenti": [370, 371, 372, 431], "head": [370, 372, 382, 389, 394, 409, 412, 625], "get_value_head": [370, 371, 372], "get_value_oper": [370, 371, 372, 394, 409, 412], "action_modul": 371, "actorcriticoper": [372, 628, 639], "actorcriticwrapp": [372, 628, 633], "inferec": 373, "set_tensor_kei": 373, "dt_inference_wrapp": 373, "baz": 373, "inference_context": 373, "obs_dim": 373, "tanhdelta": [373, 625, 633, 648], "dtactor": 373, "actor_modul": [373, 654], "dist_class": 373, "dist_kwarg": 373, "distribution_kwarg": [373, 378, 382, 635, 648, 649], "inference_actor": 373, "mask_context": 373, "out_act": 373, "qvaluemodul": [374, 379, 431, 636, 637, 639, 643], "distributionaldqnnet": 374, "make_log_softmax": 374, "my_action_valu": [375, 380], "chanc": 375, "lmheadmodel": 376, "actor_head": [376, 394, 409, 412], "base_model": 376, "lm_head": 376, "lookahead": 377, "reshape_cat": 377, "actor_bas": 377, "obs_cat": 377, "obs_cat_reshap": 377, "action_orig": 377, "multistepenvwrapp": 377, "ego": 377, "default_interaction_typ": [378, 382, 639], "interaction_typ": [378, 382], "set_interaction_typ": [378, 382], "compositedistribut": [378, 382, 392, 412, 629, 639], "distribution_map": [378, 382], "name_map": [378, 382], "cache_dist": [378, 382], "n_empirical_estim": [378, 382], "compound": [378, 639], "chose": 380, "functionalmodul": 381, "functionalmodulewithbuff": 381, "td_fmodul": 381, "td_function": 381, "td_state": 381, "params_repeat": 381, "td_vmap": [381, 384], "random_sampl": [381, 382], "suppli": 382, "paliat": 382, "get_median": 382, "get_mean": 382, "sample_key_nam": 382, "_log_prob": 382, "composite_lp_aggreg": 382, "clampbackward0": 382, "anihil": 382, "probabilistictensordictsequenti": [383, 392, 394, 409, 412, 414, 614, 615, 629, 654], "partial_toler": [383, 384, 647], "AND": [383, 384, 395], "tensordictsequ": 384, "safeprobabilisticmodul": [384, 628], "spec1": 384, "net1": 384, "module1": 384, "td_module1": 384, "spec2": 384, "module2": 384, "td_module2": 384, "boundari": [385, 635, 637, 648, 649], "9944": 385, "9991": 385, "3020": 385, "2299": 385, "5418": 385, "2989": 385, "6849": 385, "2690": 385, "9649": 385, "5686": 385, "8602": 385, "0315": 385, "8455": 385, "6027": 385, "4746": 385, "7843": 385, "7782": 385, "2111": 385, "5115": 385, "4687": 385, "5760": 385, "custommodul": 386, "imaginari": 387, "imagin": 387, "transition_model": 387, "get_reward_oper": 387, "get_transition_model_oper": 387, "min_val": [388, 391], "_bia": 388, "expln": 391, "biased_softplu": [391, 625], "biased_softplus_": 391, "add_custom_map": 391, "1602": 392, "01783v2": 392, "entropy_bonu": [392, 394, 409, 412, 426, 531, 635], "favour": [392, 394, 409, 412, 426], "samples_mc_entropi": [392, 394, 409, 411, 412, 426, 531], "entropy_coeff": [392, 394, 409, 412, 426, 531], "critic_coeff": [392, 394, 409, 412, 426, 531], "loss_critic_typ": [392, 394, 409, 412, 414, 531, 635], "l1": [392, 394, 396, 397, 401, 409, 412, 413, 414, 417, 418, 422, 431, 628, 633], "l2": [392, 394, 396, 397, 398, 399, 401, 404, 405, 409, 412, 413, 414, 417, 418, 422, 431, 633, 648], "smooth_l1": [392, 393, 394, 395, 396, 397, 400, 401, 408, 409, 412, 413, 414, 415, 417, 418, 422, 431, 531, 635], "separate_loss": [392, 394, 395, 396, 400, 401, 408, 409, 412, 413, 414, 415, 417, 418, 531], "advantage_kei": [392, 394, 409, 412, 414, 426, 428, 433, 434, 435, 436, 531], "value_target_kei": [392, 394, 409, 412, 414, 433, 434, 435, 436, 531], "value_target": [392, 394, 409, 412, 414, 433, 434, 435, 436, 635, 649], "ddp": [392, 394, 409, 412, 414], "fsdp": [392, 394, 409, 412, 414], "divid": [392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 406, 408, 409, 411, 412, 413, 414, 415, 417, 418, 426, 612, 633, 648, 649, 650], "clip_valu": [392, 394, 409, 412, 414, 426, 531], "loss_crit": [392, 412, 426, 635, 649], "loss_entropi": [392, 412, 427, 635, 649], "loss_object": [392, 412, 427, 635, 649], "next_reward": [392, 393, 395, 396, 397, 399, 400, 401, 408, 412, 413, 414, 415, 417, 418, 433, 434, 435, 436], "next_don": [392, 393, 395, 396, 397, 399, 400, 401, 408, 412, 413, 414, 415, 417, 418, 433, 434, 435, 436], "next_termin": [392, 393, 395, 396, 397, 399, 400, 401, 408, 412, 413, 414, 415, 417, 418, 433, 434, 435, 436], "loss_obj": 392, "next_observ": [392, 393, 395, 396, 397, 399, 400, 401, 408, 412, 413, 414, 415, 417, 418, 647], "sacloss": [392, 407, 416, 471, 477, 625], "default_kei": [392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 411, 412, 413, 414, 415, 417, 418, 426, 429, 431, 437], "_acceptedkei": [392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 417, 418, 426, 429, 431, 437], "make_value_estim": [392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 419, 426, 429, 431, 629, 633, 634, 648, 649, 654], "value_typ": [392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 421, 426, 429, 431, 633], "hyperparam": [392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 426, 429, 431, 633], "enum": [392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 421, 426, 429, 431, 633], "default_value_estim": [392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 426, 429, 431, 633, 654], "default_value_kwarg": [392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 426, 429, 431, 625, 633], "dqn_loss": [392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 419, 426, 429, 431], "td1": [392, 393, 395, 396, 397, 399, 401, 402, 403, 408, 410, 412, 413, 414, 415, 417, 418, 426, 429, 431, 633], "conserv": [393, 399], "qvalue_network": [393, 395, 400, 401, 408, 413, 415, 417, 418, 471, 477], "unti": [393, 395, 408, 413, 415, 417, 418], "loss_funct": [393, 395, 396, 397, 398, 399, 400, 401, 408, 413, 415, 417, 418, 422, 429, 431, 633, 648], "alpha_init": [393, 395, 401, 411, 413, 415], "min_alpha": [393, 395, 401, 411, 413, 415], "max_alpha": [393, 395, 401, 411, 413, 415], "fixed_alpha": [393, 395, 401, 411, 413, 415], "target_entropi": [393, 395, 401, 411, 413, 415], "prod": [393, 395, 411, 415], "delay_actor": [393, 396, 415, 417, 418], "delay_qvalu": [393, 401, 413, 415, 417, 418], "min_q_weight": 393, "max_q_backup": 393, "backup": 393, "deterministic_backup": 393, "num_random": 393, "with_lagrang": 393, "lagrang": 393, "lagrange_thresh": 393, "deactivate_vmap": [393, 395, 401, 408, 413, 415, 417, 418, 433, 434, 435, 436], "valueclass": [393, 395, 396, 401, 413, 415, 417, 418], "qvalu": [393, 395, 400, 401, 408, 413, 415, 417, 418], "loss_actor": [393, 395, 396, 400, 401, 408, 413, 414, 415, 417, 418, 467, 633, 648], "loss_actor_bc": 393, "loss_alpha": [393, 395, 401, 413, 415], "loss_cql": [393, 399], "loss_qvalu": [393, 395, 399, 400, 401, 408, 413, 415, 417, 418], "loss_alpha_prim": 393, "ess": [394, 412, 426, 427], "clip_epsilon": [394, 426, 635, 649], "head_nam": [394, 409, 412], "ppo_entropy_coeffici": [394, 409, 412], "normalize_advantag": [394, 409, 412, 531, 649], "normalize_advantage_exclude_dim": [394, 409, 412, 531], "multiobject": [394, 409, 412], "value_kei": [394, 409, 412, 433, 434, 435, 436, 531, 633], "somemodul": [394, 409, 412], "someactor": [394, 409, 412], "value_head": [394, 409, 412], "somevalu": [394, 409, 412], "IN": 395, "FOR": 395, "simplic": [395, 634, 635, 641, 651, 652, 654], "openreview": [395, 413], "pczqttstix": 395, "qvalue_loss": [395, 401, 415, 417], "actor_loss": [395, 401, 415, 417], "alpha_loss": [395, 401, 415], "num_qvalue_net": [395, 400, 401, 408, 413, 415, 417, 418], "maybe_init_target_entropi": 395, "fault_toler": 395, "target_entropy_buff": 395, "delay_valu": [396, 397, 399, 402, 414, 415, 431, 634, 636, 637, 643, 648], "loss_valu": [396, 400, 408, 414, 415, 633, 635, 648, 649], "pred_valu": [396, 399, 417, 418, 633], "pred_value_max": [396, 633], "target_valu": [396, 399, 413, 417, 418, 432, 629, 633], "target_value_max": [396, 633], "qvalueactor": [397, 399, 431, 634, 636], "double_dqn": 397, "06461": [397, 407], "mult_one_hot": [397, 400, 401, 431], "loss_val": [397, 399, 429, 629, 633, 635, 636, 637, 640, 641, 643, 648, 649, 652], "01345": 398, "distanc": [399, 409, 422, 432, 433, 649], "dcql_loss": 399, "2110": [400, 408], "06169": [400, 408], "expectil": [400, 408], "tau": [400, 408, 416, 633, 634, 648], "antmaz": [400, 408], "sticht": [400, 408], "onehotcategor": [400, 401, 625], "target_entropy_weight": 401, "skip_done_st": [401, 415], "maxim": [401, 415, 598, 599, 600, 602, 608, 609, 610, 633, 640, 650], "disctount": 402, "distributionalqvalueactor": [402, 628], "input_tensordict": [402, 633], "actor_model": 403, "imagination_horizon": 403, "discount_loss": [403, 405], "lambda_kl": 404, "lambda_reco": 404, "lambda_reward": 404, "reco_loss": 404, "reward_loss": 404, "free_nat": 404, "nat": 404, "delayed_clamp": 404, "global_averag": 404, "value_loss": [405, 415], "fake_data": 405, "1606": 406, "03476": 406, "discriminator_network": 406, "use_grad_penalti": 406, "gp_lambda": 406, "discrimin": 406, "ddpgloss": [407, 416, 619, 625, 633, 640, 648, 654], "td3loss": [407, 416, 625], "value_network_update_interv": 407, "qvalueclass": 408, "loss_value_diff": 408, "diff": 408, "old_polici": 409, "new_polici": 409, "apart": [409, 649], "dtarg": 409, "samples_mc_kl": 409, "analyt": 409, "decrement": 409, "loss_": [410, 467, 629, 633, 640], "equip": [410, 636, 637, 639], "gh": 410, "_forward_value_estimator_kei": 410, "value_estim": [410, 426, 429, 433, 434, 435, 436, 437, 629, 633, 649], "myloss": 410, "action2": 410, "augment": [410, 627, 641, 643, 652], "deterministic_sampling_mod": 410, "convert_to_funct": [410, 426, 429, 633], "expand_dim": [410, 426, 429], "create_target_param": [410, 426, 429, 633], "compare_against": [410, 426, 429, 633], "_param": [410, 426, 429], "resampl": [410, 426, 429], "_target_param": [410, 426, 429], "network_nam": [410, 426, 429], "blend": [410, 426, 429], "add_random_modul": [410, 426, 429, 625, 629], "flavor": [412, 633, 648, 649, 654], "clipppoloss": [412, 625, 635, 649], "klpenppoloss": [412, 625], "06347": 412, "log_explained_vari": [412, 531], "explain": [412, 637, 651], "explained_vari": 412, "wors": 412, "gae": [412, 625, 629, 630, 633, 635, 649], "ppo_loss": 412, "tdlambda": [412, 421, 629, 633], "base_lay": 412, "action_log_prob": 412, "randn_lik": 412, "kl_approx": [412, 427], "samplelogprob": 412, "gripper": 412, "composite_entropi": 412, "0234": 412, "set_composite_lp_aggreg": [412, 629, 649], "ay8zfzm0tdd": 413, "sub_sample_len": 413, "subsampl": [413, 462, 630], "action_log_prob_actor": 413, "state_action_value_actor": [413, 417, 418], "connectionist": 414, "1992": 414, "doi": 414, "1007": 414, "bf00992696": 414, "actor_net": [414, 633, 635], "1801": 415, "01290": 415, "1812": 415, "05905": 415, "redqloss": [416, 625], "theta_t": [416, 650], "theta_": [416, 650], "polyak": 416, "minimalist": 417, "06860": 417, "policy_nois": [417, 418], "noise_clip": [417, 418], "td3_bc": 417, "bc_loss": 417, "lmbd": 417, "td0": [419, 633, 648], "tensorlik": 422, "strict_shap": 422, "view_a": 422, "instabl": 426, "diagnost": 426, "masking_strategi": 426, "sft": [426, 429], "kl_to_ref_coeff": [426, 429], "kl_to_inference_coeff": 426, "grpolossoutput": [426, 428], "clip_fract": 427, "loss_kl_to_ref": [427, 429, 430], "kl_to_ref": [427, 430], "loss_kl_to_infer": 427, "kl_to_infer": 427, "grpo_siz": 428, "hit": 428, "supervis": [429, 627, 640, 641, 652, 655], "normalize_by_seq_length": 429, "minor_sft": 429, "minorsft": 429, "shime": 429, "xie": 429, "hong": 429, "chen": 429, "fred": 429, "yu": 429, "zey": 429, "sun": 429, "xiuyu": 429, "wu": 429, "2024": 429, "minor": [429, 648], "_chat_templ": 429, "policy_ref": 429, "txt_start": 429, "zip": [429, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "loss_sft": [429, 430], "qmixer": [431, 625], "local_valu": 431, "visibl": [431, 649], "acceptedkei": 431, "global_valu": 431, "penultim": 431, "local_value_network": 431, "mixer_network": 431, "value_modul": [431, 635, 654], "qnet": [431, 633], "next_val_kei": 432, "pred_next_v": 432, "mse": 432, "q_valu": 432, "n_steps_to_next": 432, "value_next_st": 432, "1506": [433, 438, 446], "02438": [433, 438, 446], "exponenti": [433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 469], "average_ga": [433, 635], "skip_exist": [433, 434, 435, 436], "get_default_devic": [433, 434, 435, 436, 437], "auto_reset_env": 433, "next_valu": [433, 434, 435, 436, 437], "gradient_mod": 433, "value_error": [433, 434, 435, 436, 437], "marker": [433, 633], "trajecotri": 433, "fair": 433, "target_param": [433, 434, 435, 436, 437, 633, 649], "98": [433, 434, 435, 436], "94": [433, 436], "unpack": [433, 434, 435, 436], "tensor_kei": [433, 434, 435, 436, 437], "aka": [434, 634, 648], "average_reward": [434, 435, 436], "tdestim": [434, 435, 437], "infti": 435, "valuefunctionbas": 437, "old_stat": [438, 440, 442, 444, 446, 447, 449], "new_stat": [438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450], "rolling_gamma": [442, 443, 444, 445, 447, 448, 449, 450], "g1": [442, 443, 444, 445, 447, 448, 449, 450], "g2": [442, 443, 444, 445, 447, 448, 449, 450], "g3": [442, 443, 444, 445, 447, 448, 449, 450], "g4": [442, 443, 444, 445, 447, 448, 449, 450], "v3": [442, 443, 444, 445, 447, 448, 449, 450], "preproc": [451, 637, 648], "as_non_tensor": [451, 648], "render_method": 451, "pass_tensordict": 451, "syntact": 451, "sugar": 451, "out_file_bas": 452, "skip_reset": 452, "center_crop": 453, "make_grid": 453, "log_video": 453, "csv": [453, 455, 457, 519, 634, 642, 643], "tensorboard": [453, 457, 459, 521, 630, 642, 654], "log_dir": [453, 454, 455, 457, 459, 460, 519, 521, 522, 634, 643], "cheetah_video": 453, "run_video": 453, "openxexperiencereplai": 453, "sec": [453, 650], "video_fp": [453, 455, 458, 519, 522], "run_video_0": 453, "cur_dir": 455, "csv_log": 455, "add_video": 455, "video_": 455, "experiment_nam": [456, 457], "logger_typ": 457, "logger_nam": 457, "mlflow": [457, 458], "wandb_kwarg": 457, "mlflow_kwarg": 457, "tracking_uri": 458, "uri": 458, "datastor": 458, "tb_log": [459, 521], "tensoarboard": 459, "td_log": 459, "save_dir": [460, 522], "resum": 460, "uncategor": 460, "my_funct": 461, "sub_traj_len": 462, "min_sub_traj_len": 462, "register_op": [462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 630, 634], "process_optim_batch": [462, 468, 469, 630], "td_out": [462, 470], "_process_optim_batch_hook": [462, 630], "batch_subsampl": 462, "clear_cuda": 463, "pre_optim_step": [463, 630], "log_pbar": [464, 465, 466, 469, 630, 634], "count_fram": 464, "pre_steps_log": [464, 465, 630], "count_frames_log": 464, "lognam": 465, "include_std": 465, "log_reward": [465, 477, 634], "r_train": 465, "log_action_norm": 465, "action_norm": 465, "percentag": 465, "log_don": 465, "done_percentag": 465, "record_interv": [466, 633, 634], "record_fram": [466, 612, 633, 634], "policy_explor": [466, 619, 633, 634, 637, 639, 643], "log_kei": [466, 634], "underestim": 466, "r_evalu": [466, 633], "loss_compon": 467, "appl": 467, "optimizer_hook": 467, "flatten_tensordict": [468, 634], "max_dim": 468, "rb_trainer": 468, "batch_process": [468, 469, 470, 630], "post_loss": [468, 630], "999": [469, 601, 602, 603, 606, 607, 611, 634], "jitter": 469, "finfo": 469, "default_dtyp": 469, "update_reward_stat": 469, "normalize_reward": 469, "make_train": [470, 625], "_process_batch_hook": [470, 630], "select_kei": [470, 630], "target_params_updat": 471, "targetnetupdat": [471, 477, 616, 618, 619], "target_net_updat": [471, 477, 619, 633, 634], "softupd": [471, 625, 633, 634, 636, 637, 640, 643, 648], "target_net_updater_hook": 471, "post_optim": [471, 630, 634], "versatil": [472, 638], "optim_steps_per_batch": [472, 477, 532, 630, 634], "clip_grad_norm": [472, 477, 532], "clip_norm": [472, 477, 532, 630], "progress_bar": [472, 477, 532], "save_trainer_interv": [472, 477, 532], "log_interv": [472, 477, 532, 630, 634], "save_trainer_fil": [472, 477, 532, 630], "async_collect": [472, 474, 532], "utd": [472, 474, 633, 636], "utd_ratio": 472, "load_from_fil": [472, 476, 477, 630], "update_count": 474, "utdr_hook": 474, "update_weights_interv": [475, 634], "policy_weights_gett": 475, "post_step": [475, 630, 634], "comprehens": [476, 477, 627, 630], "ppotrainerconfig": [476, 630], "bridg": 477, "elsewher": 477, "enable_log": 477, "log_act": 477, "log_observ": 477, "3e": [477, 635, 636, 648, 649], "configbas": [478, 480, 481, 482], "storageensemblewrit": 496, "batched_env_typ": 499, "make_batched_env": 499, "make_gym_env": 505, "mogymenv": [509, 625], "meltingpotenv": [510, 625], "openmlenv": [512, 625], "openspielenv": [513, 625], "pettingzooenv": [514, 625, 648], "robohiveenv": [515, 625], "smacv2env": [516, 625], "unity_mlag": 517, "unitymlagentsenv": [517, 625], "activationconfig": [523, 524], "normconfig": 523, "aggregatorconfig": 523, "layerconfig": 524, "valuemodelconfig": 525, "mlpconfig": [527, 528, 529, 630], "eval_mod": 527, "extract_normal_param": 527, "scale_map": 527, "biased_softplus_1": 527, "param_kei": 527, "_make_tanh_normal_model": 527, "_make_value_model": 529, "networkconfig": 529, "loss_typ": [530, 531], "_make_ppo_loss": 531, "num_epoch": [532, 635, 649], "_make_ppo_train": 532, "sensibl": [532, 630], "batchsizetransform": [537, 637], "binarizereward": 538, "burnintransform": 539, "centercrop": 542, "cliptransform": 543, "conditionalpolicyswitch": 545, "dtypecasttransform": 548, "devicecasttransform": 549, "discreteactionproject": 550, "gym_transform": 552, "endoflifetransform": 552, "exclude_kei": 553, "finitetensordictcheck": 554, "flattenobserv": 555, "frameskiptransform": 556, "linearisereward": 561, "multiact": 562, "noopresetenv": [564, 654, 655], "permutetransform": 566, "pinmemorytransform": 567, "r3mtransform": [568, 651], "crop_siz": 569, "key_map": 571, "reward2gotransform": 573, "include_kei": 577, "signtransform": 578, "squeezetransform": 579, "targetreturn": 582, "primer_spec": 583, "timemaxpool": 584, "vc1transform": 592, "viprewardtransform": 593, "viptransform": 594, "lambd": 598, "t0": [598, 637, 643], "weight_decai": [598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 610, 633, 634], "foreach": [598, 599, 600, 602, 606, 608, 609, 610], "asgd": 598, "rho": 599, "adadelta": 599, "lr_decai": 600, "initial_accumulator_valu": 600, "adagrad": 600, "amsgrad": [601, 602], "fuse": 602, "adamw": 602, "002": [603, 606], "adamax": 603, "max_it": 604, "max_ev": 604, "tolerance_grad": 604, "07": 604, "tolerance_chang": 604, "09": 604, "history_s": 604, "line_search_fn": 604, "lbfg": 604, "lion": 605, "momentum_decai": 606, "004": 606, "nadam": 606, "radam": 607, "rmsprop": 608, "eta": 609, "step_siz": 609, "rprop": 609, "dampen": 610, "nesterov": 610, "sgd": 610, "sparseadam": 611, "dictconfig": [612, 613, 614, 615, 617, 618, 619, 620, 623], "unknowingli": 612, "annealing_fram": [612, 633], "init_env_step": [612, 613, 633], "proof_environ": [613, 633], "sta": 613, "ot": 613, "actor_model_explor": [614, 615, 633], "make_env_kwarg": [614, 615], "replayargsconfig": 617, "constitu": 619, "egreedywrapp": 619, "env_proof": 619, "obs_spec": 619, "net_valu": 619, "dir": [619, 630, 634], "gettempdir": 619, "namespac": [620, 623], "transformed_env_constructor": [620, 625], "num_env_per_collector": [621, 622], "video_tag": 623, "norm_obs_onli": 623, "use_env_cr": 623, "custom_env_mak": 623, "custom_env": 623, "return_transformed_env": 623, "action_dim_gsd": 623, "state_dim_gsd": 623, "obs_norm_state_dict": 623, "weightupdat": 625, "distributedsyncdatacollector": 625, "submitit_delayed_launch": 625, "remotetensordictreplaybuff": 625, "rational": 625, "footnot": 625, "binarydiscretetensorspec": 625, "boundedtensorspec": 625, "discretetensorspec": 625, "lazystackedcompositespec": 625, "lazystackedtensorspec": 625, "multidiscretetensorspec": 625, "multionehotdiscretetensorspec": 625, "nontensorspec": 625, "onehotdiscretetensorspec": 625, "unboundedcontinuoustensorspec": 625, "unboundeddiscretetensorspec": 625, "prompttensordicttoken": 625, "rolloutfrommodel": 625, "tokenizeddatasetload": 625, "create_infinite_iter": 625, "constantklcontrol": 625, "adaptiveklcontrol": 625, "densifyreward": 625, "h5combin": 625, "h5split": 625, "nested2t": 625, "check_no_exclusive_kei": 625, "consolidate_spec": 625, "contains_lazy_spec": 625, "envmetadata": 625, "chessenv": 625, "tictactoeenv": 625, "llmhashingenv": 625, "check_marl_group": 625, "get_available_librari": 625, "terminated_or_trunc": 625, "dreamerdecod": 625, "braxwrapp": 625, "dmcontrolwrapp": 625, "isaaclabwrapp": 625, "jumanjiwrapp": 625, "meltingpotwrapp": 625, "multithreadedenvwrapp": 625, "openspielwrapp": 625, "smacv2wrapp": 625, "unitymlagentswrapp": 625, "vmaswrapp": 625, "register_gym_spec_convers": 625, "qvaluehook": 625, "distributionalqvaluehook": 625, "reset_nois": 625, "cemplann": 625, "mpcplannerbas": 625, "mppiplann": 625, "independentnorm": 625, "truncatednorm": 625, "maskedonehotcategor": 625, "onehotordin": 625, "inv_softplu": 625, "vmapmodul": 625, "distributionaldqnloss": [625, 634], "discretesacloss": 625, "crossqloss": 625, "iqlloss": 625, "discreteiqlloss": 625, "cqlloss": 625, "discretecqlloss": 625, "gailloss": 625, "dtloss": 625, "onlinedtloss": 625, "td3bcloss": 625, "ppoloss": [625, 627], "a2closs": 625, "reinforceloss": 625, "dreameractorloss": 625, "dreamermodelloss": 625, "dreamervalueloss": 625, "td0estim": [625, 633], "td1estim": [625, 633], "td0_return_estim": 625, "td0_advantage_estim": 625, "td1_return_estim": 625, "vec_td1_return_estim": 625, "td1_advantage_estim": 625, "vec_td1_advantage_estim": 625, "td_lambda_return_estim": 625, "vec_td_lambda_return_estim": 625, "td_lambda_advantage_estim": 625, "vec_td_lambda_advantage_estim": 625, "generalized_advantage_estim": 625, "vec_generalized_advantage_estim": 625, "hardupd": [625, 633, 640], "distance_loss": [625, 633], "group_optim": 625, "hold_out_net": 625, "hold_out_param": [625, 633], "batchsubsampl": [625, 630], "clearcudacach": 625, "countframeslog": 625, "logscalar": [625, 630, 634], "optimizerhook": [625, 634], "logvalidationreward": [625, 630, 633, 634], "replaybuffertrain": [625, 630, 634], "rewardnorm": 625, "selectkei": [625, 630], "trainerhookbas": [625, 630, 634], "updateweight": [625, 630, 634], "targetnetupdaterhook": 625, "utdrhook": 625, "ppotrain": [625, 630], "sactrain": [625, 630], "make_collector_offpolici": 625, "make_collector_onpolici": 625, "make_dqn_loss": 625, "make_replay_buff": [625, 633], "make_target_updat": 625, "parallel_env_constructor": [625, 633], "sync_async_collector": 625, "sync_sync_collector": 625, "correct_for_frame_skip": 625, "get_stats_random_rollout": 625, "mlflowlogg": 625, "get_logg": 625, "generate_exp_nam": 625, "sweep": 625, "journei": 626, "textbook": 626, "highlight": [626, 648], "ever": [626, 649], "bump": 626, "pr": [626, 627], "five": [627, 634], "orchestr": [627, 634, 640, 642], "grpoloss": 627, "sftloss": 627, "mcadvantag": 627, "5b": [627, 646], "microsoft": 627, "medium": [627, 652], "tiiuae": 627, "coder": 627, "mistral": 627, "gpt": 627, "mpt": 627, "bloom": 627, "pythia": 627, "phi": 627, "add_chat_templ": 627, "llama_templ": 627, "inst": 627, "elif": [627, 633, 634, 645], "endgener": 627, "endif": 627, "endfor": 627, "parse_llama_text": 627, "findal": 627, "dotal": 627, "user_cont": 627, "assistant_cont": 627, "strip": [627, 634], "template_nam": 627, "inverse_pars": 627, "model_family_keyword": 627, "pytest": 627, "test_my_model_assistant_mask": 627, "my_model": 627, "your_template_her": 627, "assistant_token_count": 627, "test_my_model_template_equival": 627, "default_out": 627, "custom_out": 627, "whitespac": 627, "ncustom": 627, "test_my_model_inverse_pars": 627, "aspect": [627, 634, 640], "inject": 627, "ref_env_llm_step": 627, "annot": [627, 630, 645], "llm_output": 627, "attention_mask_al": 627, "assistant_mask_al": 627, "unpad": 627, "cohes": 627, "superior": 627, "horizont": 627, "handler": 627, "shared_async_engin": 627, "wrapper1": [627, 655], "wrapper2": [627, 655], "collector1": 627, "collector2": 627, "remotevllmwrapp": 627, "remotetransformerswrapp": 627, "remote_transform": 627, "text_input": 627, "ref_collector": 627, "budget": [627, 634], "weight_upd": 627, "make_polici": 627, "policy_version_track": 627, "mcptooltransform": 627, "step_data": 627, "s_": [627, 645], "gsm8krewardpars": 627, "ifevalscor": 627, "excel": 627, "bsz": 627, "num_token": 627, "predetermin": 627, "text_complet": 627, "sophist": [627, 630, 635, 649], "format_compon": 627, "structure_scor": 627, "think_scor": 627, "answer_scor": 627, "completion_bonu": 627, "potential_answ": 627, "compl": 627, "parseerror": 627, "regex": 627, "unnecessari": 627, "characterist": [627, 629, 633, 650], "ground": [628, 633, 650], "recycl": [628, 652], "noisier": 628, "Their": [628, 648, 649], "sd": [628, 655], "prob_modul": 628, "uncertainti": 628, "soften": 628, "backbon": [628, 636, 639, 647, 654], "make_actor": 628, "make_valu": 628, "shared_param": 628, "make_common": 628, "reusabl": [629, 633, 652], "swappabl": [629, 633], "trainabl": [629, 633, 640, 651], "smth": [629, 633], "plenti": [629, 637], "amort": [629, 634, 635], "told": [629, 635], "pseudo": [629, 641, 650], "buri": 629, "str_valu": 629, "nutshel": [629, 633], "barto": [629, 648, 649], "chapter": [629, 642], "value_net_loss": 629, "pow": [629, 633], "room": 629, "signifi": [629, 648, 649], "underperform": 629, "intric": [629, 639], "action_td": 629, "action0": 629, "f0": 629, "action1": 629, "f1": 629, "f2": 629, "f3": 629, "action0_log_prob": 629, "action1_log_prob": 629, "inferior": 629, "multivari": 629, "dirichlet": 629, "prev_log_prob": 629, "new_log_prob": 629, "log_weight": 629, "appreci": [629, 638], "multihead": 629, "believ": 630, "_pre_steps_log_hook": 630, "_pre_optim_hook": 630, "sub_batch": 630, "_post_loss_hook": 630, "_post_optim_hook": 630, "_post_optim_log": 630, "post_optim_log": 630, "_post_steps_hook": 630, "_post_steps_log_hook": 630, "post_steps_log": 630, "logginghook": 630, "logging_hook": 630, "save_dict": 630, "some_valu": 630, "torchsnapshot": 630, "ckpt_backend": 630, "filepath": 630, "save_train": 630, "sac_train": 630, "2000000": 630, "0003": 630, "walker2d": 630, "sac_walker2d": 630, "config_path": 630, "config_nam": 630, "version_bas": 630, "modern": 630, "tensordictreplaybufferconfig": 630, "multiasyncdatacollectorconfig": 630, "ppolossconfig": 630, "saclossconfig": 630, "adamconfig": 630, "adamwconfig": 630, "wandbloggerconfig": 630, "tensorboardloggerconfig": 630, "000": [632, 636, 653], "galleri": [632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "mem": [632, 653], "mb": [632, 653], "coding_ddpg": [632, 633, 653], "coding_dqn": [632, 634, 653], "coding_ppo": [632, 635, 653], "dqn_with_rnn": [632, 636, 653], "llm_browser": [632, 645, 653], "llm_wrapper": [632, 646, 653], "multi_task": [632, 647, 653], "multiagent_competitive_ddpg": [632, 648, 653], "multiagent_ppo": [632, 649, 653], "pretrained_model": [632, 651, 653], "rb_tutori": [632, 652, 653], "torchrl_demo": [632, 653, 654], "torchrl_env": [632, 653, 655], "author": [633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 648, 649, 650, 652, 655], "vincent": [633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 650, 652, 655], "moen": [633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 650, 652, 655], "assembl": 633, "transpar": [633, 636], "bash": 633, "is_fork": [633, 634, 635, 636, 648, 649, 651], "get_start_method": [633, 634, 635, 636, 648, 649, 651], "collector_devic": 633, "loss_dict": 633, "oblivi": [633, 635, 652], "elementari": 633, "didact": [633, 637], "dilut": 633, "pessimist": [633, 634, 635], "target_actor_network_param": 633, "actor_in_kei": 633, "actor_crit": 633, "compromis": 633, "hp": 633, "_value_estim": 633, "unknown": 633, "_loss_actor": 633, "td_copi": 633, "actor_network_param": [633, 648], "value_network_param": [633, 648], "_loss_valu": 633, "pred_val": 633, "target_value_network_param": 633, "glue": 633, "_forward": 633, "remaind": 633, "env_librari": 633, "env_task": 633, "env_arg": [633, 634], "torchr": 633, "rescal": 633, "presum": 633, "make_transformed_env": 633, "reward_sc": 633, "env_per_collector": 633, "transform_state_dict": 633, "make_t_env": 633, "cheat": 633, "10m": 633, "cautiou": 633, "thousand": [633, 636], "get_env_stat": 633, "proof_env": 633, "5000": [633, 637, 643], "recal": [633, 635, 645, 652], "ddpgmlpactor": 633, "ddpgmlpqnet": 633, "materi": 633, "ornsteinuhlenbeckprocessmodul": [633, 639], "make_ddpg_actor": 633, "q_net": 633, "tight": 633, "10_000": [633, 635], "traj_len": [633, 636], "make_record": 633, "recorder_obj": 633, "pick": [633, 634, 639, 645], "buffer_s": [633, 634, 636], "random_crop_len": 633, "prb": 633, "buffer_scratch_dir": [633, 634, 636, 641, 651], "dataflow": 633, "ceil_div": 633, "update_to_data": 633, "realiz": 633, "_must_": 633, "outdat": 633, "trick": [633, 634], "despit": 633, "optimizer_actor": 633, "optimizer_valu": 633, "total_collection_step": 633, "rewards_ev": 633, "collected_fram": 633, "numel": [633, 635, 637, 643, 648, 651, 652], "current_fram": [633, 648], "sampled_tensordict": 633, "gn1": 633, "clip_grad_norm_": [633, 635, 648, 649, 650], "gn2": 633, "gn": [633, 650], "td_record": 633, "rn": 633, "2f": 633, "mention": [633, 636, 652, 655], "matplotlib": [633, 635, 636, 637, 648, 649, 650, 652, 655], "pyplot": [633, 635, 636, 637, 648, 649, 650, 652, 655], "plt": [633, 635, 636, 637, 648, 649, 650, 652, 655], "legend": [633, 648], "xlabel": [633, 636, 649, 650], "ylabel": [633, 649], "tight_layout": 633, "takeawai": [633, 634, 637, 645], "distpatch": 633, "jupyt": [633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "ipynb": [633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "sphinx": [633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "road": 634, "highest": [634, 639], "prerequisit": [634, 636, 645], "lookup": 634, "cart": 634, "pole": 634, "un": 634, "actuat": 634, "frictionless": 634, "duelingcnndqnet": 634, "egreedymodul": [634, 636, 637, 639, 643], "is_notebook": 634, "shell": 634, "get_ipython": 634, "__class__": [634, 646], "zmqinteractiveshel": 634, "qtconsol": 634, "terminalinteractiveshel": 634, "ipython": [634, 649, 650], "nameerror": [634, 646, 648], "umbrella": 634, "misplac": 634, "misus": 634, "64x64": 634, "motion": [634, 650], "obs_norm_sd": 634, "mp_context": 634, "get_norm_stat": 634, "test_env": 634, "mathbb": 634, "rightarrow": 634, "make_model": 634, "dummy_env": 634, "init_bia": 634, "exploration_modul": [634, 636, 637, 639, 643], "eps_greedy_v": 634, "eps_greedy_val_env": 634, "actor_explor": 634, "get_replay_buff": 634, "n_optim": [634, 640, 641], "parametriz": 634, "get_collector": 634, "bunch": 634, "ubiquit": [634, 638], "get_loss_modul": 634, "target_updat": [634, 648], "995": 634, "hopefulli": 634, "variat": 634, "2e": [634, 650], "wd": 634, "upd": 634, "harder": [634, 654], "5_000": 634, "500000": 634, "005": [634, 648], "mandatori": [634, 635, 649, 650], "fairer": 634, "dqn_exp_": 634, "uuid1": [634, 655], "cumbersom": 634, "buffer_hook": 634, "aliv": 634, "total_reward": 634, "print_csv_files_in_fold": 634, "folder_path": 634, "csv_file": 634, "output_str": 634, "dirpath": 634, "endswith": 634, "qvaluenetwork": 634, "accuraci": 634, "fanci": [634, 641], "talk": 635, "six": 635, "invent": 635, "theta_k": 635, "pi_": 635, "exceed": 635, "indispens": 635, "analyz": 635, "lingua": 635, "franca": 635, "defaultdict": [635, 650], "max_grad_norm": [635, 648, 649], "sub_batch_s": 635, "entropy_ep": [635, 649], "inverteddoublependulum": 635, "transmit": 635, "stai": 635, "confid": [635, 648, 649], "ran": 635, "f_": 635, "mu_": 635, "difficulti": [635, 655], "d_ob": 635, "d_action": 635, "policy_modul": [635, 648, 649], "briefli": [635, 648, 649], "refil": [635, 649], "easiest": [635, 640, 648, 649], "mathemat": [635, 648, 649], "tradeoff": [635, 649], "advantage_modul": 635, "entropy_coef": [635, 649], "critic_coef": 635, "lr_schedul": [635, 650], "cosineannealinglr": [635, 650], "eval_str": 635, "tensordict_data": [635, 649], "data_view": [635, 649], "subdata": [635, 648, 649], "cum_reward_str": 635, "stepcount_str": 635, "param_group": [635, 648], "lr_str": 635, "eval_rollout": 635, "figsiz": [635, 650], "subplot": [635, 648, 650, 655], "titl": [635, 636, 637, 649, 650], "84x84": [636, 637], "accessori": 636, "stamp": 636, "n_cell": 636, "customiz": 636, "wouldn": 636, "qval": 636, "stoch_polici": 636, "opportun": [636, 648], "uniniti": 636, "again": [636, 637, 638, 639, 641, 649, 651, 652, 655], "strongli": 636, "sake": [636, 651, 652], "longest": 636, "strong": 637, "impress": 637, "arduino": 637, "raspberri": 637, "pi": [637, 648, 649, 650], "alon": 637, "examplifi": 637, "ship": 637, "stick": 637, "nearest": 637, "value_mlp": [637, 643], "init_rand_step": [637, 643], "total_count": [637, 643], "total_episod": [637, 643], "screen": [637, 648], "color": [637, 648], "unblock": 637, "policy_transform": 637, "fake_td": 637, "exported_polici": 637, "div": 637, "graph_modul": 637, "print_read": 637, "group0": 637, "group0_agent0_ob": 637, "collid": [637, 649], "group0_agent0": 637, "agent0_ob": 637, "digress": 637, "exported_stochastic_polici": 637, "trace": 637, "hidden0": 637, "hidden1": 637, "recurrent_polici": 637, "fake_ob": 637, "fake_hidden0": 637, "fake_hidden1": 637, "fake_is_init": 637, "exported_recurrent_polici": 637, "platform": [637, 654], "aoti": 637, "_inductor": 637, "aoti_compile_and_packag": 637, "aoti_load_packag": 637, "pt2": 637, "pkg_path": 637, "package_path": 637, "compiled_modul": 637, "onnxruntim": 637, "showcas": [637, 650], "tensorrt": 637, "android": 637, "aleinterfac": 637, "rom": 637, "loadrom": 637, "reset_gam": 637, "screen_ob": 637, "getscreenrgb": 637, "tick_param": 637, "bottom": 637, "labelleft": 637, "labelbottom": 637, "imshow": [637, 655], "dynamo_export": 637, "onnx_policy_export": 637, "onnx_file_path": 637, "ort_sess": 637, "inferencesess": 637, "cpuexecutionprovid": 637, "onnxruntime_input": 637, "get_input": 637, "onnx_polici": 637, "f811": 637, "onnxruntime_output": 637, "topic": [638, 639, 640], "straight": 638, "backtrack": 638, "reset_with_act": 638, "stepped_data": 638, "spatial": 638, "useless": 638, "policyless": 638, "examin": [638, 648], "tackl": 639, "delv": 639, "extractor": 639, "additivegaussianmodul": [639, 648], "exploration_polici": [639, 648], "2d": [639, 648, 649], "innov": [639, 640], "rollout_explor": 639, "sole": 640, "n_collect": 640, "get_next_batch": 640, "ddpg_loss": 640, "total_loss": 640, "prove": 640, "reliev": 640, "accustom": 641, "surprisingli": 641, "art": [641, 648, 649], "countless": 641, "yourself": [641, 648, 649], "everywher": 642, "log_scalar": 642, "my_scalar": 642, "excess": 642, "lesson": 643, "voluntarili": 643, "training_loop": 643, "video_record": 643, "arbitrarili": 643, "t1": 643, "conclud": [643, 651], "tutorials_python": 644, "tutorials_jupyt": 644, "playwright": 645, "autom": 645, "__future__": 645, "browsertransform": 645, "filterwarn": [645, 646], "browser_transform": 645, "rewardtransform": 645, "last_item": 645, "agnost": 645, "execute_tool_act": 645, "current_st": 645, "nllm": 645, "nenviron": 645, "button": 645, "css": 645, "btnk": 645, "extract_typ": 645, "ref_llm": 645, "suppress": 646, "vllm_use_v1": 646, "canada": 646, "vllm_wrapper": 646, "return_text": 646, "return_token": 646, "return_mask": 646, "data_histori": 646, "nload": 646, "transformers_token": 646, "transformers_wrapp": 646, "result_tf": 646, "data_text": 646, "vllm_text_wrapp": 646, "result_vllm_text": 646, "nvllm": 646, "transformers_text_wrapp": 646, "result_tf_text": 646, "vllm_logprobs_wrapp": 646, "result_vllm_lp": 646, "transformers_logprobs_wrapp": 646, "result_tf_lp": 646, "ntensorclass": 646, "analysi": 646, "ntext": 646, "__annotations__": 646, "ntoken": 646, "nlogprob": 646, "nmask": 646, "nerror": 646, "invalid_mod": 646, "nrl": 646, "env_stat": 646, "action_output": 646, "60": [646, 654], "env1_obs_kei": 647, "observation_stand": 647, "env2_obs_kei": 647, "observation_walk": 647, "tdreset1": 647, "tdreset2": 647, "policy_common": 647, "policy_stand": 647, "policy_walk": 647, "env1_mak": 647, "env2_mak": 647, "_single_task": 647, "td_rollout": 647, "matteo": [648, 649], "bettini": [648, 649], "benchmarl": [648, 649], "simple_tag": 648, "maddpg": [648, 649], "multiagentparticleenviron": 648, "mpe": 648, "centralis": [648, 649], "tie": [648, 649], "iddpg": [648, 649], "richard": 648, "andrew": 648, "mit": 648, "press": 648, "2018": 648, "mathbf": [648, 649], "decentralis": [648, 649], "literatur": [648, 649], "overcom": [648, 649], "stationari": [648, 649], "establish": 648, "gui": [648, 649], "is_sphinx": 648, "__sphinx_build__": 648, "n_iter": [648, 649, 650], "evad": 648, "iteration_when_stop_training_evad": 648, "memory_s": 648, "n_optimiser_step": 648, "train_batch_s": 648, "polyak_tau": 648, "chaser": 648, "red": 648, "circl": [648, 649], "touch": [648, 650], "penal": [648, 649], "obstacl": 648, "drag": [648, 649], "elast": [648, 649], "collis": [648, 649], "imped": 648, "n_chaser": 648, "n_evad": 648, "n_obstacl": 648, "use_vma": 648, "simple_tag_v3": 648, "num_good": 648, "num_adversari": 648, "num_obstacl": 648, "max_cycl": 648, "num_vmas_env": [648, 649], "num_good_ag": 648, "num_landmark": 648, "four": [648, 649, 650], "n_agents_in_that_group": 648, "stress": [648, 649], "paramount": [648, 649], "n_rollout_step": [648, 649], "evolut": [648, 649], "group_nam": 648, "n_agents_in_group": 648, "agents_exploration_polici": 648, "utilis": [648, 649], "n_obs_per_ag": [648, 649], "n_actions_per_ag": [648, 649], "share_parameters_polici": [648, 649], "policy_net": [648, 649], "_agent": 648, "grant": [648, 649], "converg": [648, 649], "share_parameters_crit": [648, 649], "obs_act": 648, "cat_modul": 648, "critic_modul": 648, "fantast": [648, 649], "reset_td": 648, "interfer": 648, "subject": [648, 650], "flatten_kei": 648, "process_batch": 648, "group_shap": 648, "get_item_shap": [648, 649], "nested_done_kei": 648, "nested_terminated_kei": 648, "desc": [648, 649], "episode_reward_mean_": 648, "episode_reward_mean_map": 648, "train_group_map": 648, "group_batch": 648, "_group": 648, "loss_nam": 648, "episode_reward_mean": [648, 649], "fig": [648, 652], "set_ylabel": 648, "axvlin": 648, "orang": 648, "set_xlabel": 648, "video_logg": 648, "vmas_log": 648, "env_with_rend": 648, "vmas_rend": 648, "print_log_dir": 648, "profici": [648, 649], "lidar": 649, "sensor": 649, "mappo": 649, "ippo": 649, "analys": 649, "visualis": 649, "vmas_devic": 649, "6_000": 649, "minibatch_s": 649, "generalis": 649, "simd": 649, "warp": 649, "todai": 649, "surround": 649, "dot": [649, 650], "scenario_nam": 649, "critic_net": 649, "minibatch": 649, "episode_reward_mean_list": 649, "critic_network_param": 649, "target_critic_network_param": 649, "xvfb": 649, "pyvirtualdisplai": 649, "1400": 649, "900": 649, "pil": 649, "rendering_callback": 649, "fromarrai": 649, "gif": 649, "save_al": 649, "append_imag": 649, "freeli": 650, "broader": 650, "wider": 650, "acquaint": 650, "avenu": 650, "_apply_to_composit": 650, "default_x": 650, "default_i": 650, "upward": 650, "angular": 650, "sin": 650, "rad": 650, "angl": 650, "new_th": 650, "new_thdot": 650, "g_forc": 650, "angle_norm": 650, "albeit": 650, "high_th": 650, "high_thdot": 650, "low_th": 650, "low_thdot": 650, "trivial": 650, "irrelev": 650, "_make_spec": 650, "td_param": 650, "render_fp": 650, "random_": 650, "_make_step": 650, "staticmethod": 650, "skeleton": 650, "sine": 650, "cosin": 650, "sintransform": 650, "costransform": 650, "t_sin": 650, "t_co": 650, "cat_transform": 650, "simple_rollout": 650, "unexplor": 650, "20_000": 650, "init_td": 650, "traj_return": 650, "last_reward": 650, "is_ipython": 650, "inlin": 650, "get_backend": 650, "ion": 650, "gcf": 650, "clear_output": 650, "env_transform": [651, 655], "wiser": 651, "batteri": 652, "gc": 652, "buffer_list": 652, "lowest": 652, "buffer_lazytensor": 652, "tempdir": 652, "buffer_lazymemmap": 652, "fullest": 652, "mydata": 652, "buffer_lazi": 652, "_i": 652, "artifici": 652, "hamper": 652, "reappear": 652, "unfold": 652, "problemat": 652, "4th": 652, "prioritizedslicesampl": 652, "tensordictmaxvaluewrit": 652, "demo": 654, "icml": 654, "vmoen": 654, "fb": 654, "invest": 654, "media": 654, "predominantli": 654, "data2": 654, "sub_key1": 654, "scturctur": 654, "data_stack": 654, "data_sampl": 654, "_sampler": 654, "_sum_tre": 654, "modulenotfounderror": 654, "backbone_modul": 654, "params_expand": 654, "exec_sequ": 654, "tensordict_exp": 654, "base_modul": 654, "tensordicts_prealloc": 654, "tensordicts_stack": 654, "tensordict_rollout": [654, 655], "automatical": 654, "particularili": 654, "concatmodul": 654, "loss_td": 654, "contributor": 654, "curiou": 654, "nascent": 654, "unsupervis": 655, "_build_env": 655, "deserv": 655, "__episode__": 655, "__trajectory__": 655, "void": 655, "reproduct": 655, "tensordict_tprim": 655, "obviou": 655, "truth": 655, "env_transformed_bi": 655, "stanc": 655, "transformeddistribut": 655, "base_dist": 655, "concat": 655, "mofidi": 655, "transformedenviron": 655, "moderet": 655, "computation": 655, "incom": 655, "amongst": 655, "has_cuda": 655, "convention": 655, "markovian": 655, "bar_": 655, "get_someth": 655, "aargh": 655, "is_clos": 655, "foo_list": 655, "121": 655, "evolv": 655, "steadi": 655, "approx": 655, "absor": 655, "_extra_st": 655}, "objects": {"torchrl": [[13, 0, 1, "", "auto_unwrap_transformed_env"], [296, 0, 1, "", "implement_for"], [461, 0, 1, "", "set_auto_unwrap_transformed_env"]], "torchrl.collectors": [[14, 0, 1, "", "DataCollectorBase"], [15, 0, 1, "", "MultiProcessedWeightUpdater"], [16, 0, 1, "", "MultiSyncDataCollector"], [17, 0, 1, "", "MultiaSyncDataCollector"], [18, 0, 1, "", "RayWeightUpdater"], [19, 0, 1, "", "SyncDataCollector"], [20, 0, 1, "", "VanillaWeightUpdater"], [21, 0, 1, "", "WeightUpdaterBase"], [22, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[14, 1, 1, "", "async_shutdown"], [14, 1, 1, "", "init_updater"], [14, 1, 1, "", "pause"], [14, 1, 1, "", "start"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiProcessedWeightUpdater": [[15, 1, 1, "", "all_worker_ids"], [15, 2, 1, "", "collector"], [15, 2, 1, "", "collectors"], [15, 1, 1, "", "from_policy"], [15, 1, 1, "", "increment_version"], [15, 1, 1, "", "init"], [15, 2, 1, "", "post_hooks"], [15, 1, 1, "", "push_weights"], [15, 1, 1, "", "register_collector"], [15, 1, 1, "", "register_post_hook"]], "torchrl.collectors.MultiSyncDataCollector": [[16, 1, 1, "", "async_shutdown"], [16, 1, 1, "", "get_policy_version"], [16, 1, 1, "", "getattr_env"], [16, 1, 1, "", "getattr_policy"], [16, 1, 1, "", "getattr_rb"], [16, 1, 1, "", "increment_version"], [16, 1, 1, "", "init_updater"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "pause"], [16, 2, 1, "", "policy_version"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "start"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[17, 1, 1, "", "async_shutdown"], [17, 1, 1, "", "get_policy_version"], [17, 1, 1, "", "getattr_env"], [17, 1, 1, "", "getattr_policy"], [17, 1, 1, "", "getattr_rb"], [17, 1, 1, "", "increment_version"], [17, 1, 1, "", "init_updater"], [17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "pause"], [17, 2, 1, "", "policy_version"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "start"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.RayWeightUpdater": [[18, 1, 1, "", "_get_server_weights"], [18, 1, 1, "", "_maybe_map_weights"], [18, 1, 1, "", "_skip_update"], [18, 1, 1, "", "_sync_weights_with_worker"], [18, 1, 1, "id0", "all_worker_ids"], [18, 2, 1, "", "collector"], [18, 2, 1, "", "collectors"], [18, 1, 1, "", "from_policy"], [18, 1, 1, "", "increment_version"], [18, 1, 1, "", "init"], [18, 2, 1, "", "post_hooks"], [18, 1, 1, "", "push_weights"], [18, 1, 1, "", "register_collector"], [18, 1, 1, "", "register_post_hook"]], "torchrl.collectors.SyncDataCollector": [[19, 1, 1, "", "async_shutdown"], [19, 1, 1, "", "get_policy_version"], [19, 1, 1, "", "getattr_env"], [19, 1, 1, "", "getattr_policy"], [19, 1, 1, "", "getattr_rb"], [19, 1, 1, "", "increment_version"], [19, 1, 1, "", "init_updater"], [19, 1, 1, "", "iterator"], [19, 1, 1, "", "load_state_dict"], [19, 1, 1, "", "pause"], [19, 2, 1, "", "policy_version"], [19, 1, 1, "", "reset"], [19, 1, 1, "", "rollout"], [19, 1, 1, "", "set_seed"], [19, 1, 1, "", "shutdown"], [19, 1, 1, "", "start"], [19, 1, 1, "", "state_dict"], [19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.VanillaWeightUpdater": [[20, 1, 1, "", "all_worker_ids"], [20, 2, 1, "", "collector"], [20, 2, 1, "", "collectors"], [20, 1, 1, "", "from_policy"], [20, 1, 1, "", "increment_version"], [20, 1, 1, "", "init"], [20, 2, 1, "", "post_hooks"], [20, 1, 1, "", "push_weights"], [20, 1, 1, "", "register_collector"], [20, 1, 1, "", "register_post_hook"]], "torchrl.collectors.WeightUpdaterBase": [[21, 1, 1, "", "all_worker_ids"], [21, 2, 1, "", "collector"], [21, 2, 1, "", "collectors"], [21, 1, 1, "id0", "from_policy"], [21, 1, 1, "", "increment_version"], [21, 1, 1, "", "init"], [21, 2, 1, "", "post_hooks"], [21, 1, 1, "id1", "push_weights"], [21, 1, 1, "id2", "register_collector"], [21, 1, 1, "", "register_post_hook"]], "torchrl.collectors.aSyncDataCollector": [[22, 1, 1, "", "async_shutdown"], [22, 1, 1, "", "get_policy_version"], [22, 1, 1, "", "getattr_env"], [22, 1, 1, "", "getattr_policy"], [22, 1, 1, "", "getattr_rb"], [22, 1, 1, "", "increment_version"], [22, 1, 1, "", "init_updater"], [22, 1, 1, "", "load_state_dict"], [22, 1, 1, "", "pause"], [22, 2, 1, "", "policy_version"], [22, 1, 1, "", "reset"], [22, 1, 1, "", "set_seed"], [22, 1, 1, "", "shutdown"], [22, 1, 1, "", "start"], [22, 1, 1, "", "state_dict"], [22, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[23, 0, 1, "", "DistributedDataCollector"], [24, 0, 1, "", "DistributedSyncDataCollector"], [25, 0, 1, "", "DistributedWeightUpdater"], [26, 0, 1, "", "RPCDataCollector"], [27, 0, 1, "", "RPCWeightUpdater"], [28, 0, 1, "", "RayCollector"], [29, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[23, 1, 1, "", "async_shutdown"], [23, 1, 1, "", "init_updater"], [23, 1, 1, "", "pause"], [23, 1, 1, "", "start"], [23, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[24, 1, 1, "", "async_shutdown"], [24, 1, 1, "", "init_updater"], [24, 1, 1, "", "pause"], [24, 1, 1, "", "start"], [24, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedWeightUpdater": [[25, 1, 1, "", "_get_server_weights"], [25, 1, 1, "", "_maybe_map_weights"], [25, 1, 1, "", "_sync_weights_with_worker"], [25, 1, 1, "id0", "all_worker_ids"], [25, 2, 1, "", "collector"], [25, 2, 1, "", "collectors"], [25, 1, 1, "", "from_policy"], [25, 1, 1, "", "increment_version"], [25, 1, 1, "", "init"], [25, 2, 1, "", "post_hooks"], [25, 1, 1, "", "push_weights"], [25, 1, 1, "", "register_collector"], [25, 1, 1, "", "register_post_hook"], [25, 1, 1, "", "update_weights"]], "torchrl.collectors.distributed.RPCDataCollector": [[26, 1, 1, "", "async_shutdown"], [26, 1, 1, "", "init_updater"], [26, 1, 1, "", "pause"], [26, 1, 1, "", "start"], [26, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCWeightUpdater": [[27, 1, 1, "", "_get_server_weights"], [27, 1, 1, "", "_maybe_map_weights"], [27, 1, 1, "", "_sync_weights_with_worker"], [27, 1, 1, "id0", "all_worker_ids"], [27, 2, 1, "", "collector"], [27, 2, 1, "", "collectors"], [27, 1, 1, "", "from_policy"], [27, 1, 1, "", "increment_version"], [27, 1, 1, "", "init"], [27, 2, 1, "", "post_hooks"], [27, 1, 1, "", "push_weights"], [27, 1, 1, "", "register_collector"], [27, 1, 1, "", "register_post_hook"], [27, 1, 1, "", "update_weights"]], "torchrl.collectors.distributed.RayCollector": [[28, 1, 1, "", "add_collectors"], [28, 1, 1, "", "async_shutdown"], [28, 1, 1, "", "init_updater"], [28, 1, 1, "", "load_state_dict"], [28, 1, 1, "", "local_policy"], [28, 1, 1, "", "pause"], [28, 2, 1, "", "remote_collectors"], [28, 1, 1, "", "set_seed"], [28, 1, 1, "", "shutdown"], [28, 1, 1, "", "start"], [28, 1, 1, "", "state_dict"], [28, 1, 1, "", "stop_remote_collectors"], [28, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.llm": [[30, 0, 1, "", "LLMCollector"], [31, 0, 1, "", "RayLLMCollector"], [32, 0, 1, "", "vLLMUpdater"], [33, 0, 1, "", "vLLMUpdaterV2"]], "torchrl.collectors.llm.LLMCollector": [[30, 1, 1, "", "as_remote"], [30, 1, 1, "", "async_shutdown"], [30, 2, 1, "", "dialog_turns_per_batch"], [30, 1, 1, "", "get_policy_model"], [30, 1, 1, "", "get_policy_version"], [30, 1, 1, "", "getattr_env"], [30, 1, 1, "", "getattr_policy"], [30, 1, 1, "", "getattr_rb"], [30, 1, 1, "", "increment_version"], [30, 1, 1, "", "init_updater"], [30, 1, 1, "", "is_initialized"], [30, 1, 1, "", "iterator"], [30, 1, 1, "", "load_state_dict"], [30, 1, 1, "", "pause"], [30, 2, 1, "", "policy_version"], [30, 1, 1, "", "reset"], [30, 2, 1, "", "rollout"], [30, 1, 1, "", "set_seed"], [30, 1, 1, "", "shutdown"], [30, 1, 1, "", "start"], [30, 1, 1, "", "state_dict"], [30, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.llm.RayLLMCollector": [[31, 1, 1, "", "as_remote"], [31, 1, 1, "", "async_shutdown"], [31, 2, 1, "", "dialog_turns_per_batch"], [31, 1, 1, "", "get_policy_model"], [31, 1, 1, "", "get_policy_version"], [31, 1, 1, "", "getattr_env"], [31, 1, 1, "", "getattr_policy"], [31, 1, 1, "", "getattr_rb"], [31, 1, 1, "", "increment_version"], [31, 1, 1, "", "init_updater"], [31, 1, 1, "", "is_initialized"], [31, 1, 1, "", "iterator"], [31, 1, 1, "", "load_state_dict"], [31, 1, 1, "", "next"], [31, 1, 1, "", "pause"], [31, 2, 1, "", "policy_version"], [31, 1, 1, "", "reset"], [31, 2, 1, "", "rollout"], [31, 1, 1, "", "set_seed"], [31, 1, 1, "", "shutdown"], [31, 1, 1, "", "start"], [31, 1, 1, "", "state_dict"], [31, 2, 1, "", "total_dialog_turns"], [31, 1, 1, "", "update_policy_weights_"], [31, 2, 1, "", "weight_updater"]], "torchrl.collectors.llm.vLLMUpdater": [[32, 1, 1, "", "_get_server_weights"], [32, 1, 1, "", "_maybe_map_weights"], [32, 1, 1, "", "_sync_weights_with_worker"], [32, 1, 1, "id0", "all_worker_ids"], [32, 2, 1, "", "collector"], [32, 2, 1, "", "collectors"], [32, 1, 1, "", "from_policy"], [32, 1, 1, "", "get_model_metadata"], [32, 1, 1, "", "increment_version"], [32, 1, 1, "id1", "init"], [32, 2, 1, "", "post_hooks"], [32, 1, 1, "", "push_weights"], [32, 1, 1, "", "register_collector"], [32, 1, 1, "", "register_post_hook"]], "torchrl.collectors.llm.vLLMUpdaterV2": [[33, 1, 1, "", "all_worker_ids"], [33, 2, 1, "", "collector"], [33, 2, 1, "", "collectors"], [33, 1, 1, "", "from_policy"], [33, 1, 1, "", "get_model_metadata"], [33, 1, 1, "", "get_tp_size"], [33, 1, 1, "", "increment_version"], [33, 1, 1, "", "init"], [33, 2, 1, "", "post_hooks"], [33, 1, 1, "", "push_weights"], [33, 1, 1, "", "push_weights_from_transformers"], [33, 1, 1, "", "push_weights_from_transformers_optimized"], [33, 1, 1, "", "register_collector"], [33, 1, 1, "", "register_post_hook"]], "torchrl.collectors.utils": [[34, 3, 1, "", "split_trajectories"]], "torchrl.data": [[35, 0, 1, "", "AdaptiveKLController"], [36, 0, 1, "", "Binary"], [37, 0, 1, "", "BinaryDiscreteTensorSpec"], [38, 0, 1, "", "BinaryToDecimal"], [39, 0, 1, "", "Bounded"], [40, 0, 1, "", "BoundedTensorSpec"], [41, 0, 1, "", "Categorical"], [42, 0, 1, "", "Composite"], [43, 0, 1, "", "CompositeSpec"], [44, 0, 1, "", "ConstantKLController"], [45, 0, 1, "", "DensifyReward"], [46, 0, 1, "", "DiscreteTensorSpec"], [47, 0, 1, "", "Flat2TED"], [48, 0, 1, "", "H5Combine"], [49, 0, 1, "", "H5Split"], [50, 0, 1, "", "HashToInt"], [51, 0, 1, "", "LazyStackedCompositeSpec"], [52, 0, 1, "", "LazyStackedTensorSpec"], [53, 0, 1, "", "MCTSForest"], [54, 0, 1, "", "MultiCategorical"], [55, 0, 1, "", "MultiDiscreteTensorSpec"], [56, 0, 1, "", "MultiOneHot"], [57, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [58, 0, 1, "", "MultiStep"], [59, 0, 1, "", "Nested2TED"], [60, 0, 1, "", "NonTensor"], [61, 0, 1, "", "NonTensorSpec"], [62, 0, 1, "", "OneHot"], [63, 0, 1, "", "OneHotDiscreteTensorSpec"], [64, 0, 1, "", "PairwiseDataset"], [65, 0, 1, "", "PrioritizedReplayBuffer"], [66, 0, 1, "", "PromptData"], [67, 0, 1, "", "PromptTensorDictTokenizer"], [68, 0, 1, "", "QueryModule"], [69, 0, 1, "", "RandomProjectionHash"], [70, 0, 1, "", "RayReplayBuffer"], [71, 0, 1, "", "RemoteTensorDictReplayBuffer"], [72, 0, 1, "", "ReplayBuffer"], [73, 0, 1, "", "RewardData"], [74, 0, 1, "", "RolloutFromModel"], [75, 0, 1, "", "SipHash"], [76, 0, 1, "", "Stacked"], [77, 0, 1, "", "StackedComposite"], [78, 0, 1, "", "TED2Flat"], [79, 0, 1, "", "TED2Nested"], [80, 0, 1, "", "TensorDictMap"], [81, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [82, 0, 1, "", "TensorDictReplayBuffer"], [83, 0, 1, "", "TensorDictTokenizer"], [84, 0, 1, "", "TensorMap"], [85, 0, 1, "", "TensorSpec"], [86, 0, 1, "", "TokenizedDatasetLoader"], [87, 0, 1, "", "Tree"], [88, 0, 1, "", "Unbounded"], [89, 0, 1, "", "UnboundedContinuous"], [90, 0, 1, "", "UnboundedContinuousTensorSpec"], [91, 0, 1, "", "UnboundedDiscrete"], [92, 0, 1, "", "UnboundedDiscreteTensorSpec"], [93, 0, 1, "", "check_no_exclusive_keys"], [94, 0, 1, "", "consolidate_spec"], [95, 0, 1, "", "contains_lazy_spec"], [96, 0, 1, "", "create_infinite_iterator"], [106, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[35, 1, 1, "", "update"]], "torchrl.data.Binary": [[36, 1, 1, "", "assert_is_in"], [36, 1, 1, "", "cardinality"], [36, 1, 1, "", "clear_device_"], [36, 1, 1, "", "clone"], [36, 1, 1, "", "contains"], [36, 1, 1, "", "cpu"], [36, 1, 1, "", "cuda"], [36, 4, 1, "", "device"], [36, 1, 1, "", "encode"], [36, 1, 1, "", "enumerate"], [36, 1, 1, "", "erase_memoize_cache"], [36, 1, 1, "", "expand"], [36, 1, 1, "", "flatten"], [36, 1, 1, "", "implements_for_spec"], [36, 1, 1, "", "index"], [36, 1, 1, "", "is_in"], [36, 1, 1, "", "make_neg_dim"], [36, 1, 1, "", "memoize_encode"], [36, 2, 1, "", "ndim"], [36, 1, 1, "", "ndimension"], [36, 1, 1, "", "one"], [36, 1, 1, "", "ones"], [36, 1, 1, "", "project"], [36, 1, 1, "", "rand"], [36, 1, 1, "", "reshape"], [36, 1, 1, "", "sample"], [36, 1, 1, "", "set_provisional_n"], [36, 1, 1, "", "squeeze"], [36, 1, 1, "", "to"], [36, 1, 1, "", "to_categorical"], [36, 1, 1, "", "to_categorical_spec"], [36, 1, 1, "", "to_numpy"], [36, 1, 1, "", "to_one_hot"], [36, 1, 1, "", "to_one_hot_spec"], [36, 1, 1, "", "type_check"], [36, 1, 1, "", "unflatten"], [36, 1, 1, "", "unsqueeze"], [36, 1, 1, "", "update_mask"], [36, 1, 1, "", "view"], [36, 1, 1, "", "zero"], [36, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[37, 1, 1, "", "assert_is_in"], [37, 1, 1, "", "cardinality"], [37, 1, 1, "", "clear_device_"], [37, 1, 1, "", "clone"], [37, 1, 1, "", "contains"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 4, 1, "", "device"], [37, 1, 1, "", "encode"], [37, 1, 1, "", "enumerate"], [37, 1, 1, "", "erase_memoize_cache"], [37, 1, 1, "", "expand"], [37, 1, 1, "", "flatten"], [37, 1, 1, "", "implements_for_spec"], [37, 1, 1, "", "index"], [37, 1, 1, "", "is_in"], [37, 1, 1, "", "make_neg_dim"], [37, 1, 1, "", "memoize_encode"], [37, 2, 1, "", "ndim"], [37, 1, 1, "", "ndimension"], [37, 1, 1, "", "one"], [37, 1, 1, "", "ones"], [37, 1, 1, "", "project"], [37, 1, 1, "", "rand"], [37, 1, 1, "", "reshape"], [37, 1, 1, "", "sample"], [37, 1, 1, "", "set_provisional_n"], [37, 1, 1, "", "squeeze"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_categorical"], [37, 1, 1, "", "to_categorical_spec"], [37, 1, 1, "", "to_numpy"], [37, 1, 1, "", "to_one_hot"], [37, 1, 1, "", "to_one_hot_spec"], [37, 1, 1, "", "type_check"], [37, 1, 1, "", "unflatten"], [37, 1, 1, "", "unsqueeze"], [37, 1, 1, "", "update_mask"], [37, 1, 1, "", "view"], [37, 1, 1, "", "zero"], [37, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[38, 1, 1, "", "add_module"], [38, 1, 1, "", "apply"], [38, 1, 1, "", "bfloat16"], [38, 1, 1, "", "buffers"], [38, 1, 1, "", "children"], [38, 1, 1, "", "compile"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 1, 1, "", "double"], [38, 1, 1, "", "eval"], [38, 1, 1, "", "extra_repr"], [38, 1, 1, "", "float"], [38, 1, 1, "", "forward"], [38, 1, 1, "", "get_buffer"], [38, 1, 1, "", "get_extra_state"], [38, 1, 1, "", "get_parameter"], [38, 1, 1, "", "get_submodule"], [38, 1, 1, "", "half"], [38, 1, 1, "", "ipu"], [38, 1, 1, "", "load_state_dict"], [38, 1, 1, "", "modules"], [38, 1, 1, "", "mtia"], [38, 1, 1, "", "named_buffers"], [38, 1, 1, "", "named_children"], [38, 1, 1, "", "named_modules"], [38, 1, 1, "", "named_parameters"], [38, 1, 1, "", "parameters"], [38, 1, 1, "", "register_backward_hook"], [38, 1, 1, "", "register_buffer"], [38, 1, 1, "", "register_forward_hook"], [38, 1, 1, "", "register_forward_pre_hook"], [38, 1, 1, "", "register_full_backward_hook"], [38, 1, 1, "", "register_full_backward_pre_hook"], [38, 1, 1, "", "register_load_state_dict_post_hook"], [38, 1, 1, "", "register_load_state_dict_pre_hook"], [38, 1, 1, "", "register_module"], [38, 1, 1, "", "register_parameter"], [38, 1, 1, "", "register_state_dict_post_hook"], [38, 1, 1, "", "register_state_dict_pre_hook"], [38, 1, 1, "", "requires_grad_"], [38, 1, 1, "", "set_extra_state"], [38, 1, 1, "", "set_submodule"], [38, 1, 1, "", "share_memory"], [38, 1, 1, "", "state_dict"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_empty"], [38, 1, 1, "", "train"], [38, 1, 1, "", "type"], [38, 1, 1, "", "xpu"], [38, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "cardinality"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "clone"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 2, 1, "", "device"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "enumerate"], [39, 1, 1, "", "erase_memoize_cache"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "make_neg_dim"], [39, 1, 1, "", "memoize_encode"], [39, 2, 1, "", "ndim"], [39, 1, 1, "", "ndimension"], [39, 1, 1, "", "one"], [39, 1, 1, "", "ones"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 1, 1, "", "sample"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "unsqueeze"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"], [39, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "cardinality"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 2, 1, "", "device"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "enumerate"], [40, 1, 1, "", "erase_memoize_cache"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "make_neg_dim"], [40, 1, 1, "", "memoize_encode"], [40, 2, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[41, 1, 1, "", "assert_is_in"], [41, 1, 1, "", "cardinality"], [41, 1, 1, "", "clear_device_"], [41, 1, 1, "", "clone"], [41, 1, 1, "", "contains"], [41, 1, 1, "", "cpu"], [41, 1, 1, "", "cuda"], [41, 4, 1, "", "device"], [41, 1, 1, "", "encode"], [41, 1, 1, "", "enumerate"], [41, 1, 1, "", "erase_memoize_cache"], [41, 1, 1, "", "expand"], [41, 1, 1, "", "flatten"], [41, 1, 1, "", "implements_for_spec"], [41, 1, 1, "", "index"], [41, 1, 1, "", "is_in"], [41, 1, 1, "", "make_neg_dim"], [41, 1, 1, "", "memoize_encode"], [41, 2, 1, "", "ndim"], [41, 1, 1, "", "ndimension"], [41, 1, 1, "", "one"], [41, 1, 1, "", "ones"], [41, 1, 1, "", "project"], [41, 1, 1, "", "rand"], [41, 1, 1, "", "reshape"], [41, 1, 1, "", "sample"], [41, 1, 1, "", "set_provisional_n"], [41, 1, 1, "", "squeeze"], [41, 1, 1, "", "to"], [41, 1, 1, "", "to_categorical"], [41, 1, 1, "", "to_categorical_spec"], [41, 1, 1, "", "to_numpy"], [41, 1, 1, "", "to_one_hot"], [41, 1, 1, "", "to_one_hot_spec"], [41, 1, 1, "", "type_check"], [41, 1, 1, "", "unflatten"], [41, 1, 1, "", "unsqueeze"], [41, 1, 1, "", "update_mask"], [41, 1, 1, "", "view"], [41, 1, 1, "", "zero"], [41, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[42, 1, 1, "", "assert_is_in"], [42, 1, 1, "", "cardinality"], [42, 1, 1, "", "clear_device_"], [42, 1, 1, "", "clone"], [42, 1, 1, "", "contains"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 2, 1, "", "device"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "encode"], [42, 1, 1, "", "enumerate"], [42, 1, 1, "", "erase_memoize_cache"], [42, 1, 1, "", "expand"], [42, 1, 1, "", "flatten"], [42, 1, 1, "", "get"], [42, 1, 1, "", "implements_for_spec"], [42, 1, 1, "", "index"], [42, 1, 1, "", "is_empty"], [42, 1, 1, "", "is_in"], [42, 1, 1, "", "items"], [42, 1, 1, "", "keys"], [42, 1, 1, "", "lock_"], [42, 1, 1, "", "make_neg_dim"], [42, 1, 1, "", "memoize_encode"], [42, 2, 1, "", "names"], [42, 2, 1, "", "ndim"], [42, 1, 1, "", "ndimension"], [42, 1, 1, "", "one"], [42, 1, 1, "", "ones"], [42, 1, 1, "", "pop"], [42, 1, 1, "", "project"], [42, 1, 1, "", "rand"], [42, 1, 1, "", "refine_names"], [42, 1, 1, "", "reshape"], [42, 1, 1, "", "sample"], [42, 1, 1, "", "separates"], [42, 1, 1, "", "set"], [42, 1, 1, "", "squeeze"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_numpy"], [42, 1, 1, "", "type_check"], [42, 1, 1, "", "unflatten"], [42, 1, 1, "", "unlock_"], [42, 1, 1, "", "unsqueeze"], [42, 1, 1, "", "values"], [42, 1, 1, "", "view"], [42, 1, 1, "", "zero"], [42, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "cardinality"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "clone"], [43, 1, 1, "", "contains"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 2, 1, "", "device"], [43, 1, 1, "", "empty"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "enumerate"], [43, 1, 1, "", "erase_memoize_cache"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "flatten"], [43, 1, 1, "", "get"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_empty"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "items"], [43, 1, 1, "", "keys"], [43, 1, 1, "", "lock_"], [43, 1, 1, "", "make_neg_dim"], [43, 1, 1, "", "memoize_encode"], [43, 2, 1, "", "names"], [43, 2, 1, "", "ndim"], [43, 1, 1, "", "ndimension"], [43, 1, 1, "", "one"], [43, 1, 1, "", "ones"], [43, 1, 1, "", "pop"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "refine_names"], [43, 1, 1, "", "reshape"], [43, 1, 1, "", "sample"], [43, 1, 1, "", "separates"], [43, 1, 1, "", "set"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "unflatten"], [43, 1, 1, "", "unlock_"], [43, 1, 1, "", "unsqueeze"], [43, 1, 1, "", "values"], [43, 1, 1, "", "view"], [43, 1, 1, "", "zero"], [43, 1, 1, "", "zeros"]], "torchrl.data.DensifyReward": [[45, 1, 1, "", "add_module"], [45, 1, 1, "", "apply"], [45, 1, 1, "", "bfloat16"], [45, 1, 1, "", "buffers"], [45, 1, 1, "", "children"], [45, 1, 1, "", "compile"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 1, 1, "", "double"], [45, 1, 1, "", "eval"], [45, 1, 1, "", "extra_repr"], [45, 1, 1, "", "float"], [45, 1, 1, "", "forward"], [45, 1, 1, "", "get_buffer"], [45, 1, 1, "", "get_extra_state"], [45, 1, 1, "", "get_parameter"], [45, 1, 1, "", "get_submodule"], [45, 1, 1, "", "half"], [45, 1, 1, "", "ipu"], [45, 1, 1, "", "is_tdmodule_compatible"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "modules"], [45, 1, 1, "", "mtia"], [45, 1, 1, "", "named_buffers"], [45, 1, 1, "", "named_children"], [45, 1, 1, "", "named_modules"], [45, 1, 1, "", "named_parameters"], [45, 1, 1, "", "parameters"], [45, 1, 1, "", "register_backward_hook"], [45, 1, 1, "", "register_buffer"], [45, 1, 1, "", "register_forward_hook"], [45, 1, 1, "", "register_forward_pre_hook"], [45, 1, 1, "", "register_full_backward_hook"], [45, 1, 1, "", "register_full_backward_pre_hook"], [45, 1, 1, "", "register_load_state_dict_post_hook"], [45, 1, 1, "", "register_load_state_dict_pre_hook"], [45, 1, 1, "", "register_module"], [45, 1, 1, "", "register_parameter"], [45, 1, 1, "", "register_state_dict_post_hook"], [45, 1, 1, "", "register_state_dict_pre_hook"], [45, 1, 1, "", "requires_grad_"], [45, 1, 1, "", "reset_out_keys"], [45, 1, 1, "", "reset_parameters_recursive"], [45, 1, 1, "", "select_out_keys"], [45, 1, 1, "", "set_extra_state"], [45, 1, 1, "", "set_submodule"], [45, 1, 1, "", "share_memory"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_empty"], [45, 1, 1, "", "train"], [45, 1, 1, "", "type"], [45, 1, 1, "", "xpu"], [45, 1, 1, "", "zero_grad"]], "torchrl.data.DiscreteTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "cardinality"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "clone"], [46, 1, 1, "", "contains"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 4, 1, "", "device"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "enumerate"], [46, 1, 1, "", "erase_memoize_cache"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "flatten"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "make_neg_dim"], [46, 1, 1, "", "memoize_encode"], [46, 2, 1, "", "ndim"], [46, 1, 1, "", "ndimension"], [46, 1, 1, "", "one"], [46, 1, 1, "", "ones"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "reshape"], [46, 1, 1, "", "sample"], [46, 1, 1, "", "set_provisional_n"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_categorical"], [46, 1, 1, "", "to_categorical_spec"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "to_one_hot"], [46, 1, 1, "", "to_one_hot_spec"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "unflatten"], [46, 1, 1, "", "unsqueeze"], [46, 1, 1, "", "update_mask"], [46, 1, 1, "", "view"], [46, 1, 1, "", "zero"], [46, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[50, 1, 1, "", "add_module"], [50, 1, 1, "", "apply"], [50, 1, 1, "", "bfloat16"], [50, 1, 1, "", "buffers"], [50, 1, 1, "", "children"], [50, 1, 1, "", "compile"], [50, 1, 1, "", "cpu"], [50, 1, 1, "", "cuda"], [50, 1, 1, "", "double"], [50, 1, 1, "", "eval"], [50, 1, 1, "", "extra_repr"], [50, 1, 1, "", "float"], [50, 1, 1, "", "forward"], [50, 1, 1, "", "get_buffer"], [50, 1, 1, "", "get_extra_state"], [50, 1, 1, "", "get_parameter"], [50, 1, 1, "", "get_submodule"], [50, 1, 1, "", "half"], [50, 1, 1, "", "ipu"], [50, 1, 1, "", "load_state_dict"], [50, 1, 1, "", "modules"], [50, 1, 1, "", "mtia"], [50, 1, 1, "", "named_buffers"], [50, 1, 1, "", "named_children"], [50, 1, 1, "", "named_modules"], [50, 1, 1, "", "named_parameters"], [50, 1, 1, "", "parameters"], [50, 1, 1, "", "register_backward_hook"], [50, 1, 1, "", "register_buffer"], [50, 1, 1, "", "register_forward_hook"], [50, 1, 1, "", "register_forward_pre_hook"], [50, 1, 1, "", "register_full_backward_hook"], [50, 1, 1, "", "register_full_backward_pre_hook"], [50, 1, 1, "", "register_load_state_dict_post_hook"], [50, 1, 1, "", "register_load_state_dict_pre_hook"], [50, 1, 1, "", "register_module"], [50, 1, 1, "", "register_parameter"], [50, 1, 1, "", "register_state_dict_post_hook"], [50, 1, 1, "", "register_state_dict_pre_hook"], [50, 1, 1, "", "requires_grad_"], [50, 1, 1, "", "set_extra_state"], [50, 1, 1, "", "set_submodule"], [50, 1, 1, "", "share_memory"], [50, 1, 1, "", "state_dict"], [50, 1, 1, "", "to"], [50, 1, 1, "", "to_empty"], [50, 1, 1, "", "train"], [50, 1, 1, "", "type"], [50, 1, 1, "", "xpu"], [50, 1, 1, "", "zero_grad"]], "torchrl.data.LazyStackedCompositeSpec": [[51, 1, 1, "", "assert_is_in"], [51, 1, 1, "", "cardinality"], [51, 1, 1, "", "clear_device_"], [51, 1, 1, "", "clone"], [51, 1, 1, "", "contains"], [51, 1, 1, "", "cpu"], [51, 1, 1, "", "cuda"], [51, 2, 1, "", "device"], [51, 1, 1, "", "empty"], [51, 1, 1, "", "encode"], [51, 1, 1, "", "enumerate"], [51, 1, 1, "", "erase_memoize_cache"], [51, 1, 1, "", "expand"], [51, 1, 1, "", "flatten"], [51, 1, 1, "", "get"], [51, 1, 1, "", "implements_for_spec"], [51, 1, 1, "", "index"], [51, 1, 1, "", "is_empty"], [51, 1, 1, "", "is_in"], [51, 1, 1, "", "items"], [51, 1, 1, "", "keys"], [51, 1, 1, "", "lock_"], [51, 1, 1, "", "make_neg_dim"], [51, 1, 1, "", "memoize_encode"], [51, 2, 1, "", "names"], [51, 2, 1, "", "ndim"], [51, 1, 1, "", "ndimension"], [51, 1, 1, "", "one"], [51, 1, 1, "", "ones"], [51, 1, 1, "", "pop"], [51, 1, 1, "", "project"], [51, 1, 1, "", "rand"], [51, 1, 1, "", "refine_names"], [51, 1, 1, "", "reshape"], [51, 1, 1, "", "sample"], [51, 1, 1, "", "separates"], [51, 1, 1, "", "set"], [51, 1, 1, "", "squeeze"], [51, 1, 1, "", "to"], [51, 1, 1, "", "to_numpy"], [51, 1, 1, "", "type_check"], [51, 1, 1, "", "unflatten"], [51, 1, 1, "", "unlock_"], [51, 1, 1, "", "unsqueeze"], [51, 1, 1, "", "values"], [51, 1, 1, "", "view"], [51, 1, 1, "", "zero"], [51, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[52, 1, 1, "", "assert_is_in"], [52, 1, 1, "", "cardinality"], [52, 1, 1, "", "clear_device_"], [52, 1, 1, "", "clone"], [52, 1, 1, "", "contains"], [52, 1, 1, "", "cpu"], [52, 1, 1, "", "cuda"], [52, 2, 1, "", "device"], [52, 1, 1, "", "encode"], [52, 1, 1, "", "enumerate"], [52, 1, 1, "", "erase_memoize_cache"], [52, 1, 1, "", "expand"], [52, 1, 1, "", "flatten"], [52, 1, 1, "", "implements_for_spec"], [52, 1, 1, "", "index"], [52, 1, 1, "", "is_in"], [52, 1, 1, "", "make_neg_dim"], [52, 1, 1, "", "memoize_encode"], [52, 2, 1, "", "ndim"], [52, 1, 1, "", "ndimension"], [52, 1, 1, "", "one"], [52, 1, 1, "", "ones"], [52, 1, 1, "", "project"], [52, 1, 1, "", "rand"], [52, 1, 1, "", "reshape"], [52, 1, 1, "", "sample"], [52, 1, 1, "", "squeeze"], [52, 1, 1, "", "to"], [52, 1, 1, "", "to_numpy"], [52, 1, 1, "", "type_check"], [52, 1, 1, "", "unflatten"], [52, 1, 1, "", "unsqueeze"], [52, 1, 1, "", "view"], [52, 1, 1, "", "zero"], [52, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[53, 2, 1, "", "action_keys"], [53, 2, 1, "", "done_keys"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "get_keys_from_env"], [53, 2, 1, "", "observation_keys"], [53, 2, 1, "", "reward_keys"], [53, 1, 1, "", "to_string"]], "torchrl.data.MultiCategorical": [[54, 1, 1, "", "assert_is_in"], [54, 1, 1, "", "cardinality"], [54, 1, 1, "", "clear_device_"], [54, 1, 1, "", "clone"], [54, 1, 1, "", "contains"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 4, 1, "", "device"], [54, 1, 1, "", "encode"], [54, 1, 1, "", "enumerate"], [54, 1, 1, "", "erase_memoize_cache"], [54, 1, 1, "", "expand"], [54, 1, 1, "", "flatten"], [54, 1, 1, "", "implements_for_spec"], [54, 1, 1, "", "index"], [54, 1, 1, "", "is_in"], [54, 1, 1, "", "make_neg_dim"], [54, 1, 1, "", "memoize_encode"], [54, 2, 1, "", "ndim"], [54, 1, 1, "", "ndimension"], [54, 1, 1, "", "one"], [54, 1, 1, "", "ones"], [54, 1, 1, "", "project"], [54, 1, 1, "", "rand"], [54, 1, 1, "", "reshape"], [54, 1, 1, "", "sample"], [54, 1, 1, "", "set_provisional_n"], [54, 1, 1, "", "squeeze"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_categorical"], [54, 1, 1, "", "to_categorical_spec"], [54, 1, 1, "", "to_numpy"], [54, 1, 1, "", "to_one_hot"], [54, 1, 1, "", "to_one_hot_spec"], [54, 1, 1, "", "type_check"], [54, 1, 1, "", "unflatten"], [54, 1, 1, "", "unsqueeze"], [54, 1, 1, "", "update_mask"], [54, 1, 1, "", "view"], [54, 1, 1, "", "zero"], [54, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "cardinality"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "clone"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 4, 1, "", "device"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "enumerate"], [55, 1, 1, "", "erase_memoize_cache"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "make_neg_dim"], [55, 1, 1, "", "memoize_encode"], [55, 2, 1, "", "ndim"], [55, 1, 1, "", "ndimension"], [55, 1, 1, "", "one"], [55, 1, 1, "", "ones"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 1, 1, "", "sample"], [55, 1, 1, "", "set_provisional_n"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_categorical"], [55, 1, 1, "", "to_categorical_spec"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "to_one_hot"], [55, 1, 1, "", "to_one_hot_spec"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "unsqueeze"], [55, 1, 1, "", "update_mask"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"], [55, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[56, 1, 1, "", "assert_is_in"], [56, 1, 1, "", "cardinality"], [56, 1, 1, "", "clear_device_"], [56, 1, 1, "", "clone"], [56, 1, 1, "", "contains"], [56, 1, 1, "", "cpu"], [56, 1, 1, "", "cuda"], [56, 4, 1, "", "device"], [56, 1, 1, "", "encode"], [56, 1, 1, "", "enumerate"], [56, 1, 1, "", "erase_memoize_cache"], [56, 1, 1, "", "expand"], [56, 1, 1, "", "flatten"], [56, 1, 1, "", "implements_for_spec"], [56, 1, 1, "", "index"], [56, 1, 1, "", "is_in"], [56, 1, 1, "", "make_neg_dim"], [56, 1, 1, "", "memoize_encode"], [56, 2, 1, "", "ndim"], [56, 1, 1, "", "ndimension"], [56, 1, 1, "", "one"], [56, 1, 1, "", "ones"], [56, 1, 1, "", "project"], [56, 1, 1, "", "rand"], [56, 1, 1, "", "reshape"], [56, 1, 1, "", "sample"], [56, 1, 1, "", "squeeze"], [56, 1, 1, "", "to"], [56, 1, 1, "", "to_categorical"], [56, 1, 1, "", "to_categorical_spec"], [56, 1, 1, "", "to_numpy"], [56, 1, 1, "", "to_one_hot"], [56, 1, 1, "", "to_one_hot_spec"], [56, 1, 1, "", "type_check"], [56, 1, 1, "", "unflatten"], [56, 1, 1, "", "unsqueeze"], [56, 1, 1, "", "update_mask"], [56, 1, 1, "", "view"], [56, 1, 1, "", "zero"], [56, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[57, 1, 1, "", "assert_is_in"], [57, 1, 1, "", "cardinality"], [57, 1, 1, "", "clear_device_"], [57, 1, 1, "", "clone"], [57, 1, 1, "", "contains"], [57, 1, 1, "", "cpu"], [57, 1, 1, "", "cuda"], [57, 4, 1, "", "device"], [57, 1, 1, "", "encode"], [57, 1, 1, "", "enumerate"], [57, 1, 1, "", "erase_memoize_cache"], [57, 1, 1, "", "expand"], [57, 1, 1, "", "flatten"], [57, 1, 1, "", "implements_for_spec"], [57, 1, 1, "", "index"], [57, 1, 1, "", "is_in"], [57, 1, 1, "", "make_neg_dim"], [57, 1, 1, "", "memoize_encode"], [57, 2, 1, "", "ndim"], [57, 1, 1, "", "ndimension"], [57, 1, 1, "", "one"], [57, 1, 1, "", "ones"], [57, 1, 1, "", "project"], [57, 1, 1, "", "rand"], [57, 1, 1, "", "reshape"], [57, 1, 1, "", "sample"], [57, 1, 1, "", "squeeze"], [57, 1, 1, "", "to"], [57, 1, 1, "", "to_categorical"], [57, 1, 1, "", "to_categorical_spec"], [57, 1, 1, "", "to_numpy"], [57, 1, 1, "", "to_one_hot"], [57, 1, 1, "", "to_one_hot_spec"], [57, 1, 1, "", "type_check"], [57, 1, 1, "", "unflatten"], [57, 1, 1, "", "unsqueeze"], [57, 1, 1, "", "update_mask"], [57, 1, 1, "", "view"], [57, 1, 1, "", "zero"], [57, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[58, 1, 1, "", "add_module"], [58, 1, 1, "", "apply"], [58, 1, 1, "", "bfloat16"], [58, 1, 1, "", "buffers"], [58, 1, 1, "", "children"], [58, 1, 1, "", "compile"], [58, 1, 1, "", "cpu"], [58, 1, 1, "", "cuda"], [58, 1, 1, "", "double"], [58, 1, 1, "", "eval"], [58, 1, 1, "", "extra_repr"], [58, 1, 1, "", "float"], [58, 1, 1, "", "forward"], [58, 1, 1, "", "get_buffer"], [58, 1, 1, "", "get_extra_state"], [58, 1, 1, "", "get_parameter"], [58, 1, 1, "", "get_submodule"], [58, 1, 1, "", "half"], [58, 1, 1, "", "ipu"], [58, 1, 1, "", "load_state_dict"], [58, 1, 1, "", "modules"], [58, 1, 1, "", "mtia"], [58, 1, 1, "", "named_buffers"], [58, 1, 1, "", "named_children"], [58, 1, 1, "", "named_modules"], [58, 1, 1, "", "named_parameters"], [58, 1, 1, "", "parameters"], [58, 1, 1, "", "register_backward_hook"], [58, 1, 1, "", "register_buffer"], [58, 1, 1, "", "register_forward_hook"], [58, 1, 1, "", "register_forward_pre_hook"], [58, 1, 1, "", "register_full_backward_hook"], [58, 1, 1, "", "register_full_backward_pre_hook"], [58, 1, 1, "", "register_load_state_dict_post_hook"], [58, 1, 1, "", "register_load_state_dict_pre_hook"], [58, 1, 1, "", "register_module"], [58, 1, 1, "", "register_parameter"], [58, 1, 1, "", "register_state_dict_post_hook"], [58, 1, 1, "", "register_state_dict_pre_hook"], [58, 1, 1, "", "requires_grad_"], [58, 1, 1, "", "set_extra_state"], [58, 1, 1, "", "set_submodule"], [58, 1, 1, "", "share_memory"], [58, 1, 1, "", "state_dict"], [58, 1, 1, "", "to"], [58, 1, 1, "", "to_empty"], [58, 1, 1, "", "train"], [58, 1, 1, "", "type"], [58, 1, 1, "", "xpu"], [58, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[60, 1, 1, "", "assert_is_in"], [60, 1, 1, "", "cardinality"], [60, 1, 1, "", "clear_device_"], [60, 1, 1, "", "clone"], [60, 1, 1, "", "contains"], [60, 1, 1, "", "cpu"], [60, 1, 1, "", "cuda"], [60, 2, 1, "", "device"], [60, 1, 1, "", "encode"], [60, 1, 1, "", "enumerate"], [60, 1, 1, "", "erase_memoize_cache"], [60, 1, 1, "", "expand"], [60, 1, 1, "", "flatten"], [60, 1, 1, "", "implements_for_spec"], [60, 1, 1, "", "index"], [60, 1, 1, "", "is_in"], [60, 1, 1, "", "make_neg_dim"], [60, 1, 1, "", "memoize_encode"], [60, 2, 1, "", "ndim"], [60, 1, 1, "", "ndimension"], [60, 1, 1, "", "one"], [60, 1, 1, "", "ones"], [60, 1, 1, "", "project"], [60, 1, 1, "", "rand"], [60, 1, 1, "", "reshape"], [60, 1, 1, "", "sample"], [60, 1, 1, "", "squeeze"], [60, 1, 1, "", "to"], [60, 1, 1, "", "to_numpy"], [60, 1, 1, "", "type_check"], [60, 1, 1, "", "unflatten"], [60, 1, 1, "", "unsqueeze"], [60, 1, 1, "", "view"], [60, 1, 1, "", "zero"], [60, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[61, 1, 1, "", "assert_is_in"], [61, 1, 1, "", "cardinality"], [61, 1, 1, "", "clear_device_"], [61, 1, 1, "", "clone"], [61, 1, 1, "", "contains"], [61, 1, 1, "", "cpu"], [61, 1, 1, "", "cuda"], [61, 2, 1, "", "device"], [61, 1, 1, "", "encode"], [61, 1, 1, "", "enumerate"], [61, 1, 1, "", "erase_memoize_cache"], [61, 1, 1, "", "expand"], [61, 1, 1, "", "flatten"], [61, 1, 1, "", "implements_for_spec"], [61, 1, 1, "", "index"], [61, 1, 1, "", "is_in"], [61, 1, 1, "", "make_neg_dim"], [61, 1, 1, "", "memoize_encode"], [61, 2, 1, "", "ndim"], [61, 1, 1, "", "ndimension"], [61, 1, 1, "", "one"], [61, 1, 1, "", "ones"], [61, 1, 1, "", "project"], [61, 1, 1, "", "rand"], [61, 1, 1, "", "reshape"], [61, 1, 1, "", "sample"], [61, 1, 1, "", "squeeze"], [61, 1, 1, "", "to"], [61, 1, 1, "", "to_numpy"], [61, 1, 1, "", "type_check"], [61, 1, 1, "", "unflatten"], [61, 1, 1, "", "unsqueeze"], [61, 1, 1, "", "view"], [61, 1, 1, "", "zero"], [61, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[62, 1, 1, "", "assert_is_in"], [62, 1, 1, "", "cardinality"], [62, 1, 1, "", "clear_device_"], [62, 1, 1, "", "clone"], [62, 1, 1, "", "contains"], [62, 1, 1, "", "cpu"], [62, 1, 1, "", "cuda"], [62, 4, 1, "", "device"], [62, 1, 1, "", "encode"], [62, 1, 1, "", "enumerate"], [62, 1, 1, "", "erase_memoize_cache"], [62, 1, 1, "", "expand"], [62, 1, 1, "", "flatten"], [62, 1, 1, "", "implements_for_spec"], [62, 1, 1, "", "index"], [62, 1, 1, "", "is_in"], [62, 1, 1, "", "make_neg_dim"], [62, 1, 1, "", "memoize_encode"], [62, 2, 1, "", "ndim"], [62, 1, 1, "", "ndimension"], [62, 1, 1, "", "one"], [62, 1, 1, "", "ones"], [62, 1, 1, "", "project"], [62, 1, 1, "", "rand"], [62, 1, 1, "", "reshape"], [62, 1, 1, "", "sample"], [62, 1, 1, "", "squeeze"], [62, 1, 1, "", "to"], [62, 1, 1, "", "to_categorical"], [62, 1, 1, "", "to_categorical_spec"], [62, 1, 1, "", "to_numpy"], [62, 1, 1, "", "to_one_hot"], [62, 1, 1, "", "to_one_hot_spec"], [62, 1, 1, "", "type_check"], [62, 1, 1, "", "unflatten"], [62, 1, 1, "", "unsqueeze"], [62, 1, 1, "", "update_mask"], [62, 1, 1, "", "view"], [62, 1, 1, "", "zero"], [62, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[63, 1, 1, "", "assert_is_in"], [63, 1, 1, "", "cardinality"], [63, 1, 1, "", "clear_device_"], [63, 1, 1, "", "clone"], [63, 1, 1, "", "contains"], [63, 1, 1, "", "cpu"], [63, 1, 1, "", "cuda"], [63, 4, 1, "", "device"], [63, 1, 1, "", "encode"], [63, 1, 1, "", "enumerate"], [63, 1, 1, "", "erase_memoize_cache"], [63, 1, 1, "", "expand"], [63, 1, 1, "", "flatten"], [63, 1, 1, "", "implements_for_spec"], [63, 1, 1, "", "index"], [63, 1, 1, "", "is_in"], [63, 1, 1, "", "make_neg_dim"], [63, 1, 1, "", "memoize_encode"], [63, 2, 1, "", "ndim"], [63, 1, 1, "", "ndimension"], [63, 1, 1, "", "one"], [63, 1, 1, "", "ones"], [63, 1, 1, "", "project"], [63, 1, 1, "", "rand"], [63, 1, 1, "", "reshape"], [63, 1, 1, "", "sample"], [63, 1, 1, "", "squeeze"], [63, 1, 1, "", "to"], [63, 1, 1, "", "to_categorical"], [63, 1, 1, "", "to_categorical_spec"], [63, 1, 1, "", "to_numpy"], [63, 1, 1, "", "to_one_hot"], [63, 1, 1, "", "to_one_hot_spec"], [63, 1, 1, "", "type_check"], [63, 1, 1, "", "unflatten"], [63, 1, 1, "", "unsqueeze"], [63, 1, 1, "", "update_mask"], [63, 1, 1, "", "view"], [63, 1, 1, "", "zero"], [63, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[64, 2, 1, "", "device"], [64, 1, 1, "", "dumps"], [64, 1, 1, "", "fields"], [64, 1, 1, "", "from_dataset"], [64, 1, 1, "", "from_tensordict"], [64, 1, 1, "", "get"], [64, 1, 1, "", "load"], [64, 1, 1, "", "load_"], [64, 1, 1, "", "load_memmap"], [64, 1, 1, "", "load_state_dict"], [64, 1, 1, "", "memmap"], [64, 1, 1, "", "memmap_"], [64, 1, 1, "", "memmap_like"], [64, 1, 1, "", "memmap_refresh_"], [64, 1, 1, "", "save"], [64, 1, 1, "", "set"], [64, 1, 1, "", "state_dict"], [64, 1, 1, "", "to_tensordict"], [64, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[65, 1, 1, "", "add"], [65, 1, 1, "", "append_transform"], [65, 1, 1, "", "as_remote"], [65, 2, 1, "", "batch_size"], [65, 1, 1, "", "dump"], [65, 1, 1, "", "dumps"], [65, 1, 1, "", "empty"], [65, 1, 1, "", "extend"], [65, 1, 1, "", "insert_transform"], [65, 1, 1, "", "load"], [65, 1, 1, "", "loads"], [65, 1, 1, "", "next"], [65, 1, 1, "", "register_load_hook"], [65, 1, 1, "", "register_save_hook"], [65, 1, 1, "", "sample"], [65, 2, 1, "", "sampler"], [65, 1, 1, "", "save"], [65, 1, 1, "", "set_sampler"], [65, 1, 1, "", "set_storage"], [65, 1, 1, "", "set_writer"], [65, 2, 1, "", "storage"], [65, 2, 1, "", "write_count"], [65, 2, 1, "", "writer"]], "torchrl.data.PromptData": [[66, 2, 1, "", "device"], [66, 1, 1, "", "dumps"], [66, 1, 1, "", "fields"], [66, 1, 1, "", "from_dataset"], [66, 1, 1, "", "from_tensordict"], [66, 1, 1, "", "get"], [66, 1, 1, "", "load"], [66, 1, 1, "", "load_"], [66, 1, 1, "", "load_memmap"], [66, 1, 1, "", "load_state_dict"], [66, 1, 1, "", "memmap"], [66, 1, 1, "", "memmap_"], [66, 1, 1, "", "memmap_like"], [66, 1, 1, "", "memmap_refresh_"], [66, 1, 1, "", "save"], [66, 1, 1, "", "set"], [66, 1, 1, "", "state_dict"], [66, 1, 1, "", "to_tensordict"], [66, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[68, 1, 1, "", "add_module"], [68, 1, 1, "", "apply"], [68, 1, 1, "", "bfloat16"], [68, 1, 1, "", "buffers"], [68, 1, 1, "", "children"], [68, 1, 1, "", "compile"], [68, 1, 1, "", "cpu"], [68, 1, 1, "", "cuda"], [68, 1, 1, "", "double"], [68, 1, 1, "", "eval"], [68, 1, 1, "", "extra_repr"], [68, 1, 1, "", "float"], [68, 1, 1, "", "forward"], [68, 1, 1, "", "get_buffer"], [68, 1, 1, "", "get_extra_state"], [68, 1, 1, "", "get_parameter"], [68, 1, 1, "", "get_submodule"], [68, 1, 1, "", "half"], [68, 1, 1, "", "ipu"], [68, 1, 1, "", "is_tdmodule_compatible"], [68, 1, 1, "", "load_state_dict"], [68, 1, 1, "", "modules"], [68, 1, 1, "", "mtia"], [68, 1, 1, "", "named_buffers"], [68, 1, 1, "", "named_children"], [68, 1, 1, "", "named_modules"], [68, 1, 1, "", "named_parameters"], [68, 1, 1, "", "parameters"], [68, 1, 1, "", "register_backward_hook"], [68, 1, 1, "", "register_buffer"], [68, 1, 1, "", "register_forward_hook"], [68, 1, 1, "", "register_forward_pre_hook"], [68, 1, 1, "", "register_full_backward_hook"], [68, 1, 1, "", "register_full_backward_pre_hook"], [68, 1, 1, "", "register_load_state_dict_post_hook"], [68, 1, 1, "", "register_load_state_dict_pre_hook"], [68, 1, 1, "", "register_module"], [68, 1, 1, "", "register_parameter"], [68, 1, 1, "", "register_state_dict_post_hook"], [68, 1, 1, "", "register_state_dict_pre_hook"], [68, 1, 1, "", "requires_grad_"], [68, 1, 1, "", "reset_out_keys"], [68, 1, 1, "", "reset_parameters_recursive"], [68, 1, 1, "", "select_out_keys"], [68, 1, 1, "", "set_extra_state"], [68, 1, 1, "", "set_submodule"], [68, 1, 1, "", "share_memory"], [68, 1, 1, "", "state_dict"], [68, 1, 1, "", "to"], [68, 1, 1, "", "to_empty"], [68, 1, 1, "", "train"], [68, 1, 1, "", "type"], [68, 1, 1, "", "xpu"], [68, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[69, 1, 1, "", "add_module"], [69, 1, 1, "", "apply"], [69, 1, 1, "", "bfloat16"], [69, 1, 1, "", "buffers"], [69, 1, 1, "", "children"], [69, 1, 1, "", "compile"], [69, 1, 1, "", "cpu"], [69, 1, 1, "", "cuda"], [69, 1, 1, "", "double"], [69, 1, 1, "", "eval"], [69, 1, 1, "", "extra_repr"], [69, 1, 1, "", "fit"], [69, 1, 1, "", "float"], [69, 1, 1, "", "forward"], [69, 1, 1, "", "get_buffer"], [69, 1, 1, "", "get_extra_state"], [69, 1, 1, "", "get_parameter"], [69, 1, 1, "", "get_submodule"], [69, 1, 1, "", "half"], [69, 1, 1, "", "ipu"], [69, 1, 1, "", "load_state_dict"], [69, 1, 1, "", "modules"], [69, 1, 1, "", "mtia"], [69, 1, 1, "", "named_buffers"], [69, 1, 1, "", "named_children"], [69, 1, 1, "", "named_modules"], [69, 1, 1, "", "named_parameters"], [69, 1, 1, "", "parameters"], [69, 1, 1, "", "register_backward_hook"], [69, 1, 1, "", "register_buffer"], [69, 1, 1, "", "register_forward_hook"], [69, 1, 1, "", "register_forward_pre_hook"], [69, 1, 1, "", "register_full_backward_hook"], [69, 1, 1, "", "register_full_backward_pre_hook"], [69, 1, 1, "", "register_load_state_dict_post_hook"], [69, 1, 1, "", "register_load_state_dict_pre_hook"], [69, 1, 1, "", "register_module"], [69, 1, 1, "", "register_parameter"], [69, 1, 1, "", "register_state_dict_post_hook"], [69, 1, 1, "", "register_state_dict_pre_hook"], [69, 1, 1, "", "requires_grad_"], [69, 1, 1, "", "set_extra_state"], [69, 1, 1, "", "set_submodule"], [69, 1, 1, "", "share_memory"], [69, 1, 1, "", "state_dict"], [69, 1, 1, "", "to"], [69, 1, 1, "", "to_empty"], [69, 1, 1, "", "train"], [69, 1, 1, "", "type"], [69, 1, 1, "", "xpu"], [69, 1, 1, "", "zero_grad"]], "torchrl.data.RayReplayBuffer": [[70, 1, 1, "", "add"], [70, 1, 1, "", "append_transform"], [70, 1, 1, "", "as_remote"], [70, 2, 1, "", "batch_size"], [70, 1, 1, "", "close"], [70, 1, 1, "", "dump"], [70, 1, 1, "", "dumps"], [70, 1, 1, "", "empty"], [70, 1, 1, "", "extend"], [70, 1, 1, "", "insert_transform"], [70, 1, 1, "", "load"], [70, 1, 1, "", "loads"], [70, 1, 1, "", "next"], [70, 1, 1, "", "register_load_hook"], [70, 1, 1, "", "register_save_hook"], [70, 1, 1, "", "sample"], [70, 2, 1, "", "sampler"], [70, 1, 1, "", "save"], [70, 1, 1, "", "set_sampler"], [70, 1, 1, "", "set_storage"], [70, 1, 1, "", "set_writer"], [70, 2, 1, "", "storage"], [70, 2, 1, "", "write_count"], [70, 2, 1, "", "writer"]], "torchrl.data.RemoteTensorDictReplayBuffer": [[71, 1, 1, "", "add"], [71, 1, 1, "", "append_transform"], [71, 1, 1, "", "as_remote"], [71, 2, 1, "", "batch_size"], [71, 1, 1, "", "dump"], [71, 1, 1, "", "dumps"], [71, 1, 1, "", "empty"], [71, 1, 1, "", "extend"], [71, 1, 1, "", "insert_transform"], [71, 1, 1, "", "load"], [71, 1, 1, "", "loads"], [71, 1, 1, "", "next"], [71, 1, 1, "", "register_load_hook"], [71, 1, 1, "", "register_save_hook"], [71, 1, 1, "", "sample"], [71, 2, 1, "", "sampler"], [71, 1, 1, "", "save"], [71, 1, 1, "", "set_sampler"], [71, 1, 1, "", "set_storage"], [71, 1, 1, "", "set_writer"], [71, 2, 1, "", "storage"], [71, 2, 1, "", "write_count"], [71, 2, 1, "", "writer"]], "torchrl.data.ReplayBuffer": [[72, 1, 1, "", "add"], [72, 1, 1, "", "append_transform"], [72, 1, 1, "", "as_remote"], [72, 2, 1, "", "batch_size"], [72, 1, 1, "", "dump"], [72, 1, 1, "", "dumps"], [72, 1, 1, "", "empty"], [72, 1, 1, "", "extend"], [72, 1, 1, "", "insert_transform"], [72, 1, 1, "", "load"], [72, 1, 1, "", "loads"], [72, 1, 1, "", "next"], [72, 1, 1, "", "register_load_hook"], [72, 1, 1, "", "register_save_hook"], [72, 1, 1, "", "sample"], [72, 2, 1, "", "sampler"], [72, 1, 1, "", "save"], [72, 1, 1, "", "set_sampler"], [72, 1, 1, "", "set_storage"], [72, 1, 1, "", "set_writer"], [72, 2, 1, "", "storage"], [72, 2, 1, "", "write_count"], [72, 2, 1, "", "writer"]], "torchrl.data.RewardData": [[73, 2, 1, "", "device"], [73, 1, 1, "", "dumps"], [73, 1, 1, "", "fields"], [73, 1, 1, "", "from_tensordict"], [73, 1, 1, "", "get"], [73, 1, 1, "", "load"], [73, 1, 1, "", "load_"], [73, 1, 1, "", "load_memmap"], [73, 1, 1, "", "load_state_dict"], [73, 1, 1, "", "memmap"], [73, 1, 1, "", "memmap_"], [73, 1, 1, "", "memmap_like"], [73, 1, 1, "", "memmap_refresh_"], [73, 1, 1, "", "save"], [73, 1, 1, "", "set"], [73, 1, 1, "", "state_dict"], [73, 1, 1, "", "to_tensordict"], [73, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[74, 1, 1, "", "create_rollout_td"], [74, 1, 1, "", "generate"], [74, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[75, 1, 1, "", "add_module"], [75, 1, 1, "", "apply"], [75, 1, 1, "", "bfloat16"], [75, 1, 1, "", "buffers"], [75, 1, 1, "", "children"], [75, 1, 1, "", "compile"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 1, 1, "", "double"], [75, 1, 1, "", "eval"], [75, 1, 1, "", "extra_repr"], [75, 1, 1, "", "float"], [75, 1, 1, "", "forward"], [75, 1, 1, "", "get_buffer"], [75, 1, 1, "", "get_extra_state"], [75, 1, 1, "", "get_parameter"], [75, 1, 1, "", "get_submodule"], [75, 1, 1, "", "half"], [75, 1, 1, "", "ipu"], [75, 1, 1, "", "load_state_dict"], [75, 1, 1, "", "modules"], [75, 1, 1, "", "mtia"], [75, 1, 1, "", "named_buffers"], [75, 1, 1, "", "named_children"], [75, 1, 1, "", "named_modules"], [75, 1, 1, "", "named_parameters"], [75, 1, 1, "", "parameters"], [75, 1, 1, "", "register_backward_hook"], [75, 1, 1, "", "register_buffer"], [75, 1, 1, "", "register_forward_hook"], [75, 1, 1, "", "register_forward_pre_hook"], [75, 1, 1, "", "register_full_backward_hook"], [75, 1, 1, "", "register_full_backward_pre_hook"], [75, 1, 1, "", "register_load_state_dict_post_hook"], [75, 1, 1, "", "register_load_state_dict_pre_hook"], [75, 1, 1, "", "register_module"], [75, 1, 1, "", "register_parameter"], [75, 1, 1, "", "register_state_dict_post_hook"], [75, 1, 1, "", "register_state_dict_pre_hook"], [75, 1, 1, "", "requires_grad_"], [75, 1, 1, "", "set_extra_state"], [75, 1, 1, "", "set_submodule"], [75, 1, 1, "", "share_memory"], [75, 1, 1, "", "state_dict"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_empty"], [75, 1, 1, "", "train"], [75, 1, 1, "", "type"], [75, 1, 1, "", "xpu"], [75, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[76, 1, 1, "", "assert_is_in"], [76, 1, 1, "", "cardinality"], [76, 1, 1, "", "clear_device_"], [76, 1, 1, "", "clone"], [76, 1, 1, "", "contains"], [76, 1, 1, "", "cpu"], [76, 1, 1, "", "cuda"], [76, 2, 1, "", "device"], [76, 1, 1, "", "encode"], [76, 1, 1, "", "enumerate"], [76, 1, 1, "", "erase_memoize_cache"], [76, 1, 1, "", "expand"], [76, 1, 1, "", "flatten"], [76, 1, 1, "", "implements_for_spec"], [76, 1, 1, "", "index"], [76, 1, 1, "", "is_in"], [76, 1, 1, "", "make_neg_dim"], [76, 1, 1, "", "memoize_encode"], [76, 2, 1, "", "ndim"], [76, 1, 1, "", "ndimension"], [76, 1, 1, "", "one"], [76, 1, 1, "", "ones"], [76, 1, 1, "", "project"], [76, 1, 1, "", "rand"], [76, 1, 1, "", "reshape"], [76, 1, 1, "", "sample"], [76, 1, 1, "", "squeeze"], [76, 1, 1, "", "to"], [76, 1, 1, "", "to_numpy"], [76, 1, 1, "", "type_check"], [76, 1, 1, "", "unflatten"], [76, 1, 1, "", "unsqueeze"], [76, 1, 1, "", "view"], [76, 1, 1, "", "zero"], [76, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[77, 1, 1, "", "assert_is_in"], [77, 1, 1, "", "cardinality"], [77, 1, 1, "", "clear_device_"], [77, 1, 1, "", "clone"], [77, 1, 1, "", "contains"], [77, 1, 1, "", "cpu"], [77, 1, 1, "", "cuda"], [77, 2, 1, "", "device"], [77, 1, 1, "", "empty"], [77, 1, 1, "", "encode"], [77, 1, 1, "", "enumerate"], [77, 1, 1, "", "erase_memoize_cache"], [77, 1, 1, "", "expand"], [77, 1, 1, "", "flatten"], [77, 1, 1, "", "get"], [77, 1, 1, "", "implements_for_spec"], [77, 1, 1, "", "index"], [77, 1, 1, "", "is_empty"], [77, 1, 1, "", "is_in"], [77, 1, 1, "", "items"], [77, 1, 1, "", "keys"], [77, 1, 1, "", "lock_"], [77, 1, 1, "", "make_neg_dim"], [77, 1, 1, "", "memoize_encode"], [77, 2, 1, "", "names"], [77, 2, 1, "", "ndim"], [77, 1, 1, "", "ndimension"], [77, 1, 1, "", "one"], [77, 1, 1, "", "ones"], [77, 1, 1, "", "pop"], [77, 1, 1, "", "project"], [77, 1, 1, "", "rand"], [77, 1, 1, "", "refine_names"], [77, 1, 1, "", "reshape"], [77, 1, 1, "", "sample"], [77, 1, 1, "", "separates"], [77, 1, 1, "", "set"], [77, 1, 1, "", "squeeze"], [77, 1, 1, "", "to"], [77, 1, 1, "", "to_numpy"], [77, 1, 1, "", "type_check"], [77, 1, 1, "", "unflatten"], [77, 1, 1, "", "unlock_"], [77, 1, 1, "", "unsqueeze"], [77, 1, 1, "", "values"], [77, 1, 1, "", "view"], [77, 1, 1, "", "zero"], [77, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[80, 1, 1, "", "add_module"], [80, 1, 1, "", "apply"], [80, 1, 1, "", "bfloat16"], [80, 1, 1, "", "buffers"], [80, 1, 1, "", "children"], [80, 1, 1, "", "compile"], [80, 1, 1, "", "cpu"], [80, 1, 1, "", "cuda"], [80, 1, 1, "", "double"], [80, 1, 1, "", "eval"], [80, 1, 1, "", "extra_repr"], [80, 1, 1, "", "float"], [80, 1, 1, "", "forward"], [80, 1, 1, "", "from_tensordict_pair"], [80, 1, 1, "", "get_buffer"], [80, 1, 1, "", "get_extra_state"], [80, 1, 1, "", "get_parameter"], [80, 1, 1, "", "get_submodule"], [80, 1, 1, "", "half"], [80, 1, 1, "", "ipu"], [80, 1, 1, "", "is_tdmodule_compatible"], [80, 1, 1, "", "load_state_dict"], [80, 1, 1, "", "modules"], [80, 1, 1, "", "mtia"], [80, 1, 1, "", "named_buffers"], [80, 1, 1, "", "named_children"], [80, 1, 1, "", "named_modules"], [80, 1, 1, "", "named_parameters"], [80, 1, 1, "", "parameters"], [80, 1, 1, "", "register_backward_hook"], [80, 1, 1, "", "register_buffer"], [80, 1, 1, "", "register_forward_hook"], [80, 1, 1, "", "register_forward_pre_hook"], [80, 1, 1, "", "register_full_backward_hook"], [80, 1, 1, "", "register_full_backward_pre_hook"], [80, 1, 1, "", "register_load_state_dict_post_hook"], [80, 1, 1, "", "register_load_state_dict_pre_hook"], [80, 1, 1, "", "register_module"], [80, 1, 1, "", "register_parameter"], [80, 1, 1, "", "register_state_dict_post_hook"], [80, 1, 1, "", "register_state_dict_pre_hook"], [80, 1, 1, "", "requires_grad_"], [80, 1, 1, "", "reset_out_keys"], [80, 1, 1, "", "reset_parameters_recursive"], [80, 1, 1, "", "select_out_keys"], [80, 1, 1, "", "set_extra_state"], [80, 1, 1, "", "set_submodule"], [80, 1, 1, "", "share_memory"], [80, 1, 1, "", "state_dict"], [80, 1, 1, "", "to"], [80, 1, 1, "", "to_empty"], [80, 1, 1, "", "train"], [80, 1, 1, "", "type"], [80, 1, 1, "", "xpu"], [80, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[81, 1, 1, "", "add"], [81, 1, 1, "", "append_transform"], [81, 1, 1, "", "as_remote"], [81, 2, 1, "", "batch_size"], [81, 1, 1, "", "dump"], [81, 1, 1, "", "dumps"], [81, 1, 1, "", "empty"], [81, 1, 1, "", "extend"], [81, 1, 1, "", "insert_transform"], [81, 1, 1, "", "load"], [81, 1, 1, "", "loads"], [81, 1, 1, "", "next"], [81, 1, 1, "", "register_load_hook"], [81, 1, 1, "", "register_save_hook"], [81, 1, 1, "", "sample"], [81, 2, 1, "", "sampler"], [81, 1, 1, "", "save"], [81, 1, 1, "", "set_sampler"], [81, 1, 1, "", "set_storage"], [81, 1, 1, "", "set_writer"], [81, 2, 1, "", "storage"], [81, 2, 1, "", "write_count"], [81, 2, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[82, 1, 1, "", "add"], [82, 1, 1, "", "append_transform"], [82, 1, 1, "", "as_remote"], [82, 2, 1, "", "batch_size"], [82, 1, 1, "", "dump"], [82, 1, 1, "", "dumps"], [82, 1, 1, "", "empty"], [82, 1, 1, "", "extend"], [82, 1, 1, "", "insert_transform"], [82, 1, 1, "", "load"], [82, 1, 1, "", "loads"], [82, 1, 1, "", "next"], [82, 1, 1, "", "register_load_hook"], [82, 1, 1, "", "register_save_hook"], [82, 1, 1, "", "sample"], [82, 2, 1, "", "sampler"], [82, 1, 1, "", "save"], [82, 1, 1, "", "set_sampler"], [82, 1, 1, "", "set_storage"], [82, 1, 1, "", "set_writer"], [82, 2, 1, "", "storage"], [82, 2, 1, "", "write_count"], [82, 2, 1, "", "writer"]], "torchrl.data.TensorSpec": [[85, 1, 1, "", "assert_is_in"], [85, 1, 1, "", "cardinality"], [85, 1, 1, "", "clear_device_"], [85, 1, 1, "", "clone"], [85, 1, 1, "", "contains"], [85, 1, 1, "", "cpu"], [85, 1, 1, "", "cuda"], [85, 2, 1, "", "device"], [85, 1, 1, "", "encode"], [85, 1, 1, "", "enumerate"], [85, 1, 1, "", "erase_memoize_cache"], [85, 1, 1, "", "expand"], [85, 1, 1, "", "flatten"], [85, 1, 1, "", "implements_for_spec"], [85, 1, 1, "", "index"], [85, 1, 1, "", "is_in"], [85, 1, 1, "", "make_neg_dim"], [85, 1, 1, "", "memoize_encode"], [85, 2, 1, "", "ndim"], [85, 1, 1, "", "ndimension"], [85, 1, 1, "", "one"], [85, 1, 1, "", "ones"], [85, 1, 1, "", "project"], [85, 1, 1, "", "rand"], [85, 1, 1, "", "reshape"], [85, 1, 1, "", "sample"], [85, 1, 1, "", "squeeze"], [85, 1, 1, "", "to"], [85, 1, 1, "", "to_numpy"], [85, 1, 1, "", "type_check"], [85, 1, 1, "", "unflatten"], [85, 1, 1, "", "unsqueeze"], [85, 1, 1, "", "view"], [85, 1, 1, "", "zero"], [85, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[86, 1, 1, "", "dataset_to_tensordict"], [86, 1, 1, "", "load"]], "torchrl.data.Tree": [[87, 2, 1, "", "branching_action"], [87, 1, 1, "", "cat"], [87, 2, 1, "", "device"], [87, 1, 1, "", "dumps"], [87, 1, 1, "", "edges"], [87, 1, 1, "", "fields"], [87, 1, 1, "", "from_any"], [87, 1, 1, "", "from_dataclass"], [87, 1, 1, "", "from_h5"], [87, 1, 1, "", "from_modules"], [87, 1, 1, "", "from_namedtuple"], [87, 1, 1, "", "from_pytree"], [87, 1, 1, "", "from_remote_init"], [87, 1, 1, "", "from_struct_array"], [87, 1, 1, "", "from_tensordict"], [87, 1, 1, "", "from_tuple"], [87, 1, 1, "", "fromkeys"], [87, 2, 1, "", "full_action_spec"], [87, 2, 1, "", "full_done_spec"], [87, 2, 1, "", "full_observation_spec"], [87, 2, 1, "", "full_reward_spec"], [87, 2, 1, "", "full_state_spec"], [87, 1, 1, "", "fully_expanded"], [87, 1, 1, "", "get"], [87, 1, 1, "", "get_vertex_by_hash"], [87, 1, 1, "", "get_vertex_by_id"], [87, 2, 1, "", "is_terminal"], [87, 1, 1, "", "lazy_stack"], [87, 1, 1, "", "load"], [87, 1, 1, "", "load_"], [87, 1, 1, "", "load_memmap"], [87, 1, 1, "", "load_state_dict"], [87, 1, 1, "", "make_node"], [87, 1, 1, "", "max_length"], [87, 1, 1, "", "maybe_dense_stack"], [87, 1, 1, "", "memmap"], [87, 1, 1, "", "memmap_"], [87, 1, 1, "", "memmap_like"], [87, 1, 1, "", "memmap_refresh_"], [87, 2, 1, "", "node_observation"], [87, 2, 1, "", "node_observations"], [87, 2, 1, "", "num_children"], [87, 1, 1, "", "num_vertices"], [87, 2, 1, "", "parent"], [87, 1, 1, "", "plot"], [87, 2, 1, "", "prev_action"], [87, 1, 1, "", "rollout_from_path"], [87, 1, 1, "", "save"], [87, 2, 1, "", "selected_actions"], [87, 1, 1, "", "set"], [87, 1, 1, "", "stack"], [87, 1, 1, "", "state_dict"], [87, 1, 1, "", "to_string"], [87, 1, 1, "", "to_tensordict"], [87, 1, 1, "", "unbind"], [87, 1, 1, "", "valid_paths"], [87, 1, 1, "", "vertices"], [87, 2, 1, "", "visits"]], "torchrl.data.Unbounded": [[88, 1, 1, "", "assert_is_in"], [88, 1, 1, "", "cardinality"], [88, 1, 1, "", "clear_device_"], [88, 1, 1, "", "clone"], [88, 1, 1, "", "contains"], [88, 1, 1, "", "cpu"], [88, 1, 1, "", "cuda"], [88, 2, 1, "", "device"], [88, 1, 1, "", "encode"], [88, 1, 1, "", "enumerate"], [88, 1, 1, "", "erase_memoize_cache"], [88, 1, 1, "", "expand"], [88, 1, 1, "", "flatten"], [88, 1, 1, "", "implements_for_spec"], [88, 1, 1, "", "index"], [88, 1, 1, "", "is_in"], [88, 1, 1, "", "make_neg_dim"], [88, 1, 1, "", "memoize_encode"], [88, 2, 1, "", "ndim"], [88, 1, 1, "", "ndimension"], [88, 1, 1, "", "one"], [88, 1, 1, "", "ones"], [88, 1, 1, "", "project"], [88, 1, 1, "", "rand"], [88, 1, 1, "", "reshape"], [88, 1, 1, "", "sample"], [88, 1, 1, "", "squeeze"], [88, 1, 1, "", "to"], [88, 1, 1, "", "to_numpy"], [88, 1, 1, "", "type_check"], [88, 1, 1, "", "unflatten"], [88, 1, 1, "", "unsqueeze"], [88, 1, 1, "", "view"], [88, 1, 1, "", "zero"], [88, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[89, 1, 1, "", "assert_is_in"], [89, 1, 1, "", "cardinality"], [89, 1, 1, "", "clear_device_"], [89, 1, 1, "", "clone"], [89, 1, 1, "", "contains"], [89, 1, 1, "", "cpu"], [89, 1, 1, "", "cuda"], [89, 2, 1, "", "device"], [89, 1, 1, "", "encode"], [89, 1, 1, "", "enumerate"], [89, 1, 1, "", "erase_memoize_cache"], [89, 1, 1, "", "expand"], [89, 1, 1, "", "flatten"], [89, 1, 1, "", "implements_for_spec"], [89, 1, 1, "", "index"], [89, 1, 1, "", "is_in"], [89, 1, 1, "", "make_neg_dim"], [89, 1, 1, "", "memoize_encode"], [89, 2, 1, "", "ndim"], [89, 1, 1, "", "ndimension"], [89, 1, 1, "", "one"], [89, 1, 1, "", "ones"], [89, 1, 1, "", "project"], [89, 1, 1, "", "rand"], [89, 1, 1, "", "reshape"], [89, 1, 1, "", "sample"], [89, 1, 1, "", "squeeze"], [89, 1, 1, "", "to"], [89, 1, 1, "", "to_numpy"], [89, 1, 1, "", "type_check"], [89, 1, 1, "", "unflatten"], [89, 1, 1, "", "unsqueeze"], [89, 1, 1, "", "view"], [89, 1, 1, "", "zero"], [89, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[90, 1, 1, "", "assert_is_in"], [90, 1, 1, "", "cardinality"], [90, 1, 1, "", "clear_device_"], [90, 1, 1, "", "clone"], [90, 1, 1, "", "contains"], [90, 1, 1, "", "cpu"], [90, 1, 1, "", "cuda"], [90, 2, 1, "", "device"], [90, 1, 1, "", "encode"], [90, 1, 1, "", "enumerate"], [90, 1, 1, "", "erase_memoize_cache"], [90, 1, 1, "", "expand"], [90, 1, 1, "", "flatten"], [90, 1, 1, "", "implements_for_spec"], [90, 1, 1, "", "index"], [90, 1, 1, "", "is_in"], [90, 1, 1, "", "make_neg_dim"], [90, 1, 1, "", "memoize_encode"], [90, 2, 1, "", "ndim"], [90, 1, 1, "", "ndimension"], [90, 1, 1, "", "one"], [90, 1, 1, "", "ones"], [90, 1, 1, "", "project"], [90, 1, 1, "", "rand"], [90, 1, 1, "", "reshape"], [90, 1, 1, "", "sample"], [90, 1, 1, "", "squeeze"], [90, 1, 1, "", "to"], [90, 1, 1, "", "to_numpy"], [90, 1, 1, "", "type_check"], [90, 1, 1, "", "unflatten"], [90, 1, 1, "", "unsqueeze"], [90, 1, 1, "", "view"], [90, 1, 1, "", "zero"], [90, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[91, 1, 1, "", "assert_is_in"], [91, 1, 1, "", "cardinality"], [91, 1, 1, "", "clear_device_"], [91, 1, 1, "", "clone"], [91, 1, 1, "", "contains"], [91, 1, 1, "", "cpu"], [91, 1, 1, "", "cuda"], [91, 2, 1, "", "device"], [91, 1, 1, "", "encode"], [91, 1, 1, "", "enumerate"], [91, 1, 1, "", "erase_memoize_cache"], [91, 1, 1, "", "expand"], [91, 1, 1, "", "flatten"], [91, 1, 1, "", "implements_for_spec"], [91, 1, 1, "", "index"], [91, 1, 1, "", "is_in"], [91, 1, 1, "", "make_neg_dim"], [91, 1, 1, "", "memoize_encode"], [91, 2, 1, "", "ndim"], [91, 1, 1, "", "ndimension"], [91, 1, 1, "", "one"], [91, 1, 1, "", "ones"], [91, 1, 1, "", "project"], [91, 1, 1, "", "rand"], [91, 1, 1, "", "reshape"], [91, 1, 1, "", "sample"], [91, 1, 1, "", "squeeze"], [91, 1, 1, "", "to"], [91, 1, 1, "", "to_numpy"], [91, 1, 1, "", "type_check"], [91, 1, 1, "", "unflatten"], [91, 1, 1, "", "unsqueeze"], [91, 1, 1, "", "view"], [91, 1, 1, "", "zero"], [91, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[92, 1, 1, "", "assert_is_in"], [92, 1, 1, "", "cardinality"], [92, 1, 1, "", "clear_device_"], [92, 1, 1, "", "clone"], [92, 1, 1, "", "contains"], [92, 1, 1, "", "cpu"], [92, 1, 1, "", "cuda"], [92, 2, 1, "", "device"], [92, 1, 1, "", "encode"], [92, 1, 1, "", "enumerate"], [92, 1, 1, "", "erase_memoize_cache"], [92, 1, 1, "", "expand"], [92, 1, 1, "", "flatten"], [92, 1, 1, "", "implements_for_spec"], [92, 1, 1, "", "index"], [92, 1, 1, "", "is_in"], [92, 1, 1, "", "make_neg_dim"], [92, 1, 1, "", "memoize_encode"], [92, 2, 1, "", "ndim"], [92, 1, 1, "", "ndimension"], [92, 1, 1, "", "one"], [92, 1, 1, "", "ones"], [92, 1, 1, "", "project"], [92, 1, 1, "", "rand"], [92, 1, 1, "", "reshape"], [92, 1, 1, "", "sample"], [92, 1, 1, "", "squeeze"], [92, 1, 1, "", "to"], [92, 1, 1, "", "to_numpy"], [92, 1, 1, "", "type_check"], [92, 1, 1, "", "unflatten"], [92, 1, 1, "", "unsqueeze"], [92, 1, 1, "", "view"], [92, 1, 1, "", "zero"], [92, 1, 1, "", "zeros"]], "torchrl.data.datasets": [[97, 0, 1, "", "AtariDQNExperienceReplay"], [98, 0, 1, "", "BaseDatasetExperienceReplay"], [99, 0, 1, "", "D4RLExperienceReplay"], [100, 0, 1, "", "GenDGRLExperienceReplay"], [101, 0, 1, "", "MinariExperienceReplay"], [102, 0, 1, "", "OpenMLExperienceReplay"], [103, 0, 1, "", "OpenXExperienceReplay"], [104, 0, 1, "", "RobosetExperienceReplay"], [105, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[97, 1, 1, "", "add"], [97, 1, 1, "", "append_transform"], [97, 1, 1, "", "as_remote"], [97, 2, 1, "", "batch_size"], [97, 2, 1, "", "data_path"], [97, 2, 1, "", "data_path_root"], [97, 1, 1, "", "delete"], [97, 1, 1, "", "dump"], [97, 1, 1, "", "dumps"], [97, 1, 1, "", "empty"], [97, 1, 1, "", "extend"], [97, 1, 1, "", "insert_transform"], [97, 1, 1, "", "load"], [97, 1, 1, "", "loads"], [97, 1, 1, "", "next"], [97, 1, 1, "", "preprocess"], [97, 1, 1, "", "register_load_hook"], [97, 1, 1, "", "register_save_hook"], [97, 1, 1, "", "sample"], [97, 2, 1, "", "sampler"], [97, 1, 1, "", "save"], [97, 1, 1, "", "set_sampler"], [97, 1, 1, "", "set_storage"], [97, 1, 1, "", "set_writer"], [97, 2, 1, "", "storage"], [97, 2, 1, "", "write_count"], [97, 2, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[98, 1, 1, "", "add"], [98, 1, 1, "", "append_transform"], [98, 1, 1, "", "as_remote"], [98, 2, 1, "", "batch_size"], [98, 2, 1, "", "data_path"], [98, 2, 1, "", "data_path_root"], [98, 1, 1, "", "delete"], [98, 1, 1, "", "dump"], [98, 1, 1, "", "dumps"], [98, 1, 1, "", "empty"], [98, 1, 1, "", "extend"], [98, 1, 1, "", "insert_transform"], [98, 1, 1, "", "load"], [98, 1, 1, "", "loads"], [98, 1, 1, "", "next"], [98, 1, 1, "", "preprocess"], [98, 1, 1, "", "register_load_hook"], [98, 1, 1, "", "register_save_hook"], [98, 1, 1, "", "sample"], [98, 2, 1, "", "sampler"], [98, 1, 1, "", "save"], [98, 1, 1, "", "set_sampler"], [98, 1, 1, "", "set_storage"], [98, 1, 1, "", "set_writer"], [98, 2, 1, "", "storage"], [98, 2, 1, "", "write_count"], [98, 2, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[99, 1, 1, "", "add"], [99, 1, 1, "", "append_transform"], [99, 1, 1, "", "as_remote"], [99, 2, 1, "", "batch_size"], [99, 2, 1, "", "data_path"], [99, 2, 1, "", "data_path_root"], [99, 1, 1, "", "delete"], [99, 1, 1, "", "dump"], [99, 1, 1, "", "dumps"], [99, 1, 1, "", "empty"], [99, 1, 1, "", "extend"], [99, 1, 1, "", "insert_transform"], [99, 1, 1, "", "load"], [99, 1, 1, "", "loads"], [99, 1, 1, "", "next"], [99, 1, 1, "", "preprocess"], [99, 1, 1, "", "register_load_hook"], [99, 1, 1, "", "register_save_hook"], [99, 1, 1, "", "sample"], [99, 2, 1, "", "sampler"], [99, 1, 1, "", "save"], [99, 1, 1, "", "set_sampler"], [99, 1, 1, "", "set_storage"], [99, 1, 1, "", "set_writer"], [99, 2, 1, "", "storage"], [99, 2, 1, "", "write_count"], [99, 2, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[100, 1, 1, "", "add"], [100, 1, 1, "", "append_transform"], [100, 1, 1, "", "as_remote"], [100, 2, 1, "", "batch_size"], [100, 2, 1, "", "data_path"], [100, 2, 1, "", "data_path_root"], [100, 1, 1, "", "delete"], [100, 1, 1, "", "dump"], [100, 1, 1, "", "dumps"], [100, 1, 1, "", "empty"], [100, 1, 1, "", "extend"], [100, 1, 1, "", "insert_transform"], [100, 1, 1, "", "load"], [100, 1, 1, "", "loads"], [100, 1, 1, "", "next"], [100, 1, 1, "", "preprocess"], [100, 1, 1, "", "register_load_hook"], [100, 1, 1, "", "register_save_hook"], [100, 1, 1, "", "sample"], [100, 2, 1, "", "sampler"], [100, 1, 1, "", "save"], [100, 1, 1, "", "set_sampler"], [100, 1, 1, "", "set_storage"], [100, 1, 1, "", "set_writer"], [100, 2, 1, "", "storage"], [100, 2, 1, "", "write_count"], [100, 2, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[101, 1, 1, "", "add"], [101, 1, 1, "", "append_transform"], [101, 1, 1, "", "as_remote"], [101, 2, 1, "", "batch_size"], [101, 2, 1, "", "data_path"], [101, 2, 1, "", "data_path_root"], [101, 1, 1, "", "delete"], [101, 1, 1, "", "dump"], [101, 1, 1, "", "dumps"], [101, 1, 1, "", "empty"], [101, 1, 1, "", "extend"], [101, 1, 1, "", "insert_transform"], [101, 1, 1, "", "load"], [101, 1, 1, "", "loads"], [101, 1, 1, "", "next"], [101, 1, 1, "", "preprocess"], [101, 1, 1, "", "register_load_hook"], [101, 1, 1, "", "register_save_hook"], [101, 1, 1, "", "sample"], [101, 2, 1, "", "sampler"], [101, 1, 1, "", "save"], [101, 1, 1, "", "set_sampler"], [101, 1, 1, "", "set_storage"], [101, 1, 1, "", "set_writer"], [101, 2, 1, "", "storage"], [101, 2, 1, "", "write_count"], [101, 2, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[102, 1, 1, "", "add"], [102, 1, 1, "", "append_transform"], [102, 1, 1, "", "as_remote"], [102, 2, 1, "", "batch_size"], [102, 2, 1, "", "data_path"], [102, 2, 1, "", "data_path_root"], [102, 1, 1, "", "delete"], [102, 1, 1, "", "dump"], [102, 1, 1, "", "dumps"], [102, 1, 1, "", "empty"], [102, 1, 1, "", "extend"], [102, 1, 1, "", "insert_transform"], [102, 1, 1, "", "load"], [102, 1, 1, "", "loads"], [102, 1, 1, "", "next"], [102, 1, 1, "", "preprocess"], [102, 1, 1, "", "register_load_hook"], [102, 1, 1, "", "register_save_hook"], [102, 1, 1, "", "sample"], [102, 2, 1, "", "sampler"], [102, 1, 1, "", "save"], [102, 1, 1, "", "set_sampler"], [102, 1, 1, "", "set_storage"], [102, 1, 1, "", "set_writer"], [102, 2, 1, "", "storage"], [102, 2, 1, "", "write_count"], [102, 2, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[103, 1, 1, "", "add"], [103, 1, 1, "", "append_transform"], [103, 1, 1, "", "as_remote"], [103, 2, 1, "", "batch_size"], [103, 2, 1, "", "data_path"], [103, 2, 1, "", "data_path_root"], [103, 1, 1, "", "delete"], [103, 1, 1, "", "dump"], [103, 1, 1, "", "dumps"], [103, 1, 1, "", "empty"], [103, 1, 1, "", "extend"], [103, 1, 1, "", "insert_transform"], [103, 1, 1, "", "load"], [103, 1, 1, "", "loads"], [103, 1, 1, "", "next"], [103, 1, 1, "", "preprocess"], [103, 1, 1, "", "register_load_hook"], [103, 1, 1, "", "register_save_hook"], [103, 1, 1, "", "sample"], [103, 2, 1, "", "sampler"], [103, 1, 1, "", "save"], [103, 1, 1, "", "set_sampler"], [103, 1, 1, "", "set_storage"], [103, 1, 1, "", "set_writer"], [103, 2, 1, "", "storage"], [103, 2, 1, "", "write_count"], [103, 2, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[104, 1, 1, "", "add"], [104, 1, 1, "", "append_transform"], [104, 1, 1, "", "as_remote"], [104, 2, 1, "", "batch_size"], [104, 2, 1, "", "data_path"], [104, 2, 1, "", "data_path_root"], [104, 1, 1, "", "delete"], [104, 1, 1, "", "dump"], [104, 1, 1, "", "dumps"], [104, 1, 1, "", "empty"], [104, 1, 1, "", "extend"], [104, 1, 1, "", "insert_transform"], [104, 1, 1, "", "load"], [104, 1, 1, "", "loads"], [104, 1, 1, "", "next"], [104, 1, 1, "", "preprocess"], [104, 1, 1, "", "register_load_hook"], [104, 1, 1, "", "register_save_hook"], [104, 1, 1, "", "sample"], [104, 2, 1, "", "sampler"], [104, 1, 1, "", "save"], [104, 1, 1, "", "set_sampler"], [104, 1, 1, "", "set_storage"], [104, 1, 1, "", "set_writer"], [104, 2, 1, "", "storage"], [104, 2, 1, "", "write_count"], [104, 2, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[105, 1, 1, "", "add"], [105, 1, 1, "", "append_transform"], [105, 1, 1, "", "as_remote"], [105, 2, 1, "", "batch_size"], [105, 2, 1, "", "data_path"], [105, 2, 1, "", "data_path_root"], [105, 1, 1, "", "delete"], [105, 1, 1, "", "dump"], [105, 1, 1, "", "dumps"], [105, 1, 1, "", "empty"], [105, 1, 1, "", "extend"], [105, 1, 1, "", "insert_transform"], [105, 1, 1, "", "load"], [105, 1, 1, "", "loads"], [105, 1, 1, "", "next"], [105, 1, 1, "", "preprocess"], [105, 1, 1, "", "register_load_hook"], [105, 1, 1, "", "register_save_hook"], [105, 1, 1, "", "sample"], [105, 2, 1, "", "sampler"], [105, 1, 1, "", "save"], [105, 1, 1, "", "set_sampler"], [105, 1, 1, "", "set_storage"], [105, 1, 1, "", "set_writer"], [105, 2, 1, "", "storage"], [105, 2, 1, "", "write_count"], [105, 2, 1, "", "writer"]], "torchrl.data.llm": [[107, 0, 1, "", "ContentBase"], [108, 0, 1, "", "History"], [109, 0, 1, "", "TopKRewardSelector"]], "torchrl.data.llm.ContentBase": [[107, 1, 1, "", "cat"], [107, 2, 1, "", "device"], [107, 1, 1, "", "dumps"], [107, 1, 1, "", "fields"], [107, 1, 1, "", "from_any"], [107, 1, 1, "", "from_dataclass"], [107, 1, 1, "", "from_h5"], [107, 1, 1, "", "from_modules"], [107, 1, 1, "", "from_namedtuple"], [107, 1, 1, "", "from_pytree"], [107, 1, 1, "", "from_remote_init"], [107, 1, 1, "", "from_struct_array"], [107, 1, 1, "", "from_tensordict"], [107, 1, 1, "", "from_tuple"], [107, 1, 1, "", "fromkeys"], [107, 1, 1, "", "get"], [107, 1, 1, "", "lazy_stack"], [107, 1, 1, "", "load"], [107, 1, 1, "", "load_"], [107, 1, 1, "", "load_memmap"], [107, 1, 1, "", "load_state_dict"], [107, 1, 1, "", "maybe_dense_stack"], [107, 1, 1, "", "memmap"], [107, 1, 1, "", "memmap_"], [107, 1, 1, "", "memmap_like"], [107, 1, 1, "", "memmap_refresh_"], [107, 1, 1, "", "save"], [107, 1, 1, "", "set"], [107, 1, 1, "", "stack"], [107, 1, 1, "", "state_dict"], [107, 1, 1, "", "to_tensordict"], [107, 1, 1, "", "unbind"]], "torchrl.data.llm.History": [[108, 1, 1, "", "append"], [108, 1, 1, "", "apply_chat_template"], [108, 1, 1, "", "cat"], [108, 1, 1, "", "default_spec"], [108, 2, 1, "", "device"], [108, 1, 1, "", "dumps"], [108, 1, 1, "", "fields"], [108, 1, 1, "", "from_any"], [108, 1, 1, "", "from_chats"], [108, 1, 1, "", "from_dataclass"], [108, 1, 1, "", "from_h5"], [108, 1, 1, "", "from_modules"], [108, 1, 1, "", "from_namedtuple"], [108, 1, 1, "", "from_pytree"], [108, 1, 1, "", "from_remote_init"], [108, 1, 1, "", "from_struct_array"], [108, 1, 1, "", "from_tensordict"], [108, 1, 1, "", "from_text"], [108, 1, 1, "", "from_tuple"], [108, 1, 1, "", "fromkeys"], [108, 1, 1, "", "get"], [108, 1, 1, "", "lazy_stack"], [108, 1, 1, "", "load"], [108, 1, 1, "", "load_"], [108, 1, 1, "", "load_memmap"], [108, 1, 1, "", "load_state_dict"], [108, 1, 1, "", "maybe_dense_stack"], [108, 1, 1, "", "memmap"], [108, 1, 1, "", "memmap_"], [108, 1, 1, "", "memmap_like"], [108, 1, 1, "", "memmap_refresh_"], [108, 1, 1, "", "save"], [108, 1, 1, "", "set"], [108, 1, 1, "", "stack"], [108, 1, 1, "", "state_dict"], [108, 1, 1, "", "to_tensordict"], [108, 1, 1, "", "unbind"]], "torchrl.data.llm.TopKRewardSelector": [[109, 1, 1, "", "add_module"], [109, 1, 1, "", "apply"], [109, 1, 1, "", "bfloat16"], [109, 1, 1, "", "buffers"], [109, 1, 1, "", "children"], [109, 1, 1, "", "close"], [109, 2, 1, "", "collector"], [109, 1, 1, "", "compile"], [109, 2, 1, "", "container"], [109, 1, 1, "", "cpu"], [109, 1, 1, "", "cuda"], [109, 1, 1, "", "double"], [109, 1, 1, "", "eval"], [109, 1, 1, "", "extra_repr"], [109, 1, 1, "", "float"], [109, 1, 1, "", "forward"], [109, 1, 1, "", "get_buffer"], [109, 1, 1, "", "get_extra_state"], [109, 1, 1, "", "get_parameter"], [109, 1, 1, "", "get_submodule"], [109, 1, 1, "", "half"], [109, 1, 1, "", "init"], [109, 1, 1, "", "inv"], [109, 1, 1, "", "ipu"], [109, 1, 1, "", "load_state_dict"], [109, 1, 1, "", "modules"], [109, 1, 1, "", "mtia"], [109, 1, 1, "", "named_buffers"], [109, 1, 1, "", "named_children"], [109, 1, 1, "", "named_modules"], [109, 1, 1, "", "named_parameters"], [109, 1, 1, "", "parameters"], [109, 2, 1, "", "parent"], [109, 1, 1, "", "register_backward_hook"], [109, 1, 1, "", "register_buffer"], [109, 1, 1, "", "register_forward_hook"], [109, 1, 1, "", "register_forward_pre_hook"], [109, 1, 1, "", "register_full_backward_hook"], [109, 1, 1, "", "register_full_backward_pre_hook"], [109, 1, 1, "", "register_load_state_dict_post_hook"], [109, 1, 1, "", "register_load_state_dict_pre_hook"], [109, 1, 1, "", "register_module"], [109, 1, 1, "", "register_parameter"], [109, 1, 1, "", "register_state_dict_post_hook"], [109, 1, 1, "", "register_state_dict_pre_hook"], [109, 1, 1, "", "requires_grad_"], [109, 1, 1, "", "set_extra_state"], [109, 1, 1, "", "set_submodule"], [109, 1, 1, "", "share_memory"], [109, 1, 1, "", "state_dict"], [109, 1, 1, "", "to"], [109, 1, 1, "", "to_empty"], [109, 1, 1, "", "train"], [109, 1, 1, "", "transform_action_spec"], [109, 1, 1, "", "transform_done_spec"], [109, 1, 1, "", "transform_env_batch_size"], [109, 1, 1, "", "transform_env_device"], [109, 1, 1, "", "transform_input_spec"], [109, 1, 1, "", "transform_observation_spec"], [109, 1, 1, "", "transform_output_spec"], [109, 1, 1, "", "transform_reward_spec"], [109, 1, 1, "", "transform_state_spec"], [109, 1, 1, "", "type"], [109, 1, 1, "", "xpu"], [109, 1, 1, "", "zero_grad"]], "torchrl.data.replay_buffers": [[110, 0, 1, "", "CompressedListStorage"], [111, 0, 1, "", "CompressedListStorageCheckpointer"], [112, 0, 1, "", "FlatStorageCheckpointer"], [113, 0, 1, "", "H5StorageCheckpointer"], [114, 0, 1, "", "ImmutableDatasetWriter"], [115, 0, 1, "", "LazyMemmapStorage"], [116, 0, 1, "", "LazyStackStorage"], [117, 0, 1, "", "LazyTensorStorage"], [118, 0, 1, "", "ListStorage"], [119, 0, 1, "", "ListStorageCheckpointer"], [120, 0, 1, "", "NestedStorageCheckpointer"], [121, 0, 1, "", "PrioritizedSampler"], [122, 0, 1, "", "PrioritizedSliceSampler"], [123, 0, 1, "", "RandomSampler"], [124, 0, 1, "", "ReplayBufferEnsemble"], [125, 0, 1, "", "RoundRobinWriter"], [126, 0, 1, "", "Sampler"], [127, 0, 1, "", "SamplerEnsemble"], [128, 0, 1, "", "SamplerWithoutReplacement"], [129, 0, 1, "", "SliceSampler"], [130, 0, 1, "", "SliceSamplerWithoutReplacement"], [131, 0, 1, "", "Storage"], [132, 0, 1, "", "StorageCheckpointerBase"], [133, 0, 1, "", "StorageEnsemble"], [134, 0, 1, "", "StorageEnsembleCheckpointer"], [135, 0, 1, "", "TensorDictMaxValueWriter"], [136, 0, 1, "", "TensorDictRoundRobinWriter"], [137, 0, 1, "", "TensorStorage"], [138, 0, 1, "", "TensorStorageCheckpointer"], [139, 0, 1, "", "Writer"], [140, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.CompressedListStorage": [[110, 1, 1, "", "attach"], [110, 1, 1, "", "bytes"], [110, 1, 1, "", "dump"], [110, 1, 1, "", "load"], [110, 1, 1, "", "load_state_dict"], [110, 1, 1, "", "save"], [110, 1, 1, "", "state_dict"], [110, 1, 1, "", "to_bytestream"]], "torchrl.data.replay_buffers.CompressedListStorageCheckpointer": [[111, 1, 1, "", "dumps"], [111, 1, 1, "", "loads"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[114, 1, 1, "", "add"], [114, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[115, 1, 1, "", "attach"], [115, 1, 1, "", "dump"], [115, 1, 1, "", "load"], [115, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyStackStorage": [[116, 1, 1, "", "attach"], [116, 1, 1, "", "dump"], [116, 1, 1, "", "load"], [116, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[117, 1, 1, "", "attach"], [117, 1, 1, "", "dump"], [117, 1, 1, "", "load"], [117, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[118, 1, 1, "", "attach"], [118, 1, 1, "", "dump"], [118, 1, 1, "", "load"], [118, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[121, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[122, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[124, 1, 1, "", "add"], [124, 1, 1, "", "append_transform"], [124, 1, 1, "", "as_remote"], [124, 2, 1, "", "batch_size"], [124, 1, 1, "", "dump"], [124, 1, 1, "", "dumps"], [124, 1, 1, "", "empty"], [124, 1, 1, "", "extend"], [124, 1, 1, "", "insert_transform"], [124, 1, 1, "", "load"], [124, 1, 1, "", "loads"], [124, 1, 1, "", "next"], [124, 1, 1, "", "register_load_hook"], [124, 1, 1, "", "register_save_hook"], [124, 1, 1, "", "sample"], [124, 2, 1, "", "sampler"], [124, 1, 1, "", "save"], [124, 1, 1, "", "set_sampler"], [124, 1, 1, "", "set_storage"], [124, 1, 1, "", "set_writer"], [124, 2, 1, "", "storage"], [124, 2, 1, "", "write_count"], [124, 2, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[125, 1, 1, "", "add"], [125, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[131, 1, 1, "", "attach"], [131, 1, 1, "", "dump"], [131, 1, 1, "", "load"], [131, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[133, 1, 1, "", "attach"], [133, 1, 1, "", "dump"], [133, 1, 1, "", "load"], [133, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[135, 1, 1, "", "add"], [135, 1, 1, "", "extend"], [135, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[136, 1, 1, "", "add"], [136, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[137, 1, 1, "", "attach"], [137, 1, 1, "", "dump"], [137, 1, 1, "", "load"], [137, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[139, 1, 1, "", "add"], [139, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[140, 1, 1, "", "add"], [140, 1, 1, "", "extend"]], "torchrl.envs": [[141, 0, 1, "", "AsyncEnvPool"], [142, 3, 1, "", "BraxEnv"], [143, 3, 1, "", "BraxWrapper"], [144, 0, 1, "", "ChessEnv"], [145, 3, 1, "", "DMControlEnv"], [146, 3, 1, "", "DMControlWrapper"], [147, 0, 1, "", "EnvBase"], [148, 0, 1, "", "EnvCreator"], [149, 0, 1, "", "EnvMetaData"], [150, 3, 1, "", "GymEnv"], [151, 0, 1, "", "GymLikeEnv"], [152, 3, 1, "", "GymWrapper"], [153, 3, 1, "", "HabitatEnv"], [154, 3, 1, "", "IsaacGymEnv"], [155, 3, 1, "", "IsaacGymWrapper"], [156, 3, 1, "", "IsaacLabWrapper"], [157, 3, 1, "", "JumanjiEnv"], [158, 3, 1, "", "JumanjiWrapper"], [159, 0, 1, "", "LLMHashingEnv"], [160, 3, 1, "", "MOGymEnv"], [161, 3, 1, "", "MOGymWrapper"], [162, 3, 1, "", "MarlGroupMapType"], [163, 3, 1, "", "MeltingpotEnv"], [164, 3, 1, "", "MeltingpotWrapper"], [165, 3, 1, "", "ModelBasedEnvBase"], [166, 3, 1, "", "MultiThreadedEnv"], [167, 3, 1, "", "MultiThreadedEnvWrapper"], [168, 3, 1, "", "OpenMLEnv"], [169, 3, 1, "", "OpenSpielEnv"], [170, 3, 1, "", "OpenSpielWrapper"], [171, 0, 1, "", "ParallelEnv"], [172, 0, 1, "", "PendulumEnv"], [173, 3, 1, "", "PettingZooEnv"], [174, 3, 1, "", "PettingZooWrapper"], [175, 0, 1, "", "ProcessorAsyncEnvPool"], [176, 3, 1, "", "RandomPolicy"], [177, 3, 1, "", "RoboHiveEnv"], [178, 3, 1, "", "SMACv2Env"], [179, 3, 1, "", "SMACv2Wrapper"], [180, 0, 1, "", "SerialEnv"], [181, 0, 1, "", "ThreadingAsyncEnvPool"], [182, 0, 1, "", "TicTacToeEnv"], [183, 3, 1, "", "UnityMLAgentsEnv"], [184, 3, 1, "", "UnityMLAgentsWrapper"], [185, 3, 1, "", "VmasEnv"], [186, 3, 1, "", "VmasWrapper"], [187, 3, 1, "", "check_env_specs"], [188, 3, 1, "", "check_marl_grouping"], [189, 3, 1, "", "exploration_type"], [190, 3, 1, "", "get_available_libraries"], [191, 3, 1, "", "gym_backend"], [220, 3, 1, "", "make_composite_from_td"], [165, 1, 1, "", "rand_step"], [223, 3, 1, "", "register_gym_spec_conversion"], [165, 1, 1, "", "reset"], [165, 1, 1, "", "rollout"], [224, 3, 1, "", "set_exploration_type"], [225, 3, 1, "", "set_gym_backend"], [165, 1, 1, "", "set_seed"], [165, 1, 1, "", "step"], [226, 3, 1, "", "step_mdp"], [227, 3, 1, "", "terminated_or_truncated"]], "torchrl.envs.AsyncEnvPool": [[141, 2, 1, "", "action_key"], [141, 2, 1, "", "action_keys"], [141, 2, 1, "", "action_spec"], [141, 2, 1, "", "action_spec_unbatched"], [141, 1, 1, "", "add_module"], [141, 1, 1, "", "add_truncated_keys"], [141, 1, 1, "", "all_actions"], [141, 1, 1, "", "any_done"], [141, 1, 1, "", "append_transform"], [141, 1, 1, "", "apply"], [141, 1, 1, "", "auto_specs_"], [141, 2, 1, "", "batch_dims"], [141, 2, 1, "", "batch_locked"], [141, 2, 1, "", "batch_size"], [141, 1, 1, "", "bfloat16"], [141, 1, 1, "", "buffers"], [141, 1, 1, "", "cardinality"], [141, 1, 1, "", "check_env_specs"], [141, 1, 1, "", "children"], [141, 2, 1, "", "collector"], [141, 1, 1, "", "compile"], [141, 1, 1, "", "cpu"], [141, 1, 1, "", "cuda"], [141, 2, 1, "", "done_key"], [141, 2, 1, "", "done_keys"], [141, 2, 1, "", "done_keys_groups"], [141, 2, 1, "", "done_spec"], [141, 2, 1, "", "done_spec_unbatched"], [141, 1, 1, "", "double"], [141, 1, 1, "", "empty_cache"], [141, 2, 1, "", "env_batch_sizes"], [141, 1, 1, "", "eval"], [141, 1, 1, "", "extra_repr"], [141, 1, 1, "", "fake_tensordict"], [141, 1, 1, "", "float"], [141, 1, 1, "", "forward"], [141, 2, 1, "", "full_action_spec"], [141, 2, 1, "", "full_action_spec_unbatched"], [141, 2, 1, "", "full_done_spec"], [141, 2, 1, "", "full_done_spec_unbatched"], [141, 2, 1, "", "full_observation_spec_unbatched"], [141, 2, 1, "", "full_reward_spec"], [141, 2, 1, "", "full_reward_spec_unbatched"], [141, 2, 1, "", "full_state_spec"], [141, 2, 1, "", "full_state_spec_unbatched"], [141, 1, 1, "", "get_buffer"], [141, 1, 1, "", "get_extra_state"], [141, 1, 1, "", "get_parameter"], [141, 1, 1, "", "get_submodule"], [141, 1, 1, "", "half"], [141, 2, 1, "", "input_spec"], [141, 2, 1, "", "input_spec_unbatched"], [141, 1, 1, "", "ipu"], [141, 2, 1, "", "is_spec_locked"], [141, 1, 1, "", "load_state_dict"], [141, 1, 1, "", "maybe_reset"], [141, 1, 1, "", "modules"], [141, 1, 1, "", "mtia"], [141, 1, 1, "", "named_buffers"], [141, 1, 1, "", "named_children"], [141, 1, 1, "", "named_modules"], [141, 1, 1, "", "named_parameters"], [141, 2, 1, "", "observation_keys"], [141, 2, 1, "", "observation_spec"], [141, 2, 1, "", "observation_spec_unbatched"], [141, 2, 1, "", "output_spec"], [141, 2, 1, "", "output_spec_unbatched"], [141, 1, 1, "", "parameters"], [141, 1, 1, "", "rand_action"], [141, 1, 1, "", "rand_step"], [141, 1, 1, "", "register_backward_hook"], [141, 1, 1, "", "register_buffer"], [141, 1, 1, "", "register_collector"], [141, 1, 1, "", "register_forward_hook"], [141, 1, 1, "", "register_forward_pre_hook"], [141, 1, 1, "", "register_full_backward_hook"], [141, 1, 1, "", "register_full_backward_pre_hook"], [141, 1, 1, "", "register_gym"], [141, 1, 1, "", "register_load_state_dict_post_hook"], [141, 1, 1, "", "register_load_state_dict_pre_hook"], [141, 1, 1, "", "register_module"], [141, 1, 1, "", "register_parameter"], [141, 1, 1, "", "register_state_dict_post_hook"], [141, 1, 1, "", "register_state_dict_pre_hook"], [141, 1, 1, "", "requires_grad_"], [141, 1, 1, "", "reset"], [141, 2, 1, "", "reset_keys"], [141, 2, 1, "", "reward_key"], [141, 2, 1, "", "reward_keys"], [141, 2, 1, "", "reward_spec"], [141, 2, 1, "", "reward_spec_unbatched"], [141, 1, 1, "", "rollout"], [141, 1, 1, "", "set_extra_state"], [141, 1, 1, "", "set_seed"], [141, 1, 1, "", "set_spec_lock_"], [141, 1, 1, "", "set_submodule"], [141, 2, 1, "", "shape"], [141, 1, 1, "", "share_memory"], [141, 2, 1, "", "specs"], [141, 1, 1, "", "state_dict"], [141, 2, 1, "", "state_keys"], [141, 2, 1, "", "state_spec"], [141, 2, 1, "", "state_spec_unbatched"], [141, 1, 1, "", "step"], [141, 1, 1, "", "step_and_maybe_reset"], [141, 1, 1, "", "step_mdp"], [141, 1, 1, "", "to"], [141, 1, 1, "", "to_empty"], [141, 1, 1, "", "train"], [141, 1, 1, "", "type"], [141, 1, 1, "", "xpu"], [141, 1, 1, "", "zero_grad"]], "torchrl.envs.ChessEnv": [[144, 2, 1, "", "action_key"], [144, 2, 1, "", "action_keys"], [144, 2, 1, "", "action_spec"], [144, 2, 1, "", "action_spec_unbatched"], [144, 1, 1, "", "add_module"], [144, 1, 1, "", "add_truncated_keys"], [144, 1, 1, "", "all_actions"], [144, 1, 1, "", "any_done"], [144, 1, 1, "", "append_transform"], [144, 1, 1, "", "apply"], [144, 1, 1, "", "auto_specs_"], [144, 2, 1, "", "batch_dims"], [144, 2, 1, "", "batch_locked"], [144, 2, 1, "", "batch_size"], [144, 1, 1, "", "bfloat16"], [144, 1, 1, "", "buffers"], [144, 1, 1, "", "cardinality"], [144, 1, 1, "", "check_env_specs"], [144, 1, 1, "", "children"], [144, 2, 1, "", "collector"], [144, 1, 1, "", "compile"], [144, 1, 1, "", "cpu"], [144, 1, 1, "", "cuda"], [144, 2, 1, "", "done_key"], [144, 2, 1, "", "done_keys"], [144, 2, 1, "", "done_keys_groups"], [144, 2, 1, "", "done_spec"], [144, 2, 1, "", "done_spec_unbatched"], [144, 1, 1, "", "double"], [144, 1, 1, "", "empty_cache"], [144, 1, 1, "", "eval"], [144, 1, 1, "", "extra_repr"], [144, 1, 1, "", "fake_tensordict"], [144, 1, 1, "", "float"], [144, 1, 1, "", "forward"], [144, 2, 1, "", "full_action_spec"], [144, 2, 1, "", "full_action_spec_unbatched"], [144, 2, 1, "", "full_done_spec"], [144, 2, 1, "", "full_done_spec_unbatched"], [144, 2, 1, "", "full_observation_spec_unbatched"], [144, 2, 1, "", "full_reward_spec"], [144, 2, 1, "", "full_reward_spec_unbatched"], [144, 2, 1, "", "full_state_spec"], [144, 2, 1, "", "full_state_spec_unbatched"], [144, 1, 1, "", "get_buffer"], [144, 1, 1, "", "get_extra_state"], [144, 1, 1, "", "get_legal_moves"], [144, 1, 1, "", "get_parameter"], [144, 1, 1, "", "get_submodule"], [144, 1, 1, "", "half"], [144, 2, 1, "", "input_spec"], [144, 2, 1, "", "input_spec_unbatched"], [144, 1, 1, "", "ipu"], [144, 2, 1, "", "is_spec_locked"], [144, 1, 1, "", "load_state_dict"], [144, 1, 1, "", "maybe_reset"], [144, 1, 1, "", "modules"], [144, 1, 1, "", "mtia"], [144, 1, 1, "", "named_buffers"], [144, 1, 1, "", "named_children"], [144, 1, 1, "", "named_modules"], [144, 1, 1, "", "named_parameters"], [144, 2, 1, "", "observation_keys"], [144, 2, 1, "", "observation_spec"], [144, 2, 1, "", "observation_spec_unbatched"], [144, 2, 1, "", "output_spec"], [144, 2, 1, "", "output_spec_unbatched"], [144, 1, 1, "", "parameters"], [144, 1, 1, "", "rand_action"], [144, 1, 1, "", "rand_step"], [144, 1, 1, "", "register_backward_hook"], [144, 1, 1, "", "register_buffer"], [144, 1, 1, "", "register_collector"], [144, 1, 1, "", "register_forward_hook"], [144, 1, 1, "", "register_forward_pre_hook"], [144, 1, 1, "", "register_full_backward_hook"], [144, 1, 1, "", "register_full_backward_pre_hook"], [144, 1, 1, "", "register_gym"], [144, 1, 1, "", "register_load_state_dict_post_hook"], [144, 1, 1, "", "register_load_state_dict_pre_hook"], [144, 1, 1, "", "register_module"], [144, 1, 1, "", "register_parameter"], [144, 1, 1, "", "register_state_dict_post_hook"], [144, 1, 1, "", "register_state_dict_pre_hook"], [144, 1, 1, "", "requires_grad_"], [144, 1, 1, "", "reset"], [144, 2, 1, "", "reset_keys"], [144, 2, 1, "", "reward_key"], [144, 2, 1, "", "reward_keys"], [144, 2, 1, "", "reward_spec"], [144, 2, 1, "", "reward_spec_unbatched"], [144, 1, 1, "", "rollout"], [144, 1, 1, "", "set_extra_state"], [144, 1, 1, "", "set_seed"], [144, 1, 1, "", "set_spec_lock_"], [144, 1, 1, "", "set_submodule"], [144, 2, 1, "", "shape"], [144, 1, 1, "", "share_memory"], [144, 2, 1, "", "specs"], [144, 1, 1, "", "state_dict"], [144, 2, 1, "", "state_keys"], [144, 2, 1, "", "state_spec"], [144, 2, 1, "", "state_spec_unbatched"], [144, 1, 1, "", "step"], [144, 1, 1, "", "step_and_maybe_reset"], [144, 1, 1, "", "step_mdp"], [144, 1, 1, "", "to"], [144, 1, 1, "", "to_empty"], [144, 1, 1, "", "train"], [144, 1, 1, "", "type"], [144, 1, 1, "", "xpu"], [144, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvBase": [[147, 2, 1, "", "action_key"], [147, 2, 1, "", "action_keys"], [147, 2, 1, "", "action_spec"], [147, 2, 1, "", "action_spec_unbatched"], [147, 1, 1, "", "add_module"], [147, 1, 1, "", "add_truncated_keys"], [147, 1, 1, "", "all_actions"], [147, 1, 1, "", "any_done"], [147, 1, 1, "", "append_transform"], [147, 1, 1, "", "apply"], [147, 1, 1, "", "auto_specs_"], [147, 2, 1, "", "batch_dims"], [147, 2, 1, "", "batch_locked"], [147, 2, 1, "", "batch_size"], [147, 1, 1, "", "bfloat16"], [147, 1, 1, "", "buffers"], [147, 1, 1, "", "cardinality"], [147, 1, 1, "", "check_env_specs"], [147, 1, 1, "", "children"], [147, 2, 1, "", "collector"], [147, 1, 1, "", "compile"], [147, 1, 1, "", "cpu"], [147, 1, 1, "", "cuda"], [147, 2, 1, "", "done_key"], [147, 2, 1, "", "done_keys"], [147, 2, 1, "", "done_keys_groups"], [147, 2, 1, "", "done_spec"], [147, 2, 1, "", "done_spec_unbatched"], [147, 1, 1, "", "double"], [147, 1, 1, "", "empty_cache"], [147, 1, 1, "", "eval"], [147, 1, 1, "", "extra_repr"], [147, 1, 1, "", "fake_tensordict"], [147, 1, 1, "", "float"], [147, 1, 1, "", "forward"], [147, 2, 1, "", "full_action_spec"], [147, 2, 1, "", "full_action_spec_unbatched"], [147, 2, 1, "", "full_done_spec"], [147, 2, 1, "", "full_done_spec_unbatched"], [147, 2, 1, "", "full_observation_spec_unbatched"], [147, 2, 1, "", "full_reward_spec"], [147, 2, 1, "", "full_reward_spec_unbatched"], [147, 2, 1, "", "full_state_spec"], [147, 2, 1, "", "full_state_spec_unbatched"], [147, 1, 1, "", "get_buffer"], [147, 1, 1, "", "get_extra_state"], [147, 1, 1, "", "get_parameter"], [147, 1, 1, "", "get_submodule"], [147, 1, 1, "", "half"], [147, 2, 1, "", "input_spec"], [147, 2, 1, "", "input_spec_unbatched"], [147, 1, 1, "", "ipu"], [147, 2, 1, "", "is_spec_locked"], [147, 1, 1, "", "load_state_dict"], [147, 1, 1, "", "maybe_reset"], [147, 1, 1, "", "modules"], [147, 1, 1, "", "mtia"], [147, 1, 1, "", "named_buffers"], [147, 1, 1, "", "named_children"], [147, 1, 1, "", "named_modules"], [147, 1, 1, "", "named_parameters"], [147, 2, 1, "", "observation_keys"], [147, 2, 1, "", "observation_spec"], [147, 2, 1, "", "observation_spec_unbatched"], [147, 2, 1, "", "output_spec"], [147, 2, 1, "", "output_spec_unbatched"], [147, 1, 1, "", "parameters"], [147, 1, 1, "", "rand_action"], [147, 1, 1, "id0", "rand_step"], [147, 1, 1, "", "register_backward_hook"], [147, 1, 1, "", "register_buffer"], [147, 1, 1, "", "register_collector"], [147, 1, 1, "", "register_forward_hook"], [147, 1, 1, "", "register_forward_pre_hook"], [147, 1, 1, "", "register_full_backward_hook"], [147, 1, 1, "", "register_full_backward_pre_hook"], [147, 1, 1, "", "register_gym"], [147, 1, 1, "", "register_load_state_dict_post_hook"], [147, 1, 1, "", "register_load_state_dict_pre_hook"], [147, 1, 1, "", "register_module"], [147, 1, 1, "", "register_parameter"], [147, 1, 1, "", "register_state_dict_post_hook"], [147, 1, 1, "", "register_state_dict_pre_hook"], [147, 1, 1, "", "requires_grad_"], [147, 1, 1, "id1", "reset"], [147, 2, 1, "", "reset_keys"], [147, 2, 1, "", "reward_key"], [147, 2, 1, "", "reward_keys"], [147, 2, 1, "", "reward_spec"], [147, 2, 1, "", "reward_spec_unbatched"], [147, 1, 1, "id2", "rollout"], [147, 1, 1, "", "set_extra_state"], [147, 1, 1, "id3", "set_seed"], [147, 1, 1, "", "set_spec_lock_"], [147, 1, 1, "", "set_submodule"], [147, 2, 1, "", "shape"], [147, 1, 1, "", "share_memory"], [147, 2, 1, "", "specs"], [147, 1, 1, "", "state_dict"], [147, 2, 1, "", "state_keys"], [147, 2, 1, "", "state_spec"], [147, 2, 1, "", "state_spec_unbatched"], [147, 1, 1, "id4", "step"], [147, 1, 1, "", "step_and_maybe_reset"], [147, 1, 1, "", "step_mdp"], [147, 1, 1, "", "to"], [147, 1, 1, "", "to_empty"], [147, 1, 1, "", "train"], [147, 1, 1, "", "type"], [147, 1, 1, "", "xpu"], [147, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[148, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[151, 2, 1, "", "action_key"], [151, 2, 1, "", "action_keys"], [151, 2, 1, "", "action_spec"], [151, 2, 1, "", "action_spec_unbatched"], [151, 1, 1, "", "add_module"], [151, 1, 1, "", "add_truncated_keys"], [151, 1, 1, "", "all_actions"], [151, 1, 1, "", "any_done"], [151, 1, 1, "", "append_transform"], [151, 1, 1, "", "apply"], [151, 1, 1, "", "auto_register_info_dict"], [151, 1, 1, "", "auto_specs_"], [151, 2, 1, "", "batch_dims"], [151, 2, 1, "", "batch_locked"], [151, 2, 1, "", "batch_size"], [151, 1, 1, "", "bfloat16"], [151, 1, 1, "", "buffers"], [151, 1, 1, "", "cardinality"], [151, 1, 1, "", "check_env_specs"], [151, 1, 1, "", "children"], [151, 1, 1, "", "close"], [151, 2, 1, "", "collector"], [151, 1, 1, "", "compile"], [151, 1, 1, "", "cpu"], [151, 1, 1, "", "cuda"], [151, 2, 1, "", "done_key"], [151, 2, 1, "", "done_keys"], [151, 2, 1, "", "done_keys_groups"], [151, 2, 1, "", "done_spec"], [151, 2, 1, "", "done_spec_unbatched"], [151, 1, 1, "", "double"], [151, 1, 1, "", "empty_cache"], [151, 1, 1, "", "eval"], [151, 1, 1, "", "extra_repr"], [151, 1, 1, "", "fake_tensordict"], [151, 1, 1, "", "fast_encoding"], [151, 1, 1, "", "float"], [151, 1, 1, "", "forward"], [151, 2, 1, "", "full_action_spec"], [151, 2, 1, "", "full_action_spec_unbatched"], [151, 2, 1, "", "full_done_spec"], [151, 2, 1, "", "full_done_spec_unbatched"], [151, 2, 1, "", "full_observation_spec_unbatched"], [151, 2, 1, "", "full_reward_spec"], [151, 2, 1, "", "full_reward_spec_unbatched"], [151, 2, 1, "", "full_state_spec"], [151, 2, 1, "", "full_state_spec_unbatched"], [151, 1, 1, "", "get_buffer"], [151, 1, 1, "", "get_extra_state"], [151, 1, 1, "", "get_parameter"], [151, 1, 1, "", "get_submodule"], [151, 1, 1, "", "half"], [151, 2, 1, "", "input_spec"], [151, 2, 1, "", "input_spec_unbatched"], [151, 1, 1, "", "ipu"], [151, 2, 1, "", "is_spec_locked"], [151, 1, 1, "", "load_state_dict"], [151, 1, 1, "", "maybe_reset"], [151, 1, 1, "", "modules"], [151, 1, 1, "", "mtia"], [151, 1, 1, "", "named_buffers"], [151, 1, 1, "", "named_children"], [151, 1, 1, "", "named_modules"], [151, 1, 1, "", "named_parameters"], [151, 2, 1, "", "observation_keys"], [151, 2, 1, "", "observation_spec"], [151, 2, 1, "", "observation_spec_unbatched"], [151, 2, 1, "", "output_spec"], [151, 2, 1, "", "output_spec_unbatched"], [151, 1, 1, "", "parameters"], [151, 1, 1, "", "rand_action"], [151, 1, 1, "", "rand_step"], [151, 1, 1, "", "read_action"], [151, 1, 1, "", "read_done"], [151, 1, 1, "", "read_obs"], [151, 1, 1, "", "read_reward"], [151, 1, 1, "", "register_backward_hook"], [151, 1, 1, "", "register_buffer"], [151, 1, 1, "", "register_collector"], [151, 1, 1, "", "register_forward_hook"], [151, 1, 1, "", "register_forward_pre_hook"], [151, 1, 1, "", "register_full_backward_hook"], [151, 1, 1, "", "register_full_backward_pre_hook"], [151, 1, 1, "", "register_gym"], [151, 1, 1, "", "register_load_state_dict_post_hook"], [151, 1, 1, "", "register_load_state_dict_pre_hook"], [151, 1, 1, "", "register_module"], [151, 1, 1, "", "register_parameter"], [151, 1, 1, "", "register_state_dict_post_hook"], [151, 1, 1, "", "register_state_dict_pre_hook"], [151, 1, 1, "", "requires_grad_"], [151, 1, 1, "", "reset"], [151, 2, 1, "", "reset_keys"], [151, 2, 1, "", "reward_key"], [151, 2, 1, "", "reward_keys"], [151, 2, 1, "", "reward_spec"], [151, 2, 1, "", "reward_spec_unbatched"], [151, 1, 1, "", "rollout"], [151, 1, 1, "", "set_extra_state"], [151, 1, 1, "", "set_info_dict_reader"], [151, 1, 1, "", "set_seed"], [151, 1, 1, "", "set_spec_lock_"], [151, 1, 1, "", "set_submodule"], [151, 2, 1, "", "shape"], [151, 1, 1, "", "share_memory"], [151, 2, 1, "", "specs"], [151, 1, 1, "", "state_dict"], [151, 2, 1, "", "state_keys"], [151, 2, 1, "", "state_spec"], [151, 2, 1, "", "state_spec_unbatched"], [151, 1, 1, "", "step"], [151, 1, 1, "", "step_and_maybe_reset"], [151, 1, 1, "", "step_mdp"], [151, 1, 1, "", "to"], [151, 1, 1, "", "to_empty"], [151, 1, 1, "", "train"], [151, 1, 1, "", "type"], [151, 1, 1, "", "xpu"], [151, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMHashingEnv": [[159, 2, 1, "", "action_key"], [159, 2, 1, "", "action_keys"], [159, 2, 1, "", "action_spec"], [159, 2, 1, "", "action_spec_unbatched"], [159, 1, 1, "", "add_module"], [159, 1, 1, "", "add_truncated_keys"], [159, 1, 1, "", "all_actions"], [159, 1, 1, "", "any_done"], [159, 1, 1, "", "append_transform"], [159, 1, 1, "", "apply"], [159, 1, 1, "", "auto_specs_"], [159, 2, 1, "", "batch_dims"], [159, 2, 1, "", "batch_locked"], [159, 2, 1, "", "batch_size"], [159, 1, 1, "", "bfloat16"], [159, 1, 1, "", "buffers"], [159, 1, 1, "", "cardinality"], [159, 1, 1, "", "check_env_specs"], [159, 1, 1, "", "children"], [159, 2, 1, "", "collector"], [159, 1, 1, "", "compile"], [159, 1, 1, "", "cpu"], [159, 1, 1, "", "cuda"], [159, 2, 1, "", "done_key"], [159, 2, 1, "", "done_keys"], [159, 2, 1, "", "done_keys_groups"], [159, 2, 1, "", "done_spec"], [159, 2, 1, "", "done_spec_unbatched"], [159, 1, 1, "", "double"], [159, 1, 1, "", "empty_cache"], [159, 1, 1, "", "eval"], [159, 1, 1, "", "extra_repr"], [159, 1, 1, "", "fake_tensordict"], [159, 1, 1, "", "float"], [159, 1, 1, "", "forward"], [159, 2, 1, "", "full_action_spec"], [159, 2, 1, "", "full_action_spec_unbatched"], [159, 2, 1, "", "full_done_spec"], [159, 2, 1, "", "full_done_spec_unbatched"], [159, 2, 1, "", "full_observation_spec_unbatched"], [159, 2, 1, "", "full_reward_spec"], [159, 2, 1, "", "full_reward_spec_unbatched"], [159, 2, 1, "", "full_state_spec"], [159, 2, 1, "", "full_state_spec_unbatched"], [159, 1, 1, "", "get_buffer"], [159, 1, 1, "", "get_extra_state"], [159, 1, 1, "", "get_parameter"], [159, 1, 1, "", "get_submodule"], [159, 1, 1, "", "half"], [159, 2, 1, "", "input_spec"], [159, 2, 1, "", "input_spec_unbatched"], [159, 1, 1, "", "ipu"], [159, 2, 1, "", "is_spec_locked"], [159, 1, 1, "", "load_state_dict"], [159, 1, 1, "", "make_tensordict"], [159, 1, 1, "", "maybe_reset"], [159, 1, 1, "", "modules"], [159, 1, 1, "", "mtia"], [159, 1, 1, "", "named_buffers"], [159, 1, 1, "", "named_children"], [159, 1, 1, "", "named_modules"], [159, 1, 1, "", "named_parameters"], [159, 2, 1, "", "observation_keys"], [159, 2, 1, "", "observation_spec"], [159, 2, 1, "", "observation_spec_unbatched"], [159, 2, 1, "", "output_spec"], [159, 2, 1, "", "output_spec_unbatched"], [159, 1, 1, "", "parameters"], [159, 1, 1, "", "rand_action"], [159, 1, 1, "", "rand_step"], [159, 1, 1, "", "register_backward_hook"], [159, 1, 1, "", "register_buffer"], [159, 1, 1, "", "register_collector"], [159, 1, 1, "", "register_forward_hook"], [159, 1, 1, "", "register_forward_pre_hook"], [159, 1, 1, "", "register_full_backward_hook"], [159, 1, 1, "", "register_full_backward_pre_hook"], [159, 1, 1, "", "register_gym"], [159, 1, 1, "", "register_load_state_dict_post_hook"], [159, 1, 1, "", "register_load_state_dict_pre_hook"], [159, 1, 1, "", "register_module"], [159, 1, 1, "", "register_parameter"], [159, 1, 1, "", "register_state_dict_post_hook"], [159, 1, 1, "", "register_state_dict_pre_hook"], [159, 1, 1, "", "requires_grad_"], [159, 1, 1, "", "reset"], [159, 2, 1, "", "reset_keys"], [159, 2, 1, "", "reward_key"], [159, 2, 1, "", "reward_keys"], [159, 2, 1, "", "reward_spec"], [159, 2, 1, "", "reward_spec_unbatched"], [159, 1, 1, "", "rollout"], [159, 1, 1, "", "set_extra_state"], [159, 1, 1, "", "set_seed"], [159, 1, 1, "", "set_spec_lock_"], [159, 1, 1, "", "set_submodule"], [159, 2, 1, "", "shape"], [159, 1, 1, "", "share_memory"], [159, 2, 1, "", "specs"], [159, 1, 1, "", "state_dict"], [159, 2, 1, "", "state_keys"], [159, 2, 1, "", "state_spec"], [159, 2, 1, "", "state_spec_unbatched"], [159, 1, 1, "", "step"], [159, 1, 1, "", "step_and_maybe_reset"], [159, 1, 1, "", "step_mdp"], [159, 1, 1, "", "to"], [159, 1, 1, "", "to_empty"], [159, 1, 1, "", "train"], [159, 1, 1, "", "type"], [159, 1, 1, "", "xpu"], [159, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[171, 2, 1, "", "action_key"], [171, 2, 1, "", "action_keys"], [171, 2, 1, "", "action_spec"], [171, 2, 1, "", "action_spec_unbatched"], [171, 1, 1, "", "add_module"], [171, 1, 1, "", "add_truncated_keys"], [171, 1, 1, "", "all_actions"], [171, 1, 1, "", "any_done"], [171, 1, 1, "", "append_transform"], [171, 1, 1, "", "apply"], [171, 1, 1, "", "auto_specs_"], [171, 2, 1, "", "batch_dims"], [171, 2, 1, "", "batch_locked"], [171, 2, 1, "", "batch_size"], [171, 1, 1, "", "bfloat16"], [171, 1, 1, "", "buffers"], [171, 1, 1, "", "cardinality"], [171, 1, 1, "", "check_env_specs"], [171, 1, 1, "", "children"], [171, 2, 1, "", "collector"], [171, 1, 1, "", "compile"], [171, 1, 1, "", "cpu"], [171, 1, 1, "", "cuda"], [171, 2, 1, "", "done_key"], [171, 2, 1, "", "done_keys"], [171, 2, 1, "", "done_keys_groups"], [171, 2, 1, "", "done_spec"], [171, 2, 1, "", "done_spec_unbatched"], [171, 1, 1, "", "double"], [171, 1, 1, "", "empty_cache"], [171, 1, 1, "", "eval"], [171, 1, 1, "", "extra_repr"], [171, 1, 1, "", "fake_tensordict"], [171, 1, 1, "", "float"], [171, 1, 1, "", "forward"], [171, 2, 1, "", "full_action_spec"], [171, 2, 1, "", "full_action_spec_unbatched"], [171, 2, 1, "", "full_done_spec"], [171, 2, 1, "", "full_done_spec_unbatched"], [171, 2, 1, "", "full_observation_spec_unbatched"], [171, 2, 1, "", "full_reward_spec"], [171, 2, 1, "", "full_reward_spec_unbatched"], [171, 2, 1, "", "full_state_spec"], [171, 2, 1, "", "full_state_spec_unbatched"], [171, 1, 1, "", "get_buffer"], [171, 1, 1, "", "get_extra_state"], [171, 1, 1, "", "get_parameter"], [171, 1, 1, "", "get_submodule"], [171, 1, 1, "", "half"], [171, 2, 1, "", "input_spec"], [171, 2, 1, "", "input_spec_unbatched"], [171, 1, 1, "", "ipu"], [171, 2, 1, "", "is_spec_locked"], [171, 1, 1, "", "load_state_dict"], [171, 1, 1, "", "maybe_reset"], [171, 1, 1, "", "modules"], [171, 1, 1, "", "mtia"], [171, 1, 1, "", "named_buffers"], [171, 1, 1, "", "named_children"], [171, 1, 1, "", "named_modules"], [171, 1, 1, "", "named_parameters"], [171, 2, 1, "", "observation_keys"], [171, 2, 1, "", "observation_spec"], [171, 2, 1, "", "observation_spec_unbatched"], [171, 2, 1, "", "output_spec"], [171, 2, 1, "", "output_spec_unbatched"], [171, 1, 1, "", "parameters"], [171, 1, 1, "", "rand_action"], [171, 1, 1, "", "rand_step"], [171, 1, 1, "", "register_backward_hook"], [171, 1, 1, "", "register_buffer"], [171, 1, 1, "", "register_collector"], [171, 1, 1, "", "register_forward_hook"], [171, 1, 1, "", "register_forward_pre_hook"], [171, 1, 1, "", "register_full_backward_hook"], [171, 1, 1, "", "register_full_backward_pre_hook"], [171, 1, 1, "", "register_gym"], [171, 1, 1, "", "register_load_state_dict_post_hook"], [171, 1, 1, "", "register_load_state_dict_pre_hook"], [171, 1, 1, "", "register_module"], [171, 1, 1, "", "register_parameter"], [171, 1, 1, "", "register_state_dict_post_hook"], [171, 1, 1, "", "register_state_dict_pre_hook"], [171, 1, 1, "", "requires_grad_"], [171, 1, 1, "", "reset"], [171, 2, 1, "", "reset_keys"], [171, 2, 1, "", "reward_key"], [171, 2, 1, "", "reward_keys"], [171, 2, 1, "", "reward_spec"], [171, 2, 1, "", "reward_spec_unbatched"], [171, 1, 1, "", "rollout"], [171, 1, 1, "", "set_extra_state"], [171, 1, 1, "", "set_seed"], [171, 1, 1, "", "set_spec_lock_"], [171, 1, 1, "", "set_submodule"], [171, 2, 1, "", "shape"], [171, 1, 1, "", "share_memory"], [171, 2, 1, "", "specs"], [171, 1, 1, "", "state_dict"], [171, 2, 1, "", "state_keys"], [171, 2, 1, "", "state_spec"], [171, 2, 1, "", "state_spec_unbatched"], [171, 1, 1, "", "step"], [171, 1, 1, "", "step_and_maybe_reset"], [171, 1, 1, "", "step_mdp"], [171, 1, 1, "", "to"], [171, 1, 1, "", "to_empty"], [171, 1, 1, "", "train"], [171, 1, 1, "", "type"], [171, 1, 1, "", "update_kwargs"], [171, 1, 1, "", "xpu"], [171, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[172, 2, 1, "", "action_key"], [172, 2, 1, "", "action_keys"], [172, 2, 1, "", "action_spec"], [172, 2, 1, "", "action_spec_unbatched"], [172, 1, 1, "", "add_module"], [172, 1, 1, "", "add_truncated_keys"], [172, 1, 1, "", "all_actions"], [172, 1, 1, "", "any_done"], [172, 1, 1, "", "append_transform"], [172, 1, 1, "", "apply"], [172, 1, 1, "", "auto_specs_"], [172, 2, 1, "", "batch_dims"], [172, 2, 1, "", "batch_size"], [172, 1, 1, "", "bfloat16"], [172, 1, 1, "", "buffers"], [172, 1, 1, "", "cardinality"], [172, 1, 1, "", "check_env_specs"], [172, 1, 1, "", "children"], [172, 2, 1, "", "collector"], [172, 1, 1, "", "compile"], [172, 1, 1, "", "cpu"], [172, 1, 1, "", "cuda"], [172, 2, 1, "", "done_key"], [172, 2, 1, "", "done_keys"], [172, 2, 1, "", "done_keys_groups"], [172, 2, 1, "", "done_spec"], [172, 2, 1, "", "done_spec_unbatched"], [172, 1, 1, "", "double"], [172, 1, 1, "", "empty_cache"], [172, 1, 1, "", "eval"], [172, 1, 1, "", "extra_repr"], [172, 1, 1, "", "fake_tensordict"], [172, 1, 1, "", "float"], [172, 1, 1, "", "forward"], [172, 2, 1, "", "full_action_spec"], [172, 2, 1, "", "full_action_spec_unbatched"], [172, 2, 1, "", "full_done_spec"], [172, 2, 1, "", "full_done_spec_unbatched"], [172, 2, 1, "", "full_observation_spec_unbatched"], [172, 2, 1, "", "full_reward_spec"], [172, 2, 1, "", "full_reward_spec_unbatched"], [172, 2, 1, "", "full_state_spec"], [172, 2, 1, "", "full_state_spec_unbatched"], [172, 1, 1, "", "gen_params"], [172, 1, 1, "", "get_buffer"], [172, 1, 1, "", "get_extra_state"], [172, 1, 1, "", "get_parameter"], [172, 1, 1, "", "get_submodule"], [172, 1, 1, "", "half"], [172, 2, 1, "", "input_spec"], [172, 2, 1, "", "input_spec_unbatched"], [172, 1, 1, "", "ipu"], [172, 2, 1, "", "is_spec_locked"], [172, 1, 1, "", "load_state_dict"], [172, 1, 1, "", "maybe_reset"], [172, 1, 1, "", "modules"], [172, 1, 1, "", "mtia"], [172, 1, 1, "", "named_buffers"], [172, 1, 1, "", "named_children"], [172, 1, 1, "", "named_modules"], [172, 1, 1, "", "named_parameters"], [172, 2, 1, "", "observation_keys"], [172, 2, 1, "", "observation_spec"], [172, 2, 1, "", "observation_spec_unbatched"], [172, 2, 1, "", "output_spec"], [172, 2, 1, "", "output_spec_unbatched"], [172, 1, 1, "", "parameters"], [172, 1, 1, "", "rand_action"], [172, 1, 1, "", "rand_step"], [172, 1, 1, "", "register_backward_hook"], [172, 1, 1, "", "register_buffer"], [172, 1, 1, "", "register_collector"], [172, 1, 1, "", "register_forward_hook"], [172, 1, 1, "", "register_forward_pre_hook"], [172, 1, 1, "", "register_full_backward_hook"], [172, 1, 1, "", "register_full_backward_pre_hook"], [172, 1, 1, "", "register_gym"], [172, 1, 1, "", "register_load_state_dict_post_hook"], [172, 1, 1, "", "register_load_state_dict_pre_hook"], [172, 1, 1, "", "register_module"], [172, 1, 1, "", "register_parameter"], [172, 1, 1, "", "register_state_dict_post_hook"], [172, 1, 1, "", "register_state_dict_pre_hook"], [172, 1, 1, "", "requires_grad_"], [172, 1, 1, "", "reset"], [172, 2, 1, "", "reset_keys"], [172, 2, 1, "", "reward_key"], [172, 2, 1, "", "reward_keys"], [172, 2, 1, "", "reward_spec"], [172, 2, 1, "", "reward_spec_unbatched"], [172, 1, 1, "", "rollout"], [172, 1, 1, "", "set_extra_state"], [172, 1, 1, "", "set_seed"], [172, 1, 1, "", "set_spec_lock_"], [172, 1, 1, "", "set_submodule"], [172, 2, 1, "", "shape"], [172, 1, 1, "", "share_memory"], [172, 2, 1, "", "specs"], [172, 1, 1, "", "state_dict"], [172, 2, 1, "", "state_keys"], [172, 2, 1, "", "state_spec"], [172, 2, 1, "", "state_spec_unbatched"], [172, 1, 1, "", "step"], [172, 1, 1, "", "step_and_maybe_reset"], [172, 1, 1, "", "step_mdp"], [172, 1, 1, "", "to"], [172, 1, 1, "", "to_empty"], [172, 1, 1, "", "train"], [172, 1, 1, "", "type"], [172, 1, 1, "", "xpu"], [172, 1, 1, "", "zero_grad"]], "torchrl.envs.ProcessorAsyncEnvPool": [[175, 1, 1, "", "_setup"], [175, 2, 1, "", "action_key"], [175, 2, 1, "", "action_keys"], [175, 2, 1, "", "action_spec"], [175, 2, 1, "", "action_spec_unbatched"], [175, 1, 1, "", "add_module"], [175, 1, 1, "", "add_truncated_keys"], [175, 1, 1, "", "all_actions"], [175, 1, 1, "", "any_done"], [175, 1, 1, "", "append_transform"], [175, 1, 1, "", "apply"], [175, 1, 1, "", "async_reset_recv"], [175, 1, 1, "", "async_reset_send"], [175, 1, 1, "", "async_step_recv"], [175, 1, 1, "", "async_step_send"], [175, 1, 1, "", "auto_specs_"], [175, 2, 1, "", "batch_dims"], [175, 2, 1, "", "batch_locked"], [175, 2, 1, "", "batch_size"], [175, 1, 1, "", "bfloat16"], [175, 1, 1, "", "buffers"], [175, 1, 1, "", "cardinality"], [175, 1, 1, "", "check_env_specs"], [175, 1, 1, "", "children"], [175, 2, 1, "", "collector"], [175, 1, 1, "", "compile"], [175, 1, 1, "", "cpu"], [175, 1, 1, "", "cuda"], [175, 2, 1, "", "done_key"], [175, 2, 1, "", "done_keys"], [175, 2, 1, "", "done_keys_groups"], [175, 2, 1, "", "done_spec"], [175, 2, 1, "", "done_spec_unbatched"], [175, 1, 1, "", "double"], [175, 1, 1, "", "empty_cache"], [175, 2, 1, "", "env_batch_sizes"], [175, 1, 1, "", "eval"], [175, 1, 1, "", "extra_repr"], [175, 1, 1, "", "fake_tensordict"], [175, 1, 1, "", "float"], [175, 1, 1, "", "forward"], [175, 2, 1, "", "full_action_spec"], [175, 2, 1, "", "full_action_spec_unbatched"], [175, 2, 1, "", "full_done_spec"], [175, 2, 1, "", "full_done_spec_unbatched"], [175, 2, 1, "", "full_observation_spec_unbatched"], [175, 2, 1, "", "full_reward_spec"], [175, 2, 1, "", "full_reward_spec_unbatched"], [175, 2, 1, "", "full_state_spec"], [175, 2, 1, "", "full_state_spec_unbatched"], [175, 1, 1, "", "get_buffer"], [175, 1, 1, "", "get_extra_state"], [175, 1, 1, "", "get_parameter"], [175, 1, 1, "", "get_submodule"], [175, 1, 1, "", "half"], [175, 2, 1, "", "input_spec"], [175, 2, 1, "", "input_spec_unbatched"], [175, 1, 1, "", "ipu"], [175, 2, 1, "", "is_spec_locked"], [175, 1, 1, "", "load_state_dict"], [175, 1, 1, "", "maybe_reset"], [175, 1, 1, "", "modules"], [175, 1, 1, "", "mtia"], [175, 1, 1, "", "named_buffers"], [175, 1, 1, "", "named_children"], [175, 1, 1, "", "named_modules"], [175, 1, 1, "", "named_parameters"], [175, 2, 1, "", "observation_keys"], [175, 2, 1, "", "observation_spec"], [175, 2, 1, "", "observation_spec_unbatched"], [175, 2, 1, "", "output_spec"], [175, 2, 1, "", "output_spec_unbatched"], [175, 1, 1, "", "parameters"], [175, 1, 1, "", "rand_action"], [175, 1, 1, "", "rand_step"], [175, 1, 1, "", "register_backward_hook"], [175, 1, 1, "", "register_buffer"], [175, 1, 1, "", "register_collector"], [175, 1, 1, "", "register_forward_hook"], [175, 1, 1, "", "register_forward_pre_hook"], [175, 1, 1, "", "register_full_backward_hook"], [175, 1, 1, "", "register_full_backward_pre_hook"], [175, 1, 1, "", "register_gym"], [175, 1, 1, "", "register_load_state_dict_post_hook"], [175, 1, 1, "", "register_load_state_dict_pre_hook"], [175, 1, 1, "", "register_module"], [175, 1, 1, "", "register_parameter"], [175, 1, 1, "", "register_state_dict_post_hook"], [175, 1, 1, "", "register_state_dict_pre_hook"], [175, 1, 1, "", "requires_grad_"], [175, 1, 1, "", "reset"], [175, 2, 1, "", "reset_keys"], [175, 2, 1, "", "reward_key"], [175, 2, 1, "", "reward_keys"], [175, 2, 1, "", "reward_spec"], [175, 2, 1, "", "reward_spec_unbatched"], [175, 1, 1, "", "rollout"], [175, 1, 1, "", "set_extra_state"], [175, 1, 1, "", "set_seed"], [175, 1, 1, "", "set_spec_lock_"], [175, 1, 1, "", "set_submodule"], [175, 2, 1, "", "shape"], [175, 1, 1, "", "share_memory"], [175, 1, 1, "", "shutdown"], [175, 2, 1, "", "specs"], [175, 1, 1, "", "state_dict"], [175, 2, 1, "", "state_keys"], [175, 2, 1, "", "state_spec"], [175, 2, 1, "", "state_spec_unbatched"], [175, 1, 1, "", "step"], [175, 1, 1, "", "step_and_maybe_reset"], [175, 1, 1, "", "step_mdp"], [175, 1, 1, "", "to"], [175, 1, 1, "", "to_empty"], [175, 1, 1, "", "train"], [175, 1, 1, "", "type"], [175, 1, 1, "", "xpu"], [175, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[180, 2, 1, "", "action_key"], [180, 2, 1, "", "action_keys"], [180, 2, 1, "", "action_spec"], [180, 2, 1, "", "action_spec_unbatched"], [180, 1, 1, "", "add_module"], [180, 1, 1, "", "add_truncated_keys"], [180, 1, 1, "", "all_actions"], [180, 1, 1, "", "any_done"], [180, 1, 1, "", "append_transform"], [180, 1, 1, "", "apply"], [180, 1, 1, "", "auto_specs_"], [180, 2, 1, "", "batch_dims"], [180, 2, 1, "", "batch_locked"], [180, 2, 1, "", "batch_size"], [180, 1, 1, "", "bfloat16"], [180, 1, 1, "", "buffers"], [180, 1, 1, "", "cardinality"], [180, 1, 1, "", "check_env_specs"], [180, 1, 1, "", "children"], [180, 2, 1, "", "collector"], [180, 1, 1, "", "compile"], [180, 1, 1, "", "cpu"], [180, 1, 1, "", "cuda"], [180, 2, 1, "", "done_key"], [180, 2, 1, "", "done_keys"], [180, 2, 1, "", "done_keys_groups"], [180, 2, 1, "", "done_spec"], [180, 2, 1, "", "done_spec_unbatched"], [180, 1, 1, "", "double"], [180, 1, 1, "", "empty_cache"], [180, 1, 1, "", "eval"], [180, 1, 1, "", "extra_repr"], [180, 1, 1, "", "fake_tensordict"], [180, 1, 1, "", "float"], [180, 1, 1, "", "forward"], [180, 2, 1, "", "full_action_spec"], [180, 2, 1, "", "full_action_spec_unbatched"], [180, 2, 1, "", "full_done_spec"], [180, 2, 1, "", "full_done_spec_unbatched"], [180, 2, 1, "", "full_observation_spec_unbatched"], [180, 2, 1, "", "full_reward_spec"], [180, 2, 1, "", "full_reward_spec_unbatched"], [180, 2, 1, "", "full_state_spec"], [180, 2, 1, "", "full_state_spec_unbatched"], [180, 1, 1, "", "get_buffer"], [180, 1, 1, "", "get_extra_state"], [180, 1, 1, "", "get_parameter"], [180, 1, 1, "", "get_submodule"], [180, 1, 1, "", "half"], [180, 2, 1, "", "input_spec"], [180, 2, 1, "", "input_spec_unbatched"], [180, 1, 1, "", "ipu"], [180, 2, 1, "", "is_spec_locked"], [180, 1, 1, "", "load_state_dict"], [180, 1, 1, "", "maybe_reset"], [180, 1, 1, "", "modules"], [180, 1, 1, "", "mtia"], [180, 1, 1, "", "named_buffers"], [180, 1, 1, "", "named_children"], [180, 1, 1, "", "named_modules"], [180, 1, 1, "", "named_parameters"], [180, 2, 1, "", "observation_keys"], [180, 2, 1, "", "observation_spec"], [180, 2, 1, "", "observation_spec_unbatched"], [180, 2, 1, "", "output_spec"], [180, 2, 1, "", "output_spec_unbatched"], [180, 1, 1, "", "parameters"], [180, 1, 1, "", "rand_action"], [180, 1, 1, "", "rand_step"], [180, 1, 1, "", "register_backward_hook"], [180, 1, 1, "", "register_buffer"], [180, 1, 1, "", "register_collector"], [180, 1, 1, "", "register_forward_hook"], [180, 1, 1, "", "register_forward_pre_hook"], [180, 1, 1, "", "register_full_backward_hook"], [180, 1, 1, "", "register_full_backward_pre_hook"], [180, 1, 1, "", "register_gym"], [180, 1, 1, "", "register_load_state_dict_post_hook"], [180, 1, 1, "", "register_load_state_dict_pre_hook"], [180, 1, 1, "", "register_module"], [180, 1, 1, "", "register_parameter"], [180, 1, 1, "", "register_state_dict_post_hook"], [180, 1, 1, "", "register_state_dict_pre_hook"], [180, 1, 1, "", "requires_grad_"], [180, 1, 1, "", "reset"], [180, 2, 1, "", "reset_keys"], [180, 2, 1, "", "reward_key"], [180, 2, 1, "", "reward_keys"], [180, 2, 1, "", "reward_spec"], [180, 2, 1, "", "reward_spec_unbatched"], [180, 1, 1, "", "rollout"], [180, 1, 1, "", "set_extra_state"], [180, 1, 1, "", "set_seed"], [180, 1, 1, "", "set_spec_lock_"], [180, 1, 1, "", "set_submodule"], [180, 2, 1, "", "shape"], [180, 1, 1, "", "share_memory"], [180, 2, 1, "", "specs"], [180, 1, 1, "", "state_dict"], [180, 2, 1, "", "state_keys"], [180, 2, 1, "", "state_spec"], [180, 2, 1, "", "state_spec_unbatched"], [180, 1, 1, "", "step"], [180, 1, 1, "", "step_and_maybe_reset"], [180, 1, 1, "", "step_mdp"], [180, 1, 1, "", "to"], [180, 1, 1, "", "to_empty"], [180, 1, 1, "", "train"], [180, 1, 1, "", "type"], [180, 1, 1, "", "update_kwargs"], [180, 1, 1, "", "xpu"], [180, 1, 1, "", "zero_grad"]], "torchrl.envs.ThreadingAsyncEnvPool": [[181, 1, 1, "", "_setup"], [181, 2, 1, "", "action_key"], [181, 2, 1, "", "action_keys"], [181, 2, 1, "", "action_spec"], [181, 2, 1, "", "action_spec_unbatched"], [181, 1, 1, "", "add_module"], [181, 1, 1, "", "add_truncated_keys"], [181, 1, 1, "", "all_actions"], [181, 1, 1, "", "any_done"], [181, 1, 1, "", "append_transform"], [181, 1, 1, "", "apply"], [181, 1, 1, "", "async_reset_recv"], [181, 1, 1, "", "async_reset_send"], [181, 1, 1, "", "async_step_recv"], [181, 1, 1, "", "async_step_send"], [181, 1, 1, "", "auto_specs_"], [181, 2, 1, "", "batch_dims"], [181, 2, 1, "", "batch_locked"], [181, 2, 1, "", "batch_size"], [181, 1, 1, "", "bfloat16"], [181, 1, 1, "", "buffers"], [181, 1, 1, "", "cardinality"], [181, 1, 1, "", "check_env_specs"], [181, 1, 1, "", "children"], [181, 2, 1, "", "collector"], [181, 1, 1, "", "compile"], [181, 1, 1, "", "cpu"], [181, 1, 1, "", "cuda"], [181, 2, 1, "", "done_key"], [181, 2, 1, "", "done_keys"], [181, 2, 1, "", "done_keys_groups"], [181, 2, 1, "", "done_spec"], [181, 2, 1, "", "done_spec_unbatched"], [181, 1, 1, "", "double"], [181, 1, 1, "", "empty_cache"], [181, 2, 1, "", "env_batch_sizes"], [181, 1, 1, "", "eval"], [181, 1, 1, "", "extra_repr"], [181, 1, 1, "", "fake_tensordict"], [181, 1, 1, "", "float"], [181, 1, 1, "", "forward"], [181, 2, 1, "", "full_action_spec"], [181, 2, 1, "", "full_action_spec_unbatched"], [181, 2, 1, "", "full_done_spec"], [181, 2, 1, "", "full_done_spec_unbatched"], [181, 2, 1, "", "full_observation_spec_unbatched"], [181, 2, 1, "", "full_reward_spec"], [181, 2, 1, "", "full_reward_spec_unbatched"], [181, 2, 1, "", "full_state_spec"], [181, 2, 1, "", "full_state_spec_unbatched"], [181, 1, 1, "", "get_buffer"], [181, 1, 1, "", "get_extra_state"], [181, 1, 1, "", "get_parameter"], [181, 1, 1, "", "get_submodule"], [181, 1, 1, "", "half"], [181, 2, 1, "", "input_spec"], [181, 2, 1, "", "input_spec_unbatched"], [181, 1, 1, "", "ipu"], [181, 2, 1, "", "is_spec_locked"], [181, 1, 1, "", "load_state_dict"], [181, 1, 1, "", "maybe_reset"], [181, 1, 1, "", "modules"], [181, 1, 1, "", "mtia"], [181, 1, 1, "", "named_buffers"], [181, 1, 1, "", "named_children"], [181, 1, 1, "", "named_modules"], [181, 1, 1, "", "named_parameters"], [181, 2, 1, "", "observation_keys"], [181, 2, 1, "", "observation_spec"], [181, 2, 1, "", "observation_spec_unbatched"], [181, 2, 1, "", "output_spec"], [181, 2, 1, "", "output_spec_unbatched"], [181, 1, 1, "", "parameters"], [181, 1, 1, "", "rand_action"], [181, 1, 1, "", "rand_step"], [181, 1, 1, "", "register_backward_hook"], [181, 1, 1, "", "register_buffer"], [181, 1, 1, "", "register_collector"], [181, 1, 1, "", "register_forward_hook"], [181, 1, 1, "", "register_forward_pre_hook"], [181, 1, 1, "", "register_full_backward_hook"], [181, 1, 1, "", "register_full_backward_pre_hook"], [181, 1, 1, "", "register_gym"], [181, 1, 1, "", "register_load_state_dict_post_hook"], [181, 1, 1, "", "register_load_state_dict_pre_hook"], [181, 1, 1, "", "register_module"], [181, 1, 1, "", "register_parameter"], [181, 1, 1, "", "register_state_dict_post_hook"], [181, 1, 1, "", "register_state_dict_pre_hook"], [181, 1, 1, "", "requires_grad_"], [181, 1, 1, "", "reset"], [181, 2, 1, "", "reset_keys"], [181, 2, 1, "", "reward_key"], [181, 2, 1, "", "reward_keys"], [181, 2, 1, "", "reward_spec"], [181, 2, 1, "", "reward_spec_unbatched"], [181, 1, 1, "", "rollout"], [181, 1, 1, "", "set_extra_state"], [181, 1, 1, "", "set_seed"], [181, 1, 1, "", "set_spec_lock_"], [181, 1, 1, "", "set_submodule"], [181, 2, 1, "", "shape"], [181, 1, 1, "", "share_memory"], [181, 1, 1, "", "shutdown"], [181, 2, 1, "", "specs"], [181, 1, 1, "", "state_dict"], [181, 2, 1, "", "state_keys"], [181, 2, 1, "", "state_spec"], [181, 2, 1, "", "state_spec_unbatched"], [181, 1, 1, "", "step"], [181, 1, 1, "", "step_and_maybe_reset"], [181, 1, 1, "", "step_mdp"], [181, 1, 1, "", "to"], [181, 1, 1, "", "to_empty"], [181, 1, 1, "", "train"], [181, 1, 1, "", "type"], [181, 1, 1, "", "xpu"], [181, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[182, 2, 1, "", "action_key"], [182, 2, 1, "", "action_keys"], [182, 2, 1, "", "action_spec"], [182, 2, 1, "", "action_spec_unbatched"], [182, 1, 1, "", "add_module"], [182, 1, 1, "", "add_truncated_keys"], [182, 1, 1, "", "all_actions"], [182, 1, 1, "", "any_done"], [182, 1, 1, "", "append_transform"], [182, 1, 1, "", "apply"], [182, 1, 1, "", "auto_specs_"], [182, 2, 1, "", "batch_dims"], [182, 2, 1, "", "batch_size"], [182, 1, 1, "", "bfloat16"], [182, 1, 1, "", "buffers"], [182, 1, 1, "", "cardinality"], [182, 1, 1, "", "check_env_specs"], [182, 1, 1, "", "children"], [182, 2, 1, "", "collector"], [182, 1, 1, "", "compile"], [182, 1, 1, "", "cpu"], [182, 1, 1, "", "cuda"], [182, 2, 1, "", "done_key"], [182, 2, 1, "", "done_keys"], [182, 2, 1, "", "done_keys_groups"], [182, 2, 1, "", "done_spec"], [182, 2, 1, "", "done_spec_unbatched"], [182, 1, 1, "", "double"], [182, 1, 1, "", "empty_cache"], [182, 1, 1, "", "eval"], [182, 1, 1, "", "extra_repr"], [182, 1, 1, "", "fake_tensordict"], [182, 1, 1, "", "float"], [182, 1, 1, "", "forward"], [182, 2, 1, "", "full_action_spec"], [182, 2, 1, "", "full_action_spec_unbatched"], [182, 2, 1, "", "full_done_spec"], [182, 2, 1, "", "full_done_spec_unbatched"], [182, 2, 1, "", "full_observation_spec_unbatched"], [182, 2, 1, "", "full_reward_spec"], [182, 2, 1, "", "full_reward_spec_unbatched"], [182, 2, 1, "", "full_state_spec"], [182, 2, 1, "", "full_state_spec_unbatched"], [182, 1, 1, "", "get_buffer"], [182, 1, 1, "", "get_extra_state"], [182, 1, 1, "", "get_parameter"], [182, 1, 1, "", "get_submodule"], [182, 1, 1, "", "half"], [182, 2, 1, "", "input_spec"], [182, 2, 1, "", "input_spec_unbatched"], [182, 1, 1, "", "ipu"], [182, 2, 1, "", "is_spec_locked"], [182, 1, 1, "", "load_state_dict"], [182, 1, 1, "", "maybe_reset"], [182, 1, 1, "", "modules"], [182, 1, 1, "", "mtia"], [182, 1, 1, "", "named_buffers"], [182, 1, 1, "", "named_children"], [182, 1, 1, "", "named_modules"], [182, 1, 1, "", "named_parameters"], [182, 2, 1, "", "observation_keys"], [182, 2, 1, "", "observation_spec"], [182, 2, 1, "", "observation_spec_unbatched"], [182, 2, 1, "", "output_spec"], [182, 2, 1, "", "output_spec_unbatched"], [182, 1, 1, "", "parameters"], [182, 1, 1, "", "rand_action"], [182, 1, 1, "", "rand_step"], [182, 1, 1, "", "register_backward_hook"], [182, 1, 1, "", "register_buffer"], [182, 1, 1, "", "register_collector"], [182, 1, 1, "", "register_forward_hook"], [182, 1, 1, "", "register_forward_pre_hook"], [182, 1, 1, "", "register_full_backward_hook"], [182, 1, 1, "", "register_full_backward_pre_hook"], [182, 1, 1, "", "register_gym"], [182, 1, 1, "", "register_load_state_dict_post_hook"], [182, 1, 1, "", "register_load_state_dict_pre_hook"], [182, 1, 1, "", "register_module"], [182, 1, 1, "", "register_parameter"], [182, 1, 1, "", "register_state_dict_post_hook"], [182, 1, 1, "", "register_state_dict_pre_hook"], [182, 1, 1, "", "requires_grad_"], [182, 1, 1, "", "reset"], [182, 2, 1, "", "reset_keys"], [182, 2, 1, "", "reward_key"], [182, 2, 1, "", "reward_keys"], [182, 2, 1, "", "reward_spec"], [182, 2, 1, "", "reward_spec_unbatched"], [182, 1, 1, "", "rollout"], [182, 1, 1, "", "set_extra_state"], [182, 1, 1, "", "set_seed"], [182, 1, 1, "", "set_spec_lock_"], [182, 1, 1, "", "set_submodule"], [182, 2, 1, "", "shape"], [182, 1, 1, "", "share_memory"], [182, 2, 1, "", "specs"], [182, 1, 1, "", "state_dict"], [182, 2, 1, "", "state_keys"], [182, 2, 1, "", "state_spec"], [182, 2, 1, "", "state_spec_unbatched"], [182, 1, 1, "", "step"], [182, 1, 1, "", "step_and_maybe_reset"], [182, 1, 1, "", "step_mdp"], [182, 1, 1, "", "to"], [182, 1, 1, "", "to_empty"], [182, 1, 1, "", "train"], [182, 1, 1, "", "type"], [182, 1, 1, "", "xpu"], [182, 1, 1, "", "zero_grad"]], "torchrl.envs.llm": [[192, 0, 1, "", "ChatEnv"], [193, 0, 1, "", "DatasetChatEnv"], [194, 0, 1, "", "GSM8KEnv"], [195, 0, 1, "", "GSM8KPrepareQuestion"], [196, 0, 1, "", "GSM8KRewardParser"], [197, 0, 1, "", "IFEvalEnv"], [198, 0, 1, "", "IFEvalScoreData"], [199, 0, 1, "", "IfEvalScorer"], [200, 0, 1, "", "LLMEnv"], [201, 0, 1, "", "LLMHashingEnv"], [202, 0, 1, "", "MLGymWrapper"], [203, 0, 1, "", "make_gsm8k_env"], [204, 0, 1, "", "make_mlgym"]], "torchrl.envs.llm.ChatEnv": [[192, 2, 1, "", "action_key"], [192, 2, 1, "", "action_keys"], [192, 2, 1, "", "action_spec"], [192, 2, 1, "", "action_spec_unbatched"], [192, 1, 1, "", "add_module"], [192, 1, 1, "", "add_truncated_keys"], [192, 1, 1, "", "all_actions"], [192, 1, 1, "", "any_done"], [192, 1, 1, "", "append_transform"], [192, 1, 1, "", "apply"], [192, 1, 1, "", "auto_specs_"], [192, 2, 1, "", "batch_dims"], [192, 2, 1, "", "batch_locked"], [192, 2, 1, "", "batch_size"], [192, 1, 1, "", "bfloat16"], [192, 1, 1, "", "buffers"], [192, 1, 1, "", "cardinality"], [192, 1, 1, "", "check_env_specs"], [192, 1, 1, "", "children"], [192, 2, 1, "", "collector"], [192, 1, 1, "", "compile"], [192, 1, 1, "", "cpu"], [192, 1, 1, "", "cuda"], [192, 2, 1, "", "done_key"], [192, 2, 1, "", "done_keys"], [192, 2, 1, "", "done_keys_groups"], [192, 2, 1, "", "done_spec"], [192, 2, 1, "", "done_spec_unbatched"], [192, 1, 1, "", "double"], [192, 1, 1, "", "empty_cache"], [192, 1, 1, "", "eval"], [192, 1, 1, "", "extra_repr"], [192, 1, 1, "", "fake_tensordict"], [192, 1, 1, "", "float"], [192, 1, 1, "", "forward"], [192, 1, 1, "", "from_dataloader"], [192, 2, 1, "", "full_action_spec"], [192, 2, 1, "", "full_action_spec_unbatched"], [192, 2, 1, "", "full_done_spec"], [192, 2, 1, "", "full_done_spec_unbatched"], [192, 2, 1, "", "full_observation_spec_unbatched"], [192, 2, 1, "", "full_reward_spec"], [192, 2, 1, "", "full_reward_spec_unbatched"], [192, 2, 1, "", "full_state_spec"], [192, 2, 1, "", "full_state_spec_unbatched"], [192, 1, 1, "", "get_buffer"], [192, 1, 1, "", "get_extra_state"], [192, 1, 1, "", "get_parameter"], [192, 1, 1, "", "get_submodule"], [192, 1, 1, "", "half"], [192, 2, 1, "", "input_spec"], [192, 2, 1, "", "input_spec_unbatched"], [192, 1, 1, "", "ipu"], [192, 2, 1, "", "is_spec_locked"], [192, 1, 1, "", "load_state_dict"], [192, 1, 1, "", "maybe_reset"], [192, 1, 1, "", "modules"], [192, 1, 1, "", "mtia"], [192, 1, 1, "", "named_buffers"], [192, 1, 1, "", "named_children"], [192, 1, 1, "", "named_modules"], [192, 1, 1, "", "named_parameters"], [192, 2, 1, "", "observation_keys"], [192, 2, 1, "", "observation_spec"], [192, 2, 1, "", "observation_spec_unbatched"], [192, 2, 1, "", "output_spec"], [192, 2, 1, "", "output_spec_unbatched"], [192, 1, 1, "", "parameters"], [192, 1, 1, "", "rand_action"], [192, 1, 1, "", "rand_step"], [192, 1, 1, "", "register_backward_hook"], [192, 1, 1, "", "register_buffer"], [192, 1, 1, "", "register_collector"], [192, 1, 1, "", "register_forward_hook"], [192, 1, 1, "", "register_forward_pre_hook"], [192, 1, 1, "", "register_full_backward_hook"], [192, 1, 1, "", "register_full_backward_pre_hook"], [192, 1, 1, "", "register_gym"], [192, 1, 1, "", "register_load_state_dict_post_hook"], [192, 1, 1, "", "register_load_state_dict_pre_hook"], [192, 1, 1, "", "register_module"], [192, 1, 1, "", "register_parameter"], [192, 1, 1, "", "register_state_dict_post_hook"], [192, 1, 1, "", "register_state_dict_pre_hook"], [192, 1, 1, "", "requires_grad_"], [192, 1, 1, "id0", "reset"], [192, 2, 1, "", "reset_keys"], [192, 2, 1, "", "reward_key"], [192, 2, 1, "", "reward_keys"], [192, 2, 1, "", "reward_spec"], [192, 2, 1, "", "reward_spec_unbatched"], [192, 1, 1, "", "rollout"], [192, 1, 1, "", "set_extra_state"], [192, 1, 1, "", "set_seed"], [192, 1, 1, "", "set_spec_lock_"], [192, 1, 1, "", "set_submodule"], [192, 2, 1, "", "shape"], [192, 1, 1, "", "share_memory"], [192, 2, 1, "", "specs"], [192, 1, 1, "", "state_dict"], [192, 2, 1, "", "state_keys"], [192, 2, 1, "", "state_spec"], [192, 2, 1, "", "state_spec_unbatched"], [192, 1, 1, "id1", "step"], [192, 1, 1, "", "step_and_maybe_reset"], [192, 1, 1, "", "step_mdp"], [192, 1, 1, "", "to"], [192, 1, 1, "", "to_empty"], [192, 1, 1, "", "train"], [192, 1, 1, "", "type"], [192, 1, 1, "", "xpu"], [192, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.DatasetChatEnv": [[193, 2, 1, "", "action_key"], [193, 2, 1, "", "action_keys"], [193, 2, 1, "", "action_spec"], [193, 2, 1, "", "action_spec_unbatched"], [193, 1, 1, "", "add_module"], [193, 1, 1, "", "add_truncated_keys"], [193, 1, 1, "", "all_actions"], [193, 1, 1, "", "any_done"], [193, 1, 1, "", "append_transform"], [193, 1, 1, "", "apply"], [193, 1, 1, "", "auto_specs_"], [193, 2, 1, "", "batch_dims"], [193, 2, 1, "", "batch_locked"], [193, 2, 1, "", "batch_size"], [193, 1, 1, "", "bfloat16"], [193, 1, 1, "", "buffers"], [193, 1, 1, "", "cardinality"], [193, 1, 1, "", "check_env_specs"], [193, 1, 1, "", "children"], [193, 2, 1, "", "collector"], [193, 1, 1, "", "compile"], [193, 1, 1, "", "cpu"], [193, 1, 1, "", "cuda"], [193, 2, 1, "", "done_key"], [193, 2, 1, "", "done_keys"], [193, 2, 1, "", "done_keys_groups"], [193, 2, 1, "", "done_spec"], [193, 2, 1, "", "done_spec_unbatched"], [193, 1, 1, "", "double"], [193, 1, 1, "", "empty_cache"], [193, 1, 1, "", "eval"], [193, 1, 1, "", "extra_repr"], [193, 1, 1, "", "fake_tensordict"], [193, 1, 1, "", "float"], [193, 1, 1, "", "forward"], [193, 1, 1, "", "from_dataloader"], [193, 2, 1, "", "full_action_spec"], [193, 2, 1, "", "full_action_spec_unbatched"], [193, 2, 1, "", "full_done_spec"], [193, 2, 1, "", "full_done_spec_unbatched"], [193, 2, 1, "", "full_observation_spec_unbatched"], [193, 2, 1, "", "full_reward_spec"], [193, 2, 1, "", "full_reward_spec_unbatched"], [193, 2, 1, "", "full_state_spec"], [193, 2, 1, "", "full_state_spec_unbatched"], [193, 1, 1, "", "get_buffer"], [193, 1, 1, "", "get_extra_state"], [193, 1, 1, "", "get_parameter"], [193, 1, 1, "", "get_submodule"], [193, 1, 1, "", "half"], [193, 2, 1, "", "input_spec"], [193, 2, 1, "", "input_spec_unbatched"], [193, 1, 1, "", "insert_transform"], [193, 1, 1, "", "ipu"], [193, 2, 1, "", "is_spec_locked"], [193, 1, 1, "", "load_state_dict"], [193, 1, 1, "", "maybe_reset"], [193, 1, 1, "", "modules"], [193, 1, 1, "", "mtia"], [193, 1, 1, "", "named_buffers"], [193, 1, 1, "", "named_children"], [193, 1, 1, "", "named_modules"], [193, 1, 1, "", "named_parameters"], [193, 2, 1, "", "observation_keys"], [193, 2, 1, "", "observation_spec"], [193, 2, 1, "", "observation_spec_unbatched"], [193, 2, 1, "", "output_spec"], [193, 2, 1, "", "output_spec_unbatched"], [193, 1, 1, "", "parameters"], [193, 1, 1, "", "rand_action"], [193, 1, 1, "", "rand_step"], [193, 1, 1, "", "register_backward_hook"], [193, 1, 1, "", "register_buffer"], [193, 1, 1, "", "register_collector"], [193, 1, 1, "", "register_forward_hook"], [193, 1, 1, "", "register_forward_pre_hook"], [193, 1, 1, "", "register_full_backward_hook"], [193, 1, 1, "", "register_full_backward_pre_hook"], [193, 1, 1, "", "register_gym"], [193, 1, 1, "", "register_load_state_dict_post_hook"], [193, 1, 1, "", "register_load_state_dict_pre_hook"], [193, 1, 1, "", "register_module"], [193, 1, 1, "", "register_parameter"], [193, 1, 1, "", "register_state_dict_post_hook"], [193, 1, 1, "", "register_state_dict_pre_hook"], [193, 1, 1, "", "requires_grad_"], [193, 1, 1, "", "reset"], [193, 1, 1, "", "reset_dataloader"], [193, 2, 1, "", "reset_keys"], [193, 2, 1, "", "reward_key"], [193, 2, 1, "", "reward_keys"], [193, 2, 1, "", "reward_spec"], [193, 2, 1, "", "reward_spec_unbatched"], [193, 1, 1, "", "rollout"], [193, 1, 1, "", "set_extra_state"], [193, 1, 1, "", "set_missing_tolerance"], [193, 1, 1, "", "set_seed"], [193, 1, 1, "", "set_spec_lock_"], [193, 1, 1, "", "set_submodule"], [193, 2, 1, "", "shape"], [193, 1, 1, "", "share_memory"], [193, 2, 1, "", "specs"], [193, 1, 1, "", "state_dict"], [193, 2, 1, "", "state_keys"], [193, 2, 1, "", "state_spec"], [193, 2, 1, "", "state_spec_unbatched"], [193, 1, 1, "", "step"], [193, 1, 1, "", "step_and_maybe_reset"], [193, 1, 1, "", "step_mdp"], [193, 1, 1, "", "to"], [193, 1, 1, "", "to_empty"], [193, 1, 1, "", "train"], [193, 1, 1, "", "type"], [193, 1, 1, "", "xpu"], [193, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KEnv": [[194, 2, 1, "", "action_key"], [194, 2, 1, "", "action_keys"], [194, 2, 1, "", "action_spec"], [194, 2, 1, "", "action_spec_unbatched"], [194, 1, 1, "", "add_module"], [194, 1, 1, "", "add_truncated_keys"], [194, 1, 1, "", "all_actions"], [194, 1, 1, "", "any_done"], [194, 1, 1, "", "append_transform"], [194, 1, 1, "", "apply"], [194, 1, 1, "", "auto_specs_"], [194, 2, 1, "", "batch_dims"], [194, 2, 1, "", "batch_locked"], [194, 2, 1, "", "batch_size"], [194, 1, 1, "", "bfloat16"], [194, 1, 1, "", "buffers"], [194, 1, 1, "", "cardinality"], [194, 1, 1, "", "check_env_specs"], [194, 1, 1, "", "children"], [194, 2, 1, "", "collector"], [194, 1, 1, "", "compile"], [194, 1, 1, "", "cpu"], [194, 1, 1, "", "cuda"], [194, 2, 1, "", "done_key"], [194, 2, 1, "", "done_keys"], [194, 2, 1, "", "done_keys_groups"], [194, 2, 1, "", "done_spec"], [194, 2, 1, "", "done_spec_unbatched"], [194, 1, 1, "", "double"], [194, 1, 1, "", "empty_cache"], [194, 1, 1, "", "eval"], [194, 1, 1, "", "extra_repr"], [194, 1, 1, "", "fake_tensordict"], [194, 1, 1, "", "float"], [194, 1, 1, "", "forward"], [194, 1, 1, "", "from_dataloader"], [194, 2, 1, "", "full_action_spec"], [194, 2, 1, "", "full_action_spec_unbatched"], [194, 2, 1, "", "full_done_spec"], [194, 2, 1, "", "full_done_spec_unbatched"], [194, 2, 1, "", "full_observation_spec_unbatched"], [194, 2, 1, "", "full_reward_spec"], [194, 2, 1, "", "full_reward_spec_unbatched"], [194, 2, 1, "", "full_state_spec"], [194, 2, 1, "", "full_state_spec_unbatched"], [194, 1, 1, "", "get_buffer"], [194, 1, 1, "", "get_extra_state"], [194, 1, 1, "", "get_parameter"], [194, 1, 1, "", "get_submodule"], [194, 1, 1, "", "half"], [194, 2, 1, "", "input_spec"], [194, 2, 1, "", "input_spec_unbatched"], [194, 1, 1, "", "insert_transform"], [194, 1, 1, "", "ipu"], [194, 2, 1, "", "is_spec_locked"], [194, 1, 1, "", "load_state_dict"], [194, 1, 1, "", "maybe_reset"], [194, 1, 1, "", "modules"], [194, 1, 1, "", "mtia"], [194, 1, 1, "", "named_buffers"], [194, 1, 1, "", "named_children"], [194, 1, 1, "", "named_modules"], [194, 1, 1, "", "named_parameters"], [194, 2, 1, "", "observation_keys"], [194, 2, 1, "", "observation_spec"], [194, 2, 1, "", "observation_spec_unbatched"], [194, 2, 1, "", "output_spec"], [194, 2, 1, "", "output_spec_unbatched"], [194, 1, 1, "", "parameters"], [194, 1, 1, "", "rand_action"], [194, 1, 1, "", "rand_step"], [194, 1, 1, "", "register_backward_hook"], [194, 1, 1, "", "register_buffer"], [194, 1, 1, "", "register_collector"], [194, 1, 1, "", "register_forward_hook"], [194, 1, 1, "", "register_forward_pre_hook"], [194, 1, 1, "", "register_full_backward_hook"], [194, 1, 1, "", "register_full_backward_pre_hook"], [194, 1, 1, "", "register_gym"], [194, 1, 1, "", "register_load_state_dict_post_hook"], [194, 1, 1, "", "register_load_state_dict_pre_hook"], [194, 1, 1, "", "register_module"], [194, 1, 1, "", "register_parameter"], [194, 1, 1, "", "register_state_dict_post_hook"], [194, 1, 1, "", "register_state_dict_pre_hook"], [194, 1, 1, "", "requires_grad_"], [194, 1, 1, "", "reset"], [194, 1, 1, "", "reset_dataloader"], [194, 2, 1, "", "reset_keys"], [194, 2, 1, "", "reward_key"], [194, 2, 1, "", "reward_keys"], [194, 2, 1, "", "reward_spec"], [194, 2, 1, "", "reward_spec_unbatched"], [194, 1, 1, "", "rollout"], [194, 1, 1, "", "set_extra_state"], [194, 1, 1, "", "set_missing_tolerance"], [194, 1, 1, "", "set_seed"], [194, 1, 1, "", "set_spec_lock_"], [194, 1, 1, "", "set_submodule"], [194, 2, 1, "", "shape"], [194, 1, 1, "", "share_memory"], [194, 2, 1, "", "specs"], [194, 1, 1, "", "state_dict"], [194, 2, 1, "", "state_keys"], [194, 2, 1, "", "state_spec"], [194, 2, 1, "", "state_spec_unbatched"], [194, 1, 1, "", "step"], [194, 1, 1, "", "step_and_maybe_reset"], [194, 1, 1, "", "step_mdp"], [194, 1, 1, "", "to"], [194, 1, 1, "", "to_empty"], [194, 1, 1, "", "train"], [194, 1, 1, "", "type"], [194, 1, 1, "", "xpu"], [194, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KPrepareQuestion": [[195, 1, 1, "", "add_module"], [195, 1, 1, "", "apply"], [195, 1, 1, "", "bfloat16"], [195, 1, 1, "", "buffers"], [195, 1, 1, "", "children"], [195, 1, 1, "", "close"], [195, 2, 1, "", "collector"], [195, 1, 1, "", "compile"], [195, 2, 1, "", "container"], [195, 1, 1, "", "cpu"], [195, 1, 1, "", "cuda"], [195, 1, 1, "", "double"], [195, 1, 1, "", "eval"], [195, 1, 1, "", "extra_repr"], [195, 1, 1, "", "float"], [195, 1, 1, "", "forward"], [195, 1, 1, "", "get_buffer"], [195, 1, 1, "", "get_extra_state"], [195, 1, 1, "", "get_parameter"], [195, 1, 1, "", "get_submodule"], [195, 1, 1, "", "half"], [195, 1, 1, "", "init"], [195, 1, 1, "", "inv"], [195, 1, 1, "", "ipu"], [195, 1, 1, "", "load_state_dict"], [195, 1, 1, "", "modules"], [195, 1, 1, "", "mtia"], [195, 1, 1, "", "named_buffers"], [195, 1, 1, "", "named_children"], [195, 1, 1, "", "named_modules"], [195, 1, 1, "", "named_parameters"], [195, 1, 1, "", "parameters"], [195, 2, 1, "", "parent"], [195, 1, 1, "", "register_backward_hook"], [195, 1, 1, "", "register_buffer"], [195, 1, 1, "", "register_forward_hook"], [195, 1, 1, "", "register_forward_pre_hook"], [195, 1, 1, "", "register_full_backward_hook"], [195, 1, 1, "", "register_full_backward_pre_hook"], [195, 1, 1, "", "register_load_state_dict_post_hook"], [195, 1, 1, "", "register_load_state_dict_pre_hook"], [195, 1, 1, "", "register_module"], [195, 1, 1, "", "register_parameter"], [195, 1, 1, "", "register_state_dict_post_hook"], [195, 1, 1, "", "register_state_dict_pre_hook"], [195, 1, 1, "", "requires_grad_"], [195, 1, 1, "", "set_extra_state"], [195, 1, 1, "", "set_submodule"], [195, 1, 1, "", "share_memory"], [195, 1, 1, "", "state_dict"], [195, 1, 1, "", "to"], [195, 1, 1, "", "to_empty"], [195, 1, 1, "", "train"], [195, 1, 1, "", "transform_action_spec"], [195, 1, 1, "", "transform_done_spec"], [195, 1, 1, "", "transform_env_batch_size"], [195, 1, 1, "", "transform_env_device"], [195, 1, 1, "", "transform_input_spec"], [195, 1, 1, "", "transform_observation_spec"], [195, 1, 1, "", "transform_output_spec"], [195, 1, 1, "", "transform_reward_spec"], [195, 1, 1, "", "transform_state_spec"], [195, 1, 1, "", "type"], [195, 1, 1, "", "xpu"], [195, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KRewardParser": [[196, 1, 1, "", "add_module"], [196, 1, 1, "", "apply"], [196, 1, 1, "", "bfloat16"], [196, 1, 1, "", "buffers"], [196, 1, 1, "", "children"], [196, 1, 1, "", "close"], [196, 2, 1, "", "collector"], [196, 1, 1, "", "compile"], [196, 2, 1, "", "container"], [196, 1, 1, "", "cpu"], [196, 1, 1, "", "cuda"], [196, 1, 1, "", "double"], [196, 1, 1, "", "eval"], [196, 1, 1, "", "extra_repr"], [196, 1, 1, "", "extract_tags"], [196, 1, 1, "", "float"], [196, 1, 1, "", "forward"], [196, 1, 1, "", "get_buffer"], [196, 1, 1, "", "get_extra_state"], [196, 1, 1, "", "get_parameter"], [196, 1, 1, "", "get_submodule"], [196, 1, 1, "", "half"], [196, 1, 1, "", "init"], [196, 1, 1, "", "inv"], [196, 1, 1, "", "ipu"], [196, 1, 1, "", "load_state_dict"], [196, 1, 1, "", "modules"], [196, 1, 1, "", "mtia"], [196, 1, 1, "", "named_buffers"], [196, 1, 1, "", "named_children"], [196, 1, 1, "", "named_modules"], [196, 1, 1, "", "named_parameters"], [196, 1, 1, "", "parameters"], [196, 2, 1, "", "parent"], [196, 1, 1, "", "register_backward_hook"], [196, 1, 1, "", "register_buffer"], [196, 1, 1, "", "register_forward_hook"], [196, 1, 1, "", "register_forward_pre_hook"], [196, 1, 1, "", "register_full_backward_hook"], [196, 1, 1, "", "register_full_backward_pre_hook"], [196, 1, 1, "", "register_load_state_dict_post_hook"], [196, 1, 1, "", "register_load_state_dict_pre_hook"], [196, 1, 1, "", "register_module"], [196, 1, 1, "", "register_parameter"], [196, 1, 1, "", "register_state_dict_post_hook"], [196, 1, 1, "", "register_state_dict_pre_hook"], [196, 1, 1, "", "requires_grad_"], [196, 1, 1, "", "set_extra_state"], [196, 1, 1, "", "set_submodule"], [196, 1, 1, "", "share_memory"], [196, 1, 1, "", "state_dict"], [196, 1, 1, "", "to"], [196, 1, 1, "", "to_empty"], [196, 1, 1, "", "train"], [196, 1, 1, "", "transform_action_spec"], [196, 1, 1, "", "transform_done_spec"], [196, 1, 1, "", "transform_env_batch_size"], [196, 1, 1, "", "transform_env_device"], [196, 1, 1, "", "transform_input_spec"], [196, 1, 1, "", "transform_observation_spec"], [196, 1, 1, "", "transform_output_spec"], [196, 1, 1, "", "transform_reward_spec"], [196, 1, 1, "", "transform_state_spec"], [196, 1, 1, "", "type"], [196, 1, 1, "", "xpu"], [196, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.IFEvalEnv": [[197, 2, 1, "", "action_key"], [197, 2, 1, "", "action_keys"], [197, 2, 1, "", "action_spec"], [197, 2, 1, "", "action_spec_unbatched"], [197, 1, 1, "", "add_module"], [197, 1, 1, "", "add_truncated_keys"], [197, 1, 1, "", "all_actions"], [197, 1, 1, "", "any_done"], [197, 1, 1, "", "append_transform"], [197, 1, 1, "", "apply"], [197, 1, 1, "", "auto_specs_"], [197, 2, 1, "", "batch_dims"], [197, 2, 1, "", "batch_locked"], [197, 2, 1, "", "batch_size"], [197, 1, 1, "", "bfloat16"], [197, 1, 1, "", "buffers"], [197, 1, 1, "", "cardinality"], [197, 1, 1, "", "check_env_specs"], [197, 1, 1, "", "children"], [197, 2, 1, "", "collector"], [197, 1, 1, "", "compile"], [197, 1, 1, "", "cpu"], [197, 1, 1, "", "cuda"], [197, 2, 1, "", "done_key"], [197, 2, 1, "", "done_keys"], [197, 2, 1, "", "done_keys_groups"], [197, 2, 1, "", "done_spec"], [197, 2, 1, "", "done_spec_unbatched"], [197, 1, 1, "", "double"], [197, 1, 1, "", "empty_cache"], [197, 1, 1, "", "eval"], [197, 1, 1, "", "extra_repr"], [197, 1, 1, "", "fake_tensordict"], [197, 1, 1, "", "float"], [197, 1, 1, "", "forward"], [197, 1, 1, "", "from_dataloader"], [197, 2, 1, "", "full_action_spec"], [197, 2, 1, "", "full_action_spec_unbatched"], [197, 2, 1, "", "full_done_spec"], [197, 2, 1, "", "full_done_spec_unbatched"], [197, 2, 1, "", "full_observation_spec_unbatched"], [197, 2, 1, "", "full_reward_spec"], [197, 2, 1, "", "full_reward_spec_unbatched"], [197, 2, 1, "", "full_state_spec"], [197, 2, 1, "", "full_state_spec_unbatched"], [197, 1, 1, "", "get_buffer"], [197, 1, 1, "", "get_extra_state"], [197, 1, 1, "", "get_parameter"], [197, 1, 1, "", "get_submodule"], [197, 1, 1, "", "half"], [197, 2, 1, "", "input_spec"], [197, 2, 1, "", "input_spec_unbatched"], [197, 1, 1, "", "insert_transform"], [197, 1, 1, "", "ipu"], [197, 2, 1, "", "is_spec_locked"], [197, 1, 1, "", "load_state_dict"], [197, 1, 1, "", "maybe_reset"], [197, 1, 1, "", "modules"], [197, 1, 1, "", "mtia"], [197, 1, 1, "", "named_buffers"], [197, 1, 1, "", "named_children"], [197, 1, 1, "", "named_modules"], [197, 1, 1, "", "named_parameters"], [197, 2, 1, "", "observation_keys"], [197, 2, 1, "", "observation_spec"], [197, 2, 1, "", "observation_spec_unbatched"], [197, 2, 1, "", "output_spec"], [197, 2, 1, "", "output_spec_unbatched"], [197, 1, 1, "", "parameters"], [197, 1, 1, "", "rand_action"], [197, 1, 1, "", "rand_step"], [197, 1, 1, "", "register_backward_hook"], [197, 1, 1, "", "register_buffer"], [197, 1, 1, "", "register_collector"], [197, 1, 1, "", "register_forward_hook"], [197, 1, 1, "", "register_forward_pre_hook"], [197, 1, 1, "", "register_full_backward_hook"], [197, 1, 1, "", "register_full_backward_pre_hook"], [197, 1, 1, "", "register_gym"], [197, 1, 1, "", "register_load_state_dict_post_hook"], [197, 1, 1, "", "register_load_state_dict_pre_hook"], [197, 1, 1, "", "register_module"], [197, 1, 1, "", "register_parameter"], [197, 1, 1, "", "register_state_dict_post_hook"], [197, 1, 1, "", "register_state_dict_pre_hook"], [197, 1, 1, "", "requires_grad_"], [197, 1, 1, "", "reset"], [197, 1, 1, "", "reset_dataloader"], [197, 2, 1, "", "reset_keys"], [197, 2, 1, "", "reward_key"], [197, 2, 1, "", "reward_keys"], [197, 2, 1, "", "reward_spec"], [197, 2, 1, "", "reward_spec_unbatched"], [197, 1, 1, "", "rollout"], [197, 1, 1, "", "set_extra_state"], [197, 1, 1, "", "set_missing_tolerance"], [197, 1, 1, "", "set_seed"], [197, 1, 1, "", "set_spec_lock_"], [197, 1, 1, "", "set_submodule"], [197, 2, 1, "", "shape"], [197, 1, 1, "", "share_memory"], [197, 2, 1, "", "specs"], [197, 1, 1, "", "state_dict"], [197, 2, 1, "", "state_keys"], [197, 2, 1, "", "state_spec"], [197, 2, 1, "", "state_spec_unbatched"], [197, 1, 1, "", "step"], [197, 1, 1, "", "step_and_maybe_reset"], [197, 1, 1, "", "step_mdp"], [197, 1, 1, "", "to"], [197, 1, 1, "", "to_empty"], [197, 1, 1, "", "train"], [197, 1, 1, "", "type"], [197, 1, 1, "", "xpu"], [197, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.IFEvalScoreData": [[198, 1, 1, "", "cat"], [198, 2, 1, "", "device"], [198, 1, 1, "", "dumps"], [198, 1, 1, "", "fields"], [198, 1, 1, "", "from_any"], [198, 1, 1, "", "from_dataclass"], [198, 1, 1, "", "from_h5"], [198, 1, 1, "", "from_modules"], [198, 1, 1, "", "from_namedtuple"], [198, 1, 1, "", "from_pytree"], [198, 1, 1, "", "from_remote_init"], [198, 1, 1, "", "from_struct_array"], [198, 1, 1, "", "from_tensordict"], [198, 1, 1, "", "from_tuple"], [198, 1, 1, "", "fromkeys"], [198, 1, 1, "", "get"], [198, 1, 1, "", "lazy_stack"], [198, 1, 1, "", "load"], [198, 1, 1, "", "load_"], [198, 1, 1, "", "load_memmap"], [198, 1, 1, "", "load_state_dict"], [198, 1, 1, "", "maybe_dense_stack"], [198, 1, 1, "", "memmap"], [198, 1, 1, "", "memmap_"], [198, 1, 1, "", "memmap_like"], [198, 1, 1, "", "memmap_refresh_"], [198, 1, 1, "", "save"], [198, 1, 1, "", "set"], [198, 1, 1, "", "stack"], [198, 1, 1, "", "state_dict"], [198, 1, 1, "", "to_tensordict"], [198, 1, 1, "", "unbind"]], "torchrl.envs.llm.IfEvalScorer": [[199, 1, 1, "", "add_module"], [199, 1, 1, "", "apply"], [199, 1, 1, "", "bfloat16"], [199, 1, 1, "", "buffers"], [199, 1, 1, "", "children"], [199, 1, 1, "", "close"], [199, 2, 1, "", "collector"], [199, 1, 1, "", "compile"], [199, 2, 1, "", "container"], [199, 1, 1, "", "cpu"], [199, 1, 1, "", "cuda"], [199, 1, 1, "", "default_reward_aggregator"], [199, 1, 1, "", "double"], [199, 1, 1, "", "eval"], [199, 1, 1, "", "extra_repr"], [199, 1, 1, "", "float"], [199, 1, 1, "", "forward"], [199, 1, 1, "", "get_buffer"], [199, 1, 1, "", "get_extra_state"], [199, 1, 1, "", "get_parameter"], [199, 1, 1, "", "get_submodule"], [199, 1, 1, "", "half"], [199, 1, 1, "", "init"], [199, 1, 1, "", "inv"], [199, 1, 1, "", "ipu"], [199, 1, 1, "", "load_state_dict"], [199, 1, 1, "", "modules"], [199, 1, 1, "", "mtia"], [199, 1, 1, "", "named_buffers"], [199, 1, 1, "", "named_children"], [199, 1, 1, "", "named_modules"], [199, 1, 1, "", "named_parameters"], [199, 1, 1, "", "parameters"], [199, 2, 1, "", "parent"], [199, 1, 1, "", "register_backward_hook"], [199, 1, 1, "", "register_buffer"], [199, 1, 1, "", "register_forward_hook"], [199, 1, 1, "", "register_forward_pre_hook"], [199, 1, 1, "", "register_full_backward_hook"], [199, 1, 1, "", "register_full_backward_pre_hook"], [199, 1, 1, "", "register_load_state_dict_post_hook"], [199, 1, 1, "", "register_load_state_dict_pre_hook"], [199, 1, 1, "", "register_module"], [199, 1, 1, "", "register_parameter"], [199, 1, 1, "", "register_state_dict_post_hook"], [199, 1, 1, "", "register_state_dict_pre_hook"], [199, 1, 1, "", "requires_grad_"], [199, 1, 1, "", "set_extra_state"], [199, 1, 1, "", "set_submodule"], [199, 1, 1, "", "share_memory"], [199, 1, 1, "", "state_dict"], [199, 1, 1, "", "to"], [199, 1, 1, "", "to_empty"], [199, 1, 1, "", "train"], [199, 1, 1, "", "transform_action_spec"], [199, 1, 1, "", "transform_done_spec"], [199, 1, 1, "", "transform_env_batch_size"], [199, 1, 1, "", "transform_env_device"], [199, 1, 1, "", "transform_input_spec"], [199, 1, 1, "", "transform_observation_spec"], [199, 1, 1, "", "transform_output_spec"], [199, 1, 1, "", "transform_reward_spec"], [199, 1, 1, "", "transform_state_spec"], [199, 1, 1, "", "type"], [199, 1, 1, "", "xpu"], [199, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.LLMEnv": [[200, 2, 1, "", "action_key"], [200, 2, 1, "", "action_keys"], [200, 2, 1, "", "action_spec"], [200, 2, 1, "", "action_spec_unbatched"], [200, 1, 1, "", "add_module"], [200, 1, 1, "", "add_truncated_keys"], [200, 1, 1, "", "all_actions"], [200, 1, 1, "", "any_done"], [200, 1, 1, "", "append_transform"], [200, 1, 1, "", "apply"], [200, 1, 1, "", "auto_specs_"], [200, 2, 1, "", "batch_dims"], [200, 2, 1, "", "batch_locked"], [200, 2, 1, "", "batch_size"], [200, 1, 1, "", "bfloat16"], [200, 1, 1, "", "buffers"], [200, 1, 1, "", "cardinality"], [200, 1, 1, "", "check_env_specs"], [200, 1, 1, "", "children"], [200, 2, 1, "", "collector"], [200, 1, 1, "", "compile"], [200, 1, 1, "", "cpu"], [200, 1, 1, "", "cuda"], [200, 2, 1, "", "done_key"], [200, 2, 1, "", "done_keys"], [200, 2, 1, "", "done_keys_groups"], [200, 2, 1, "", "done_spec"], [200, 2, 1, "", "done_spec_unbatched"], [200, 1, 1, "", "double"], [200, 1, 1, "", "empty_cache"], [200, 1, 1, "", "eval"], [200, 1, 1, "", "extra_repr"], [200, 1, 1, "", "fake_tensordict"], [200, 1, 1, "", "float"], [200, 1, 1, "", "forward"], [200, 1, 1, "id0", "from_dataloader"], [200, 2, 1, "", "full_action_spec"], [200, 2, 1, "", "full_action_spec_unbatched"], [200, 2, 1, "", "full_done_spec"], [200, 2, 1, "", "full_done_spec_unbatched"], [200, 2, 1, "", "full_observation_spec_unbatched"], [200, 2, 1, "", "full_reward_spec"], [200, 2, 1, "", "full_reward_spec_unbatched"], [200, 2, 1, "", "full_state_spec"], [200, 2, 1, "", "full_state_spec_unbatched"], [200, 1, 1, "", "get_buffer"], [200, 1, 1, "", "get_extra_state"], [200, 1, 1, "", "get_parameter"], [200, 1, 1, "", "get_submodule"], [200, 1, 1, "", "half"], [200, 2, 1, "", "input_spec"], [200, 2, 1, "", "input_spec_unbatched"], [200, 1, 1, "", "ipu"], [200, 2, 1, "", "is_spec_locked"], [200, 1, 1, "", "load_state_dict"], [200, 1, 1, "", "maybe_reset"], [200, 1, 1, "", "modules"], [200, 1, 1, "", "mtia"], [200, 1, 1, "", "named_buffers"], [200, 1, 1, "", "named_children"], [200, 1, 1, "", "named_modules"], [200, 1, 1, "", "named_parameters"], [200, 2, 1, "", "observation_keys"], [200, 2, 1, "", "observation_spec"], [200, 2, 1, "", "observation_spec_unbatched"], [200, 2, 1, "", "output_spec"], [200, 2, 1, "", "output_spec_unbatched"], [200, 1, 1, "", "parameters"], [200, 1, 1, "", "rand_action"], [200, 1, 1, "", "rand_step"], [200, 1, 1, "", "register_backward_hook"], [200, 1, 1, "", "register_buffer"], [200, 1, 1, "", "register_collector"], [200, 1, 1, "", "register_forward_hook"], [200, 1, 1, "", "register_forward_pre_hook"], [200, 1, 1, "", "register_full_backward_hook"], [200, 1, 1, "", "register_full_backward_pre_hook"], [200, 1, 1, "", "register_gym"], [200, 1, 1, "", "register_load_state_dict_post_hook"], [200, 1, 1, "", "register_load_state_dict_pre_hook"], [200, 1, 1, "", "register_module"], [200, 1, 1, "", "register_parameter"], [200, 1, 1, "", "register_state_dict_post_hook"], [200, 1, 1, "", "register_state_dict_pre_hook"], [200, 1, 1, "", "requires_grad_"], [200, 1, 1, "", "reset"], [200, 2, 1, "", "reset_keys"], [200, 2, 1, "", "reward_key"], [200, 2, 1, "", "reward_keys"], [200, 2, 1, "", "reward_spec"], [200, 2, 1, "", "reward_spec_unbatched"], [200, 1, 1, "", "rollout"], [200, 1, 1, "", "set_extra_state"], [200, 1, 1, "", "set_seed"], [200, 1, 1, "", "set_spec_lock_"], [200, 1, 1, "", "set_submodule"], [200, 2, 1, "", "shape"], [200, 1, 1, "", "share_memory"], [200, 2, 1, "", "specs"], [200, 1, 1, "", "state_dict"], [200, 2, 1, "", "state_keys"], [200, 2, 1, "", "state_spec"], [200, 2, 1, "", "state_spec_unbatched"], [200, 1, 1, "", "step"], [200, 1, 1, "", "step_and_maybe_reset"], [200, 1, 1, "", "step_mdp"], [200, 1, 1, "", "to"], [200, 1, 1, "", "to_empty"], [200, 1, 1, "", "train"], [200, 1, 1, "", "type"], [200, 1, 1, "", "xpu"], [200, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.LLMHashingEnv": [[201, 2, 1, "", "action_key"], [201, 2, 1, "", "action_keys"], [201, 2, 1, "", "action_spec"], [201, 2, 1, "", "action_spec_unbatched"], [201, 1, 1, "", "add_module"], [201, 1, 1, "", "add_truncated_keys"], [201, 1, 1, "", "all_actions"], [201, 1, 1, "", "any_done"], [201, 1, 1, "", "append_transform"], [201, 1, 1, "", "apply"], [201, 1, 1, "", "auto_specs_"], [201, 2, 1, "", "batch_dims"], [201, 2, 1, "", "batch_locked"], [201, 2, 1, "", "batch_size"], [201, 1, 1, "", "bfloat16"], [201, 1, 1, "", "buffers"], [201, 1, 1, "", "cardinality"], [201, 1, 1, "", "check_env_specs"], [201, 1, 1, "", "children"], [201, 2, 1, "", "collector"], [201, 1, 1, "", "compile"], [201, 1, 1, "", "cpu"], [201, 1, 1, "", "cuda"], [201, 2, 1, "", "done_key"], [201, 2, 1, "", "done_keys"], [201, 2, 1, "", "done_keys_groups"], [201, 2, 1, "", "done_spec"], [201, 2, 1, "", "done_spec_unbatched"], [201, 1, 1, "", "double"], [201, 1, 1, "", "empty_cache"], [201, 1, 1, "", "eval"], [201, 1, 1, "", "extra_repr"], [201, 1, 1, "", "fake_tensordict"], [201, 1, 1, "", "float"], [201, 1, 1, "", "forward"], [201, 2, 1, "", "full_action_spec"], [201, 2, 1, "", "full_action_spec_unbatched"], [201, 2, 1, "", "full_done_spec"], [201, 2, 1, "", "full_done_spec_unbatched"], [201, 2, 1, "", "full_observation_spec_unbatched"], [201, 2, 1, "", "full_reward_spec"], [201, 2, 1, "", "full_reward_spec_unbatched"], [201, 2, 1, "", "full_state_spec"], [201, 2, 1, "", "full_state_spec_unbatched"], [201, 1, 1, "", "get_buffer"], [201, 1, 1, "", "get_extra_state"], [201, 1, 1, "", "get_parameter"], [201, 1, 1, "", "get_submodule"], [201, 1, 1, "", "half"], [201, 2, 1, "", "input_spec"], [201, 2, 1, "", "input_spec_unbatched"], [201, 1, 1, "", "ipu"], [201, 2, 1, "", "is_spec_locked"], [201, 1, 1, "", "load_state_dict"], [201, 1, 1, "", "make_tensordict"], [201, 1, 1, "", "maybe_reset"], [201, 1, 1, "", "modules"], [201, 1, 1, "", "mtia"], [201, 1, 1, "", "named_buffers"], [201, 1, 1, "", "named_children"], [201, 1, 1, "", "named_modules"], [201, 1, 1, "", "named_parameters"], [201, 2, 1, "", "observation_keys"], [201, 2, 1, "", "observation_spec"], [201, 2, 1, "", "observation_spec_unbatched"], [201, 2, 1, "", "output_spec"], [201, 2, 1, "", "output_spec_unbatched"], [201, 1, 1, "", "parameters"], [201, 1, 1, "", "rand_action"], [201, 1, 1, "", "rand_step"], [201, 1, 1, "", "register_backward_hook"], [201, 1, 1, "", "register_buffer"], [201, 1, 1, "", "register_collector"], [201, 1, 1, "", "register_forward_hook"], [201, 1, 1, "", "register_forward_pre_hook"], [201, 1, 1, "", "register_full_backward_hook"], [201, 1, 1, "", "register_full_backward_pre_hook"], [201, 1, 1, "", "register_gym"], [201, 1, 1, "", "register_load_state_dict_post_hook"], [201, 1, 1, "", "register_load_state_dict_pre_hook"], [201, 1, 1, "", "register_module"], [201, 1, 1, "", "register_parameter"], [201, 1, 1, "", "register_state_dict_post_hook"], [201, 1, 1, "", "register_state_dict_pre_hook"], [201, 1, 1, "", "requires_grad_"], [201, 1, 1, "", "reset"], [201, 2, 1, "", "reset_keys"], [201, 2, 1, "", "reward_key"], [201, 2, 1, "", "reward_keys"], [201, 2, 1, "", "reward_spec"], [201, 2, 1, "", "reward_spec_unbatched"], [201, 1, 1, "", "rollout"], [201, 1, 1, "", "set_extra_state"], [201, 1, 1, "", "set_seed"], [201, 1, 1, "", "set_spec_lock_"], [201, 1, 1, "", "set_submodule"], [201, 2, 1, "", "shape"], [201, 1, 1, "", "share_memory"], [201, 2, 1, "", "specs"], [201, 1, 1, "", "state_dict"], [201, 2, 1, "", "state_keys"], [201, 2, 1, "", "state_spec"], [201, 2, 1, "", "state_spec_unbatched"], [201, 1, 1, "", "step"], [201, 1, 1, "", "step_and_maybe_reset"], [201, 1, 1, "", "step_mdp"], [201, 1, 1, "", "to"], [201, 1, 1, "", "to_empty"], [201, 1, 1, "", "train"], [201, 1, 1, "", "type"], [201, 1, 1, "", "xpu"], [201, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.MLGymWrapper": [[202, 2, 1, "", "action_key"], [202, 2, 1, "", "action_keys"], [202, 2, 1, "", "action_spec"], [202, 2, 1, "", "action_spec_unbatched"], [202, 1, 1, "", "add_module"], [202, 1, 1, "", "add_truncated_keys"], [202, 1, 1, "", "all_actions"], [202, 1, 1, "", "any_done"], [202, 1, 1, "", "append_transform"], [202, 1, 1, "", "apply"], [202, 1, 1, "", "auto_register_info_dict"], [202, 1, 1, "", "auto_specs_"], [202, 2, 1, "", "batch_dims"], [202, 2, 1, "", "batch_locked"], [202, 2, 1, "", "batch_size"], [202, 1, 1, "", "bfloat16"], [202, 1, 1, "", "buffers"], [202, 1, 1, "", "cardinality"], [202, 1, 1, "", "check_env_specs"], [202, 1, 1, "", "children"], [202, 1, 1, "", "close"], [202, 2, 1, "", "collector"], [202, 1, 1, "", "compile"], [202, 1, 1, "", "cpu"], [202, 1, 1, "", "cuda"], [202, 2, 1, "", "done_key"], [202, 2, 1, "", "done_keys"], [202, 2, 1, "", "done_keys_groups"], [202, 2, 1, "", "done_spec"], [202, 2, 1, "", "done_spec_unbatched"], [202, 1, 1, "", "double"], [202, 1, 1, "", "empty_cache"], [202, 1, 1, "", "eval"], [202, 1, 1, "", "extra_repr"], [202, 1, 1, "", "fake_tensordict"], [202, 1, 1, "", "fast_encoding"], [202, 1, 1, "", "float"], [202, 1, 1, "", "forward"], [202, 2, 1, "", "full_action_spec"], [202, 2, 1, "", "full_action_spec_unbatched"], [202, 2, 1, "", "full_done_spec"], [202, 2, 1, "", "full_done_spec_unbatched"], [202, 2, 1, "", "full_observation_spec_unbatched"], [202, 2, 1, "", "full_reward_spec"], [202, 2, 1, "", "full_reward_spec_unbatched"], [202, 2, 1, "", "full_state_spec"], [202, 2, 1, "", "full_state_spec_unbatched"], [202, 1, 1, "", "get_buffer"], [202, 1, 1, "", "get_extra_state"], [202, 1, 1, "", "get_library_name"], [202, 1, 1, "", "get_parameter"], [202, 1, 1, "", "get_submodule"], [202, 1, 1, "", "half"], [202, 2, 1, "", "input_spec"], [202, 2, 1, "", "input_spec_unbatched"], [202, 1, 1, "", "ipu"], [202, 2, 1, "", "is_spec_locked"], [202, 1, 1, "", "load_state_dict"], [202, 1, 1, "", "maybe_reset"], [202, 1, 1, "", "modules"], [202, 1, 1, "", "mtia"], [202, 1, 1, "", "named_buffers"], [202, 1, 1, "", "named_children"], [202, 1, 1, "", "named_modules"], [202, 1, 1, "", "named_parameters"], [202, 2, 1, "", "observation_keys"], [202, 2, 1, "", "observation_spec"], [202, 2, 1, "", "observation_spec_unbatched"], [202, 2, 1, "", "output_spec"], [202, 2, 1, "", "output_spec_unbatched"], [202, 1, 1, "", "parameters"], [202, 1, 1, "", "rand_action"], [202, 1, 1, "", "rand_step"], [202, 1, 1, "", "read_action"], [202, 1, 1, "", "read_done"], [202, 1, 1, "", "read_obs"], [202, 1, 1, "", "read_reward"], [202, 1, 1, "", "register_backward_hook"], [202, 1, 1, "", "register_buffer"], [202, 1, 1, "", "register_collector"], [202, 1, 1, "", "register_forward_hook"], [202, 1, 1, "", "register_forward_pre_hook"], [202, 1, 1, "", "register_full_backward_hook"], [202, 1, 1, "", "register_full_backward_pre_hook"], [202, 1, 1, "", "register_gym"], [202, 1, 1, "", "register_load_state_dict_post_hook"], [202, 1, 1, "", "register_load_state_dict_pre_hook"], [202, 1, 1, "", "register_module"], [202, 1, 1, "", "register_parameter"], [202, 1, 1, "", "register_state_dict_post_hook"], [202, 1, 1, "", "register_state_dict_pre_hook"], [202, 1, 1, "", "requires_grad_"], [202, 1, 1, "", "reset"], [202, 2, 1, "", "reset_keys"], [202, 2, 1, "", "reward_key"], [202, 2, 1, "", "reward_keys"], [202, 2, 1, "", "reward_spec"], [202, 2, 1, "", "reward_spec_unbatched"], [202, 1, 1, "", "rollout"], [202, 1, 1, "", "set_extra_state"], [202, 1, 1, "", "set_info_dict_reader"], [202, 1, 1, "", "set_seed"], [202, 1, 1, "", "set_spec_lock_"], [202, 1, 1, "", "set_submodule"], [202, 2, 1, "", "shape"], [202, 1, 1, "", "share_memory"], [202, 2, 1, "", "specs"], [202, 1, 1, "", "state_dict"], [202, 2, 1, "", "state_keys"], [202, 2, 1, "", "state_spec"], [202, 2, 1, "", "state_spec_unbatched"], [202, 1, 1, "", "step"], [202, 1, 1, "", "step_and_maybe_reset"], [202, 1, 1, "", "step_mdp"], [202, 1, 1, "", "to"], [202, 1, 1, "", "to_empty"], [202, 1, 1, "", "train"], [202, 1, 1, "", "type"], [202, 1, 1, "", "xpu"], [202, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms": [[205, 0, 1, "", "AddThinkingPrompt"], [206, 0, 1, "", "BrowserTransform"], [207, 0, 1, "", "DataLoadingPrimer"], [208, 0, 1, "", "KLComputation"], [209, 0, 1, "", "KLRewardTransform"], [210, 0, 1, "", "MCPToolTransform"], [211, 0, 1, "", "PolicyVersion"], [212, 0, 1, "", "PythonInterpreter"], [213, 0, 1, "", "RayDataLoadingPrimer"], [214, 0, 1, "", "RetrieveKL"], [215, 0, 1, "", "RetrieveLogProb"], [216, 0, 1, "", "TemplateTransform"], [217, 0, 1, "", "Tokenizer"], [218, 0, 1, "", "as_nested_tensor"], [219, 0, 1, "", "as_padded_tensor"]], "torchrl.envs.llm.transforms.AddThinkingPrompt": [[205, 1, 1, "", "add_module"], [205, 1, 1, "", "apply"], [205, 1, 1, "", "bfloat16"], [205, 1, 1, "", "buffers"], [205, 1, 1, "", "children"], [205, 1, 1, "", "close"], [205, 2, 1, "", "collector"], [205, 1, 1, "", "compile"], [205, 2, 1, "", "container"], [205, 1, 1, "", "cpu"], [205, 1, 1, "", "cuda"], [205, 1, 1, "", "double"], [205, 1, 1, "", "eval"], [205, 1, 1, "", "extra_repr"], [205, 1, 1, "", "float"], [205, 1, 1, "", "forward"], [205, 1, 1, "", "get_buffer"], [205, 1, 1, "", "get_extra_state"], [205, 1, 1, "", "get_parameter"], [205, 1, 1, "", "get_submodule"], [205, 1, 1, "", "half"], [205, 1, 1, "", "init"], [205, 1, 1, "", "inv"], [205, 1, 1, "", "ipu"], [205, 1, 1, "", "load_state_dict"], [205, 1, 1, "", "modules"], [205, 1, 1, "", "mtia"], [205, 1, 1, "", "named_buffers"], [205, 1, 1, "", "named_children"], [205, 1, 1, "", "named_modules"], [205, 1, 1, "", "named_parameters"], [205, 1, 1, "", "parameters"], [205, 2, 1, "", "parent"], [205, 1, 1, "", "register_backward_hook"], [205, 1, 1, "", "register_buffer"], [205, 1, 1, "", "register_forward_hook"], [205, 1, 1, "", "register_forward_pre_hook"], [205, 1, 1, "", "register_full_backward_hook"], [205, 1, 1, "", "register_full_backward_pre_hook"], [205, 1, 1, "", "register_load_state_dict_post_hook"], [205, 1, 1, "", "register_load_state_dict_pre_hook"], [205, 1, 1, "", "register_module"], [205, 1, 1, "", "register_parameter"], [205, 1, 1, "", "register_state_dict_post_hook"], [205, 1, 1, "", "register_state_dict_pre_hook"], [205, 1, 1, "", "requires_grad_"], [205, 1, 1, "", "set_extra_state"], [205, 1, 1, "", "set_submodule"], [205, 1, 1, "", "share_memory"], [205, 1, 1, "", "state_dict"], [205, 1, 1, "", "to"], [205, 1, 1, "", "to_empty"], [205, 1, 1, "", "train"], [205, 1, 1, "", "transform_action_spec"], [205, 1, 1, "", "transform_done_spec"], [205, 1, 1, "", "transform_env_batch_size"], [205, 1, 1, "", "transform_env_device"], [205, 1, 1, "", "transform_input_spec"], [205, 1, 1, "", "transform_observation_spec"], [205, 1, 1, "", "transform_output_spec"], [205, 1, 1, "", "transform_reward_spec"], [205, 1, 1, "", "transform_state_spec"], [205, 1, 1, "", "type"], [205, 1, 1, "", "xpu"], [205, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.BrowserTransform": [[206, 1, 1, "", "add_module"], [206, 1, 1, "", "apply"], [206, 1, 1, "", "bfloat16"], [206, 1, 1, "", "buffers"], [206, 1, 1, "", "children"], [206, 1, 1, "", "clone"], [206, 1, 1, "", "close"], [206, 2, 1, "", "collector"], [206, 1, 1, "", "compile"], [206, 2, 1, "", "container"], [206, 1, 1, "", "cpu"], [206, 1, 1, "", "cuda"], [206, 1, 1, "", "double"], [206, 1, 1, "", "eval"], [206, 1, 1, "", "extra_repr"], [206, 1, 1, "", "float"], [206, 1, 1, "", "forward"], [206, 1, 1, "", "get_buffer"], [206, 1, 1, "", "get_extra_state"], [206, 1, 1, "", "get_parameter"], [206, 1, 1, "", "get_submodule"], [206, 1, 1, "", "half"], [206, 1, 1, "", "init"], [206, 1, 1, "", "inv"], [206, 1, 1, "", "ipu"], [206, 1, 1, "", "load_state_dict"], [206, 1, 1, "", "modules"], [206, 1, 1, "", "mtia"], [206, 1, 1, "", "named_buffers"], [206, 1, 1, "", "named_children"], [206, 1, 1, "", "named_modules"], [206, 1, 1, "", "named_parameters"], [206, 1, 1, "", "parameters"], [206, 2, 1, "", "parent"], [206, 1, 1, "", "register_backward_hook"], [206, 1, 1, "", "register_buffer"], [206, 1, 1, "", "register_forward_hook"], [206, 1, 1, "", "register_forward_pre_hook"], [206, 1, 1, "", "register_full_backward_hook"], [206, 1, 1, "", "register_full_backward_pre_hook"], [206, 1, 1, "", "register_load_state_dict_post_hook"], [206, 1, 1, "", "register_load_state_dict_pre_hook"], [206, 1, 1, "", "register_module"], [206, 1, 1, "", "register_parameter"], [206, 1, 1, "", "register_state_dict_post_hook"], [206, 1, 1, "", "register_state_dict_pre_hook"], [206, 1, 1, "", "requires_grad_"], [206, 1, 1, "", "set_extra_state"], [206, 1, 1, "", "set_submodule"], [206, 1, 1, "", "share_memory"], [206, 1, 1, "", "state_dict"], [206, 1, 1, "", "to"], [206, 1, 1, "", "to_empty"], [206, 1, 1, "", "train"], [206, 1, 1, "", "transform_action_spec"], [206, 1, 1, "", "transform_done_spec"], [206, 1, 1, "", "transform_env_batch_size"], [206, 1, 1, "", "transform_env_device"], [206, 1, 1, "", "transform_input_spec"], [206, 1, 1, "", "transform_observation_spec"], [206, 1, 1, "", "transform_output_spec"], [206, 1, 1, "", "transform_reward_spec"], [206, 1, 1, "", "transform_state_spec"], [206, 1, 1, "", "type"], [206, 1, 1, "", "xpu"], [206, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.DataLoadingPrimer": [[207, 1, 1, "", "add_module"], [207, 1, 1, "", "apply"], [207, 1, 1, "", "bfloat16"], [207, 1, 1, "", "buffers"], [207, 1, 1, "", "children"], [207, 1, 1, "", "close"], [207, 2, 1, "", "collector"], [207, 1, 1, "", "compile"], [207, 2, 1, "", "container"], [207, 1, 1, "", "cpu"], [207, 1, 1, "", "cuda"], [207, 1, 1, "", "double"], [207, 1, 1, "", "eval"], [207, 1, 1, "", "extra_repr"], [207, 1, 1, "", "float"], [207, 1, 1, "", "forward"], [207, 1, 1, "", "get_buffer"], [207, 1, 1, "", "get_extra_state"], [207, 1, 1, "", "get_parameter"], [207, 1, 1, "", "get_submodule"], [207, 1, 1, "", "half"], [207, 1, 1, "", "init"], [207, 1, 1, "", "inv"], [207, 1, 1, "", "ipu"], [207, 1, 1, "", "load_state_dict"], [207, 1, 1, "", "modules"], [207, 1, 1, "", "mtia"], [207, 1, 1, "", "named_buffers"], [207, 1, 1, "", "named_children"], [207, 1, 1, "", "named_modules"], [207, 1, 1, "", "named_parameters"], [207, 1, 1, "", "parameters"], [207, 2, 1, "", "parent"], [207, 1, 1, "", "register_backward_hook"], [207, 1, 1, "", "register_buffer"], [207, 1, 1, "", "register_forward_hook"], [207, 1, 1, "", "register_forward_pre_hook"], [207, 1, 1, "", "register_full_backward_hook"], [207, 1, 1, "", "register_full_backward_pre_hook"], [207, 1, 1, "", "register_load_state_dict_post_hook"], [207, 1, 1, "", "register_load_state_dict_pre_hook"], [207, 1, 1, "", "register_module"], [207, 1, 1, "", "register_parameter"], [207, 1, 1, "", "register_state_dict_post_hook"], [207, 1, 1, "", "register_state_dict_pre_hook"], [207, 1, 1, "", "requires_grad_"], [207, 1, 1, "", "reset_dataloader"], [207, 1, 1, "", "set_attr"], [207, 1, 1, "", "set_extra_state"], [207, 1, 1, "", "set_submodule"], [207, 1, 1, "", "share_memory"], [207, 1, 1, "", "state_dict"], [207, 1, 1, "", "to"], [207, 1, 1, "", "to_empty"], [207, 1, 1, "", "train"], [207, 1, 1, "", "transform_action_spec"], [207, 1, 1, "", "transform_done_spec"], [207, 1, 1, "", "transform_env_batch_size"], [207, 1, 1, "", "transform_env_device"], [207, 1, 1, "", "transform_input_spec"], [207, 1, 1, "", "transform_observation_spec"], [207, 1, 1, "", "transform_output_spec"], [207, 1, 1, "", "transform_reward_spec"], [207, 1, 1, "", "transform_state_spec"], [207, 1, 1, "", "type"], [207, 1, 1, "", "xpu"], [207, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.KLComputation": [[208, 1, 1, "", "add_module"], [208, 1, 1, "", "apply"], [208, 1, 1, "", "bfloat16"], [208, 1, 1, "", "buffers"], [208, 1, 1, "", "children"], [208, 1, 1, "", "close"], [208, 2, 1, "", "collector"], [208, 1, 1, "", "compile"], [208, 2, 1, "", "container"], [208, 1, 1, "", "cpu"], [208, 1, 1, "", "cuda"], [208, 1, 1, "", "double"], [208, 1, 1, "", "eval"], [208, 1, 1, "", "extra_repr"], [208, 1, 1, "", "float"], [208, 1, 1, "", "forward"], [208, 1, 1, "", "get_buffer"], [208, 1, 1, "", "get_extra_state"], [208, 1, 1, "", "get_parameter"], [208, 1, 1, "", "get_submodule"], [208, 1, 1, "", "half"], [208, 1, 1, "", "init"], [208, 1, 1, "", "inv"], [208, 1, 1, "", "ipu"], [208, 1, 1, "", "load_state_dict"], [208, 1, 1, "", "modules"], [208, 1, 1, "", "mtia"], [208, 1, 1, "", "named_buffers"], [208, 1, 1, "", "named_children"], [208, 1, 1, "", "named_modules"], [208, 1, 1, "", "named_parameters"], [208, 1, 1, "", "parameters"], [208, 2, 1, "", "parent"], [208, 1, 1, "", "register_backward_hook"], [208, 1, 1, "", "register_buffer"], [208, 1, 1, "", "register_forward_hook"], [208, 1, 1, "", "register_forward_pre_hook"], [208, 1, 1, "", "register_full_backward_hook"], [208, 1, 1, "", "register_full_backward_pre_hook"], [208, 1, 1, "", "register_load_state_dict_post_hook"], [208, 1, 1, "", "register_load_state_dict_pre_hook"], [208, 1, 1, "", "register_module"], [208, 1, 1, "", "register_parameter"], [208, 1, 1, "", "register_state_dict_post_hook"], [208, 1, 1, "", "register_state_dict_pre_hook"], [208, 1, 1, "", "requires_grad_"], [208, 1, 1, "", "set_extra_state"], [208, 1, 1, "", "set_submodule"], [208, 1, 1, "", "share_memory"], [208, 1, 1, "", "state_dict"], [208, 1, 1, "", "to"], [208, 1, 1, "", "to_empty"], [208, 1, 1, "", "train"], [208, 1, 1, "", "transform_action_spec"], [208, 1, 1, "", "transform_done_spec"], [208, 1, 1, "", "transform_env_batch_size"], [208, 1, 1, "", "transform_env_device"], [208, 1, 1, "", "transform_input_spec"], [208, 1, 1, "", "transform_observation_spec"], [208, 1, 1, "", "transform_output_spec"], [208, 1, 1, "", "transform_reward_spec"], [208, 1, 1, "", "transform_state_spec"], [208, 1, 1, "", "type"], [208, 1, 1, "", "xpu"], [208, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.KLRewardTransform": [[209, 1, 1, "", "add_module"], [209, 1, 1, "", "apply"], [209, 1, 1, "", "bfloat16"], [209, 1, 1, "", "buffers"], [209, 1, 1, "", "children"], [209, 1, 1, "", "close"], [209, 2, 1, "", "collector"], [209, 1, 1, "", "compile"], [209, 2, 1, "", "container"], [209, 1, 1, "", "cpu"], [209, 1, 1, "", "cuda"], [209, 1, 1, "", "double"], [209, 1, 1, "", "eval"], [209, 1, 1, "", "extra_repr"], [209, 1, 1, "", "float"], [209, 1, 1, "", "forward"], [209, 1, 1, "", "get_buffer"], [209, 1, 1, "", "get_extra_state"], [209, 1, 1, "", "get_parameter"], [209, 1, 1, "", "get_submodule"], [209, 1, 1, "", "half"], [209, 1, 1, "", "init"], [209, 1, 1, "", "inv"], [209, 1, 1, "", "ipu"], [209, 1, 1, "", "load_state_dict"], [209, 1, 1, "", "modules"], [209, 1, 1, "", "mtia"], [209, 1, 1, "", "named_buffers"], [209, 1, 1, "", "named_children"], [209, 1, 1, "", "named_modules"], [209, 1, 1, "", "named_parameters"], [209, 1, 1, "", "parameters"], [209, 2, 1, "", "parent"], [209, 1, 1, "", "register_backward_hook"], [209, 1, 1, "", "register_buffer"], [209, 1, 1, "", "register_forward_hook"], [209, 1, 1, "", "register_forward_pre_hook"], [209, 1, 1, "", "register_full_backward_hook"], [209, 1, 1, "", "register_full_backward_pre_hook"], [209, 1, 1, "", "register_load_state_dict_post_hook"], [209, 1, 1, "", "register_load_state_dict_pre_hook"], [209, 1, 1, "", "register_module"], [209, 1, 1, "", "register_parameter"], [209, 1, 1, "", "register_state_dict_post_hook"], [209, 1, 1, "", "register_state_dict_pre_hook"], [209, 1, 1, "", "requires_grad_"], [209, 1, 1, "", "set_extra_state"], [209, 1, 1, "", "set_submodule"], [209, 1, 1, "", "share_memory"], [209, 1, 1, "", "state_dict"], [209, 1, 1, "", "to"], [209, 1, 1, "", "to_empty"], [209, 1, 1, "", "train"], [209, 1, 1, "", "transform_action_spec"], [209, 1, 1, "", "transform_done_spec"], [209, 1, 1, "", "transform_env_batch_size"], [209, 1, 1, "", "transform_env_device"], [209, 1, 1, "", "transform_input_spec"], [209, 1, 1, "", "transform_observation_spec"], [209, 1, 1, "", "transform_output_spec"], [209, 1, 1, "", "transform_reward_spec"], [209, 1, 1, "", "transform_state_spec"], [209, 1, 1, "", "type"], [209, 1, 1, "", "xpu"], [209, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.MCPToolTransform": [[210, 1, 1, "", "add_module"], [210, 1, 1, "", "apply"], [210, 1, 1, "", "bfloat16"], [210, 1, 1, "", "buffers"], [210, 1, 1, "", "children"], [210, 1, 1, "", "close"], [210, 2, 1, "", "collector"], [210, 1, 1, "", "compile"], [210, 2, 1, "", "container"], [210, 1, 1, "", "cpu"], [210, 1, 1, "", "cuda"], [210, 1, 1, "", "double"], [210, 1, 1, "", "eval"], [210, 1, 1, "", "extra_repr"], [210, 1, 1, "", "float"], [210, 1, 1, "", "forward"], [210, 1, 1, "", "get_buffer"], [210, 1, 1, "", "get_extra_state"], [210, 1, 1, "", "get_parameter"], [210, 1, 1, "", "get_submodule"], [210, 1, 1, "", "half"], [210, 1, 1, "", "init"], [210, 1, 1, "", "inv"], [210, 1, 1, "", "ipu"], [210, 1, 1, "", "load_state_dict"], [210, 1, 1, "", "modules"], [210, 1, 1, "", "mtia"], [210, 1, 1, "", "named_buffers"], [210, 1, 1, "", "named_children"], [210, 1, 1, "", "named_modules"], [210, 1, 1, "", "named_parameters"], [210, 1, 1, "", "parameters"], [210, 2, 1, "", "parent"], [210, 1, 1, "", "register_backward_hook"], [210, 1, 1, "", "register_buffer"], [210, 1, 1, "", "register_forward_hook"], [210, 1, 1, "", "register_forward_pre_hook"], [210, 1, 1, "", "register_full_backward_hook"], [210, 1, 1, "", "register_full_backward_pre_hook"], [210, 1, 1, "", "register_load_state_dict_post_hook"], [210, 1, 1, "", "register_load_state_dict_pre_hook"], [210, 1, 1, "", "register_module"], [210, 1, 1, "", "register_parameter"], [210, 1, 1, "", "register_state_dict_post_hook"], [210, 1, 1, "", "register_state_dict_pre_hook"], [210, 1, 1, "", "requires_grad_"], [210, 1, 1, "", "set_extra_state"], [210, 1, 1, "", "set_submodule"], [210, 1, 1, "", "share_memory"], [210, 1, 1, "", "state_dict"], [210, 1, 1, "", "to"], [210, 1, 1, "", "to_empty"], [210, 1, 1, "", "train"], [210, 1, 1, "", "transform_action_spec"], [210, 1, 1, "", "transform_done_spec"], [210, 1, 1, "", "transform_env_batch_size"], [210, 1, 1, "", "transform_env_device"], [210, 1, 1, "", "transform_input_spec"], [210, 1, 1, "", "transform_observation_spec"], [210, 1, 1, "", "transform_output_spec"], [210, 1, 1, "", "transform_reward_spec"], [210, 1, 1, "", "transform_state_spec"], [210, 1, 1, "", "type"], [210, 1, 1, "", "xpu"], [210, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.PolicyVersion": [[211, 1, 1, "", "add_module"], [211, 1, 1, "", "apply"], [211, 1, 1, "", "bfloat16"], [211, 1, 1, "", "buffers"], [211, 1, 1, "", "children"], [211, 1, 1, "", "close"], [211, 2, 1, "", "collector"], [211, 1, 1, "", "compile"], [211, 2, 1, "", "container"], [211, 1, 1, "", "cpu"], [211, 1, 1, "", "cuda"], [211, 1, 1, "", "double"], [211, 1, 1, "", "eval"], [211, 1, 1, "", "extra_repr"], [211, 1, 1, "", "float"], [211, 1, 1, "", "forward"], [211, 1, 1, "", "get_buffer"], [211, 1, 1, "", "get_extra_state"], [211, 1, 1, "", "get_parameter"], [211, 1, 1, "", "get_submodule"], [211, 1, 1, "", "half"], [211, 1, 1, "", "increment_version"], [211, 1, 1, "", "init"], [211, 1, 1, "", "inv"], [211, 1, 1, "", "ipu"], [211, 1, 1, "", "load_state_dict"], [211, 1, 1, "", "modules"], [211, 1, 1, "", "mtia"], [211, 1, 1, "", "named_buffers"], [211, 1, 1, "", "named_children"], [211, 1, 1, "", "named_modules"], [211, 1, 1, "", "named_parameters"], [211, 1, 1, "", "parameters"], [211, 2, 1, "", "parent"], [211, 1, 1, "", "register_backward_hook"], [211, 1, 1, "", "register_buffer"], [211, 1, 1, "", "register_forward_hook"], [211, 1, 1, "", "register_forward_pre_hook"], [211, 1, 1, "", "register_full_backward_hook"], [211, 1, 1, "", "register_full_backward_pre_hook"], [211, 1, 1, "", "register_load_state_dict_post_hook"], [211, 1, 1, "", "register_load_state_dict_pre_hook"], [211, 1, 1, "", "register_module"], [211, 1, 1, "", "register_parameter"], [211, 1, 1, "", "register_state_dict_post_hook"], [211, 1, 1, "", "register_state_dict_pre_hook"], [211, 1, 1, "", "requires_grad_"], [211, 1, 1, "", "set_extra_state"], [211, 1, 1, "", "set_submodule"], [211, 1, 1, "", "share_memory"], [211, 1, 1, "", "state_dict"], [211, 1, 1, "", "to"], [211, 1, 1, "", "to_empty"], [211, 1, 1, "", "train"], [211, 1, 1, "", "transform_action_spec"], [211, 1, 1, "", "transform_done_spec"], [211, 1, 1, "", "transform_env_batch_size"], [211, 1, 1, "", "transform_env_device"], [211, 1, 1, "", "transform_input_spec"], [211, 1, 1, "", "transform_observation_spec"], [211, 1, 1, "", "transform_output_spec"], [211, 1, 1, "", "transform_reward_spec"], [211, 1, 1, "", "transform_state_spec"], [211, 1, 1, "", "type"], [211, 2, 1, "", "version"], [211, 1, 1, "", "xpu"], [211, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.PythonInterpreter": [[212, 1, 1, "", "add_module"], [212, 1, 1, "", "apply"], [212, 1, 1, "", "bfloat16"], [212, 1, 1, "", "buffers"], [212, 1, 1, "", "children"], [212, 1, 1, "", "clone"], [212, 1, 1, "", "close"], [212, 2, 1, "", "collector"], [212, 1, 1, "", "compile"], [212, 2, 1, "", "container"], [212, 1, 1, "", "cpu"], [212, 1, 1, "", "cuda"], [212, 1, 1, "", "double"], [212, 1, 1, "", "eval"], [212, 1, 1, "", "extra_repr"], [212, 1, 1, "", "float"], [212, 1, 1, "", "forward"], [212, 1, 1, "", "get_buffer"], [212, 1, 1, "", "get_extra_state"], [212, 1, 1, "", "get_parameter"], [212, 1, 1, "", "get_submodule"], [212, 1, 1, "", "half"], [212, 1, 1, "", "init"], [212, 1, 1, "", "inv"], [212, 1, 1, "", "ipu"], [212, 1, 1, "", "load_state_dict"], [212, 1, 1, "", "modules"], [212, 1, 1, "", "mtia"], [212, 1, 1, "", "named_buffers"], [212, 1, 1, "", "named_children"], [212, 1, 1, "", "named_modules"], [212, 1, 1, "", "named_parameters"], [212, 1, 1, "", "parameters"], [212, 2, 1, "", "parent"], [212, 1, 1, "", "register_backward_hook"], [212, 1, 1, "", "register_buffer"], [212, 1, 1, "", "register_forward_hook"], [212, 1, 1, "", "register_forward_pre_hook"], [212, 1, 1, "", "register_full_backward_hook"], [212, 1, 1, "", "register_full_backward_pre_hook"], [212, 1, 1, "", "register_load_state_dict_post_hook"], [212, 1, 1, "", "register_load_state_dict_pre_hook"], [212, 1, 1, "", "register_module"], [212, 1, 1, "", "register_parameter"], [212, 1, 1, "", "register_state_dict_post_hook"], [212, 1, 1, "", "register_state_dict_pre_hook"], [212, 1, 1, "", "requires_grad_"], [212, 1, 1, "", "set_extra_state"], [212, 1, 1, "", "set_submodule"], [212, 1, 1, "", "share_memory"], [212, 1, 1, "", "state_dict"], [212, 1, 1, "", "to"], [212, 1, 1, "", "to_empty"], [212, 1, 1, "", "train"], [212, 1, 1, "", "transform_action_spec"], [212, 1, 1, "", "transform_done_spec"], [212, 1, 1, "", "transform_env_batch_size"], [212, 1, 1, "", "transform_env_device"], [212, 1, 1, "", "transform_input_spec"], [212, 1, 1, "", "transform_observation_spec"], [212, 1, 1, "", "transform_output_spec"], [212, 1, 1, "", "transform_reward_spec"], [212, 1, 1, "", "transform_state_spec"], [212, 1, 1, "", "type"], [212, 1, 1, "", "xpu"], [212, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.RayDataLoadingPrimer": [[213, 1, 1, "", "add_module"], [213, 1, 1, "", "apply"], [213, 2, 1, "", "base_env"], [213, 1, 1, "", "bfloat16"], [213, 1, 1, "", "buffers"], [213, 1, 1, "", "children"], [213, 1, 1, "", "clone"], [213, 1, 1, "", "close"], [213, 2, 1, "", "collector"], [213, 1, 1, "", "compile"], [213, 2, 1, "", "container"], [213, 1, 1, "", "cpu"], [213, 1, 1, "", "cuda"], [213, 2, 1, "", "data_keys"], [213, 2, 1, "", "dataloader"], [213, 2, 1, "", "device"], [213, 1, 1, "", "double"], [213, 1, 1, "", "dump"], [213, 1, 1, "", "empty_cache"], [213, 2, 1, "", "endless_dataloader"], [213, 1, 1, "", "eval"], [213, 1, 1, "", "extra_repr"], [213, 1, 1, "", "float"], [213, 1, 1, "", "forward"], [213, 1, 1, "", "get_buffer"], [213, 1, 1, "", "get_extra_state"], [213, 1, 1, "", "get_parameter"], [213, 1, 1, "", "get_submodule"], [213, 1, 1, "", "half"], [213, 2, 1, "", "in_keys"], [213, 2, 1, "", "in_keys_inv"], [213, 1, 1, "", "init"], [213, 1, 1, "", "inv"], [213, 1, 1, "", "ipu"], [213, 1, 1, "", "load_state_dict"], [213, 2, 1, "", "missing_tolerance"], [213, 1, 1, "", "modules"], [213, 1, 1, "", "mtia"], [213, 1, 1, "", "named_buffers"], [213, 1, 1, "", "named_children"], [213, 1, 1, "", "named_modules"], [213, 1, 1, "", "named_parameters"], [213, 2, 1, "", "out_keys"], [213, 2, 1, "", "out_keys_inv"], [213, 1, 1, "", "parameters"], [213, 2, 1, "", "parent"], [213, 2, 1, "", "primers"], [213, 1, 1, "", "register_backward_hook"], [213, 1, 1, "", "register_buffer"], [213, 1, 1, "", "register_forward_hook"], [213, 1, 1, "", "register_forward_pre_hook"], [213, 1, 1, "", "register_full_backward_hook"], [213, 1, 1, "", "register_full_backward_pre_hook"], [213, 1, 1, "", "register_load_state_dict_post_hook"], [213, 1, 1, "", "register_load_state_dict_pre_hook"], [213, 1, 1, "", "register_module"], [213, 1, 1, "", "register_parameter"], [213, 1, 1, "", "register_state_dict_post_hook"], [213, 1, 1, "", "register_state_dict_pre_hook"], [213, 2, 1, "", "repeats"], [213, 1, 1, "", "requires_grad_"], [213, 1, 1, "", "reset_dataloader"], [213, 1, 1, "", "reset_parent"], [213, 1, 1, "", "set_container"], [213, 1, 1, "", "set_extra_state"], [213, 1, 1, "", "set_missing_tolerance"], [213, 1, 1, "", "set_submodule"], [213, 1, 1, "", "share_memory"], [213, 2, 1, "", "stack_method"], [213, 1, 1, "", "state_dict"], [213, 1, 1, "", "to"], [213, 1, 1, "", "to_empty"], [213, 1, 1, "", "train"], [213, 1, 1, "", "transform_action_spec"], [213, 1, 1, "", "transform_done_spec"], [213, 1, 1, "", "transform_env_batch_size"], [213, 1, 1, "", "transform_env_device"], [213, 1, 1, "", "transform_input_spec"], [213, 1, 1, "", "transform_observation_spec"], [213, 1, 1, "", "transform_output_spec"], [213, 1, 1, "", "transform_reward_spec"], [213, 1, 1, "", "transform_state_spec"], [213, 1, 1, "", "type"], [213, 1, 1, "", "xpu"], [213, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.RetrieveKL": [[214, 1, 1, "", "add_module"], [214, 1, 1, "", "append"], [214, 1, 1, "", "apply"], [214, 1, 1, "", "bfloat16"], [214, 1, 1, "", "buffers"], [214, 1, 1, "", "children"], [214, 1, 1, "", "close"], [214, 2, 1, "", "collector"], [214, 1, 1, "", "compile"], [214, 2, 1, "", "container"], [214, 1, 1, "", "cpu"], [214, 1, 1, "", "cuda"], [214, 1, 1, "", "double"], [214, 1, 1, "", "eval"], [214, 1, 1, "", "extra_repr"], [214, 1, 1, "", "float"], [214, 1, 1, "", "forward"], [214, 1, 1, "", "get_buffer"], [214, 1, 1, "", "get_extra_state"], [214, 1, 1, "", "get_parameter"], [214, 1, 1, "", "get_submodule"], [214, 1, 1, "", "half"], [214, 1, 1, "", "init"], [214, 1, 1, "", "insert"], [214, 1, 1, "", "inv"], [214, 1, 1, "", "ipu"], [214, 1, 1, "", "load_state_dict"], [214, 1, 1, "", "modules"], [214, 1, 1, "", "mtia"], [214, 1, 1, "", "named_buffers"], [214, 1, 1, "", "named_children"], [214, 1, 1, "", "named_modules"], [214, 1, 1, "", "named_parameters"], [214, 1, 1, "", "parameters"], [214, 2, 1, "", "parent"], [214, 1, 1, "", "pop"], [214, 1, 1, "", "register_backward_hook"], [214, 1, 1, "", "register_buffer"], [214, 1, 1, "", "register_forward_hook"], [214, 1, 1, "", "register_forward_pre_hook"], [214, 1, 1, "", "register_full_backward_hook"], [214, 1, 1, "", "register_full_backward_pre_hook"], [214, 1, 1, "", "register_load_state_dict_post_hook"], [214, 1, 1, "", "register_load_state_dict_pre_hook"], [214, 1, 1, "", "register_module"], [214, 1, 1, "", "register_parameter"], [214, 1, 1, "", "register_state_dict_post_hook"], [214, 1, 1, "", "register_state_dict_pre_hook"], [214, 1, 1, "", "requires_grad_"], [214, 1, 1, "", "set_extra_state"], [214, 1, 1, "", "set_submodule"], [214, 1, 1, "", "share_memory"], [214, 1, 1, "", "state_dict"], [214, 1, 1, "", "to"], [214, 1, 1, "", "to_empty"], [214, 1, 1, "", "train"], [214, 1, 1, "", "transform_action_spec"], [214, 1, 1, "", "transform_done_spec"], [214, 1, 1, "", "transform_env_batch_size"], [214, 1, 1, "", "transform_env_device"], [214, 1, 1, "", "transform_input_spec"], [214, 1, 1, "", "transform_observation_spec"], [214, 1, 1, "", "transform_output_spec"], [214, 1, 1, "", "transform_reward_spec"], [214, 1, 1, "", "transform_state_spec"], [214, 1, 1, "", "type"], [214, 1, 1, "", "xpu"], [214, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.RetrieveLogProb": [[215, 1, 1, "", "add_module"], [215, 1, 1, "", "apply"], [215, 1, 1, "", "bfloat16"], [215, 1, 1, "", "buffers"], [215, 1, 1, "", "children"], [215, 1, 1, "", "close"], [215, 2, 1, "", "collector"], [215, 1, 1, "", "compile"], [215, 2, 1, "", "container"], [215, 1, 1, "", "cpu"], [215, 1, 1, "", "cuda"], [215, 1, 1, "", "double"], [215, 1, 1, "", "eval"], [215, 1, 1, "", "extra_repr"], [215, 1, 1, "", "float"], [215, 1, 1, "", "forward"], [215, 1, 1, "", "get_buffer"], [215, 1, 1, "", "get_extra_state"], [215, 1, 1, "", "get_parameter"], [215, 1, 1, "", "get_submodule"], [215, 1, 1, "", "half"], [215, 1, 1, "", "init"], [215, 1, 1, "", "inv"], [215, 1, 1, "", "ipu"], [215, 1, 1, "", "load_state_dict"], [215, 1, 1, "", "modules"], [215, 1, 1, "", "mtia"], [215, 1, 1, "", "named_buffers"], [215, 1, 1, "", "named_children"], [215, 1, 1, "", "named_modules"], [215, 1, 1, "", "named_parameters"], [215, 1, 1, "", "parameters"], [215, 2, 1, "", "parent"], [215, 1, 1, "", "register_backward_hook"], [215, 1, 1, "", "register_buffer"], [215, 1, 1, "", "register_forward_hook"], [215, 1, 1, "", "register_forward_pre_hook"], [215, 1, 1, "", "register_full_backward_hook"], [215, 1, 1, "", "register_full_backward_pre_hook"], [215, 1, 1, "", "register_load_state_dict_post_hook"], [215, 1, 1, "", "register_load_state_dict_pre_hook"], [215, 1, 1, "", "register_module"], [215, 1, 1, "", "register_parameter"], [215, 1, 1, "", "register_state_dict_post_hook"], [215, 1, 1, "", "register_state_dict_pre_hook"], [215, 1, 1, "", "requires_grad_"], [215, 1, 1, "", "set_extra_state"], [215, 1, 1, "", "set_submodule"], [215, 1, 1, "", "share_memory"], [215, 1, 1, "", "state_dict"], [215, 1, 1, "", "to"], [215, 1, 1, "", "to_empty"], [215, 1, 1, "", "train"], [215, 1, 1, "", "transform_action_spec"], [215, 1, 1, "", "transform_done_spec"], [215, 1, 1, "", "transform_env_batch_size"], [215, 1, 1, "", "transform_env_device"], [215, 1, 1, "", "transform_input_spec"], [215, 1, 1, "", "transform_observation_spec"], [215, 1, 1, "", "transform_output_spec"], [215, 1, 1, "", "transform_reward_spec"], [215, 1, 1, "", "transform_state_spec"], [215, 1, 1, "", "type"], [215, 1, 1, "", "xpu"], [215, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.TemplateTransform": [[216, 1, 1, "", "add_module"], [216, 1, 1, "", "apply"], [216, 1, 1, "", "bfloat16"], [216, 1, 1, "", "buffers"], [216, 1, 1, "", "children"], [216, 1, 1, "", "close"], [216, 2, 1, "", "collector"], [216, 1, 1, "", "compile"], [216, 2, 1, "", "container"], [216, 1, 1, "", "cpu"], [216, 1, 1, "", "cuda"], [216, 1, 1, "", "double"], [216, 1, 1, "", "eval"], [216, 1, 1, "", "extra_repr"], [216, 1, 1, "", "float"], [216, 1, 1, "", "forward"], [216, 1, 1, "", "get_buffer"], [216, 1, 1, "", "get_extra_state"], [216, 1, 1, "", "get_parameter"], [216, 1, 1, "", "get_submodule"], [216, 1, 1, "", "half"], [216, 1, 1, "", "init"], [216, 1, 1, "", "inv"], [216, 1, 1, "", "ipu"], [216, 1, 1, "", "load_state_dict"], [216, 1, 1, "", "modules"], [216, 1, 1, "", "mtia"], [216, 1, 1, "", "named_buffers"], [216, 1, 1, "", "named_children"], [216, 1, 1, "", "named_modules"], [216, 1, 1, "", "named_parameters"], [216, 1, 1, "", "parameters"], [216, 2, 1, "", "parent"], [216, 1, 1, "", "register_backward_hook"], [216, 1, 1, "", "register_buffer"], [216, 1, 1, "", "register_forward_hook"], [216, 1, 1, "", "register_forward_pre_hook"], [216, 1, 1, "", "register_full_backward_hook"], [216, 1, 1, "", "register_full_backward_pre_hook"], [216, 1, 1, "", "register_load_state_dict_post_hook"], [216, 1, 1, "", "register_load_state_dict_pre_hook"], [216, 1, 1, "", "register_module"], [216, 1, 1, "", "register_parameter"], [216, 1, 1, "", "register_state_dict_post_hook"], [216, 1, 1, "", "register_state_dict_pre_hook"], [216, 1, 1, "", "requires_grad_"], [216, 1, 1, "", "set_extra_state"], [216, 1, 1, "", "set_submodule"], [216, 1, 1, "", "share_memory"], [216, 1, 1, "", "state_dict"], [216, 1, 1, "", "to"], [216, 1, 1, "", "to_empty"], [216, 1, 1, "", "train"], [216, 1, 1, "", "transform_action_spec"], [216, 1, 1, "", "transform_done_spec"], [216, 1, 1, "", "transform_env_batch_size"], [216, 1, 1, "", "transform_env_device"], [216, 1, 1, "", "transform_input_spec"], [216, 1, 1, "", "transform_observation_spec"], [216, 1, 1, "", "transform_output_spec"], [216, 1, 1, "", "transform_reward_spec"], [216, 1, 1, "", "transform_state_spec"], [216, 1, 1, "", "type"], [216, 1, 1, "", "xpu"], [216, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.Tokenizer": [[217, 1, 1, "", "add_module"], [217, 1, 1, "", "apply"], [217, 1, 1, "", "bfloat16"], [217, 1, 1, "", "buffers"], [217, 1, 1, "", "children"], [217, 1, 1, "", "close"], [217, 2, 1, "", "collector"], [217, 1, 1, "", "compile"], [217, 2, 1, "", "container"], [217, 1, 1, "", "cpu"], [217, 1, 1, "", "cuda"], [217, 1, 1, "", "double"], [217, 1, 1, "", "eval"], [217, 1, 1, "", "extra_repr"], [217, 1, 1, "", "float"], [217, 1, 1, "", "forward"], [217, 1, 1, "", "get_buffer"], [217, 1, 1, "", "get_extra_state"], [217, 1, 1, "", "get_parameter"], [217, 1, 1, "", "get_submodule"], [217, 1, 1, "", "half"], [217, 1, 1, "", "init"], [217, 1, 1, "", "inv"], [217, 1, 1, "", "ipu"], [217, 1, 1, "", "load_state_dict"], [217, 1, 1, "", "modules"], [217, 1, 1, "", "mtia"], [217, 1, 1, "", "named_buffers"], [217, 1, 1, "", "named_children"], [217, 1, 1, "", "named_modules"], [217, 1, 1, "", "named_parameters"], [217, 1, 1, "", "parameters"], [217, 2, 1, "", "parent"], [217, 1, 1, "", "register_backward_hook"], [217, 1, 1, "", "register_buffer"], [217, 1, 1, "", "register_forward_hook"], [217, 1, 1, "", "register_forward_pre_hook"], [217, 1, 1, "", "register_full_backward_hook"], [217, 1, 1, "", "register_full_backward_pre_hook"], [217, 1, 1, "", "register_load_state_dict_post_hook"], [217, 1, 1, "", "register_load_state_dict_pre_hook"], [217, 1, 1, "", "register_module"], [217, 1, 1, "", "register_parameter"], [217, 1, 1, "", "register_state_dict_post_hook"], [217, 1, 1, "", "register_state_dict_pre_hook"], [217, 1, 1, "", "requires_grad_"], [217, 1, 1, "", "set_extra_state"], [217, 1, 1, "", "set_submodule"], [217, 1, 1, "", "share_memory"], [217, 1, 1, "", "state_dict"], [217, 1, 1, "", "to"], [217, 1, 1, "", "to_empty"], [217, 1, 1, "", "train"], [217, 1, 1, "", "transform_action_spec"], [217, 1, 1, "", "transform_done_spec"], [217, 1, 1, "", "transform_env_batch_size"], [217, 1, 1, "", "transform_env_device"], [217, 1, 1, "", "transform_input_spec"], [217, 1, 1, "", "transform_observation_spec"], [217, 1, 1, "", "transform_output_spec"], [217, 1, 1, "", "transform_reward_spec"], [217, 1, 1, "", "transform_state_spec"], [217, 1, 1, "", "type"], [217, 1, 1, "", "xpu"], [217, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[221, 3, 1, "", "DreamerDecoder"], [222, 3, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[228, 0, 1, "", "ActionDiscretizer"], [229, 0, 1, "", "ActionMask"], [230, 0, 1, "", "AutoResetEnv"], [231, 0, 1, "", "AutoResetTransform"], [232, 0, 1, "", "BatchSizeTransform"], [233, 0, 1, "", "BinarizeReward"], [234, 0, 1, "", "BurnInTransform"], [235, 0, 1, "", "CatFrames"], [236, 0, 1, "", "CatTensors"], [237, 0, 1, "", "CenterCrop"], [238, 0, 1, "", "ClipTransform"], [239, 0, 1, "", "Compose"], [240, 0, 1, "", "ConditionalPolicySwitch"], [241, 0, 1, "", "ConditionalSkip"], [242, 0, 1, "", "Crop"], [243, 0, 1, "", "DTypeCastTransform"], [244, 0, 1, "", "DeviceCastTransform"], [245, 0, 1, "", "DiscreteActionProjection"], [246, 0, 1, "", "DoubleToFloat"], [247, 0, 1, "", "EndOfLifeTransform"], [248, 0, 1, "", "ExcludeTransform"], [249, 0, 1, "", "FiniteTensorDictCheck"], [250, 0, 1, "", "FlattenObservation"], [251, 0, 1, "", "FrameSkipTransform"], [252, 0, 1, "", "GrayScale"], [253, 0, 1, "", "Hash"], [254, 0, 1, "", "InitTracker"], [255, 0, 1, "", "KLRewardTransform"], [256, 0, 1, "", "LineariseRewards"], [257, 0, 1, "", "MultiAction"], [258, 0, 1, "", "NoopResetEnv"], [259, 0, 1, "", "ObservationNorm"], [260, 0, 1, "", "ObservationTransform"], [261, 0, 1, "", "PermuteTransform"], [262, 0, 1, "", "PinMemoryTransform"], [263, 0, 1, "", "R3MTransform"], [264, 0, 1, "", "RandomCropTensorDict"], [265, 0, 1, "", "RemoveEmptySpecs"], [266, 0, 1, "", "RenameTransform"], [267, 0, 1, "", "Resize"], [268, 0, 1, "", "Reward2GoTransform"], [269, 0, 1, "", "RewardClipping"], [270, 0, 1, "", "RewardScaling"], [271, 0, 1, "", "RewardSum"], [272, 0, 1, "", "SelectTransform"], [273, 0, 1, "", "SignTransform"], [274, 0, 1, "", "SqueezeTransform"], [275, 0, 1, "", "Stack"], [276, 0, 1, "", "StepCounter"], [277, 0, 1, "", "TargetReturn"], [278, 0, 1, "", "TensorDictPrimer"], [279, 0, 1, "", "TimeMaxPool"], [280, 0, 1, "", "Timer"], [281, 0, 1, "", "ToTensorImage"], [282, 0, 1, "", "Tokenizer"], [283, 0, 1, "", "TrajCounter"], [284, 0, 1, "", "Transform"], [285, 0, 1, "", "TransformedEnv"], [286, 0, 1, "", "UnaryTransform"], [287, 0, 1, "", "UnsqueezeTransform"], [288, 0, 1, "", "VC1Transform"], [289, 0, 1, "", "VIPRewardTransform"], [290, 0, 1, "", "VIPTransform"], [291, 0, 1, "", "VecGymEnvTransform"], [292, 0, 1, "", "VecNorm"], [293, 0, 1, "", "VecNormV2"], [294, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[228, 0, 1, "", "SamplingStrategy"], [228, 1, 1, "", "inv"], [228, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[229, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[230, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[231, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "transform_env_batch_size"], [232, 1, 1, "", "transform_input_spec"], [232, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[233, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[234, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "make_rb_transform_and_sampler"], [235, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[236, 1, 1, "", "forward"], [236, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[237, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[238, 1, 1, "", "transform_observation_spec"], [238, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[239, 1, 1, "", "append"], [239, 1, 1, "", "close"], [239, 1, 1, "", "forward"], [239, 1, 1, "", "init"], [239, 1, 1, "", "insert"], [239, 1, 1, "", "pop"], [239, 1, 1, "", "to"], [239, 1, 1, "", "transform_action_spec"], [239, 1, 1, "", "transform_env_batch_size"], [239, 1, 1, "", "transform_env_device"], [239, 1, 1, "", "transform_input_spec"], [239, 1, 1, "", "transform_observation_spec"], [239, 1, 1, "", "transform_output_spec"], [239, 1, 1, "", "transform_reward_spec"], [239, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.ConditionalPolicySwitch": [[240, 1, 1, "", "forward"]], "torchrl.envs.transforms.ConditionalSkip": [[241, 1, 1, "", "forward"]], "torchrl.envs.transforms.Crop": [[242, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[243, 1, 1, "", "forward"], [243, 1, 1, "", "transform_input_spec"], [243, 1, 1, "", "transform_observation_spec"], [243, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[244, 1, 1, "", "forward"], [244, 1, 1, "", "transform_action_spec"], [244, 1, 1, "", "transform_done_spec"], [244, 1, 1, "", "transform_env_device"], [244, 1, 1, "", "transform_input_spec"], [244, 1, 1, "", "transform_observation_spec"], [244, 1, 1, "", "transform_output_spec"], [244, 1, 1, "", "transform_reward_spec"], [244, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[245, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[247, 1, 1, "", "forward"], [247, 1, 1, "", "register_keys"], [247, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[248, 1, 1, "", "forward"], [248, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[249, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[250, 1, 1, "", "forward"], [250, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[251, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[252, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Hash": [[253, 1, 1, "", "get_input_from_hash"], [253, 1, 1, "", "reproducible_hash"], [253, 1, 1, "", "state_dict"]], "torchrl.envs.transforms.InitTracker": [[254, 1, 1, "", "forward"], [254, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[255, 1, 1, "", "forward"], [255, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.LineariseRewards": [[256, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.MultiAction": [[257, 1, 1, "", "transform_input_spec"], [257, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[259, 1, 1, "", "init_stats"], [259, 1, 1, "", "transform_action_spec"], [259, 1, 1, "", "transform_observation_spec"], [259, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.PermuteTransform": [[261, 1, 1, "", "transform_input_spec"], [261, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[262, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[263, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[264, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[265, 1, 1, "", "forward"], [265, 1, 1, "", "transform_input_spec"], [265, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[266, 1, 1, "", "forward"], [266, 1, 1, "", "transform_input_spec"], [266, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[267, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[268, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[269, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[270, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[271, 1, 1, "", "forward"], [271, 1, 1, "", "transform_input_spec"], [271, 1, 1, "", "transform_observation_spec"], [271, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[272, 1, 1, "", "forward"], [272, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[273, 1, 1, "", "transform_observation_spec"], [273, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Stack": [[275, 1, 1, "", "forward"], [275, 1, 1, "", "transform_done_spec"], [275, 1, 1, "", "transform_input_spec"], [275, 1, 1, "", "transform_observation_spec"], [275, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[276, 1, 1, "", "forward"], [276, 1, 1, "", "transform_input_spec"], [276, 1, 1, "", "transform_observation_spec"], [276, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[277, 1, 1, "", "forward"], [277, 1, 1, "", "transform_input_spec"], [277, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[278, 1, 1, "", "forward"], [278, 1, 1, "", "to"], [278, 1, 1, "", "transform_input_spec"], [278, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[279, 1, 1, "", "forward"], [279, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Timer": [[280, 1, 1, "", "forward"], [280, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[281, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Tokenizer": [[282, 1, 1, "", "forward"], [282, 1, 1, "", "transform_done_spec"], [282, 1, 1, "", "transform_input_spec"], [282, 1, 1, "", "transform_observation_spec"], [282, 1, 1, "", "transform_output_spec"], [282, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TrajCounter": [[283, 1, 1, "", "forward"], [283, 1, 1, "", "load_state_dict"], [283, 1, 1, "", "state_dict"], [283, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[284, 1, 1, "", "clone"], [284, 1, 1, "", "close"], [284, 2, 1, "", "collector"], [284, 2, 1, "", "container"], [284, 1, 1, "", "forward"], [284, 1, 1, "", "init"], [284, 1, 1, "", "inv"], [284, 2, 1, "", "parent"], [284, 1, 1, "", "reset_parent"], [284, 1, 1, "", "set_container"], [284, 1, 1, "", "to"], [284, 1, 1, "", "transform_action_spec"], [284, 1, 1, "", "transform_done_spec"], [284, 1, 1, "", "transform_env_batch_size"], [284, 1, 1, "", "transform_env_device"], [284, 1, 1, "", "transform_input_spec"], [284, 1, 1, "", "transform_observation_spec"], [284, 1, 1, "", "transform_output_spec"], [284, 1, 1, "", "transform_reward_spec"], [284, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.TransformedEnv": [[285, 1, 1, "", "add_truncated_keys"], [285, 1, 1, "", "append_transform"], [285, 2, 1, "", "batch_locked"], [285, 2, 1, "", "batch_size"], [285, 1, 1, "", "empty_cache"], [285, 1, 1, "", "eval"], [285, 2, 1, "", "input_spec"], [285, 1, 1, "", "insert_transform"], [285, 1, 1, "", "load_state_dict"], [285, 2, 1, "", "output_spec"], [285, 1, 1, "", "rand_action"], [285, 1, 1, "", "set_missing_tolerance"], [285, 1, 1, "", "set_seed"], [285, 1, 1, "", "state_dict"], [285, 1, 1, "", "to"], [285, 1, 1, "", "train"]], "torchrl.envs.transforms.UnaryTransform": [[286, 1, 1, "", "transform_action_spec"], [286, 1, 1, "", "transform_done_spec"], [286, 1, 1, "", "transform_input_spec"], [286, 1, 1, "", "transform_observation_spec"], [286, 1, 1, "", "transform_output_spec"], [286, 1, 1, "", "transform_reward_spec"], [286, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.UnsqueezeTransform": [[287, 1, 1, "", "transform_action_spec"], [287, 1, 1, "", "transform_observation_spec"], [287, 1, 1, "", "transform_reward_spec"], [287, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.VC1Transform": [[288, 1, 1, "", "forward"], [288, 1, 1, "", "make_noload_model"], [288, 1, 1, "", "to"], [288, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[289, 1, 1, "", "forward"], [289, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[290, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[291, 1, 1, "", "forward"], [291, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[292, 1, 1, "", "build_td_for_shared_vecnorm"], [292, 1, 1, "", "forward"], [292, 1, 1, "", "freeze"], [292, 1, 1, "", "frozen_copy"], [292, 1, 1, "", "get_extra_state"], [292, 2, 1, "", "loc"], [292, 2, 1, "", "scale"], [292, 1, 1, "", "set_extra_state"], [292, 2, 1, "", "standard_normal"], [292, 1, 1, "", "to_observation_norm"], [292, 1, 1, "", "transform_observation_spec"], [292, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.VecNormV2": [[293, 1, 1, "", "clone"], [293, 1, 1, "id0", "freeze"], [293, 1, 1, "id1", "frozen_copy"], [293, 1, 1, "id2", "get_extra_state"], [293, 2, 1, "id3", "loc"], [293, 2, 1, "id4", "scale"], [293, 1, 1, "id5", "set_extra_state"], [293, 2, 1, "id6", "standard_normal"], [293, 1, 1, "", "to_observation_norm"], [293, 1, 1, "id7", "transform_observation_spec"], [293, 1, 1, "id8", "transform_output_spec"], [293, 1, 1, "id9", "transform_reward_spec"], [293, 1, 1, "id10", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[295, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[295, 1, 1, "", "add_module"], [295, 1, 1, "", "apply"], [295, 1, 1, "", "bfloat16"], [295, 1, 1, "", "buffers"], [295, 1, 1, "", "children"], [295, 1, 1, "", "close"], [295, 2, 1, "", "collector"], [295, 1, 1, "", "compile"], [295, 2, 1, "", "container"], [295, 1, 1, "", "cpu"], [295, 1, 1, "", "cuda"], [295, 1, 1, "", "double"], [295, 1, 1, "", "eval"], [295, 1, 1, "", "extra_repr"], [295, 1, 1, "", "float"], [295, 1, 1, "", "forward"], [295, 1, 1, "", "get_buffer"], [295, 1, 1, "", "get_extra_state"], [295, 1, 1, "", "get_parameter"], [295, 1, 1, "", "get_submodule"], [295, 1, 1, "", "half"], [295, 1, 1, "", "init"], [295, 1, 1, "", "inv"], [295, 1, 1, "", "ipu"], [295, 1, 1, "", "load_state_dict"], [295, 1, 1, "", "modules"], [295, 1, 1, "", "mtia"], [295, 2, 1, "", "n_steps"], [295, 1, 1, "", "named_buffers"], [295, 1, 1, "", "named_children"], [295, 1, 1, "", "named_modules"], [295, 1, 1, "", "named_parameters"], [295, 1, 1, "", "parameters"], [295, 2, 1, "", "parent"], [295, 1, 1, "", "register_backward_hook"], [295, 1, 1, "", "register_buffer"], [295, 1, 1, "", "register_forward_hook"], [295, 1, 1, "", "register_forward_pre_hook"], [295, 1, 1, "", "register_full_backward_hook"], [295, 1, 1, "", "register_full_backward_pre_hook"], [295, 1, 1, "", "register_load_state_dict_post_hook"], [295, 1, 1, "", "register_load_state_dict_pre_hook"], [295, 1, 1, "", "register_module"], [295, 1, 1, "", "register_parameter"], [295, 1, 1, "", "register_state_dict_post_hook"], [295, 1, 1, "", "register_state_dict_pre_hook"], [295, 1, 1, "", "requires_grad_"], [295, 1, 1, "", "set_extra_state"], [295, 1, 1, "", "set_submodule"], [295, 1, 1, "", "share_memory"], [295, 1, 1, "", "state_dict"], [295, 1, 1, "", "to"], [295, 1, 1, "", "to_empty"], [295, 1, 1, "", "train"], [295, 1, 1, "", "transform_action_spec"], [295, 1, 1, "", "transform_done_spec"], [295, 1, 1, "", "transform_env_batch_size"], [295, 1, 1, "", "transform_env_device"], [295, 1, 1, "", "transform_input_spec"], [295, 1, 1, "", "transform_observation_spec"], [295, 1, 1, "", "transform_output_spec"], [295, 1, 1, "", "transform_reward_spec"], [295, 1, 1, "", "transform_state_spec"], [295, 1, 1, "", "type"], [295, 1, 1, "", "xpu"], [295, 1, 1, "", "zero_grad"]], "torchrl.implement_for": [[296, 1, 1, "", "get_class_that_defined_method"], [296, 1, 1, "", "import_module"], [296, 1, 1, "", "module_set"], [296, 1, 1, "", "reset"]], "torchrl.modules": [[297, 0, 1, "", "AdditiveGaussianModule"], [298, 0, 1, "", "BatchRenorm1d"], [299, 0, 1, "", "CEMPlanner"], [300, 0, 1, "", "ConsistentDropout"], [301, 0, 1, "", "ConsistentDropoutModule"], [302, 0, 1, "", "Conv3dNet"], [303, 0, 1, "", "ConvNet"], [304, 0, 1, "", "DTActor"], [305, 0, 1, "", "DdpgCnnActor"], [306, 0, 1, "", "DdpgCnnQNet"], [307, 0, 1, "", "DdpgMlpActor"], [308, 0, 1, "", "DdpgMlpQNet"], [309, 0, 1, "", "DecisionTransformer"], [310, 0, 1, "", "Delta"], [311, 0, 1, "", "DistributionalDQNnet"], [312, 0, 1, "", "DistributionalQValueHook"], [313, 0, 1, "", "DreamerActor"], [314, 0, 1, "", "DuelingCnnDQNet"], [315, 0, 1, "", "EGreedyModule"], [316, 0, 1, "", "GRU"], [317, 0, 1, "", "GRUCell"], [318, 0, 1, "", "GRUModule"], [319, 0, 1, "", "IndependentNormal"], [320, 0, 1, "", "LLMMaskedCategorical"], [321, 0, 1, "", "LSTM"], [322, 0, 1, "", "LSTMCell"], [323, 0, 1, "", "LSTMModule"], [324, 0, 1, "", "MLP"], [325, 0, 1, "", "MPCPlannerBase"], [326, 0, 1, "", "MPPIPlanner"], [327, 0, 1, "", "MaskedCategorical"], [328, 0, 1, "", "MaskedOneHotCategorical"], [329, 0, 1, "", "MultiAgentConvNet"], [330, 0, 1, "", "MultiAgentMLP"], [331, 0, 1, "", "MultiAgentNetBase"], [332, 0, 1, "", "NoisyLazyLinear"], [333, 0, 1, "", "NoisyLinear"], [334, 0, 1, "", "ObsDecoder"], [335, 0, 1, "", "ObsEncoder"], [336, 0, 1, "", "OneHotCategorical"], [337, 0, 1, "", "OneHotOrdinal"], [338, 0, 1, "", "OnlineDTActor"], [339, 0, 1, "", "Ordinal"], [340, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [341, 0, 1, "", "QMixer"], [342, 0, 1, "", "QValueHook"], [343, 0, 1, "", "RSSMPosterior"], [344, 0, 1, "", "RSSMPrior"], [345, 0, 1, "", "Squeeze2dLayer"], [346, 0, 1, "", "SqueezeLayer"], [347, 0, 1, "", "TanhDelta"], [348, 0, 1, "", "TanhNormal"], [349, 0, 1, "", "TruncatedNormal"], [350, 0, 1, "", "VDNMixer"], [351, 0, 1, "", "VmapModule"], [366, 0, 1, "", "recurrent_mode"], [367, 0, 1, "", "reset_noise"], [368, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[297, 1, 1, "", "forward"], [297, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[298, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[299, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[300, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[301, 1, 1, "", "forward"], [301, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[302, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[303, 1, 1, "", "default_atari_dqn"], [303, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[304, 1, 1, "", "default_config"], [304, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[305, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[306, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[307, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[308, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[309, 0, 1, "", "DTConfig"], [309, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[310, 1, 1, "", "expand"], [310, 1, 1, "", "log_prob"], [310, 2, 1, "", "mean"], [310, 2, 1, "", "mode"], [310, 1, 1, "", "rsample"], [310, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[311, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[313, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[314, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[315, 1, 1, "", "forward"], [315, 1, 1, "", "step"]], "torchrl.modules.GRU": [[316, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[317, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[318, 1, 1, "", "forward"], [318, 1, 1, "", "make_cudnn_based"], [318, 1, 1, "", "make_python_based"], [318, 1, 1, "id0", "make_tensordict_primer"], [318, 1, 1, "", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[319, 2, 1, "", "mode"]], "torchrl.modules.LLMMaskedCategorical": [[320, 1, 1, "", "clear_cache"], [320, 1, 1, "", "entropy"], [320, 1, 1, "", "log_prob"], [320, 2, 1, "", "logits"], [320, 2, 1, "", "mask"], [320, 2, 1, "", "masked_dist"], [320, 2, 1, "", "masked_logits"], [320, 2, 1, "", "mode"], [320, 2, 1, "", "position_level_masking"], [320, 2, 1, "", "probs"], [320, 1, 1, "", "rsample"], [320, 1, 1, "", "sample"]], "torchrl.modules.LSTM": [[321, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[322, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[323, 1, 1, "", "forward"], [323, 1, 1, "", "make_cudnn_based"], [323, 1, 1, "", "make_python_based"], [323, 1, 1, "id0", "make_tensordict_primer"], [323, 1, 1, "", "set_recurrent_mode"]], "torchrl.modules.MLP": [[324, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[325, 1, 1, "", "forward"], [325, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[326, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[327, 1, 1, "", "entropy"], [327, 1, 1, "", "log_prob"], [327, 2, 1, "", "padding_value"], [327, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[328, 1, 1, "", "log_prob"], [328, 2, 1, "", "mode"], [328, 1, 1, "", "rsample"], [328, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[331, 1, 1, "", "forward"], [331, 1, 1, "", "from_stateful_net"], [331, 1, 1, "", "get_stateful_net"], [331, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[332, 1, 1, "", "initialize_parameters"], [332, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLinear": [[333, 1, 1, "", "reset_parameters"]], "torchrl.modules.ObsDecoder": [[334, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[335, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[336, 1, 1, "", "entropy"], [336, 1, 1, "", "log_prob"], [336, 2, 1, "", "mode"], [336, 1, 1, "", "rsample"], [336, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[338, 1, 1, "", "default_config"], [338, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[340, 1, 1, "", "forward"], [340, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[341, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[343, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[344, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[346, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[347, 2, 1, "", "mean"], [347, 2, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[348, 1, 1, "", "get_mode"], [348, 2, 1, "", "mean"], [348, 2, 1, "", "mode"], [348, 2, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[349, 1, 1, "", "log_prob"], [349, 2, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[350, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[351, 1, 1, "", "forward"]], "torchrl.modules.llm": [[352, 0, 1, "", "AsyncVLLM"], [353, 0, 1, "", "ChatHistory"], [354, 0, 1, "", "LLMWrapperBase"], [355, 0, 1, "", "LogProbs"], [356, 0, 1, "", "Masks"], [357, 0, 1, "", "RemoteTransformersWrapper"], [358, 0, 1, "", "Text"], [359, 0, 1, "", "Tokens"], [360, 0, 1, "", "TransformersWrapper"], [361, 0, 1, "", "make_async_vllm_engine"], [362, 0, 1, "", "make_vllm_worker"], [363, 0, 1, "", "stateless_init_process_group"], [364, 0, 1, "", "stateless_init_process_group_async"], [365, 0, 1, "", "vLLMWrapper"]], "torchrl.modules.llm.AsyncVLLM": [[352, 1, 1, "", "collective_rpc"], [352, 1, 1, "", "create_load_balancer"], [352, 1, 1, "", "from_pretrained"], [352, 1, 1, "", "generate"], [352, 1, 1, "", "get_cache_usage"], [352, 1, 1, "", "get_master_address"], [352, 1, 1, "", "get_master_port"], [352, 1, 1, "", "get_model_metadata"], [352, 1, 1, "", "get_num_unfinished_requests"], [352, 1, 1, "", "get_random_actor_index"], [352, 1, 1, "", "get_tp_size"], [352, 1, 1, "", "init_weight_update_group"], [352, 1, 1, "", "launch"], [352, 1, 1, "", "shutdown"], [352, 1, 1, "", "update_weights"]], "torchrl.modules.llm.ChatHistory": [[353, 1, 1, "", "cat"], [353, 1, 1, "", "default_spec"], [353, 2, 1, "", "device"], [353, 1, 1, "", "dumps"], [353, 1, 1, "", "fields"], [353, 1, 1, "", "from_any"], [353, 1, 1, "", "from_dataclass"], [353, 1, 1, "", "from_h5"], [353, 1, 1, "", "from_modules"], [353, 1, 1, "", "from_namedtuple"], [353, 1, 1, "", "from_pytree"], [353, 1, 1, "", "from_remote_init"], [353, 1, 1, "", "from_struct_array"], [353, 1, 1, "", "from_tensordict"], [353, 1, 1, "", "from_tuple"], [353, 1, 1, "", "fromkeys"], [353, 1, 1, "", "get"], [353, 1, 1, "", "lazy_stack"], [353, 1, 1, "", "load"], [353, 1, 1, "", "load_"], [353, 1, 1, "", "load_memmap"], [353, 1, 1, "", "load_state_dict"], [353, 1, 1, "", "maybe_dense_stack"], [353, 1, 1, "", "memmap"], [353, 1, 1, "", "memmap_"], [353, 1, 1, "", "memmap_like"], [353, 1, 1, "", "memmap_refresh_"], [353, 1, 1, "", "save"], [353, 1, 1, "", "set"], [353, 1, 1, "", "stack"], [353, 1, 1, "", "state_dict"], [353, 1, 1, "", "to_tensordict"], [353, 1, 1, "", "unbind"]], "torchrl.modules.llm.LLMWrapperBase": [[354, 1, 1, "", "add_module"], [354, 1, 1, "", "apply"], [354, 2, 1, "", "batching"], [354, 1, 1, "", "bfloat16"], [354, 1, 1, "", "buffers"], [354, 1, 1, "", "children"], [354, 1, 1, "", "cleanup_batching"], [354, 2, 1, "", "collector"], [354, 1, 1, "", "compile"], [354, 1, 1, "", "cpu"], [354, 1, 1, "", "cuda"], [354, 1, 1, "", "double"], [354, 1, 1, "", "eval"], [354, 1, 1, "", "extra_repr"], [354, 1, 1, "", "float"], [354, 1, 1, "", "forward"], [354, 1, 1, "", "get_batching_state"], [354, 1, 1, "", "get_buffer"], [354, 1, 1, "", "get_dist"], [354, 1, 1, "", "get_extra_state"], [354, 1, 1, "", "get_new_version"], [354, 1, 1, "", "get_parameter"], [354, 1, 1, "", "get_submodule"], [354, 1, 1, "", "half"], [354, 1, 1, "", "ipu"], [354, 1, 1, "", "is_tdmodule_compatible"], [354, 1, 1, "", "load_state_dict"], [354, 1, 1, "", "modules"], [354, 1, 1, "", "mtia"], [354, 1, 1, "", "named_buffers"], [354, 1, 1, "", "named_children"], [354, 1, 1, "", "named_modules"], [354, 1, 1, "", "named_parameters"], [354, 1, 1, "", "parameters"], [354, 1, 1, "", "register_backward_hook"], [354, 1, 1, "", "register_buffer"], [354, 1, 1, "", "register_collector"], [354, 1, 1, "", "register_forward_hook"], [354, 1, 1, "", "register_forward_pre_hook"], [354, 1, 1, "", "register_full_backward_hook"], [354, 1, 1, "", "register_full_backward_pre_hook"], [354, 1, 1, "", "register_load_state_dict_post_hook"], [354, 1, 1, "", "register_load_state_dict_pre_hook"], [354, 1, 1, "", "register_module"], [354, 1, 1, "", "register_parameter"], [354, 1, 1, "", "register_state_dict_post_hook"], [354, 1, 1, "", "register_state_dict_pre_hook"], [354, 1, 1, "", "requires_grad_"], [354, 1, 1, "", "reset_out_keys"], [354, 1, 1, "", "reset_parameters_recursive"], [354, 1, 1, "", "select_out_keys"], [354, 1, 1, "", "set_extra_state"], [354, 1, 1, "", "set_submodule"], [354, 1, 1, "", "share_memory"], [354, 1, 1, "", "state_dict"], [354, 1, 1, "", "to"], [354, 1, 1, "", "to_empty"], [354, 1, 1, "", "train"], [354, 1, 1, "", "type"], [354, 1, 1, "", "xpu"], [354, 1, 1, "", "zero_grad"]], "torchrl.modules.llm.LogProbs": [[355, 1, 1, "", "cat"], [355, 1, 1, "", "default_spec"], [355, 2, 1, "", "device"], [355, 1, 1, "", "dumps"], [355, 1, 1, "", "fields"], [355, 1, 1, "", "from_any"], [355, 1, 1, "", "from_dataclass"], [355, 1, 1, "", "from_h5"], [355, 1, 1, "", "from_modules"], [355, 1, 1, "", "from_namedtuple"], [355, 1, 1, "", "from_pytree"], [355, 1, 1, "", "from_remote_init"], [355, 1, 1, "", "from_struct_array"], [355, 1, 1, "", "from_tensordict"], [355, 1, 1, "", "from_tuple"], [355, 1, 1, "", "fromkeys"], [355, 1, 1, "", "get"], [355, 1, 1, "", "lazy_stack"], [355, 1, 1, "", "load"], [355, 1, 1, "", "load_"], [355, 1, 1, "", "load_memmap"], [355, 1, 1, "", "load_state_dict"], [355, 1, 1, "", "maybe_dense_stack"], [355, 1, 1, "", "memmap"], [355, 1, 1, "", "memmap_"], [355, 1, 1, "", "memmap_like"], [355, 1, 1, "", "memmap_refresh_"], [355, 1, 1, "", "save"], [355, 1, 1, "", "set"], [355, 1, 1, "", "stack"], [355, 1, 1, "", "state_dict"], [355, 1, 1, "", "to_tensordict"], [355, 1, 1, "", "unbind"]], "torchrl.modules.llm.Masks": [[356, 1, 1, "", "cat"], [356, 1, 1, "", "default_spec"], [356, 2, 1, "", "device"], [356, 1, 1, "", "dumps"], [356, 1, 1, "", "fields"], [356, 1, 1, "", "from_any"], [356, 1, 1, "", "from_dataclass"], [356, 1, 1, "", "from_h5"], [356, 1, 1, "", "from_modules"], [356, 1, 1, "", "from_namedtuple"], [356, 1, 1, "", "from_pytree"], [356, 1, 1, "", "from_remote_init"], [356, 1, 1, "", "from_struct_array"], [356, 1, 1, "", "from_tensordict"], [356, 1, 1, "", "from_tuple"], [356, 1, 1, "", "fromkeys"], [356, 1, 1, "", "get"], [356, 1, 1, "", "lazy_stack"], [356, 1, 1, "", "load"], [356, 1, 1, "", "load_"], [356, 1, 1, "", "load_memmap"], [356, 1, 1, "", "load_state_dict"], [356, 1, 1, "", "maybe_dense_stack"], [356, 1, 1, "", "memmap"], [356, 1, 1, "", "memmap_"], [356, 1, 1, "", "memmap_like"], [356, 1, 1, "", "memmap_refresh_"], [356, 1, 1, "", "save"], [356, 1, 1, "", "set"], [356, 1, 1, "", "stack"], [356, 1, 1, "", "state_dict"], [356, 1, 1, "", "to_tensordict"], [356, 1, 1, "", "unbind"]], "torchrl.modules.llm.RemoteTransformersWrapper": [[357, 2, 1, "", "batching"], [357, 1, 1, "", "cleanup_batching"], [357, 2, 1, "", "collector"], [357, 2, 1, "", "device"], [357, 2, 1, "", "dist_params_keys"], [357, 2, 1, "", "dist_sample_keys"], [357, 2, 1, "", "generate"], [357, 1, 1, "", "get_batching_state"], [357, 1, 1, "", "get_dist"], [357, 1, 1, "", "get_dist_with_prompt_mask"], [357, 1, 1, "", "get_new_version"], [357, 2, 1, "", "in_keys"], [357, 2, 1, "", "inplace"], [357, 2, 1, "", "layout"], [357, 1, 1, "", "log_prob"], [357, 2, 1, "", "log_prob_keys"], [357, 2, 1, "", "log_probs_key"], [357, 2, 1, "", "masks_key"], [357, 2, 1, "", "num_samples"], [357, 2, 1, "", "out_keys"], [357, 2, 1, "", "pad_output"], [357, 2, 1, "", "text_key"], [357, 2, 1, "", "tokens_key"]], "torchrl.modules.llm.Text": [[358, 1, 1, "", "cat"], [358, 1, 1, "", "default_spec"], [358, 2, 1, "", "device"], [358, 1, 1, "", "dumps"], [358, 1, 1, "", "fields"], [358, 1, 1, "", "from_any"], [358, 1, 1, "", "from_dataclass"], [358, 1, 1, "", "from_h5"], [358, 1, 1, "", "from_modules"], [358, 1, 1, "", "from_namedtuple"], [358, 1, 1, "", "from_pytree"], [358, 1, 1, "", "from_remote_init"], [358, 1, 1, "", "from_struct_array"], [358, 1, 1, "", "from_tensordict"], [358, 1, 1, "", "from_tuple"], [358, 1, 1, "", "fromkeys"], [358, 1, 1, "", "get"], [358, 1, 1, "", "lazy_stack"], [358, 1, 1, "", "load"], [358, 1, 1, "", "load_"], [358, 1, 1, "", "load_memmap"], [358, 1, 1, "", "load_state_dict"], [358, 1, 1, "", "maybe_dense_stack"], [358, 1, 1, "", "memmap"], [358, 1, 1, "", "memmap_"], [358, 1, 1, "", "memmap_like"], [358, 1, 1, "", "memmap_refresh_"], [358, 1, 1, "", "save"], [358, 1, 1, "", "set"], [358, 1, 1, "", "stack"], [358, 1, 1, "", "state_dict"], [358, 1, 1, "", "to_tensordict"], [358, 1, 1, "", "unbind"]], "torchrl.modules.llm.Tokens": [[359, 1, 1, "", "cat"], [359, 1, 1, "", "default_spec"], [359, 2, 1, "", "device"], [359, 1, 1, "", "dumps"], [359, 1, 1, "", "fields"], [359, 1, 1, "", "from_any"], [359, 1, 1, "", "from_dataclass"], [359, 1, 1, "", "from_h5"], [359, 1, 1, "", "from_modules"], [359, 1, 1, "", "from_namedtuple"], [359, 1, 1, "", "from_pytree"], [359, 1, 1, "", "from_remote_init"], [359, 1, 1, "", "from_struct_array"], [359, 1, 1, "", "from_tensordict"], [359, 1, 1, "", "from_tuple"], [359, 1, 1, "", "fromkeys"], [359, 1, 1, "", "get"], [359, 1, 1, "", "lazy_stack"], [359, 1, 1, "", "load"], [359, 1, 1, "", "load_"], [359, 1, 1, "", "load_memmap"], [359, 1, 1, "", "load_state_dict"], [359, 1, 1, "", "maybe_dense_stack"], [359, 1, 1, "", "memmap"], [359, 1, 1, "", "memmap_"], [359, 1, 1, "", "memmap_like"], [359, 1, 1, "", "memmap_refresh_"], [359, 1, 1, "", "save"], [359, 1, 1, "", "set"], [359, 1, 1, "", "stack"], [359, 1, 1, "", "state_dict"], [359, 1, 1, "", "to_tensordict"], [359, 1, 1, "", "unbind"]], "torchrl.modules.llm.TransformersWrapper": [[360, 1, 1, "", "add_module"], [360, 1, 1, "", "apply"], [360, 2, 1, "", "batching"], [360, 1, 1, "", "bfloat16"], [360, 1, 1, "", "buffers"], [360, 1, 1, "", "children"], [360, 1, 1, "", "cleanup_batching"], [360, 2, 1, "", "collector"], [360, 1, 1, "", "compile"], [360, 1, 1, "", "cpu"], [360, 1, 1, "", "cuda"], [360, 1, 1, "", "double"], [360, 1, 1, "", "eval"], [360, 1, 1, "", "extra_repr"], [360, 1, 1, "", "float"], [360, 1, 1, "", "forward"], [360, 1, 1, "", "get_batching_state"], [360, 1, 1, "", "get_buffer"], [360, 1, 1, "", "get_dist"], [360, 1, 1, "", "get_extra_state"], [360, 1, 1, "", "get_new_version"], [360, 1, 1, "", "get_parameter"], [360, 1, 1, "", "get_submodule"], [360, 1, 1, "", "half"], [360, 1, 1, "", "ipu"], [360, 1, 1, "", "is_tdmodule_compatible"], [360, 1, 1, "", "load_state_dict"], [360, 1, 1, "", "modules"], [360, 1, 1, "", "mtia"], [360, 1, 1, "", "named_buffers"], [360, 1, 1, "", "named_children"], [360, 1, 1, "", "named_modules"], [360, 1, 1, "", "named_parameters"], [360, 1, 1, "", "parameters"], [360, 1, 1, "", "register_backward_hook"], [360, 1, 1, "", "register_buffer"], [360, 1, 1, "", "register_collector"], [360, 1, 1, "", "register_forward_hook"], [360, 1, 1, "", "register_forward_pre_hook"], [360, 1, 1, "", "register_full_backward_hook"], [360, 1, 1, "", "register_full_backward_pre_hook"], [360, 1, 1, "", "register_load_state_dict_post_hook"], [360, 1, 1, "", "register_load_state_dict_pre_hook"], [360, 1, 1, "", "register_module"], [360, 1, 1, "", "register_parameter"], [360, 1, 1, "", "register_state_dict_post_hook"], [360, 1, 1, "", "register_state_dict_pre_hook"], [360, 1, 1, "", "repeat_interleave_causal"], [360, 1, 1, "", "requires_grad_"], [360, 1, 1, "", "reset_out_keys"], [360, 1, 1, "", "reset_parameters_recursive"], [360, 1, 1, "", "select_out_keys"], [360, 1, 1, "", "set_extra_state"], [360, 1, 1, "", "set_submodule"], [360, 1, 1, "", "share_memory"], [360, 1, 1, "", "state_dict"], [360, 1, 1, "", "to"], [360, 1, 1, "", "to_empty"], [360, 1, 1, "", "train"], [360, 1, 1, "", "type"], [360, 1, 1, "", "xpu"], [360, 1, 1, "", "zero_grad"]], "torchrl.modules.llm.vLLMWrapper": [[365, 1, 1, "", "add_module"], [365, 1, 1, "", "apply"], [365, 2, 1, "", "batching"], [365, 1, 1, "", "bfloat16"], [365, 1, 1, "", "buffers"], [365, 1, 1, "", "children"], [365, 1, 1, "", "cleanup_batching"], [365, 2, 1, "", "collector"], [365, 1, 1, "", "compile"], [365, 1, 1, "", "cpu"], [365, 1, 1, "", "cuda"], [365, 1, 1, "", "double"], [365, 1, 1, "", "eval"], [365, 1, 1, "", "extra_repr"], [365, 1, 1, "", "float"], [365, 1, 1, "", "forward"], [365, 1, 1, "", "get_batching_state"], [365, 1, 1, "", "get_buffer"], [365, 1, 1, "", "get_dist"], [365, 1, 1, "", "get_dist_with_prompt_mask"], [365, 1, 1, "", "get_extra_state"], [365, 1, 1, "", "get_new_version"], [365, 1, 1, "", "get_parameter"], [365, 1, 1, "", "get_submodule"], [365, 1, 1, "", "half"], [365, 1, 1, "", "ipu"], [365, 1, 1, "", "is_tdmodule_compatible"], [365, 1, 1, "", "load_state_dict"], [365, 1, 1, "", "modules"], [365, 1, 1, "", "mtia"], [365, 1, 1, "", "named_buffers"], [365, 1, 1, "", "named_children"], [365, 1, 1, "", "named_modules"], [365, 1, 1, "", "named_parameters"], [365, 1, 1, "", "parameters"], [365, 1, 1, "", "register_backward_hook"], [365, 1, 1, "", "register_buffer"], [365, 1, 1, "", "register_collector"], [365, 1, 1, "", "register_forward_hook"], [365, 1, 1, "", "register_forward_pre_hook"], [365, 1, 1, "", "register_full_backward_hook"], [365, 1, 1, "", "register_full_backward_pre_hook"], [365, 1, 1, "", "register_load_state_dict_post_hook"], [365, 1, 1, "", "register_load_state_dict_pre_hook"], [365, 1, 1, "", "register_module"], [365, 1, 1, "", "register_parameter"], [365, 1, 1, "", "register_state_dict_post_hook"], [365, 1, 1, "", "register_state_dict_pre_hook"], [365, 1, 1, "", "requires_grad_"], [365, 1, 1, "", "reset_out_keys"], [365, 1, 1, "", "reset_parameters_recursive"], [365, 1, 1, "", "select_out_keys"], [365, 1, 1, "", "set_extra_state"], [365, 1, 1, "", "set_submodule"], [365, 1, 1, "", "set_tokenizer"], [365, 1, 1, "", "share_memory"], [365, 1, 1, "", "state_dict"], [365, 1, 1, "", "to"], [365, 1, 1, "", "to_empty"], [365, 1, 1, "", "train"], [365, 1, 1, "", "type"], [365, 1, 1, "", "xpu"], [365, 1, 1, "", "zero_grad"]], "torchrl.modules.tensordict_module": [[369, 0, 1, "", "Actor"], [370, 0, 1, "", "ActorCriticOperator"], [371, 0, 1, "", "ActorCriticWrapper"], [372, 0, 1, "", "ActorValueOperator"], [373, 0, 1, "", "DecisionTransformerInferenceWrapper"], [374, 0, 1, "", "DistributionalQValueActor"], [375, 0, 1, "", "DistributionalQValueModule"], [376, 0, 1, "", "LMHeadActorValueOperator"], [377, 0, 1, "", "MultiStepActorWrapper"], [378, 0, 1, "", "ProbabilisticActor"], [379, 0, 1, "", "QValueActor"], [380, 0, 1, "", "QValueModule"], [381, 0, 1, "", "SafeModule"], [382, 0, 1, "", "SafeProbabilisticModule"], [383, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [384, 0, 1, "", "SafeSequential"], [385, 0, 1, "", "TanhModule"], [386, 0, 1, "", "ValueOperator"], [387, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[370, 1, 1, "", "get_critic_operator"], [370, 1, 1, "", "get_policy_head"], [370, 1, 1, "", "get_value_head"], [370, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[371, 1, 1, "", "get_policy_head"], [371, 1, 1, "", "get_policy_operator"], [371, 1, 1, "", "get_value_head"], [371, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[372, 1, 1, "", "get_policy_head"], [372, 1, 1, "", "get_policy_operator"], [372, 1, 1, "", "get_value_head"], [372, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[373, 1, 1, "", "forward"], [373, 1, 1, "", "mask_context"], [373, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[375, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[377, 1, 1, "", "forward"], [377, 2, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[380, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[381, 1, 1, "", "random"], [381, 1, 1, "", "random_sample"], [381, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[382, 1, 1, "", "random"], [382, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[385, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[387, 1, 1, "", "get_reward_operator"], [387, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[388, 0, 1, "", "biased_softplus"], [389, 0, 1, "", "get_primers_from_module"], [390, 0, 1, "", "inv_softplus"], [391, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[388, 1, 1, "", "forward"]], "torchrl.objectives": [[392, 0, 1, "", "A2CLoss"], [393, 0, 1, "", "CQLLoss"], [394, 0, 1, "", "ClipPPOLoss"], [395, 0, 1, "", "CrossQLoss"], [396, 0, 1, "", "DDPGLoss"], [397, 0, 1, "", "DQNLoss"], [398, 0, 1, "", "DTLoss"], [399, 0, 1, "", "DiscreteCQLLoss"], [400, 0, 1, "", "DiscreteIQLLoss"], [401, 0, 1, "", "DiscreteSACLoss"], [402, 0, 1, "", "DistributionalDQNLoss"], [403, 0, 1, "", "DreamerActorLoss"], [404, 0, 1, "", "DreamerModelLoss"], [405, 0, 1, "", "DreamerValueLoss"], [406, 0, 1, "", "GAILLoss"], [407, 0, 1, "", "HardUpdate"], [408, 0, 1, "", "IQLLoss"], [409, 0, 1, "", "KLPENPPOLoss"], [410, 0, 1, "", "LossModule"], [411, 0, 1, "", "OnlineDTLoss"], [412, 0, 1, "", "PPOLoss"], [413, 0, 1, "", "REDQLoss"], [414, 0, 1, "", "ReinforceLoss"], [415, 0, 1, "", "SACLoss"], [416, 0, 1, "", "SoftUpdate"], [417, 0, 1, "", "TD3BCLoss"], [418, 0, 1, "", "TD3Loss"], [419, 0, 1, "", "ValueEstimators"], [420, 0, 1, "", "add_random_module"], [421, 0, 1, "", "default_value_kwargs"], [422, 0, 1, "", "distance_loss"], [423, 0, 1, "", "group_optimizers"], [424, 0, 1, "", "hold_out_net"], [425, 0, 1, "", "hold_out_params"], [432, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[392, 4, 1, "", "default_keys"], [392, 1, 1, "", "forward"], [392, 2, 1, "", "functional"], [392, 1, 1, "", "loss_critic"], [392, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[393, 4, 1, "", "default_keys"], [393, 1, 1, "", "forward"], [393, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[394, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[395, 1, 1, "", "actor_loss"], [395, 1, 1, "", "alpha_loss"], [395, 4, 1, "", "default_keys"], [395, 1, 1, "", "forward"], [395, 1, 1, "", "load_state_dict"], [395, 1, 1, "", "make_value_estimator"], [395, 1, 1, "", "maybe_init_target_entropy"], [395, 1, 1, "", "qvalue_loss"], [395, 1, 1, "", "set_keys"], [395, 1, 1, "", "state_dict"], [395, 2, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[396, 4, 1, "", "default_keys"], [396, 1, 1, "", "forward"], [396, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[397, 4, 1, "", "default_keys"], [397, 1, 1, "", "forward"], [397, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[398, 4, 1, "", "default_keys"], [398, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[399, 4, 1, "", "default_keys"], [399, 1, 1, "", "forward"], [399, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[400, 4, 1, "", "default_keys"], [400, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[401, 1, 1, "", "actor_loss"], [401, 1, 1, "", "alpha_loss"], [401, 4, 1, "", "default_keys"], [401, 1, 1, "", "forward"], [401, 1, 1, "", "make_value_estimator"], [401, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.DistributionalDQNLoss": [[402, 4, 1, "", "default_keys"], [402, 1, 1, "", "forward"], [402, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[403, 4, 1, "", "default_keys"], [403, 1, 1, "", "forward"], [403, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[404, 4, 1, "", "default_keys"], [404, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[405, 4, 1, "", "default_keys"], [405, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[406, 4, 1, "", "default_keys"], [406, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[408, 4, 1, "", "default_keys"], [408, 1, 1, "", "forward"], [408, 1, 1, "", "loss_value_diff"], [408, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[409, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[410, 1, 1, "", "convert_to_functional"], [410, 1, 1, "", "forward"], [410, 1, 1, "", "from_stateful_net"], [410, 2, 1, "", "functional"], [410, 1, 1, "", "get_stateful_net"], [410, 1, 1, "", "make_value_estimator"], [410, 1, 1, "", "named_parameters"], [410, 1, 1, "", "parameters"], [410, 1, 1, "", "reset_parameters_recursive"], [410, 1, 1, "", "set_keys"], [410, 2, 1, "", "value_estimator"], [410, 2, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[411, 4, 1, "", "default_keys"], [411, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[412, 4, 1, "", "default_keys"], [412, 1, 1, "", "forward"], [412, 2, 1, "", "functional"], [412, 1, 1, "", "loss_critic"], [412, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[413, 4, 1, "", "default_keys"], [413, 1, 1, "", "forward"], [413, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[414, 4, 1, "", "default_keys"], [414, 1, 1, "", "forward"], [414, 2, 1, "", "functional"], [414, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[415, 1, 1, "", "actor_loss"], [415, 1, 1, "", "alpha_loss"], [415, 4, 1, "", "default_keys"], [415, 1, 1, "", "forward"], [415, 1, 1, "", "load_state_dict"], [415, 1, 1, "", "make_value_estimator"], [415, 1, 1, "", "qvalue_loss"], [415, 1, 1, "", "state_dict"], [415, 1, 1, "", "value_loss"]], "torchrl.objectives.TD3BCLoss": [[417, 1, 1, "", "actor_loss"], [417, 4, 1, "", "default_keys"], [417, 1, 1, "", "forward"], [417, 1, 1, "", "make_value_estimator"], [417, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[418, 4, 1, "", "default_keys"], [418, 1, 1, "", "forward"], [418, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.llm": [[426, 0, 1, "", "GRPOLoss"], [427, 0, 1, "", "GRPOLossOutput"], [428, 0, 1, "", "MCAdvantage"], [429, 0, 1, "", "SFTLoss"], [430, 0, 1, "", "SFTLossOutput"]], "torchrl.objectives.llm.GRPOLoss": [[426, 1, 1, "", "add_module"], [426, 1, 1, "", "apply"], [426, 1, 1, "", "bfloat16"], [426, 1, 1, "", "buffers"], [426, 1, 1, "", "children"], [426, 1, 1, "", "compile"], [426, 1, 1, "", "convert_to_functional"], [426, 1, 1, "", "cpu"], [426, 1, 1, "", "cuda"], [426, 4, 1, "", "default_keys"], [426, 1, 1, "", "double"], [426, 1, 1, "", "eval"], [426, 1, 1, "", "extra_repr"], [426, 1, 1, "", "float"], [426, 1, 1, "", "forward"], [426, 1, 1, "", "from_stateful_net"], [426, 2, 1, "", "functional"], [426, 1, 1, "", "get_buffer"], [426, 1, 1, "", "get_extra_state"], [426, 1, 1, "", "get_parameter"], [426, 1, 1, "", "get_stateful_net"], [426, 1, 1, "", "get_submodule"], [426, 1, 1, "", "half"], [426, 1, 1, "", "ipu"], [426, 1, 1, "", "is_tdmodule_compatible"], [426, 1, 1, "", "load_state_dict"], [426, 1, 1, "", "loss_critic"], [426, 1, 1, "", "make_value_estimator"], [426, 1, 1, "", "modules"], [426, 1, 1, "", "mtia"], [426, 1, 1, "", "named_buffers"], [426, 1, 1, "", "named_children"], [426, 1, 1, "", "named_modules"], [426, 1, 1, "", "named_parameters"], [426, 1, 1, "", "parameters"], [426, 1, 1, "", "register_backward_hook"], [426, 1, 1, "", "register_buffer"], [426, 1, 1, "", "register_forward_hook"], [426, 1, 1, "", "register_forward_pre_hook"], [426, 1, 1, "", "register_full_backward_hook"], [426, 1, 1, "", "register_full_backward_pre_hook"], [426, 1, 1, "", "register_load_state_dict_post_hook"], [426, 1, 1, "", "register_load_state_dict_pre_hook"], [426, 1, 1, "", "register_module"], [426, 1, 1, "", "register_parameter"], [426, 1, 1, "", "register_state_dict_post_hook"], [426, 1, 1, "", "register_state_dict_pre_hook"], [426, 1, 1, "", "requires_grad_"], [426, 1, 1, "", "reset_out_keys"], [426, 1, 1, "", "reset_parameters_recursive"], [426, 1, 1, "", "select_out_keys"], [426, 1, 1, "", "set_extra_state"], [426, 1, 1, "", "set_keys"], [426, 1, 1, "", "set_submodule"], [426, 1, 1, "", "share_memory"], [426, 1, 1, "", "state_dict"], [426, 1, 1, "", "to"], [426, 1, 1, "", "to_empty"], [426, 1, 1, "", "train"], [426, 1, 1, "", "type"], [426, 2, 1, "", "value_estimator"], [426, 2, 1, "", "vmap_randomness"], [426, 1, 1, "", "xpu"], [426, 1, 1, "", "zero_grad"]], "torchrl.objectives.llm.GRPOLossOutput": [[427, 1, 1, "", "cat"], [427, 2, 1, "", "device"], [427, 1, 1, "", "dumps"], [427, 1, 1, "", "fields"], [427, 1, 1, "", "from_any"], [427, 1, 1, "", "from_dataclass"], [427, 1, 1, "", "from_h5"], [427, 1, 1, "", "from_modules"], [427, 1, 1, "", "from_namedtuple"], [427, 1, 1, "", "from_pytree"], [427, 1, 1, "", "from_remote_init"], [427, 1, 1, "", "from_struct_array"], [427, 1, 1, "", "from_tensordict"], [427, 1, 1, "", "from_tuple"], [427, 1, 1, "", "fromkeys"], [427, 1, 1, "", "get"], [427, 1, 1, "", "lazy_stack"], [427, 1, 1, "", "load"], [427, 1, 1, "", "load_"], [427, 1, 1, "", "load_memmap"], [427, 1, 1, "", "load_state_dict"], [427, 1, 1, "", "maybe_dense_stack"], [427, 1, 1, "", "memmap"], [427, 1, 1, "", "memmap_"], [427, 1, 1, "", "memmap_like"], [427, 1, 1, "", "memmap_refresh_"], [427, 1, 1, "", "save"], [427, 1, 1, "", "set"], [427, 1, 1, "", "stack"], [427, 1, 1, "", "state_dict"], [427, 1, 1, "", "to_tensordict"], [427, 1, 1, "", "unbind"]], "torchrl.objectives.llm.MCAdvantage": [[428, 1, 1, "", "add_module"], [428, 1, 1, "", "apply"], [428, 1, 1, "", "bfloat16"], [428, 1, 1, "", "buffers"], [428, 1, 1, "", "children"], [428, 1, 1, "", "close"], [428, 2, 1, "", "collector"], [428, 1, 1, "", "compile"], [428, 2, 1, "", "container"], [428, 1, 1, "", "cpu"], [428, 1, 1, "", "cuda"], [428, 1, 1, "", "double"], [428, 1, 1, "", "eval"], [428, 1, 1, "", "extra_repr"], [428, 1, 1, "", "float"], [428, 1, 1, "", "forward"], [428, 1, 1, "", "get_buffer"], [428, 1, 1, "", "get_extra_state"], [428, 1, 1, "", "get_parameter"], [428, 1, 1, "", "get_submodule"], [428, 1, 1, "", "half"], [428, 1, 1, "", "init"], [428, 1, 1, "", "inv"], [428, 1, 1, "", "ipu"], [428, 1, 1, "", "load_state_dict"], [428, 1, 1, "", "modules"], [428, 1, 1, "", "mtia"], [428, 1, 1, "", "named_buffers"], [428, 1, 1, "", "named_children"], [428, 1, 1, "", "named_modules"], [428, 1, 1, "", "named_parameters"], [428, 1, 1, "", "parameters"], [428, 2, 1, "", "parent"], [428, 1, 1, "", "register_backward_hook"], [428, 1, 1, "", "register_buffer"], [428, 1, 1, "", "register_forward_hook"], [428, 1, 1, "", "register_forward_pre_hook"], [428, 1, 1, "", "register_full_backward_hook"], [428, 1, 1, "", "register_full_backward_pre_hook"], [428, 1, 1, "", "register_load_state_dict_post_hook"], [428, 1, 1, "", "register_load_state_dict_pre_hook"], [428, 1, 1, "", "register_module"], [428, 1, 1, "", "register_parameter"], [428, 1, 1, "", "register_state_dict_post_hook"], [428, 1, 1, "", "register_state_dict_pre_hook"], [428, 1, 1, "", "requires_grad_"], [428, 1, 1, "", "set_extra_state"], [428, 1, 1, "", "set_submodule"], [428, 1, 1, "", "share_memory"], [428, 1, 1, "", "state_dict"], [428, 1, 1, "", "to"], [428, 1, 1, "", "to_empty"], [428, 1, 1, "", "train"], [428, 1, 1, "", "transform_action_spec"], [428, 1, 1, "", "transform_done_spec"], [428, 1, 1, "", "transform_env_batch_size"], [428, 1, 1, "", "transform_env_device"], [428, 1, 1, "", "transform_input_spec"], [428, 1, 1, "", "transform_observation_spec"], [428, 1, 1, "", "transform_output_spec"], [428, 1, 1, "", "transform_reward_spec"], [428, 1, 1, "", "transform_state_spec"], [428, 1, 1, "", "type"], [428, 1, 1, "", "xpu"], [428, 1, 1, "", "zero_grad"]], "torchrl.objectives.llm.SFTLoss": [[429, 1, 1, "", "add_module"], [429, 1, 1, "", "apply"], [429, 1, 1, "", "bfloat16"], [429, 1, 1, "", "buffers"], [429, 1, 1, "", "children"], [429, 1, 1, "", "compile"], [429, 1, 1, "", "convert_to_functional"], [429, 1, 1, "", "cpu"], [429, 1, 1, "", "cuda"], [429, 4, 1, "", "default_keys"], [429, 1, 1, "", "double"], [429, 1, 1, "", "eval"], [429, 1, 1, "", "extra_repr"], [429, 1, 1, "", "float"], [429, 1, 1, "", "forward"], [429, 1, 1, "", "from_stateful_net"], [429, 2, 1, "", "functional"], [429, 1, 1, "", "get_buffer"], [429, 1, 1, "", "get_extra_state"], [429, 1, 1, "", "get_parameter"], [429, 1, 1, "", "get_stateful_net"], [429, 1, 1, "", "get_submodule"], [429, 1, 1, "", "half"], [429, 1, 1, "", "ipu"], [429, 1, 1, "", "is_tdmodule_compatible"], [429, 1, 1, "", "load_state_dict"], [429, 1, 1, "", "make_value_estimator"], [429, 1, 1, "", "modules"], [429, 1, 1, "", "mtia"], [429, 1, 1, "", "named_buffers"], [429, 1, 1, "", "named_children"], [429, 1, 1, "", "named_modules"], [429, 1, 1, "", "named_parameters"], [429, 1, 1, "", "parameters"], [429, 1, 1, "", "register_backward_hook"], [429, 1, 1, "", "register_buffer"], [429, 1, 1, "", "register_forward_hook"], [429, 1, 1, "", "register_forward_pre_hook"], [429, 1, 1, "", "register_full_backward_hook"], [429, 1, 1, "", "register_full_backward_pre_hook"], [429, 1, 1, "", "register_load_state_dict_post_hook"], [429, 1, 1, "", "register_load_state_dict_pre_hook"], [429, 1, 1, "", "register_module"], [429, 1, 1, "", "register_parameter"], [429, 1, 1, "", "register_state_dict_post_hook"], [429, 1, 1, "", "register_state_dict_pre_hook"], [429, 1, 1, "", "requires_grad_"], [429, 1, 1, "", "reset_out_keys"], [429, 1, 1, "", "reset_parameters_recursive"], [429, 1, 1, "", "select_out_keys"], [429, 1, 1, "", "set_extra_state"], [429, 1, 1, "", "set_keys"], [429, 1, 1, "", "set_submodule"], [429, 1, 1, "", "share_memory"], [429, 1, 1, "", "state_dict"], [429, 1, 1, "", "to"], [429, 1, 1, "", "to_empty"], [429, 1, 1, "", "train"], [429, 1, 1, "", "type"], [429, 2, 1, "", "value_estimator"], [429, 2, 1, "", "vmap_randomness"], [429, 1, 1, "", "xpu"], [429, 1, 1, "", "zero_grad"]], "torchrl.objectives.llm.SFTLossOutput": [[430, 1, 1, "", "cat"], [430, 2, 1, "", "device"], [430, 1, 1, "", "dumps"], [430, 1, 1, "", "fields"], [430, 1, 1, "", "from_any"], [430, 1, 1, "", "from_dataclass"], [430, 1, 1, "", "from_h5"], [430, 1, 1, "", "from_modules"], [430, 1, 1, "", "from_namedtuple"], [430, 1, 1, "", "from_pytree"], [430, 1, 1, "", "from_remote_init"], [430, 1, 1, "", "from_struct_array"], [430, 1, 1, "", "from_tensordict"], [430, 1, 1, "", "from_tuple"], [430, 1, 1, "", "fromkeys"], [430, 1, 1, "", "get"], [430, 1, 1, "", "lazy_stack"], [430, 1, 1, "", "load"], [430, 1, 1, "", "load_"], [430, 1, 1, "", "load_memmap"], [430, 1, 1, "", "load_state_dict"], [430, 1, 1, "", "maybe_dense_stack"], [430, 1, 1, "", "memmap"], [430, 1, 1, "", "memmap_"], [430, 1, 1, "", "memmap_like"], [430, 1, 1, "", "memmap_refresh_"], [430, 1, 1, "", "save"], [430, 1, 1, "", "set"], [430, 1, 1, "", "stack"], [430, 1, 1, "", "state_dict"], [430, 1, 1, "", "to_tensordict"], [430, 1, 1, "", "unbind"]], "torchrl.objectives.multiagent": [[431, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[431, 4, 1, "", "default_keys"], [431, 1, 1, "", "forward"], [431, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[433, 0, 1, "", "GAE"], [434, 0, 1, "", "TD0Estimator"], [435, 0, 1, "", "TD1Estimator"], [436, 0, 1, "", "TDLambdaEstimator"], [437, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[433, 1, 1, "", "forward"], [433, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[434, 1, 1, "", "forward"], [434, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[435, 1, 1, "", "forward"], [435, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[436, 1, 1, "", "forward"], [436, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[437, 4, 1, "", "default_keys"], [437, 1, 1, "", "forward"], [437, 1, 1, "", "set_keys"], [437, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[438, 0, 1, "", "generalized_advantage_estimate"], [439, 0, 1, "", "reward2go"], [440, 0, 1, "", "td0_advantage_estimate"], [441, 0, 1, "", "td0_return_estimate"], [442, 0, 1, "", "td1_advantage_estimate"], [443, 0, 1, "", "td1_return_estimate"], [444, 0, 1, "", "td_lambda_advantage_estimate"], [445, 0, 1, "", "td_lambda_return_estimate"], [446, 0, 1, "", "vec_generalized_advantage_estimate"], [447, 0, 1, "", "vec_td1_advantage_estimate"], [448, 0, 1, "", "vec_td1_return_estimate"], [449, 0, 1, "", "vec_td_lambda_advantage_estimate"], [450, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[451, 3, 1, "", "PixelRenderTransform"], [452, 3, 1, "", "TensorDictRecorder"], [453, 3, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[454, 3, 1, "", "Logger"], [456, 3, 1, "", "generate_exp_name"], [457, 3, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[455, 3, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[458, 3, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[459, 3, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[460, 3, 1, "", "WandbLogger"]], "torchrl.trainers": [[462, 0, 1, "", "BatchSubSampler"], [463, 0, 1, "", "ClearCudaCache"], [464, 0, 1, "", "CountFramesLog"], [465, 0, 1, "", "LogScalar"], [466, 0, 1, "", "LogValidationReward"], [467, 0, 1, "", "OptimizerHook"], [468, 0, 1, "", "ReplayBufferTrainer"], [469, 0, 1, "", "RewardNormalizer"], [470, 0, 1, "", "SelectKeys"], [471, 0, 1, "", "TargetNetUpdaterHook"], [472, 0, 1, "", "Trainer"], [473, 0, 1, "", "TrainerHookBase"], [474, 0, 1, "", "UTDRHook"], [475, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[462, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[463, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[464, 1, 1, "", "register"]], "torchrl.trainers.LogScalar": [[465, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[466, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[467, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[468, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[469, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[470, 1, 1, "", "register"]], "torchrl.trainers.TargetNetUpdaterHook": [[471, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[472, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[473, 1, 1, "", "register"]], "torchrl.trainers.UTDRHook": [[474, 1, 1, "", "load_state_dict"], [474, 1, 1, "", "register"], [474, 1, 1, "", "state_dict"]], "torchrl.trainers.UpdateWeights": [[475, 1, 1, "", "register"]], "torchrl.trainers.algorithms": [[476, 0, 1, "", "PPOTrainer"], [477, 0, 1, "", "SACTrainer"]], "torchrl.trainers.algorithms.PPOTrainer": [[476, 1, 1, "", "load_from_file"]], "torchrl.trainers.algorithms.SACTrainer": [[477, 1, 1, "", "load_from_file"]], "torchrl.trainers.algorithms.configs.collectors": [[478, 0, 1, "", "AsyncDataCollectorConfig"], [479, 0, 1, "", "DataCollectorConfig"], [480, 0, 1, "", "MultiSyncDataCollectorConfig"], [481, 0, 1, "", "MultiaSyncDataCollectorConfig"], [482, 0, 1, "", "SyncDataCollectorConfig"]], "torchrl.trainers.algorithms.configs.common": [[483, 0, 1, "", "ConfigBase"]], "torchrl.trainers.algorithms.configs.data": [[484, 0, 1, "", "LazyMemmapStorageConfig"], [485, 0, 1, "", "LazyStackStorageConfig"], [486, 0, 1, "", "LazyTensorStorageConfig"], [487, 0, 1, "", "ListStorageConfig"], [488, 0, 1, "", "PrioritizedSamplerConfig"], [489, 0, 1, "", "RandomSamplerConfig"], [490, 0, 1, "", "ReplayBufferConfig"], [491, 0, 1, "", "RoundRobinWriterConfig"], [492, 0, 1, "", "SamplerWithoutReplacementConfig"], [493, 0, 1, "", "SliceSamplerConfig"], [494, 0, 1, "", "SliceSamplerWithoutReplacementConfig"], [495, 0, 1, "", "StorageEnsembleConfig"], [496, 0, 1, "", "StorageEnsembleWriterConfig"], [497, 0, 1, "", "TensorDictReplayBufferConfig"], [498, 0, 1, "", "TensorStorageConfig"]], "torchrl.trainers.algorithms.configs.envs": [[499, 0, 1, "", "BatchedEnvConfig"], [500, 0, 1, "", "EnvConfig"], [501, 0, 1, "", "TransformedEnvConfig"]], "torchrl.trainers.algorithms.configs.envs_libs": [[502, 0, 1, "", "BraxEnvConfig"], [503, 0, 1, "", "DMControlEnvConfig"], [504, 0, 1, "", "EnvLibsConfig"], [505, 0, 1, "", "GymEnvConfig"], [506, 0, 1, "", "HabitatEnvConfig"], [507, 0, 1, "", "IsaacGymEnvConfig"], [508, 0, 1, "", "JumanjiEnvConfig"], [509, 0, 1, "", "MOGymEnvConfig"], [510, 0, 1, "", "MeltingpotEnvConfig"], [511, 0, 1, "", "MultiThreadedEnvConfig"], [512, 0, 1, "", "OpenMLEnvConfig"], [513, 0, 1, "", "OpenSpielEnvConfig"], [514, 0, 1, "", "PettingZooEnvConfig"], [515, 0, 1, "", "RoboHiveEnvConfig"], [516, 0, 1, "", "SMACv2EnvConfig"], [517, 0, 1, "", "UnityMLAgentsEnvConfig"], [518, 0, 1, "", "VmasEnvConfig"]], "torchrl.trainers.algorithms.configs.logging": [[519, 0, 1, "", "CSVLoggerConfig"], [520, 0, 1, "", "LoggerConfig"], [521, 0, 1, "", "TensorboardLoggerConfig"], [522, 0, 1, "", "WandbLoggerConfig"]], "torchrl.trainers.algorithms.configs.modules": [[523, 0, 1, "", "ConvNetConfig"], [524, 0, 1, "", "MLPConfig"], [525, 0, 1, "", "ModelConfig"], [526, 0, 1, "", "NetworkConfig"], [527, 0, 1, "", "TanhNormalModelConfig"], [528, 0, 1, "", "TensorDictModuleConfig"], [529, 0, 1, "", "ValueModelConfig"]], "torchrl.trainers.algorithms.configs.objectives": [[530, 0, 1, "", "LossConfig"], [531, 0, 1, "", "PPOLossConfig"]], "torchrl.trainers.algorithms.configs.trainers": [[532, 0, 1, "", "PPOTrainerConfig"], [533, 0, 1, "", "TrainerConfig"]], "torchrl.trainers.algorithms.configs.transforms": [[534, 0, 1, "", "ActionDiscretizerConfig"], [535, 0, 1, "", "ActionMaskConfig"], [536, 0, 1, "", "AutoResetTransformConfig"], [537, 0, 1, "", "BatchSizeTransformConfig"], [538, 0, 1, "", "BinarizeRewardConfig"], [539, 0, 1, "", "BurnInTransformConfig"], [540, 0, 1, "", "CatFramesConfig"], [541, 0, 1, "", "CatTensorsConfig"], [542, 0, 1, "", "CenterCropConfig"], [543, 0, 1, "", "ClipTransformConfig"], [544, 0, 1, "", "ComposeConfig"], [545, 0, 1, "", "ConditionalPolicySwitchConfig"], [546, 0, 1, "", "ConditionalSkipConfig"], [547, 0, 1, "", "CropConfig"], [548, 0, 1, "", "DTypeCastTransformConfig"], [549, 0, 1, "", "DeviceCastTransformConfig"], [550, 0, 1, "", "DiscreteActionProjectionConfig"], [551, 0, 1, "", "DoubleToFloatConfig"], [552, 0, 1, "", "EndOfLifeTransformConfig"], [553, 0, 1, "", "ExcludeTransformConfig"], [554, 0, 1, "", "FiniteTensorDictCheckConfig"], [555, 0, 1, "", "FlattenObservationConfig"], [556, 0, 1, "", "FrameSkipTransformConfig"], [557, 0, 1, "", "GrayScaleConfig"], [558, 0, 1, "", "HashConfig"], [559, 0, 1, "", "InitTrackerConfig"], [560, 0, 1, "", "KLRewardTransformConfig"], [561, 0, 1, "", "LineariseRewardsConfig"], [562, 0, 1, "", "MultiActionConfig"], [563, 0, 1, "", "MultiStepTransformConfig"], [564, 0, 1, "", "NoopResetEnvConfig"], [565, 0, 1, "", "ObservationNormConfig"], [566, 0, 1, "", "PermuteTransformConfig"], [567, 0, 1, "", "PinMemoryTransformConfig"], [568, 0, 1, "", "R3MTransformConfig"], [569, 0, 1, "", "RandomCropTensorDictConfig"], [570, 0, 1, "", "RemoveEmptySpecsConfig"], [571, 0, 1, "", "RenameTransformConfig"], [572, 0, 1, "", "ResizeConfig"], [573, 0, 1, "", "Reward2GoTransformConfig"], [574, 0, 1, "", "RewardClippingConfig"], [575, 0, 1, "", "RewardScalingConfig"], [576, 0, 1, "", "RewardSumConfig"], [577, 0, 1, "", "SelectTransformConfig"], [578, 0, 1, "", "SignTransformConfig"], [579, 0, 1, "", "SqueezeTransformConfig"], [580, 0, 1, "", "StackConfig"], [581, 0, 1, "", "StepCounterConfig"], [582, 0, 1, "", "TargetReturnConfig"], [583, 0, 1, "", "TensorDictPrimerConfig"], [584, 0, 1, "", "TimeMaxPoolConfig"], [585, 0, 1, "", "TimerConfig"], [586, 0, 1, "", "ToTensorImageConfig"], [587, 0, 1, "", "TokenizerConfig"], [588, 0, 1, "", "TrajCounterConfig"], [589, 0, 1, "", "TransformConfig"], [590, 0, 1, "", "UnaryTransformConfig"], [591, 0, 1, "", "UnsqueezeTransformConfig"], [592, 0, 1, "", "VC1TransformConfig"], [593, 0, 1, "", "VIPRewardTransformConfig"], [594, 0, 1, "", "VIPTransformConfig"], [595, 0, 1, "", "VecGymEnvTransformConfig"], [596, 0, 1, "", "VecNormConfig"], [597, 0, 1, "", "VecNormV2Config"]], "torchrl.trainers.algorithms.configs.utils": [[598, 0, 1, "", "ASGDConfig"], [599, 0, 1, "", "AdadeltaConfig"], [600, 0, 1, "", "AdagradConfig"], [601, 0, 1, "", "AdamConfig"], [602, 0, 1, "", "AdamWConfig"], [603, 0, 1, "", "AdamaxConfig"], [604, 0, 1, "", "LBFGSConfig"], [605, 0, 1, "", "LionConfig"], [606, 0, 1, "", "NAdamConfig"], [607, 0, 1, "", "RAdamConfig"], [608, 0, 1, "", "RMSpropConfig"], [609, 0, 1, "", "RpropConfig"], [610, 0, 1, "", "SGDConfig"], [611, 0, 1, "", "SparseAdamConfig"]], "torchrl.trainers.helpers": [[612, 3, 1, "", "correct_for_frame_skip"], [613, 3, 1, "", "get_stats_random_rollout"], [614, 3, 1, "", "make_collector_offpolicy"], [615, 3, 1, "", "make_collector_onpolicy"], [616, 3, 1, "", "make_dqn_loss"], [617, 3, 1, "", "make_replay_buffer"], [618, 3, 1, "", "make_target_updater"], [619, 3, 1, "", "make_trainer"], [620, 3, 1, "", "parallel_env_constructor"], [621, 3, 1, "", "sync_async_collector"], [622, 3, 1, "", "sync_sync_collector"], [623, 3, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 4, 7, 10, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 628, 629, 630, 631, 633, 634, 635, 637, 639, 645, 646, 648, 649, 650, 654, 655], "instal": [0, 7, 8, 645, 654], "get": [0, 2, 638, 639, 640, 641, 642, 643], "start": [0, 2, 630, 638, 639, 640, 641, 642, 643, 645], "tutori": [0, 635, 648, 649], "basic": [0, 2, 645, 652], "intermedi": [0, 9], "advanc": 0, "refer": [0, 625], "knowledg": [0, 626], "base": [0, 2, 3, 8, 626, 627, 637], "indic": 0, "tabl": 0, "collector": [1, 478, 479, 480, 481, 482, 627, 633, 634, 635, 636, 641, 643, 648, 649, 654], "packag": [1, 3, 4, 628, 629, 630, 631], "batch": [1, 4, 633, 650, 652], "size": [1, 4, 633, 652], "polici": [1, 3, 5, 627, 629, 633, 635, 636, 637, 639, 643, 647, 648, 649, 650], "copi": 1, "weight": 1, "synchron": 1, "distribut": [1, 628], "environ": [1, 2, 4, 5, 7, 8, 627, 633, 634, 635, 636, 638, 643, 645, 646, 647, 648, 649, 650, 654, 655], "send": 1, "receiv": 1, "model": [1, 2, 3, 5, 627, 628, 633, 634, 636, 637, 640, 651, 654], "weightupdat": 1, "extend": 1, "updat": [1, 633], "class": [1, 2, 4, 627, 630, 650, 654], "replai": [1, 2, 3, 4, 633, 634, 635, 636, 641, 643, 648, 649, 652, 654], "buffer": [1, 2, 3, 4, 633, 634, 635, 636, 641, 643, 648, 649, 652, 654], "interoper": 1, "run": [1, 2, 637, 638, 655], "asynchron": 1, "singl": [1, 5], "node": 1, "data": [1, 2, 3, 5, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 627, 633, 634, 635, 641, 643, 648, 649, 654], "helper": [1, 4, 645], "function": [1, 5, 627, 629, 634, 635, 640, 648, 649, 654], "configur": [2, 630, 645], "system": [2, 630], "quick": [2, 630], "simpl": [2, 637, 650], "exampl": [2, 4, 12, 627, 630, 634, 646, 652], "categori": 2, "group": [2, 648], "more": [2, 652], "complex": [2, 652], "parallel": [2, 633, 647, 655], "transform": [2, 3, 4, 284, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 627, 633, 635, 638, 646, 648, 649, 650, 652, 654, 655], "avail": 2, "option": [2, 8], "complet": 2, "train": [2, 5, 9, 629, 633, 635, 636, 637, 640, 643, 648, 649, 650], "experi": [2, 633, 650], "usag": [2, 627], "hyperparamet": [2, 634, 635, 648, 649], "sweep": 2, "custom": [2, 4, 12, 627, 650, 652], "file": 2, "store": [2, 3, 634, 652], "implement": [2, 5], "detail": 2, "librari": [2, 4, 654], "network": [2, 633, 634, 635, 636, 639, 648, 649], "collect": [2, 634, 635, 641], "storag": [2, 3, 131, 633, 641, 652], "optim": [2, 5, 633, 634, 640, 643], "log": [2, 519, 520, 521, 522, 642, 646], "creat": [2, 638], "best": 2, "practic": 2, "futur": 2, "extens": 2, "compos": [3, 239], "support": [3, 627], "type": 3, "choos": 3, "sampl": [3, 652], "index": 3, "compress": 3, "memori": 3, "effici": 3, "share": 3, "across": 3, "process": 3, "trajectori": [3, 652], "checkpoint": [3, 630], "episod": [3, 5], "format": 3, "ted": [3, 638], "The": [3, 633], "rational": 3, "behind": 3, "structur": [3, 627, 646, 652], "A": [3, 634, 652], "note": 3, "singleton": [3, 5], "dimens": 3, "flatten": 3, "reduc": 3, "consumpt": 3, "dimension": [3, 5], "tensordict": [3, 628, 652, 654], "special": [3, 639, 654], "case": 3, "footnot": 3, "multi": [3, 4, 628, 629, 647, 648, 649], "agent": [3, 4, 5, 628, 629, 648, 649], "present": 3, "rnn": 3, "step": [3, 4, 633, 635, 638, 641, 645, 648, 649, 652, 655], "what": [3, 6], "about": 3, "requir": 3, "dataset": 3, "tensorspec": [3, 85], "numer": 3, "subclass": [3, 4], "categor": [3, 41], "tree": [3, 87], "forest": 3, "tensordictmap": [3, 80], "mctsforest": [3, 53], "larg": 3, "languag": 3, "reinforc": [3, 629, 635, 648, 649], "learn": [3, 5, 628, 635, 648, 649], "from": [3, 7, 8], "human": 3, "feedback": 3, "rlhf": 3, "util": [3, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 627, 628, 629, 630, 648], "env": [4, 499, 500, 501, 650, 654, 655], "spec": [4, 650, 655], "lock": 4, "method": [4, 633], "partial": 4, "reset": [4, 650, 655], "vector": [4, 654], "async": [4, 627, 654], "nativ": 4, "auto": 4, "dynam": [4, 5, 652], "forward": [4, 5, 633], "invers": [4, 627], "understand": 4, "kei": 4, "tensor": [4, 652], "expos": 4, "outsid": 4, "world": 4, "design": [4, 627, 643], "your": [4, 5, 7, 627, 633, 637, 643, 650], "own": [4, 643], "tip": 4, "us": [4, 5, 7, 10, 629, 636, 651, 652, 654], "clone": [4, 8], "mask": [4, 356, 627], "action": [4, 5, 629, 636, 650], "record": [4, 630, 633, 642], "video": [4, 12, 642], "domain": [4, 628], "specif": [4, 627, 628, 630, 647], "thing": [5, 633, 650], "consid": 5, "when": [5, 8], "debug": 5, "rl": [5, 10, 638, 640, 646, 654], "gener": [5, 12, 628], "have": 5, "you": 5, "valid": [5, 646], "algorithm": [5, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 628, 630], "few": 5, "small": 5, "toi": 5, "problem": 5, "known": 5, "return": [5, 629], "e": 5, "g": 5, "gridworld": 5, "mountaincar": 5, "visual": 5, "Be": 5, "veri": 5, "care": 5, "ani": 5, "augment": 5, "doe": 5, "entropi": 5, "converg": 5, "too": [5, 9], "quickli": 5, "slowli": 5, "chang": [5, 654], "drastic": 5, "reward": [5, 627], "beyond": 5, "go": 5, "up": [5, 7], "Is": 5, "favor": 5, "compon": 5, "i": 5, "veloc": 5, "vs": [5, 627], "l2": 5, "magnitud": 5, "task": [5, 627, 647], "horizon": 5, "extrem": 5, "long": 5, "ar": 5, "normal": [5, 633, 634, 635], "standard": 5, "explor": [5, 628, 633, 634, 639, 646], "valu": [5, 628, 629, 633, 635, 636, 639], "loss": [5, 633, 634, 635, 636, 643, 648, 649], "earli": 5, "roughli": 5, "uniformli": 5, "random": [5, 629, 648, 649], "intrins": 5, "decai": 5, "progress": 5, "remain": 5, "constant": [5, 634], "increas": 5, "an": [5, 635, 636, 638, 650], "can": 5, "low": 5, "also": 5, "offlin": 5, "observ": [5, 633], "space": 5, "effect": [5, 650], "dramat": 5, "dure": [5, 8], "high": 5, "work": [6, 7, 8, 637], "gym": [6, 654, 655], "openai": 6, "version": [6, 8, 11, 627], "habitat": 7, "lab": 7, "set": [7, 12], "pip": [7, 8], "common": [7, 8, 9, 483], "issu": [7, 8, 11], "mujoco": 8, "prerequisit": [8, 633], "render": [8, 12, 643, 648, 649, 655], "all": 8, "new": 8, "bindindg": 8, "2": [8, 645, 646], "1": [8, 645, 646], "old": 8, "bind": 8, "py": 8, "repo": [8, 10], "import": [8, 633, 646], "pytorch": [9, 10, 11, 637], "error": [9, 646], "solut": 9, "gradient": 9, "relat": 9, "newcom": 9, "my": 9, "slow": 9, "bug": 9, "resourc": 10, "paper": 10, "document": 10, "functorch": 10, "blog": 10, "websit": 10, "educ": 10, "forum": 10, "how": 11, "reproduc": [11, 650], "workaround": 11, "customis": 12, "tweak": 12, "principl": 12, "auto_unwrap_transformed_env": 13, "datacollectorbas": 14, "multiprocessedweightupdat": 15, "multisyncdatacollector": 16, "multiasyncdatacollector": 17, "rayweightupdat": 18, "syncdatacollector": 19, "vanillaweightupdat": 20, "weightupdaterbas": 21, "asyncdatacollector": 22, "distributeddatacollector": 23, "distributedsyncdatacollector": 24, "distributedweightupdat": 25, "rpcdatacollector": 26, "rpcweightupdat": 27, "raycollector": 28, "submitit_delayed_launch": 29, "llmcollector": 30, "rayllmcollector": 31, "vllmupdat": 32, "vllmupdaterv2": 33, "split_trajectori": 34, "adaptiveklcontrol": 35, "binari": [36, 637], "binarydiscretetensorspec": 37, "binarytodecim": 38, "bound": 39, "boundedtensorspec": 40, "composit": 42, "compositespec": 43, "constantklcontrol": 44, "densifyreward": 45, "discretetensorspec": 46, "flat2t": 47, "h5combin": 48, "h5split": 49, "hashtoint": 50, "lazystackedcompositespec": 51, "lazystackedtensorspec": 52, "multicategor": 54, "multidiscretetensorspec": 55, "multionehot": 56, "multionehotdiscretetensorspec": 57, "multistep": 58, "nested2t": 59, "nontensor": 60, "nontensorspec": 61, "onehot": 62, "onehotdiscretetensorspec": 63, "pairwisedataset": 64, "prioritizedreplaybuff": 65, "promptdata": 66, "prompttensordicttoken": 67, "querymodul": 68, "randomprojectionhash": 69, "rayreplaybuff": 70, "remotetensordictreplaybuff": 71, "replaybuff": 72, "rewarddata": 73, "rolloutfrommodel": 74, "siphash": 75, "stack": [76, 275], "stackedcomposit": 77, "ted2flat": 78, "ted2nest": 79, "tensordictprioritizedreplaybuff": 81, "tensordictreplaybuff": 82, "tensordicttoken": 83, "tensormap": 84, "tokenizeddatasetload": 86, "unbound": 88, "unboundedcontinu": 89, "unboundedcontinuoustensorspec": 90, "unboundeddiscret": 91, "unboundeddiscretetensorspec": 92, "check_no_exclusive_kei": 93, "consolidate_spec": 94, "contains_lazy_spec": 95, "create_infinite_iter": 96, "ataridqnexperiencereplai": 97, "basedatasetexperiencereplai": 98, "d4rlexperiencereplai": 99, "gendgrlexperiencereplai": 100, "minariexperiencereplai": 101, "openmlexperiencereplai": 102, "openxexperiencereplai": 103, "robosetexperiencereplai": 104, "vd4rlexperiencereplai": 105, "get_dataload": 106, "contentbas": 107, "histori": [108, 627, 646], "topkrewardselector": 109, "compressedliststorag": 110, "compressedliststoragecheckpoint": 111, "flatstoragecheckpoint": 112, "h5storagecheckpoint": 113, "immutabledatasetwrit": 114, "lazymemmapstorag": 115, "lazystackstorag": 116, "lazytensorstorag": 117, "liststorag": 118, "liststoragecheckpoint": 119, "nestedstoragecheckpoint": 120, "prioritizedsampl": 121, "prioritizedslicesampl": 122, "randomsampl": 123, "replaybufferensembl": 124, "roundrobinwrit": 125, "sampler": 126, "samplerensembl": 127, "samplerwithoutreplac": 128, "slicesampl": 129, "slicesamplerwithoutreplac": 130, "storagecheckpointerbas": 132, "storageensembl": 133, "storageensemblecheckpoint": 134, "tensordictmaxvaluewrit": 135, "tensordictroundrobinwrit": 136, "tensorstorag": 137, "tensorstoragecheckpoint": 138, "writer": 139, "writerensembl": 140, "asyncenvpool": 141, "braxenv": 142, "braxwrapp": 143, "chessenv": 144, "dmcontrolenv": 145, "dmcontrolwrapp": 146, "envbas": [147, 650], "envcreat": 148, "envmetadata": 149, "gymenv": 150, "gymlikeenv": 151, "gymwrapp": 152, "habitatenv": 153, "isaacgymenv": 154, "isaacgymwrapp": 155, "isaaclabwrapp": 156, "jumanjienv": 157, "jumanjiwrapp": 158, "llmhashingenv": [159, 201], "mogymenv": 160, "mogymwrapp": 161, "marlgroupmaptyp": 162, "meltingpotenv": 163, "meltingpotwrapp": 164, "modelbasedenvbas": 165, "multithreadedenv": 166, "multithreadedenvwrapp": 167, "openmlenv": 168, "openspielenv": 169, "openspielwrapp": 170, "parallelenv": 171, "pendulumenv": 172, "pettingzooenv": 173, "pettingzoowrapp": 174, "processorasyncenvpool": 175, "randompolici": 176, "robohiveenv": 177, "smacv2env": 178, "smacv2wrapp": 179, "serialenv": 180, "threadingasyncenvpool": 181, "tictactoeenv": 182, "unitymlagentsenv": 183, "unitymlagentswrapp": 184, "vmasenv": 185, "vmaswrapp": 186, "check_env_spec": 187, "check_marl_group": 188, "exploration_typ": 189, "get_available_librari": 190, "gym_backend": 191, "chatenv": [192, 627], "datasetchatenv": 193, "gsm8kenv": 194, "gsm8kpreparequest": 195, "gsm8krewardpars": 196, "ifevalenv": 197, "ifevalscoredata": 198, "ifevalscor": 199, "llmenv": 200, "mlgymwrapp": 202, "make_gsm8k_env": 203, "make_mlgym": 204, "addthinkingprompt": 205, "browsertransform": 206, "dataloadingprim": 207, "klcomput": 208, "klrewardtransform": [209, 255], "mcptooltransform": 210, "policyvers": 211, "pythoninterpret": 212, "raydataloadingprim": 213, "retrievekl": 214, "retrievelogprob": 215, "templatetransform": 216, "token": [217, 282, 359, 627], "as_nested_tensor": 218, "as_padded_tensor": 219, "make_composite_from_td": 220, "dreamerdecod": 221, "dreamerenv": 222, "register_gym_spec_convers": 223, "set_exploration_typ": 224, "set_gym_backend": 225, "step_mdp": 226, "terminated_or_trunc": 227, "actiondiscret": 228, "actionmask": 229, "autoresetenv": 230, "autoresettransform": 231, "batchsizetransform": 232, "binarizereward": 233, "burnintransform": 234, "catfram": [235, 652], "cattensor": 236, "centercrop": 237, "cliptransform": 238, "conditionalpolicyswitch": 240, "conditionalskip": 241, "crop": 242, "dtypecasttransform": 243, "devicecasttransform": 244, "discreteactionproject": 245, "doubletofloat": 246, "endoflifetransform": 247, "excludetransform": 248, "finitetensordictcheck": 249, "flattenobserv": 250, "frameskiptransform": 251, "grayscal": 252, "hash": 253, "inittrack": 254, "linearisereward": 256, "multiact": 257, "noopresetenv": 258, "observationnorm": 259, "observationtransform": 260, "permutetransform": 261, "pinmemorytransform": 262, "r3mtransform": 263, "randomcroptensordict": 264, "removeemptyspec": 265, "renametransform": 266, "resiz": 267, "reward2gotransform": 268, "rewardclip": 269, "rewardsc": 270, "rewardsum": 271, "selecttransform": 272, "signtransform": 273, "squeezetransform": 274, "stepcount": 276, "targetreturn": 277, "tensordictprim": 278, "timemaxpool": 279, "timer": 280, "totensorimag": 281, "trajcount": 283, "transformedenv": 285, "unarytransform": 286, "unsqueezetransform": 287, "vc1transform": 288, "viprewardtransform": 289, "viptransform": 290, "vecgymenvtransform": 291, "vecnorm": [292, 655], "vecnormv2": 293, "gsdenois": 294, "multisteptransform": 295, "implement_for": 296, "additivegaussianmodul": 297, "batchrenorm1d": 298, "cemplann": 299, "consistentdropout": 300, "consistentdropoutmodul": 301, "conv3dnet": 302, "convnet": 303, "dtactor": 304, "ddpgcnnactor": 305, "ddpgcnnqnet": 306, "ddpgmlpactor": 307, "ddpgmlpqnet": 308, "decisiontransform": 309, "delta": 310, "distributionaldqnnet": 311, "distributionalqvaluehook": 312, "dreameractor": 313, "duelingcnndqnet": 314, "egreedymodul": 315, "gru": 316, "grucel": 317, "grumodul": 318, "independentnorm": 319, "llmmaskedcategor": 320, "lstm": [321, 636], "lstmcell": 322, "lstmmodul": 323, "mlp": [324, 636], "mpcplannerbas": 325, "mppiplann": 326, "maskedcategor": 327, "maskedonehotcategor": 328, "multiagentconvnet": 329, "multiagentmlp": 330, "multiagentnetbas": 331, "noisylazylinear": 332, "noisylinear": 333, "obsdecod": 334, "obsencod": 335, "onehotcategor": 336, "onehotordin": 337, "onlinedtactor": 338, "ordin": 339, "ornsteinuhlenbeckprocessmodul": 340, "qmixer": [341, 629], "qvaluehook": 342, "rssmposterior": 343, "rssmprior": 344, "squeeze2dlay": 345, "squeezelay": 346, "tanhdelta": 347, "tanhnorm": 348, "truncatednorm": 349, "vdnmixer": 350, "vmapmodul": 351, "asyncvllm": 352, "chathistori": 353, "llmwrapperbas": 354, "logprob": 355, "remotetransformerswrapp": 357, "text": [358, 646], "transformerswrapp": 360, "make_async_vllm_engin": 361, "make_vllm_work": 362, "stateless_init_process_group": 363, "stateless_init_process_group_async": 364, "vllmwrapper": 365, "recurrent_mod": 366, "reset_nois": 367, "set_recurrent_mod": 368, "actor": [369, 628, 633, 639], "actorcriticoper": 370, "actorcriticwrapp": 371, "actorvalueoper": 372, "decisiontransformerinferencewrapp": 373, "distributionalqvalueactor": 374, "distributionalqvaluemodul": 375, "lmheadactorvalueoper": 376, "multistepactorwrapp": 377, "probabilisticactor": 378, "qvalueactor": [379, 628], "qvaluemodul": 380, "safemodul": [381, 628], "safeprobabilisticmodul": 382, "safeprobabilistictensordictsequenti": 383, "safesequenti": 384, "tanhmodul": 385, "valueoper": 386, "worldmodelwrapp": 387, "biased_softplu": 388, "get_primers_from_modul": 389, "inv_softplu": 390, "map": [391, 648], "a2closs": 392, "cqlloss": 393, "clipppoloss": 394, "crossqloss": 395, "ddpgloss": 396, "dqnloss": 397, "dtloss": 398, "discretecqlloss": 399, "discreteiqlloss": 400, "discretesacloss": 401, "distributionaldqnloss": 402, "dreameractorloss": 403, "dreamermodelloss": 404, "dreamervalueloss": 405, "gailloss": 406, "hardupd": 407, "iqlloss": 408, "klpenppoloss": 409, "lossmodul": [410, 633, 640], "onlinedtloss": 411, "ppoloss": 412, "redqloss": 413, "reinforceloss": 414, "sacloss": 415, "softupd": 416, "td3bcloss": 417, "td3loss": 418, "valueestim": 419, "add_random_modul": 420, "default_value_kwarg": 421, "distance_loss": 422, "group_optim": 423, "hold_out_net": 424, "hold_out_param": 425, "grpoloss": 426, "grpolossoutput": 427, "mcadvantag": 428, "sftloss": 429, "sftlossoutput": 430, "qmixerloss": 431, "next_state_valu": 432, "gae": 433, "td0estim": 434, "td1estim": 435, "tdlambdaestim": 436, "valueestimatorbas": 437, "generalized_advantage_estim": 438, "reward2go": 439, "td0_advantage_estim": 440, "td0_return_estim": 441, "td1_advantage_estim": 442, "td1_return_estim": 443, "td_lambda_advantage_estim": 444, "td_lambda_return_estim": 445, "vec_generalized_advantage_estim": 446, "vec_td1_advantage_estim": 447, "vec_td1_return_estim": 448, "vec_td_lambda_advantage_estim": 449, "vec_td_lambda_return_estim": 450, "pixelrendertransform": 451, "tensordictrecord": 452, "videorecord": 453, "logger": [454, 630, 642, 643], "csvlogger": 455, "generate_exp_nam": 456, "get_logg": 457, "mlflowlogg": 458, "tensorboardlogg": 459, "wandblogg": 460, "set_auto_unwrap_transformed_env": 461, "batchsubsampl": 462, "clearcudacach": 463, "countframeslog": 464, "logscalar": 465, "logvalidationreward": 466, "optimizerhook": 467, "replaybuffertrain": 468, "rewardnorm": 469, "selectkei": 470, "targetnetupdaterhook": 471, "trainer": [472, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 630, 634], "trainerhookbas": 473, "utdrhook": 474, "updateweight": 475, "ppotrain": 476, "sactrain": 477, "config": [478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 654], "asyncdatacollectorconfig": 478, "datacollectorconfig": 479, "multisyncdatacollectorconfig": 480, "multiasyncdatacollectorconfig": 481, "syncdatacollectorconfig": 482, "configbas": 483, "lazymemmapstorageconfig": 484, "lazystackstorageconfig": 485, "lazytensorstorageconfig": 486, "liststorageconfig": 487, "prioritizedsamplerconfig": 488, "randomsamplerconfig": 489, "replaybufferconfig": 490, "roundrobinwriterconfig": 491, "samplerwithoutreplacementconfig": 492, "slicesamplerconfig": 493, "slicesamplerwithoutreplacementconfig": 494, "storageensembleconfig": 495, "storageensemblewriterconfig": 496, "tensordictreplaybufferconfig": 497, "tensorstorageconfig": 498, "batchedenvconfig": 499, "envconfig": 500, "transformedenvconfig": 501, "envs_lib": [502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518], "braxenvconfig": 502, "dmcontrolenvconfig": 503, "envlibsconfig": 504, "gymenvconfig": 505, "habitatenvconfig": 506, "isaacgymenvconfig": 507, "jumanjienvconfig": 508, "mogymenvconfig": 509, "meltingpotenvconfig": 510, "multithreadedenvconfig": 511, "openmlenvconfig": 512, "openspielenvconfig": 513, "pettingzooenvconfig": 514, "robohiveenvconfig": 515, "smacv2envconfig": 516, "unitymlagentsenvconfig": 517, "vmasenvconfig": 518, "csvloggerconfig": 519, "loggerconfig": 520, "tensorboardloggerconfig": 521, "wandbloggerconfig": 522, "modul": [523, 524, 525, 526, 527, 528, 529, 627, 628, 633, 636, 637, 639, 643, 654], "convnetconfig": 523, "mlpconfig": 524, "modelconfig": 525, "networkconfig": 526, "tanhnormalmodelconfig": 527, "tensordictmoduleconfig": 528, "valuemodelconfig": 529, "object": [530, 531, 627, 629, 633, 640, 654], "lossconfig": 530, "ppolossconfig": 531, "ppotrainerconfig": 532, "trainerconfig": 533, "actiondiscretizerconfig": 534, "actionmaskconfig": 535, "autoresettransformconfig": 536, "batchsizetransformconfig": 537, "binarizerewardconfig": 538, "burnintransformconfig": 539, "catframesconfig": 540, "cattensorsconfig": 541, "centercropconfig": 542, "cliptransformconfig": 543, "composeconfig": 544, "conditionalpolicyswitchconfig": 545, "conditionalskipconfig": 546, "cropconfig": 547, "dtypecasttransformconfig": 548, "devicecasttransformconfig": 549, "discreteactionprojectionconfig": 550, "doubletofloatconfig": 551, "endoflifetransformconfig": 552, "excludetransformconfig": 553, "finitetensordictcheckconfig": 554, "flattenobservationconfig": 555, "frameskiptransformconfig": 556, "grayscaleconfig": 557, "hashconfig": 558, "inittrackerconfig": 559, "klrewardtransformconfig": 560, "lineariserewardsconfig": 561, "multiactionconfig": 562, "multisteptransformconfig": 563, "noopresetenvconfig": 564, "observationnormconfig": 565, "permutetransformconfig": 566, "pinmemorytransformconfig": 567, "r3mtransformconfig": 568, "randomcroptensordictconfig": 569, "removeemptyspecsconfig": 570, "renametransformconfig": 571, "resizeconfig": 572, "reward2gotransformconfig": 573, "rewardclippingconfig": 574, "rewardscalingconfig": 575, "rewardsumconfig": 576, "selecttransformconfig": 577, "signtransformconfig": 578, "squeezetransformconfig": 579, "stackconfig": 580, "stepcounterconfig": 581, "targetreturnconfig": 582, "tensordictprimerconfig": 583, "timemaxpoolconfig": 584, "timerconfig": 585, "totensorimageconfig": 586, "tokenizerconfig": 587, "trajcounterconfig": 588, "transformconfig": 589, "unarytransformconfig": 590, "unsqueezetransformconfig": 591, "vc1transformconfig": 592, "viprewardtransformconfig": 593, "viptransformconfig": 594, "vecgymenvtransformconfig": 595, "vecnormconfig": 596, "vecnormv2config": 597, "asgdconfig": 598, "adadeltaconfig": 599, "adagradconfig": 600, "adamconfig": 601, "adamwconfig": 602, "adamaxconfig": 603, "lbfgsconfig": 604, "lionconfig": 605, "nadamconfig": 606, "radamconfig": 607, "rmspropconfig": 608, "rpropconfig": 609, "sgdconfig": 610, "sparseadamconfig": 611, "correct_for_frame_skip": 612, "get_stats_random_rollout": 613, "make_collector_offpolici": 614, "make_collector_onpolici": 615, "make_dqn_loss": 616, "make_replay_buff": 617, "make_target_updat": 618, "make_train": 619, "parallel_env_constructor": 620, "sync_async_collector": 621, "sync_sync_collector": 622, "transformed_env_constructor": 623, "readm": [624, 644], "tuto": [624, 644], "api": [625, 627], "contribut": [626, 654], "content": 626, "llm": [627, 645, 646], "interfac": 627, "famili": 627, "ad": 627, "templat": 627, "llama": 627, "test": [627, 650], "assist": 627, "equival": 627, "pars": 627, "wrapper": [627, 628, 639, 646], "prompt": 627, "respons": 627, "pad": 627, "vllm": [627, 646], "engin": 627, "recommend": 627, "remot": 627, "track": 627, "core": 627, "architectur": 627, "integr": [627, 646, 652], "grpo": 627, "sft": 627, "tensordictmodul": [628, 637, 639, 654], "probabilist": [628, 639], "q": [628, 634, 636, 639], "oper": 628, "join": 628, "hook": [628, 630, 634], "regular": 628, "planner": 628, "torch": 629, "vmap": [629, 654], "dqn": [629, 634, 636], "ddpg": [629, 633, 648], "sac": 629, "redq": 629, "crossq": 629, "iql": 629, "cql": 629, "gail": 629, "dt": 629, "td3": 629, "bc": 629, "ppo": [629, 635, 649], "head": 629, "a2c": 629, "dreamer": 629, "experiment": 630, "univers": 630, "featur": 630, "builder": 630, "_util": 631, "comput": [632, 634, 650, 653], "time": [632, 633, 653], "code": [633, 650], "overview": [633, 636], "setup": [633, 636, 645, 646], "__init__": 633, "estim": 633, "put": 633, "togeth": [633, 650], "call": 633, "execut": [633, 645, 647, 650], "stat": 633, "build": [633, 634, 643, 645, 652], "evalu": 633, "construct": 633, "target": [633, 634, 640], "result": [633, 635, 645, 648, 649], "conclus": [633, 634, 635, 636, 637, 645, 646, 648, 649, 650, 652], "next": [633, 635, 638, 641, 648, 649, 652], "deep": 634, "paramet": [634, 635, 640], "regist": 634, "possibl": 634, "improv": 634, "defin": [635, 648, 649], "loop": [635, 636, 637, 643, 648, 649, 650], "recurr": [636, 637], "convolut": 636, "select": 636, "further": [636, 640], "read": 636, "export": 637, "introduct": [637, 654], "fast": 637, "recap": 637, "stochast": 637, "aotinductor": 637, "free": 637, "c": 637, "onnx": 637, "rollout": [637, 638, 647, 648, 649, 650, 655], "s": [639, 640], "output": 640, "consider": 640, "first": 643, "tool": 645, "enabl": 645, "3": [645, 646], "interact": 645, "4": [645, 646], "perform": 645, "search": 645, "5": [645, 646], "extract": 645, "input": 646, "mode": 646, "probabl": 646, "onli": 646, "tensorclass": [646, 652], "6": 646, "handl": 646, "7": 646, "divers": 647, "competit": 648, "critic": [648, 649], "pendulum": 650, "write": 650, "_step": 650, "simul": 650, "_reset": 650, "metadata": 650, "_spec": 650, "shape": 650, "seed": [650, 655], "wrap": 650, "our": 650, "pretrain": 651, "vanilla": 652, "other": 652, "pytre": 652, "iter": 652, "over": 652, "fix": 652, "priorit": 652, "save": 652, "raw": 652, "imag": 652, "sequenc": 654, "program": 654, "ensembl": 654, "meta": 654, "sync": 654, "multiprocess": 654, "frame_skip": 655, "deepmind": 655, "control": 655, "devic": 655, "close": 655, "access": 655, "attribut": 655, "kwarg": 655}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})